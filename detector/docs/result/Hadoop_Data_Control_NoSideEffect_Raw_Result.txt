2020-08-25 11:58:36 [INFO] - [Spark] Starting analysis ...
2020-08-25 12:09:57 [INFO] - [Spark] Done!
2020-08-25 12:09:58 [INFO] - [Call Graph] Refine call graph in 0.3s , new call graph has 278607  edges (original : 673541)
2020-08-25 12:09:58 [INFO] - [AliasAnalysis] must alias to identity locals analysis ...
2020-08-25 12:10:00 [INFO] - [AliasAnalysis] complete in  2.3s
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.StringIndexOutOfBoundsException: void <init>(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.StringIndexOutOfBoundsException: void <init>(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.StringIndexOutOfBoundsException: void <init>(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.StringBuilder: java.lang.String toString()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Arrays: char[] copyOfRange(char[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.misc.FDBigInteger: sun.misc.FDBigInteger big5powRec(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.misc.FDBigInteger: sun.misc.FDBigInteger big5powRec(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.HashMap: java.util.HashMap$Node[] resize()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.HashMap$TreeNode: void treeify(java.util.HashMap$Node[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.HashMap: java.util.HashMap$Node[] resize()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.HashMap: java.util.HashMap$Node[] resize()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: byte[] getLocalNameBytes()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square(boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square(boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square(boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square(boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square(boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.nio.ch.FileChannelImpl: void implCloseChannel()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FileDescriptor: void closeAll(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern$Dollar: boolean study(java.util.regex.Pattern$TreeInfo)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern$Dollar: boolean study(java.util.regex.Pattern$TreeInfo)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern$Dollar: boolean study(java.util.regex.Pattern$TreeInfo)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern$Dollar: boolean study(java.util.regex.Pattern$TreeInfo)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern$Dollar: boolean study(java.util.regex.Pattern$TreeInfo)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern$Dollar: boolean study(java.util.regex.Pattern$TreeInfo)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern$Dollar: boolean study(java.util.regex.Pattern$TreeInfo)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern$Dollar: boolean study(java.util.regex.Pattern$TreeInfo)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern$Dollar: boolean study(java.util.regex.Pattern$TreeInfo)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$Segment: void runUnlockedCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList: java.lang.Object get(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList: java.lang.Object get(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList: java.lang.Object get(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList: java.lang.Object get(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList: java.lang.Object get(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: void <init>(byte[],int,int,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.RopeByteString: void copyToInternal(byte[],int,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.RopeByteString: void copyToInternal(byte[],int,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.RopeByteString: void copyToInternal(byte[],int,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.RopeByteString: void copyToInternal(byte[],int,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: void <init>(byte[],int,int,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnmodifiableLazyStringList: java.lang.Object get(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$LoadingValueReference: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: void addCount(long,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.ArrayList$SubList: void add(int,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList: void add(int,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap$NavigableSubMap: java.util.TreeMap$Entry absLowest()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$HashIterator: void advance()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnmodifiableLazyStringList: java.util.ListIterator listIterator(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList: java.util.ListIterator listIterator(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void <init>(com.google.common.collect.AbstractMultimap$WrappedCollection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$HashIterator: void advance()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedList: java.util.ListIterator listIterator(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableList: java.util.ListIterator listIterator(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$HashIterator: void remove()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableList$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$2$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$2$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$EntryIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.ArrayList$SubList: java.lang.Object remove(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void removeCollectedEntry(com.google.common.cache.LocalCache$ReferenceEntry)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.StringCoding: java.nio.charset.Charset lookupCharset(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.ResourceBundle: java.lang.Object getObject(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.zip.GZIPOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.mapred.pipes.BinaryProtocol$TeeOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.zip.DeflaterOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.mapred.pipes.BinaryProtocol$TeeOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.mapred.pipes.BinaryProtocol$TeeOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flushBuffer()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.mapred.pipes.BinaryProtocol$TeeOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flushBuffer()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.zip.DeflaterOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.mapred.pipes.BinaryProtocol$TeeOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.nio.cs.StreamEncoder: void flushLeftoverChar(java.nio.CharBuffer,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.http.impl.conn.LoggingSessionOutputBuffer: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.mapred.pipes.BinaryProtocol$TeeOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.compress.GzipCodec$GzipOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flushBuffer()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.http.impl.conn.LoggingSessionOutputBuffer: void writeLine(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.zip.GZIPOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.DigestOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.charset.Charset: java.nio.charset.Charset lookup(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$Segment: void expireEntries()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean remove(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean remove(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean remove(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean remove(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$Segment: void postReadCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$Segment: void postReadCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$Segment: void postReadCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$Segment: void postReadCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$EntryIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$EntryIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SmallSortedMap: java.lang.Object get(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void expireEntries(long)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void postReadCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void postReadCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void postReadCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void postReadCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.http.conn.EofSensorInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.http.conn.EofSensorInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.util.DerIndefLenConverter: void writeTag()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataInputStream: void readFully(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.Security: java.lang.Object[] getImpl(java.lang.String,java.lang.String,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataInputStream: void readFully(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataInputStream: void readFully(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnmodifiableLazyStringList$2: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnmodifiableLazyStringList: java.util.Iterator iterator()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.util.Collection values()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.util.DerOutputStream: void putOrderedSetOf(byte,sun.security.util.DerEncoder[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.util.DerOutputStream: void putUTCTime(java.util.Date)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.util.DerOutputStream: void putOrderedSetOf(byte,sun.security.util.DerEncoder[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.util.DerOutputStream: void putOrderedSetOf(byte,sun.security.util.DerEncoder[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ConditionalSpecialCasing: char[] lookUpTable(java.lang.String,int,java.util.Locale,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ConditionalSpecialCasing: char[] lookUpTable(java.lang.String,int,java.util.Locale,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.GeneratedMessage$Builder: void onChanged()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap$NavigableSubMap: java.util.TreeMap$Entry absLowest()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnmodifiableLazyStringList: java.util.List getUnderlyingElements()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.GeneratedMessage build()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.misc.ReflectUtil: void checkPackageAccess(java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.util.Set entrySet()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: void findMissingFields(com.google.protobuf.MessageOrBuilder,java.lang.String,java.util.List)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: void findMissingFields(com.google.protobuf.MessageOrBuilder,java.lang.String,java.util.List)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.ArrayList$SubList: boolean addAll(int,java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.FieldSet: void mergeFrom(com.google.protobuf.FieldSet)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto: org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto$Builder newBuilder(org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto$Builder: org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto$Builder mergeFrom(org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto$Builder: org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto$Builder mergeFrom(org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.GeneratedMessage$ExtendableBuilder: void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.protocol.proto.HdfsProtos$DatanodeStorageProto$Builder: org.apache.hadoop.hdfs.protocol.proto.HdfsProtos$DatanodeStorageProto$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$EnumValueOptions)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$EnumValueOptions)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder: com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto: org.apache.hadoop.yarn.proto.YarnProtos$ApplicationAttemptIdProto$Builder toBuilder()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList: boolean addAll(int,java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedSortedSet: java.util.Comparator comparator()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection: void addToMap()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.SingleFieldBuilder: com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: void skipRawBytes(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.protocol.proto.HdfsProtos$DatanodeIDProto$1: java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.DescriptorProtos$MessageOptions$Builder: com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.AbstractMessage$Builder: com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: void <init>(byte[],int,int,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: void readGroup(int,com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedInputStream: com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void runLockedCleanup(long)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.nustaq.serialization.FSTClazzLineageInfo: org.nustaq.serialization.FSTClazzLineageInfo$LineageInfo getLineageInfo(java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.nustaq.serialization.FSTClazzLineageInfo: org.nustaq.serialization.FSTClazzLineageInfo$LineageInfo getLineageInfo(java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.util.DerOutputStream: void putOrderedSetOf(byte,sun.security.util.DerEncoder[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.PrintStream: void print(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.PrintStream: void print(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.charset.Charset: java.nio.charset.Charset lookup(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.PrintStream: void print(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.PrintStream: void print(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.PrintStream: void print(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.PrintStream: void print(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.PrintStream: void print(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.StringCoding: char[] decode(java.lang.String,byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.StringCoding: char[] decode(java.lang.String,byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.pkcs.SignerInfo: void <init>(sun.security.util.DerInputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.jca.ProviderList$ServiceList: java.security.Provider$Service access$200(sun.security.jca.ProviderList$ServiceList,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap: java.util.Set keySet()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.provider.AuxLocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.String,int,java.util.Map)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.LocaleObjectCache: java.lang.Object get(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.LocaleObjectCache: java.lang.Object get(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: void compile()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder append(java.lang.CharSequence,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.provider.LocaleServiceProviderPool: void config(java.lang.Class,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.provider.LocaleServiceProviderPool: void config(java.lang.Class,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.provider.AuxLocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.provider.AuxLocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.provider.AuxLocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.calendar.AbstractCalendar: long getTime(sun.util.calendar.CalendarDate)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.calendar.ZoneInfo: int getOffsets(long,int[],int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarSystem forName(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataInputStream: void readFully(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.MutableBigInteger: java.math.MutableBigInteger divideKnuth(java.math.MutableBigInteger,java.math.MutableBigInteger)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.MutableBigInteger: java.math.MutableBigInteger divide2n1n(java.math.MutableBigInteger,java.math.MutableBigInteger)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: void toString(java.math.BigInteger,java.lang.StringBuilder,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.math.BigInteger: void toString(java.math.BigInteger,java.lang.StringBuilder,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: void zeroPaddingNumber(int,int,int,java.lang.StringBuffer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.DateFormatSymbols: java.text.DateFormatSymbols getProviderInstance(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.zip.ZipFile$ZipFileInflaterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.zip.ZipFile$ZipFileInflaterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.zip.ZipFile$ZipFileInflaterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.zip.ZipFile$ZipFileInflaterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.logging.PlatformLogger$DefaultLoggerProxy: void doLog(sun.util.logging.PlatformLogger$Level,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: void <init>(byte[],int,int,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: void <init>(byte[],int,int,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: void <init>(byte[],int,int,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: void <init>(byte[],int,int,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.PropertyResourceBundle: java.util.Enumeration getKeys()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.provider.AuxLocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.provider.AuxLocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.provider.AuxLocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.DateFormat: java.text.DateFormat get(int,int,int,java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.MessageFormat: void applyPattern(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.MessageFormat: void <init>(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.util.locale.provider.AuxLocaleProviderAdapter: java.util.spi.LocaleServiceProvider getLocaleServiceProvider(java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.HashMap: void <init>(java.util.Map)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.ResourceBundle$RBClassLoader: java.net.URL getResource(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.applet.AppletClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.x509.AlgorithmId: java.lang.String getName()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint: void permits(sun.security.util.ConstraintsParameters)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.util.DisabledAlgorithmConstraints$jdkCAConstraint: void permits(sun.security.util.ConstraintsParameters)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.pkcs.PKCS7: sun.security.pkcs.SignerInfo[] verify(byte[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.util.DerOutputStream: void putTime(java.util.Date,byte)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.util.DerOutputStream: void putUTCTime(java.util.Date)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.util.DerOutputStream: void putUTCTime(java.util.Date)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.jar.JarVerifier: void update(int,byte[],int,int,sun.security.util.ManifestEntryVerifier)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.jar.JarVerifier: void update(int,byte[],int,int,sun.security.util.ManifestEntryVerifier)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedReader: void fill()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedReader: void fill()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedReader: void fill()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: void <init>(byte[],int,int,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: void <init>(byte[],int,int,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.commons.io.input.BoundedInputStream: void mark(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void mark(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void mark(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void mark(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void reset()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.commons.io.input.BoundedInputStream: void reset()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.util.LimitInputStream: void reset()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void reset()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FileDescriptor: void closeAll(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.RedundantEditLogInputStream: java.lang.String getName()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider$JaasConfiguration: javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.InputStreamReader: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.io.BaseInputSource: com.ctc.wstx.io.WstxInputLocation getLocation()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.io.BaseInputSource: com.ctc.wstx.io.WstxInputLocation getLocation()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: void <init>(byte[],int,int,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.util.WordResolver$Builder: void constructBranch(int,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void indexTokens(java.util.List)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void indexTokens(java.util.List)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void indexTokens(java.util.List)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void indexTokens(java.util.List)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void indexTokens(java.util.List)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ChoiceModel: com.ctc.wstx.dtd.ModelNode cloneModel()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ChoiceModel: com.ctc.wstx.dtd.ModelNode cloneModel()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ChoiceModel: com.ctc.wstx.dtd.ModelNode cloneModel()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ChoiceModel: com.ctc.wstx.dtd.ModelNode cloneModel()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ChoiceModel: com.ctc.wstx.dtd.ModelNode cloneModel()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ChoiceContentSpec: com.ctc.wstx.dtd.ModelNode rewrite()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.SeqContentSpec: com.ctc.wstx.dtd.ModelNode rewrite(com.ctc.wstx.dtd.ContentSpec[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.SeqContentSpec: com.ctc.wstx.dtd.ModelNode rewrite(com.ctc.wstx.dtd.ContentSpec[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.SeqContentSpec: com.ctc.wstx.dtd.ModelNode rewrite()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.SeqContentSpec: com.ctc.wstx.dtd.ModelNode rewrite()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.SeqContentSpec: com.ctc.wstx.dtd.ModelNode rewrite()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.StarModel: void addLastPos(java.util.BitSet)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.StarModel: void addLastPos(java.util.BitSet)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ChoiceModel: void addLastPos(java.util.BitSet)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.StarModel: void addLastPos(java.util.BitSet)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void addFirstPos(java.util.BitSet)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void addFirstPos(java.util.BitSet)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void addFirstPos(java.util.BitSet)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void addFirstPos(java.util.BitSet)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void addFirstPos(java.util.BitSet)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ChoiceModel: void calcFollowPos(java.util.BitSet[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ChoiceModel: void calcFollowPos(java.util.BitSet[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void calcFollowPos(java.util.BitSet[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void calcFollowPos(java.util.BitSet[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.ConcatModel: void calcFollowPos(java.util.BitSet[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.ContentSpec readContentSpec(com.ctc.wstx.util.PrefixedName,boolean,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SetFromMap: boolean add(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.codehaus.stax2.validation.ValidatorPair: void validateElementStart(java.lang.String,java.lang.String,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.codehaus.stax2.validation.ValidatorPair: java.lang.String validateAttribute(java.lang.String,java.lang.String,java.lang.String,char[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.codehaus.stax2.validation.ValidatorPair: void validateText(java.lang.String,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.codehaus.stax2.validation.ValidatorPair: void validateText(char[],int,int,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.codehaus.stax2.validation.ValidatorPair: void validationCompleted(boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.fs.Path: java.lang.String toString()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.conf.Configuration: org.apache.hadoop.conf.Configuration$Resource loadResource(java.util.Properties,org.apache.hadoop.conf.Configuration$Resource,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.conf.Configuration: org.apache.hadoop.conf.Configuration$Resource loadResource(java.util.Properties,org.apache.hadoop.conf.Configuration$Resource,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.Logger: void doLog(java.util.logging.LogRecord)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.conf.Configuration: java.lang.Class getClassByNameOrNull(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.util.ReflectionUtils: java.lang.Object newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.util.concurrent.ExecutionList: void execute()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ThreadPoolExecutor: boolean remove(java.lang.Runnable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ScheduledThreadPoolExecutor: void delayedExecute(java.util.concurrent.RunnableScheduledFuture)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.provider.SecureRandom: void engineNextBytes(byte[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList$1: java.lang.Object previous()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object previous()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList$1: void add(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ThreadPoolExecutor: void tryTerminate()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.lang.Thread newThread(java.lang.Runnable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.util.ReflectionUtils: java.lang.Object newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.util.ReflectionUtils: java.lang.Object newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getCurrentUser()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.'annotation'.AnnotationParser: java.util.Map parseAnnotations2(byte[],sun.reflect.ConstantPool,java.lang.Class,java.lang.Class[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.HashMap: void putMapEntries(java.util.Map,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.'annotation'.AnnotationParser: void skipMemberValue(java.nio.ByteBuffer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.'annotation'.AnnotationParser: void skipAnnotation(java.nio.ByteBuffer,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FieldTypeSignature parseFieldTypeSignature()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.ClassTypeSignature parseClassTypeSignature()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.Class: java.lang.Class toClass(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.generics.tree.ClassTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.generics.tree.ClassTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.generics.tree.ClassTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.generics.scope.AbstractScope: java.lang.reflect.TypeVariable lookup(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.generics.tree.ClassTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.'annotation'.AnnotationParser: java.lang.Class toClass(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.reflect.'annotation'.AnnotationParser: java.lang.'annotation'.Annotation parseAnnotation2(java.nio.ByteBuffer,sun.reflect.ConstantPool,java.lang.Class,boolean,java.lang.Class[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.HashMap: void putMapEntries(java.util.Map,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$HashIterator: com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService: void execute(java.lang.Runnable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: void performBackgroundOperation(org.apache.curator.framework.imps.OperationAndData)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.zookeeper.ClientCnxn: org.apache.zookeeper.ClientCnxn$Packet queuePacket(org.apache.zookeeper.proto.RequestHeader,org.apache.zookeeper.proto.ReplyHeader,org.apache.jute.Record,org.apache.jute.Record,org.apache.zookeeper.AsyncCallback,java.lang.String,java.lang.String,java.lang.Object,org.apache.zookeeper.ZooKeeper$WatchRegistration)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.CuratorZookeeperClient: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.utils.ZKPaths: void deleteChildren(org.apache.zookeeper.ZooKeeper,java.lang.String,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.utils.ZKPaths: void deleteChildren(org.apache.zookeeper.ZooKeeper,java.lang.String,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.RetryLoop: java.lang.Object callWithRetry(org.apache.curator.CuratorZookeeperClient,java.util.concurrent.Callable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: org.apache.zookeeper.ZooKeeper getZooKeeper()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.misc.CompoundEnumeration: java.lang.Object nextElement()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.DeleteBuilderImpl: java.lang.Object forPath(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.FailedDeleteManager: void addFailedDelete(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.NamespaceFacade: void processBackgroundOperation(org.apache.curator.framework.imps.OperationAndData,org.apache.curator.framework.api.CuratorEvent)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.NamespaceFacade: void processBackgroundOperation(org.apache.curator.framework.imps.OperationAndData,org.apache.curator.framework.api.CuratorEvent)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CreateBuilderImpl: void findAndDeleteProtectedNodeInBackground(java.lang.String,java.lang.String,org.apache.curator.framework.imps.CreateBuilderImpl$FindProtectedNodeCB)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.framework.imps.CuratorFrameworkImpl: void performBackgroundOperation(org.apache.curator.framework.imps.OperationAndData)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.ConnectionState: void reset()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.curator.ConnectionState: void reset()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SetFromMap: boolean add(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: void addCount(long,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Hashtable$Entry: java.lang.Object clone()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: void <init>(byte[],int,int,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INode: java.lang.String toDetailString()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeFile: java.lang.String toDetailString()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: org.apache.hadoop.hdfs.server.namenode.INodeDirectory asDirectory()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INode: org.apache.hadoop.hdfs.server.namenode.INodeDirectory getParent()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableList$1: java.lang.Object previous()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: org.apache.hadoop.hdfs.server.namenode.INode getChild(byte[],int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: org.apache.hadoop.hdfs.server.namenode.INode getChild(byte[],int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot$Root: org.apache.hadoop.hdfs.server.namenode.INode getChild(byte[],int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: org.apache.hadoop.hdfs.server.namenode.INodeFile asFile()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.JournalSet: void access$100(org.apache.hadoop.hdfs.server.namenode.JournalSet,org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalClosure,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.JournalSet: void access$100(org.apache.hadoop.hdfs.server.namenode.JournalSet,org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalClosure,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.JournalSet: void access$100(org.apache.hadoop.hdfs.server.namenode.JournalSet,org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalClosure,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getLoginUser()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getCurrentUser()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.InputStreamReader: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Date: sun.util.calendar.BaseCalendar$Date normalize()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.util.concurrent.ExecutionList: void execute()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SetFromMap: boolean add(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: void execute()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.util.concurrent.ExecutionList: void execute()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.datanode.checker.AbstractFuture$TrustedFuture: boolean cancel(boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.datanode.checker.AbstractFuture: void executeListener(java.lang.Runnable,java.util.concurrent.Executor)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.datanode.checker.AbstractFuture$TrustedFuture: boolean cancel(boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.datanode.checker.AbstractFuture$TrustedFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: com.google.common.cache.LocalCache$ReferenceEntry removeEntryFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$LoadingValueReference: boolean set(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService: void execute(java.lang.Runnable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean remove(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean remove(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void postReadCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void postReadCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void postReadCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$Segment: void postReadCleanup()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.UserGroupInformation: void ensureInitialized()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getCurrentUser()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.NameNode$NameNodeHAContext: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.JournalSet: void mapJournalsAndReportErrors(org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalClosure,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.JournalSet: void mapJournalsAndReportErrors(org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalClosure,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.lang.Object remove(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$2$1: void remove()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap: void clear()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection: void removeIfEmpty()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: void clear()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: void clear()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: void remove()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap: void clear()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: void clear()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.RopeByteString: com.google.protobuf.ByteString substring(int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.RopeByteString: com.google.protobuf.ByteString substring(int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.RopeByteString: com.google.protobuf.ByteString substring(int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.RopeByteString: com.google.protobuf.ByteString substring(int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.Provider$ServiceKey: void <init>(java.lang.String,java.lang.String,boolean,java.security.Provider$1)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <sun.security.jca.GetInstance: sun.security.jca.GetInstance$Instance getInstance(java.lang.String,java.lang.Class,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.Security: java.lang.Object[] getImpl(java.lang.String,java.lang.String,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getCurrentUser()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.util.ReflectionUtils: java.lang.Object newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(java.net.URI,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.PrintWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.datanode.DataStorage: void linkBlocksHelper(java.io.File,java.io.File,int,org.apache.hadoop.fs.HardLink,boolean,java.io.File,java.util.List)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ThreadPoolExecutor: void tryTerminate()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ThreadPoolExecutor: void tryTerminate()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite: org.apache.hadoop.hdfs.protocol.BlockStoragePolicy getPolicy(byte)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: org.apache.hadoop.hdfs.server.namenode.QuotaCounts getQuotaCounts()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: org.apache.hadoop.hdfs.server.namenode.QuotaCounts computeQuotaUsage(org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite,byte,boolean,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: org.apache.hadoop.hdfs.server.namenode.QuotaCounts computeQuotaUsage(org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite,byte,boolean,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.snapshot.DirectoryWithSnapshotFeature$DirectoryDiff$2: java.util.Iterator iterator()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: org.apache.hadoop.hdfs.util.ReadOnlyList getChildrenList(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: org.apache.hadoop.hdfs.util.ReadOnlyList getChildrenList(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo: void addDeleteBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INode: org.apache.hadoop.hdfs.server.namenode.XAttrFeature getXAttrFeature()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: org.apache.hadoop.hdfs.server.namenode.XAttrFeature getXAttrFeature(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.commons.lang.builder.EqualsBuilder: org.apache.commons.lang.builder.EqualsBuilder append(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: org.apache.hadoop.hdfs.server.namenode.QuotaCounts computeQuotaUsage(org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite,byte,boolean,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INode: org.apache.hadoop.hdfs.server.namenode.AclFeature getAclFeature()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: org.apache.hadoop.hdfs.server.namenode.AclFeature getAclFeature(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.util.Diff: void combinePosterior(org.apache.hadoop.hdfs.util.Diff,org.apache.hadoop.hdfs.util.Diff$Processor)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: org.apache.hadoop.hdfs.server.namenode.QuotaCounts computeQuotaUsage(org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite,byte,boolean,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference$DstReference: void destroyAndCollectBlocks(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: void cleanSubtree(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: void cleanSubtree(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference$DstReference: void destroyAndCollectBlocks(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: void cleanSubtree(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.snapshot.DirectoryWithSnapshotFeature$DirectoryDiff: void destroyDiffAndCollectBlocks(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext,org.apache.hadoop.hdfs.server.namenode.INodeDirectory)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.snapshot.DirectoryWithSnapshotFeature$DirectoryDiff$2: java.util.Iterator iterator()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference$DstReference: void destroyAndCollectBlocks(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference$DstReference: void destroyAndCollectBlocks(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference$DstReference: void destroyAndCollectBlocks(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractList: void clear()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: void cleanSubtree(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.snapshot.DirectoryWithSnapshotFeature$DirectoryDiff$2: java.util.Iterator iterator()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: void cleanSubtree(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference$DstReference: void destroyAndCollectBlocks(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractList: void clear()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.snapshot.DirectoryWithSnapshotFeature$DirectoryDiff$2: java.util.Iterator iterator()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: void cleanSubtree(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.snapshot.DirectoryWithSnapshotFeature: void destroyDstSubtree(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext,org.apache.hadoop.hdfs.server.namenode.INode,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.snapshot.DirectoryWithSnapshotFeature$DirectoryDiff$2: java.util.Iterator iterator()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.snapshot.DirectoryWithSnapshotFeature: void destroyDstSubtree(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext,org.apache.hadoop.hdfs.server.namenode.INode,int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference$DstReference: void destroyAndCollectBlocks(org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: org.apache.hadoop.hdfs.server.namenode.QuotaCounts computeQuotaUsage(org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite,byte,boolean,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: org.apache.hadoop.hdfs.server.namenode.QuotaCounts computeQuotaUsage(org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite,byte,boolean,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: org.apache.hadoop.hdfs.server.namenode.QuotaCounts computeQuotaUsage(org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite,byte,boolean,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ForkJoinPool: void tryAddWorker(long)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.snapshot.Snapshot$Root: java.lang.String getFullPathName()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractList: void clear()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <io.netty.util.concurrent.DefaultPromise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <io.netty.util.concurrent.DefaultPromise: void notifyListeners()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <io.netty.channel.AbstractChannel$AbstractUnsafe: void close(io.netty.channel.ChannelPromise)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <io.netty.channel.AbstractChannelHandlerContext: void invokeExceptionCaught(java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <io.netty.channel.AbstractChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <io.netty.channel.AbstractChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <io.netty.channel.AbstractChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <io.netty.util.concurrent.DefaultPromise: void notifyListeners()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <io.netty.util.internal.logging.MessageFormatter: void deeplyAppendParameter(java.lang.StringBuffer,java.lang.Object,java.util.Map)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <io.netty.channel.AbstractChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <io.netty.util.concurrent.DefaultPromise: void notifyListeners()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ThreadPoolExecutor: void tryTerminate()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.Executors$RunnableAdapter: java.lang.Object call()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ThreadPoolExecutor: void tryTerminate()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.zip.InflaterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.commons.io.input.BoundedInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.compress.DecompressorStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.compress.DecompressorStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.zip.DeflaterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.zip.DeflaterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.zip.DeflaterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FSDataOutputStream$PositionCache: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.Executors$RunnableAdapter: java.lang.Object call()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.Executors$RunnableAdapter: java.lang.Object call()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.mortbay.log.Log: void unwind(java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnmodifiableLazyStringList: com.google.protobuf.ByteString getByteString(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeGroupNoTag(com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessageNoTag(com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeGroup(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.UnknownFieldSet: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.DescriptorProtos$DescriptorProto: void writeTo(com.google.protobuf.CodedOutputStream)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.protobuf.CodedOutputStream: void writeMessage(int,com.google.protobuf.MessageLite)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.util.ReflectionUtils: java.lang.Object newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet construct(java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.util.ClassUtil: void _addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.util.ClassUtil: void _addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addAnnotationsIfNotPresent(org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.'annotation'.Annotation[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.HierarchicType: org.apache.htrace.shaded.fasterxml.jackson.databind.type.HierarchicType deepCloneWithoutSubtype()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeFactory: org.apache.htrace.shaded.fasterxml.jackson.databind.type.HierarchicType _findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeFactory: org.apache.htrace.shaded.fasterxml.jackson.databind.type.HierarchicType _findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeFactory: org.apache.htrace.shaded.fasterxml.jackson.databind.type.HierarchicType _findSuperClassChain(java.lang.reflect.Type,java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeFactory: org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class,org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeFactory: org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings: void _resolveBindings(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeFactory: org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings: void _resolveBindings(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings: void _resolveBindings(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeFactory: org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeFactory: org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.SimpleType: java.lang.String buildCanonicalName()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings: org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType findType(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeFactory: org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeFactory: org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeFactory: org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeFactory: org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,org.apache.htrace.shaded.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void assignNullSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void assignNullSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.HashMap: void <init>(java.util.Map)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.util.NameTransformer$Chained: java.lang.String transform(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.util.NameTransformer$Chained: java.lang.String transform(java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: org.apache.htrace.shaded.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(org.apache.htrace.shaded.fasterxml.jackson.databind.util.NameTransformer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: org.apache.htrace.shaded.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(org.apache.htrace.shaded.fasterxml.jackson.databind.util.NameTransformer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.util.NameTransformer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void assignSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void assignSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.MapSerializer: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer createContextual(org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.htrace.shaded.fasterxml.jackson.databind.JavaType,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void resolve(org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.NamedType,org.apache.htrace.shaded.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.htrace.shaded.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addOrOverrideAnnotations(org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.'annotation'.Annotation[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked append(org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNonVisible()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutIgnored()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutIgnored()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked trimByVisibility()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addAnnotationsIfNotPresent(org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.'annotation'.Annotation[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.AnnotationMap _mergeAnnotations(int,org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.Map _findFields(java.lang.Class,java.util.Map)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider: org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer,org.apache.htrace.shaded.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeContents(java.util.Collection,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeUsingCustom(java.util.Collection,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.EnumMapSerializer: void serializeContents(java.util.EnumMap,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.JsonSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void serializeUsingCustom(java.util.List,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void serializeAsElement(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void serializeAsElement(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void serializeContents(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void serializeContents(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.commons.collections.iterators.IteratorChain: void updateCurrentIterator()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider,org.apache.htrace.shaded.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void serializeAsField(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void serializeAsField(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.htrace.shaded.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.apache.htrace.shaded.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.shaded.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.ipc.RPC: void stopProxy(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.ipc.RPC: void stopProxy(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.ipc.RPC: void stopProxy(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.net.URLClassLoader: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.net.URLClassLoader: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.codehaus.jackson.impl.JsonParserBase: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.codehaus.jackson.impl.Utf8StreamParser: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.JournalSet: void mapJournalsAndReportErrors(org.apache.hadoop.hdfs.server.namenode.JournalSet$JournalClosure,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap: void clear()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FSDataOutputStream$PositionCache: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.codehaus.jackson.impl.Utf8StreamParser: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.ReadaheadPool: org.apache.hadoop.io.ReadaheadPool$ReadaheadRequest readaheadStream(java.lang.String,java.io.FileDescriptor,long,long,long,org.apache.hadoop.io.ReadaheadPool$ReadaheadRequest)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.datanode.BlockSender: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.datanode.BlockSender: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.OutputStreamWriter: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$Label: void b(com.google.inject.internal.asm.$Label,long,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SetFromMap: boolean add(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InheritingState: void blacklist(com.google.inject.Key,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.MoreTypes: java.lang.Class getRawType(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.MoreTypes: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.MoreTypes: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.MoreTypes: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.MoreTypes: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.MoreTypes: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.MoreTypes: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.MoreTypes: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.FailableCache: java.lang.Object get(java.lang.Object,com.google.inject.internal.Errors)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl getBindingOrThrow(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl getBindingOrThrow(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingImpl: java.lang.Object get(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InheritingState: com.google.inject.Scope getScope(java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.MoreTypes: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.MoreTypes: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.TypeLiteral: java.lang.reflect.Type resolveType(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.TypeLiteral: java.lang.reflect.Type resolveType(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.TypeLiteral: java.lang.reflect.Type resolveType(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.TypeLiteral: java.lang.reflect.Type resolveType(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.TypeLiteral: java.lang.reflect.Type resolveType(java.lang.reflect.Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InheritingState: com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$2$1: void remove()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$2$1: void remove()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.Logger: void doLog(java.util.logging.LogRecord)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.ConstructorBindingImpl: void initialize(com.google.inject.internal.InjectorImpl,com.google.inject.internal.Errors)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl: com.google.inject.internal.InternalFactory getInternalFactory(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingImpl: java.lang.Object get(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.io.DataOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList: java.lang.Object set(int,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.SubList$1: void set(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.Logger: void updateEffectiveLevel()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.LogManager$LogNode: void walkAndSetParent(java.util.logging.Logger)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.LogManager$LoggerContext: boolean addLocalLogger(java.util.logging.Logger,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.Level: void <init>(java.lang.String,int,java.lang.String,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.Logger: java.util.ResourceBundle findResourceBundle(java.lang.String,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl: java.lang.Object callInContext(com.google.inject.internal.ContextualCallable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl$4: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl$4: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl: java.lang.Object callInContext(com.google.inject.internal.ContextualCallable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl$4: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.ConstructorBindingImpl$Factory: java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.ConstructorBindingImpl$Factory: java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl$4: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.ConstructorBindingImpl$Factory: java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.ConstructorBindingImpl$Factory: java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl$4: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.ConstructorBindingImpl$Factory: java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.ConstructorBindingImpl$Factory: java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.ConstructorBindingImpl$Factory: java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl getBindingOrThrow(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl getBindingOrThrow(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl createJustInTimeBindingRecursive(com.google.inject.Key,com.google.inject.internal.Errors,boolean,com.google.inject.internal.InjectorImpl$JitLimitation)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$Type: java.lang.String getClassName()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$TypeUtils: java.lang.String getClassName(com.google.inject.internal.asm.$Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$ReflectUtils: java.util.List addAllMethods(java.lang.Class,java.util.List)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$ReflectUtils: java.util.List addAllMethods(java.lang.Class,java.util.List)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$MethodAdapter: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$ClassEmitter: com.google.inject.internal.cglib.core.$CodeEmitter begin_method(int,com.google.inject.internal.cglib.core.$Signature,com.google.inject.internal.asm.$Type[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$ClassEmitter$2: void visitInsn(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$MethodAdapter: void visitVarInsn(int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$MethodAdapter: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$MethodAdapter: void visitIntInsn(int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$MethodAdapter: void visitLdcInsn(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$MethodAdapter: void visitTableSwitchInsn(int,int,com.google.inject.internal.asm.$Label,com.google.inject.internal.asm.$Label[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$MethodAdapter: void visitJumpInsn(int,com.google.inject.internal.asm.$Label)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$MethodAdapter: void visitTypeInsn(int,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(int[],int,int,boolean)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$MethodAdapter: void visitLabel(com.google.inject.internal.asm.$Label)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$CodeEmitter: void process_switch(int[],com.google.inject.internal.cglib.core.$ProcessSwitchCallback)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$CodeEmitter: void process_switch(int[],com.google.inject.internal.cglib.core.$ProcessSwitchCallback)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$EmitUtils: void member_helper_size(com.google.inject.internal.cglib.core.$CodeEmitter,java.util.List,com.google.inject.internal.cglib.core.$ObjectSwitchCallback,com.google.inject.internal.cglib.core.$EmitUtils$ParameterTyper,com.google.inject.internal.asm.$Label,com.google.inject.internal.asm.$Label)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$MethodAdapter: void visitLookupSwitchInsn(com.google.inject.internal.asm.$Label,int[],com.google.inject.internal.asm.$Label[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$CodeEmitter: void process_switch(int[],com.google.inject.internal.cglib.core.$ProcessSwitchCallback)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$MethodAdapter: void visitTryCatchBlock(com.google.inject.internal.asm.$Label,com.google.inject.internal.asm.$Label,com.google.inject.internal.asm.$Label,java.lang.String)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$EmitUtils: void append_string_helper(com.google.inject.internal.cglib.core.$CodeEmitter,com.google.inject.internal.asm.$Type,com.google.inject.internal.cglib.core.$EmitUtils$ArrayDelimiters,com.google.inject.internal.cglib.core.$Customizer,com.google.inject.internal.cglib.core.$ProcessArrayCallback)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$EmitUtils: void process_array(com.google.inject.internal.cglib.core.$CodeEmitter,com.google.inject.internal.asm.$Type,com.google.inject.internal.cglib.core.$ProcessArrayCallback)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$CodeEmitter: void cast_numeric(com.google.inject.internal.asm.$Type,com.google.inject.internal.asm.$Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$CodeEmitter: void cast_numeric(com.google.inject.internal.asm.$Type,com.google.inject.internal.asm.$Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$CodeEmitter: void cast_numeric(com.google.inject.internal.asm.$Type,com.google.inject.internal.asm.$Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.asm.$MethodAdapter: void visitIincInsn(int,int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.cglib.core.$EmitUtils$8: void processElement(com.google.inject.internal.asm.$Type)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SetFromMap: boolean add(java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.logging.Logger: void doLog(java.util.logging.LogRecord)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <com.google.inject.internal.InheritingState: com.google.inject.internal.util.$ImmutableList getMethodAspects()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.io.compress.DecompressorStream: void close()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.Thread: void run()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray(java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray(java.lang.Object[])>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.util.Set keySet()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields: java.lang.String getUserName(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields: java.lang.String getUserName(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields: org.apache.hadoop.fs.permission.FsPermission getFsPermission(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields: org.apache.hadoop.fs.permission.FsPermission getFsPermission(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields: java.lang.String getGroupName(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeWithAdditionalFields: java.lang.String getGroupName(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: org.apache.hadoop.fs.permission.PermissionStatus getPermissionStatus(int)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap$NavigableSubMap: java.util.TreeMap$Entry absLowest()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:01 [DEBUG] - Worst case for method <org.apache.hadoop.util.ReflectionUtils: java.lang.Object newInstance(java.lang.Class,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean remove(java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.compress.CompressionCodec$Util: org.apache.hadoop.io.compress.CompressionOutputStream createOutputStreamWithCodecPool(org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.conf.Configuration,java.io.OutputStream)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractCollection: boolean addAll(java.util.Collection)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getCurrentUser()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.Thread: void run()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.Thread: void run()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(java.net.URI,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapreduce.lib.jobcontrol.ControlledJob: org.apache.hadoop.mapreduce.lib.jobcontrol.ControlledJob$State checkState()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.FSDirSnapshotOp: void checkSnapshot(org.apache.hadoop.hdfs.server.namenode.INode,java.util.List)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: void setModificationTime(long)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: void recordModification(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.InnerNodeImpl: org.apache.hadoop.net.Node getLoc(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: void childRemoveStorage(java.lang.String,org.apache.hadoop.fs.StorageType)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.HashMap: void <init>(java.util.Map)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: void childAddStorage(java.lang.String,org.apache.hadoop.fs.StorageType)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.AbstractMetric: java.lang.String name()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.AbstractMetric: java.lang.String name()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void write(byte[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.logging.Logger: void doLog(java.util.logging.LogRecord)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeMap$AscendingSubMap$AscendingEntrySetView: java.util.Iterator iterator()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeMap: int compare(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeMap: int compare(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.concurrent.FutureTask: void run()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getCurrentUser()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getLoginUser()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getCurrentUser()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.datanode.DirectoryScanner$ReportCompiler: java.util.LinkedList compileReport(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi,java.io.File,java.io.File,java.util.LinkedList)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapred.LocatedFileStatusFetcher$ProcessInitialInputPathCallable: java.lang.Object call()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.concurrent.FutureTask: void run()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.concurrent.FutureTask: void run()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.EditLogFileInputStream: org.apache.hadoop.hdfs.server.namenode.FSEditLogOp nextOpImpl(boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.RedundantEditLogInputStream: org.apache.hadoop.hdfs.server.namenode.FSEditLogOp nextOp()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.EditLogInputStream: void resync()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void begin()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.impl.Utf8StreamParser: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.IOUtils: void closeStream(java.io.Closeable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FSDataOutputStream$PositionCache: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.zip.DeflaterOutputStream: void deflate()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.net.SocketOutputStream: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FSDataOutputStream$PositionCache: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FSDataOutputStream$PositionCache: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FSDataOutputStream$PositionCache: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeMap: int compare(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(java.net.URI,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.common.cache.LocalCache$KeyIterator: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.SubList: java.lang.Object remove(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.ArrayList$SubList: void removeRange(int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.SubList: void removeRange(int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap: void clear()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap: void clear()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeSet: void clear()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$HashIterator: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.common.collect.Iterators$5: void remove()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeMap$AscendingSubMap$AscendingEntrySetView: java.util.Iterator iterator()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.common.collect.MapMakerInternalMap$EntryIterator: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <sun.text.normalizer.Utility: void recursiveAppendNumber(java.lang.StringBuffer,int,int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.TreeMap$AscendingSubMap$AscendingEntrySetView: java.util.Iterator iterator()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <sun.text.normalizer.UnicodeSet: void applyPattern(sun.text.normalizer.RuleCharacterIterator,sun.text.normalizer.SymbolTable,java.lang.StringBuffer,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.lang.String produceEquivalentAlternation(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$CharProperty clazz(boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$CharProperty clazz(boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$CharProperty clazz(boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$CharProperty clazz(boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.compress.DecompressorStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.compress.DecompressorStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.BufferedInputStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.ctc.wstx.io.MergedStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.io.MergedStream: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.RandomAccessFile: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapred.pipes.BinaryProtocol$TeeOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.zip.GZIPOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.security.SaslOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapred.pipes.BinaryProtocol$TeeOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapred.pipes.BinaryProtocol$TeeOutputStream: void write(byte[],int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flush()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,java.math.BigDecimal,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,java.math.BigDecimal,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.ThreadLocal: java.lang.Object get()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <io.netty.buffer.WrappedByteBuf: java.nio.ByteOrder order()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.ResourceBundle: java.util.ResourceBundle findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.slf4j.helpers.MessageFormatter: void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Map)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.exceptions.base.MockitoException: void filterStackTrace()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapreduce.counters.AbstractCounters: org.apache.hadoop.mapreduce.Counter findCounter(java.lang.Enum)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FileContext: org.apache.hadoop.fs.FileContext getFileContext(java.net.URI,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType _fromAny(com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.introspect.AnnotatedClass: com.fasterxml.jackson.databind.introspect.AnnotationMap _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.'annotation'.Annotation[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.util.ClassUtil: void _addSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.Collection,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.util.ClassUtil: void _addSuperTypes(com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.Collection,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.'annotation'.Annotation[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.introspect.AnnotatedClass: void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.'annotation'.Annotation[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.util.ClassUtil: void _addRawSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.util.ClassUtil: void _addRawSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked append(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked trimByVisibility()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.util.Map _findFields(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.util.Map)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutIgnored()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutIgnored()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNonVisible()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: com.fasterxml.jackson.databind.introspect.AnnotationMap _getAllAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: com.fasterxml.jackson.databind.introspect.AnnotationMap _mergeAnnotations(int,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _applyAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.AnnotationMap)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.util.NameTransformer$Chained: java.lang.String transform(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.util.NameTransformer$Chained: java.lang.String transform(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void resolve(com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.ReferenceType: com.fasterxml.jackson.databind.type.ReferenceType withStaticTyping()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.JavaType withStaticTyping()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.JavaType withStaticTyping()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.JavaType withStaticTyping()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.MapType: com.fasterxml.jackson.databind.JavaType withStaticTyping()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType withStaticTyping()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void serializeContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void serializeContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void serializeUsingCustom(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeUsingCustom(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: void serializeUsingCustom(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.EnumSetSerializer: void serializeContents(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: void serializeContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeUsing(java.util.Map$Entry,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void serializeContents(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.EmitUtils: void not_equals_helper(org.mockito.cglib.core.CodeEmitter,org.mockito.asm.Type,org.mockito.asm.Label,org.mockito.cglib.core.Customizer,org.mockito.cglib.core.ProcessArrayCallback)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.ClassEmitter$2: void visitInsn(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.MethodAdapter: void visitJumpInsn(int,org.mockito.asm.Label)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.MethodAdapter: void visitLabel(org.mockito.asm.Label)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.MethodAdapter: void visitIntInsn(int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.MethodAdapter: void visitLdcInsn(java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.MethodAdapter: void visitVarInsn(int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.MethodAdapter: void visitIincInsn(int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.MethodAdapter: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.StdDeserializationContext: java.lang.String _calcName(java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonLocation getTokenLocation()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonToken getCurrentToken()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonLocation getCurrentLocation()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: java.lang.String getText()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: java.lang.Object getEmbeddedObject()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectStreamClass: java.io.ObjectStreamClass lookup(java.lang.Class,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectInputStream: java.lang.Object readObject0(java.lang.Class,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDesc(boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDesc(boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectInputStream$HandleTable: void markException(int,java.lang.ClassNotFoundException)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <sun.reflect.AccessorGenerator: java.lang.String getClassName(java.lang.Class,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectInputStream: java.lang.Object readObject0(java.lang.Class,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectInputStream: java.lang.Object readObject0(java.lang.Class,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectInputStream: java.lang.Object readObject0(java.lang.Class,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectInputStream: java.lang.Object readObject0(java.lang.Class,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser skipChildren()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.util.ajax.JSON: void append(java.lang.StringBuffer,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.util.ajax.JSON: void append(java.lang.StringBuffer,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON$Convertor getConvertor(java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.util.ajax.JSON: void appendMap(java.lang.StringBuffer,java.util.Map)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeBindings: void _resolveBindings(java.lang.reflect.Type)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType[] findTypeParameters(org.codehaus.jackson.type.JavaType,java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeBindings: void _resolveBindings(java.lang.reflect.Type)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeBindings: void _resolveBindings(java.lang.reflect.Type)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.HierarchicType _findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.HierarchicType _findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.HierarchicType: org.codehaus.jackson.map.type.HierarchicType deepCloneWithoutSubtype()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.HierarchicType _findSuperClassChain(java.lang.reflect.Type,java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeBase: java.lang.String toCanonical()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeBase: java.lang.String toCanonical()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeBase: java.lang.String toCanonical()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.SimpleType: java.lang.String buildCanonicalName()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType findType(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _constructType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _fromClass(java.lang.Class,org.codehaus.jackson.map.type.TypeBindings)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.type.TypeParser: org.codehaus.jackson.type.JavaType parseType(org.codehaus.jackson.map.type.TypeParser$MyTokenizer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPathRecursively(java.util.List,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectOutputStream: void writeClassDesc(java.io.ObjectStreamClass,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectOutputStream: void writeProxyDesc(java.io.ObjectStreamClass,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedList: java.util.List subList(int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedList: java.util.List subList(int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableList: java.util.List subList(int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: org.apache.hadoop.hdfs.server.namenode.INodeAttributes getSnapshotINode(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: org.apache.hadoop.hdfs.server.namenode.INodeSymlink asSymlink()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutIgnored()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutIgnored()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutNonVisible()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node append(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.introspect.POJOPropertyBuilder: org.codehaus.jackson.map.introspect.AnnotationMap _mergeAnnotations(int,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node trimByVisibility()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.util.ClassUtil: void _addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.util.ClassUtil: void _addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.introspect.AnnotatedClass: void _addFields(java.util.Map,java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.jsontype.NamedType,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector,java.util.HashMap)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer: void resolve(org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.node.POJONode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.node.ArrayNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.node.ArrayNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.node.ArrayNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.SerializableSerializer: void serialize(org.codehaus.jackson.map.JsonSerializable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.MapSerializer: void serializeFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.node.ArrayNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.ObjectArraySerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.StringCollectionSerializer: void serializeUsingCustom(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.StringCollectionSerializer: void serializeUsingCustom(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.MapSerializer: void serializeFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.node.ArrayNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.CollectionSerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.BeanSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.BeanSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.std.AsArraySerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.BeanSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ser.BeanSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserSequence: org.codehaus.jackson.JsonToken nextToken()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserSequence: org.codehaus.jackson.JsonToken nextToken()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: java.math.BigDecimal getDecimalValue()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty: org.codehaus.jackson.map.deser.SettableBeanProperty withValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty: org.codehaus.jackson.map.introspect.AnnotatedMember getMember()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty: org.codehaus.jackson.map.introspect.AnnotatedMember getMember()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser$NumberType getNumberType()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: char[] getTextCharacters()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserSequence: void addFlattenedActiveParsers(java.util.List)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: java.math.BigInteger getBigIntegerValue()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: java.lang.String getCurrentName()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.TokenBuffer: void copyCurrentStructure(org.codehaus.jackson.JsonParser)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.TokenBuffer: void copyCurrentStructure(org.codehaus.jackson.JsonParser)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.ObjectCodec getCodec()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.BaseNodeDeserializer: org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.BaseNodeDeserializer: org.codehaus.jackson.node.ArrayNode deserializeArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.BaseNodeDeserializer: org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.BaseNodeDeserializer: org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.BaseNodeDeserializer: org.codehaus.jackson.node.ArrayNode deserializeArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.BaseNodeDeserializer: org.codehaus.jackson.node.ArrayNode deserializeArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.node.JsonNodeFactory)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.util.JsonParserDelegate: java.lang.Number getNumberValue()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.xc.XmlAdapterJsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty: void set(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty: void set(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty: void set(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty: void set(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty: void set(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty: void set(java.lang.Object,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.xc.XmlAdapterJsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.xc.XmlAdapterJsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.xc.XmlAdapterJsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.xc.XmlAdapterJsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.AbstractDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.AbstractDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.AbstractDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.deser.std.AtomicReferenceDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.protocol.DefaultedHttpContext: java.lang.Object getAttribute(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.FSImageFormat$Loader: org.apache.hadoop.hdfs.server.namenode.INode loadINodeWithLocalName(boolean,java.io.DataInput,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotFSImageFormat$ReferenceMap: org.apache.hadoop.hdfs.server.namenode.INodeReference$WithCount loadINodeReferenceWithCount(boolean,java.io.DataInput,org.apache.hadoop.hdfs.server.namenode.FSImageFormat$Loader)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: void setLocalName(byte[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: void setGroup(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.FSImageFormat$Loader: void loadDirectoryWithSnapshot(java.io.DataInput,org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress$Counter)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.crypto.CryptoInputStream: void seek(long)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FSDataInputStream: void seek(long)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.Introspector: java.lang.Object annotationToField(java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <net.minidev.json.parser.JSONParserBase: java.lang.Object readMain(boolean[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <net.minidev.json.parser.JSONParserBase: java.lang.Object readMain(boolean[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <io.netty.channel.AbstractChannelHandlerContext: void invokeChannelActive()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl getExistingBinding(com.google.inject.Key)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: org.apache.hadoop.mapreduce.v2.app.job.TaskStateInternal access$1200(org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl,org.apache.hadoop.mapreduce.jobhistory.JobHistoryParser$TaskInfo,org.apache.hadoop.mapreduce.OutputCommitter,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.MetricsTag: java.lang.String description()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.MetricsTag: java.lang.String description()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.collections.iterators.TransformIterator: java.lang.Object next()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.configuration.AbstractFileConfiguration: void load(java.net.URL)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.lang.ClassUtils: java.lang.Class getClass(java.lang.ClassLoader,java.lang.String,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.configuration.AbstractFileConfiguration: void reload()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.configuration.SubsetConfiguration: java.lang.Object getProperty(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.Object getProperty(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.commons.lang.text.StrBuilder,int,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.configuration.SubsetConfiguration: java.lang.Object interpolate(java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.configuration.AbstractFileConfiguration: void reload()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void writeProperty(java.lang.String,java.lang.Object,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.configuration.PropertyConverter: java.util.Iterator toIterator(java.lang.Object,char)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.configuration.PropertyConverter: java.util.Iterator toIterator(java.lang.Object,char)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.configuration.PropertyConverter: java.util.Iterator toIterator(java.lang.Object,char)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.configuration.SubsetConfiguration: java.util.Iterator getKeys()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.configuration.SubsetConfiguration: java.util.Iterator getKeys(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.ClassLoader getPluginLoader()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <sun.security.krb5.SCDynamicStoreConfig: void WrapAllStringInVector(java.util.Hashtable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <io.netty.channel.AbstractChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelRegistered()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <io.netty.channel.AbstractChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelRegistered()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.Type: java.lang.String getClassName()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.TypeUtils: java.lang.String getClassName(org.mockito.asm.Type)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.FSImageSerialization: void saveINode2Image(org.apache.hadoop.hdfs.server.namenode.INode,java.io.DataOutput,boolean,org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotFSImageFormat$ReferenceMap)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.FSImageSerialization: void saveINode2Image(org.apache.hadoop.hdfs.server.namenode.INode,java.io.DataOutput,boolean,org.apache.hadoop.hdfs.server.namenode.snapshot.SnapshotFSImageFormat$ReferenceMap)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.FSImageFormat$Saver: void saveImage(org.apache.hadoop.hdfs.server.namenode.INodeDirectory,java.io.DataOutputStream,boolean,boolean,org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress$Counter)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.FSImageFormat$Saver: void saveImage(org.apache.hadoop.hdfs.server.namenode.INodeDirectory,java.io.DataOutputStream,boolean,boolean,org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress$Counter)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.protobuf.TextFormat$Printer: void access$500(com.google.protobuf.TextFormat$Printer,com.google.protobuf.UnknownFieldSet,com.google.protobuf.TextFormat$TextGenerator)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.protobuf.TextFormat$Printer: void printUnknownFields(com.google.protobuf.UnknownFieldSet,com.google.protobuf.TextFormat$TextGenerator)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.handler.AbstractHandlerContainer: java.lang.Object expandHandler(org.mortbay.jetty.Handler,java.lang.Object,java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.handler.HandlerWrapper: java.lang.Object expandChildren(java.lang.Object,java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.handler.HandlerWrapper: java.lang.Object expandChildren(java.lang.Object,java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.handler.HandlerWrapper: java.lang.Object expandChildren(java.lang.Object,java.lang.Class)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.entity.HttpEntityWrapper: java.io.InputStream getContent()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper: java.io.InputStream getContent()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper: java.io.InputStream getContent()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.protocol.DefaultedHttpContext: void setAttribute(java.lang.String,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectOutputStream: void writeObject0(java.lang.Object,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.io.ObjectOutputStream: void writeObject0(java.lang.Object,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.entity.HttpEntityWrapper: void writeTo(java.io.OutputStream)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.entity.HttpEntityWrapper: void writeTo(java.io.OutputStream)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.conn.BasicManagedEntity: void writeTo(java.io.OutputStream)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.impl.conn.LoggingSessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.MethodAdapter: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.handler.HandlerWrapper: void setServer(org.mortbay.jetty.Server)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.handler.HandlerWrapper: void setServer(org.mortbay.jetty.Server)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.handler.HandlerWrapper: void setServer(org.mortbay.jetty.Server)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.handler.ContextHandler: void setServer(org.mortbay.jetty.Server)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.handler.ContextHandler: void setServer(org.mortbay.jetty.Server)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.servlet.HashSessionManager$Session: void invalidate()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void stop()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void stop()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void stop()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void stop()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void stop()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.util.IO: boolean delete(java.io.File)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void stop()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.handler.HandlerWrapper: void setHandler(org.mortbay.jetty.Handler)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.handler.HandlerWrapper: void setHandler(org.mortbay.jetty.Handler)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void stop()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void stop()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void stop()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void start()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void start()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.util.IO: void copyDir(java.io.File,java.io.File)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.jetty.webapp.WebAppContext: org.mortbay.resource.Resource getWebInf()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void start()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void start()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void start()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void start()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void start()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void start()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void start()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mortbay.component.AbstractLifeCycle: void start()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.math3.exception.util.ArgUtils: java.lang.Object[] flatten(java.lang.Object[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.ClassEmitter: org.mockito.cglib.core.CodeEmitter begin_method(int,org.mockito.cglib.core.Signature,org.mockito.asm.Type[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.MethodAdapter: void visitTypeInsn(int,java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.Label: void visitSubroutine(org.mockito.asm.Label,long,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.MXBeanIntrospector: java.lang.String typeName(java.lang.reflect.Type)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.MXBeanIntrospector: java.lang.String typeName(java.lang.reflect.Type)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.MXBeanIntrospector: java.lang.String typeName(java.lang.reflect.Type)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.MXBeanIntrospector: java.lang.String typeName(java.lang.reflect.Type)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory: com.sun.jmx.mbeanserver.MXBeanMapping mappingForType(java.lang.reflect.Type,com.sun.jmx.mbeanserver.MXBeanMappingFactory)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory: com.sun.jmx.mbeanserver.MXBeanMapping mappingForType(java.lang.reflect.Type,com.sun.jmx.mbeanserver.MXBeanMappingFactory)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory: com.sun.jmx.mbeanserver.MXBeanMapping mappingForType(java.lang.reflect.Type,com.sun.jmx.mbeanserver.MXBeanMappingFactory)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory: com.sun.jmx.mbeanserver.MXBeanMapping mappingForType(java.lang.reflect.Type,com.sun.jmx.mbeanserver.MXBeanMappingFactory)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory: com.sun.jmx.mbeanserver.MXBeanMapping mappingForType(java.lang.reflect.Type,com.sun.jmx.mbeanserver.MXBeanMappingFactory)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.RedundantEditLogInputStream: java.lang.String getCurrentStreamName()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: void setUser(java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: void removeAclFeature()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: void addAclFeature(org.apache.hadoop.hdfs.server.namenode.AclFeature)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: void setPermission(org.apache.hadoop.fs.permission.FsPermission)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INode: void addSpaceConsumed2Parent(org.apache.hadoop.hdfs.server.namenode.QuotaCounts,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeDirectory: void addSpaceConsumed(org.apache.hadoop.hdfs.server.namenode.QuotaCounts,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: org.apache.hadoop.hdfs.server.namenode.INode updateModificationTime(long,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: void setAccessTime(long)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: void removeXAttrFeature()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.INodeReference: void addXAttrFeature(org.apache.hadoop.hdfs.server.namenode.XAttrFeature)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapred.Merger$MergeQueue: void close()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FSDataInputStream: java.io.FileDescriptor getFileDescriptor()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.crypto.CryptoInputStream: java.io.FileDescriptor getFileDescriptor()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FileUtil: void fullyDeleteOnExit(java.io.File)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.CodeEmitter: void cast_numeric(org.mockito.asm.Type,org.mockito.asm.Type)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.CodeEmitter: void cast_numeric(org.mockito.asm.Type,org.mockito.asm.Type)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.CodeEmitter: void cast_numeric(org.mockito.asm.Type,org.mockito.asm.Type)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.EmitUtils: void process_array(org.mockito.cglib.core.CodeEmitter,org.mockito.asm.Type,org.mockito.cglib.core.ProcessArrayCallback)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.EmitUtils: void append_string_helper(org.mockito.cglib.core.CodeEmitter,org.mockito.asm.Type,org.mockito.cglib.core.EmitUtils$ArrayDelimiters,org.mockito.cglib.core.Customizer,org.mockito.cglib.core.ProcessArrayCallback)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.CodeEmitter: void process_switch(int[],org.mockito.cglib.core.ProcessSwitchCallback)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.CodeEmitter: void process_switch(int[],org.mockito.cglib.core.ProcessSwitchCallback)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.MethodAdapter: void visitLookupSwitchInsn(org.mockito.asm.Label,int[],org.mockito.asm.Label[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.MethodAdapter: void visitTableSwitchInsn(int,int,org.mockito.asm.Label,org.mockito.asm.Label[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.EmitUtils: void member_helper_size(org.mockito.cglib.core.CodeEmitter,java.util.List,org.mockito.cglib.core.ObjectSwitchCallback,org.mockito.cglib.core.EmitUtils$ParameterTyper,org.mockito.asm.Label,org.mockito.asm.Label)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.CodeEmitter: void process_switch(int[],org.mockito.cglib.core.ProcessSwitchCallback)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.ReflectUtils: java.util.List addAllMethods(java.lang.Class,java.util.List)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.ReflectUtils: java.util.List addAllMethods(java.lang.Class,java.util.List)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.MethodAdapter: void visitTryCatchBlock(org.mockito.asm.Label,org.mockito.asm.Label,org.mockito.asm.Label,java.lang.String)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.cglib.core.EmitUtils: void push_object(org.mockito.cglib.core.CodeEmitter,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.mockito.asm.util.AbstractVisitor: void printList(java.io.PrintWriter,java.util.List)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.fasterxml.jackson.databind.ObjectMapper: void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.http.entity.HttpEntityWrapper: org.apache.http.Header getContentType()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FileUtil: org.apache.hadoop.fs.Path checkDest(java.lang.String,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FileUtil: boolean copy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,boolean,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.MXBeanSupport: void transitiveInterfaces(java.lang.Class,java.util.Set)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.MXBeanSupport: void transitiveInterfaces(java.lang.Class,java.util.Set)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.inject.spi.Elements$RecordingBinder: void install(com.google.inject.Module)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.inject.spi.Elements$RecordingBinder: void install(com.google.inject.Module)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.inject.internal.InheritingState: java.util.List getTypeListenerBindings()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.inject.internal.InjectorShell$Builder: java.util.List build(com.google.inject.internal.Initializer,com.google.inject.internal.ProcessedBindingData,com.google.inject.internal.util.$Stopwatch,com.google.inject.internal.Errors)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.lang.StringUtils: java.lang.String leftPad(java.lang.String,int,char)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.io.SequenceFile$Reader: void handleChecksumException(org.apache.hadoop.fs.ChecksumException)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory$CompositeBuilderCheckGetters: java.lang.String applicable(java.lang.reflect.Method[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory$CollectionMapping: void checkReconstructible()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory$CollectionMapping: void checkReconstructible()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory$CollectionMapping: void checkReconstructible()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory$CollectionMapping: void checkReconstructible()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.protobuf.TextFormat$Printer: void print(com.google.protobuf.MessageOrBuilder,com.google.protobuf.TextFormat$TextGenerator)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapreduce.JobResourceUploader: void explorePath(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.mapreduce.JobResourceUploader$LimitChecker,java.util.Map)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.RedundantEditLogInputStream: void setMaxOpSize(int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.hdfs.server.namenode.FSImage: boolean recoverTransitionRead(org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption,org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.MetaRecoveryContext)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.yarn.server.utils.AMRMClientUtils: org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse allocateWithReRegister(org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest,org.apache.hadoop.yarn.api.ApplicationMasterProtocol,org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterRequest,org.apache.hadoop.yarn.api.records.ApplicationId)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <javax.management.openmbean.TabularType: java.lang.String toString()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <javax.management.openmbean.OpenMBeanAttributeInfoSupport: java.lang.Object convertFromStrings(java.lang.Object,javax.management.openmbean.OpenType)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapreduce.v2.jobhistory.JobHistoryUtils: java.util.List localGlobber(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path,java.lang.String,org.apache.hadoop.fs.PathFilter,java.util.concurrent.atomic.AtomicBoolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapreduce.v2.jobhistory.JobHistoryUtils: java.util.List localGlobber(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path,java.lang.String,org.apache.hadoop.fs.PathFilter,java.util.concurrent.atomic.AtomicBoolean)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.protobuf.RopeByteString$Balancer: void doBalance(com.google.protobuf.ByteString)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.protobuf.RopeByteString$Balancer: void doBalance(com.google.protobuf.ByteString)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.JsonFactory)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap: java.util.Collection values()>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FileUtil: boolean copy(java.io.File,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.protobuf.ByteString: com.google.protobuf.ByteString balancedConcat(java.util.Iterator,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.protobuf.ByteString: com.google.protobuf.ByteString balancedConcat(java.util.Iterator,int)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.mapred.FileInputFormat: void addInputPathRecursively(java.util.List,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object[])>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.yarn.server.utils.AMRMClientUtils: org.apache.hadoop.yarn.api.protocolrecords.FinishApplicationMasterResponse finishAMWithReRegister(org.apache.hadoop.yarn.api.protocolrecords.FinishApplicationMasterRequest,org.apache.hadoop.yarn.api.ApplicationMasterProtocol,org.apache.hadoop.yarn.api.protocolrecords.RegisterApplicationMasterRequest,org.apache.hadoop.yarn.api.records.ApplicationId)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.security.LdapGroupsMapping: void goUpGroupHierarchy(java.util.Set,int,java.util.Set)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem newInstance(org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem newInstance(java.net.URI,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <com.google.common.collect.AbstractMultimap$WrappedList: java.lang.Object set(int,java.lang.Object)>
2020-08-25 12:10:02 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.impl.MetricsBuffer: java.util.Iterator iterator()>
2020-08-25 12:10:02 [INFO] - [LocalityAnalysis] 51367 methods analyszed in 1.7s
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.top.window.RollingWindowManager: org.apache.hadoop.metrics2.util.Metrics2Util$TopN getTopUsersForMetric(long,java.lang.String,org.apache.hadoop.hdfs.server.namenode.top.window.RollingWindowManager$RollingWindowMap)> has 13 units and 3 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.server.namenode.top.window.RollingWindowManager: org.slf4j.Logger LOG> AT LINE 239 with ID [e9abd0e6-eb82]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("gc window of metric: {} userName: {}", metricName, userName) AT LINE 239 with ID [e9abd0e6-eb82]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hdfs.server.namenode.top.window.RollingWindowManager: org.slf4j.Logger LOG> AT LINE 244 with ID [85e59d8d-f4b0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = newarray (java.lang.Object)[3] AT LINE 244 with ID [85e59d8d-f4b0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26[0] = metricName AT LINE 244 with ID [85e59d8d-f4b0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26[1] = userName AT LINE 244 with ID [85e59d8d-f4b0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(windowSum) AT LINE 244 with ID [85e59d8d-f4b0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26[2] = $stack30 AT LINE 244 with ID [85e59d8d-f4b0]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("offer window of metric: {} userName: {} sum: {}", $stack26) AT LINE 244 with ID [85e59d8d-f4b0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.namenode.top.window.RollingWindowManager: org.slf4j.Logger LOG> AT LINE 248 with ID [9a3284da-717c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = virtualinvoke topN.<org.apache.hadoop.metrics2.util.Metrics2Util$TopN: int size()>() AT LINE 248 with ID [9a3284da-717c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack19) AT LINE 248 with ID [9a3284da-717c]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("topN users size for command {} is: {}", metricName, $stack20) AT LINE 248 with ID [9a3284da-717c]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack12 == 0 goto specialinvoke this.<org.apache.hadoop.hdfs.server.datanode.DataNode: void removeVolumes(java.util.Set,boolean)>(unhealthyDirs, 0) at line 3271 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack7 = this.<org.apache.hadoop.hdfs.server.datanode.DataNode: org.apache.hadoop.hdfs.server.datanode.fsdataset.FsDatasetSpi data> at line 3261 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataNode: void handleVolumeFailures(java.util.Set)> has 10 units and 4 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 3262 with ID [bfbcc6a0-b5c7]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String)>("handleVolumeFailures done with empty unhealthyVolumes") AT LINE 3262 with ID [bfbcc6a0-b5c7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(vol) AT LINE 3273 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";") AT LINE 3273 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 3283 with ID [6dbb949f-6b9d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack14 = interfaceinvoke $stack13.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 3283 with ID [6dbb949f-6b9d]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack14 == 0 goto $stack15 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3283 with ID [6dbb949f-6b9d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 3284 with ID [6dbb949f-6b9d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3284 with ID [6dbb949f-6b9d]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 3284 with ID [6dbb949f-6b9d]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack12 == 0 goto return at line 137 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics: void report(long,java.lang.String,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.server.namenode.top.metrics.TopMetrics: org.slf4j.Logger LOG> AT LINE 135 with ID [2884f8b8-6608]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("a metric is reported: cmd: {} user: {}", cmd, userName) AT LINE 135 with ID [2884f8b8-6608]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if value != null goto $stack4 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.slf4j.Logger LOG> at line 181 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.Object getProperty(java.lang.String)> has 17 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.slf4j.Logger LOG> AT LINE 183 with ID [f850cbaa-e5ef]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("poking parent \'") AT LINE 183 with ID [f850cbaa-e5ef]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = virtualinvoke this.<org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.commons.configuration.Configuration getParent()>() AT LINE 183 with ID [f850cbaa-e5ef]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.Object: java.lang.Class getClass()>() AT LINE 183 with ID [f850cbaa-e5ef]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 183 with ID [f850cbaa-e5ef]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28) AT LINE 183 with ID [f850cbaa-e5ef]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for key: ") AT LINE 183 with ID [f850cbaa-e5ef]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 183 with ID [f850cbaa-e5ef]
2020-08-25 12:10:02 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 183 with ID [f850cbaa-e5ef]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack32) AT LINE 183 with ID [f850cbaa-e5ef]
2020-08-25 12:10:02 [INFO] - 	 -> $stack7 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.slf4j.Logger LOG> AT LINE 190 with ID [5f4fee44-99c0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("returning \'") AT LINE 190 with ID [5f4fee44-99c0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(value) AT LINE 190 with ID [5f4fee44-99c0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for key: ") AT LINE 190 with ID [5f4fee44-99c0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 190 with ID [5f4fee44-99c0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 190 with ID [5f4fee44-99c0]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 190 with ID [5f4fee44-99c0]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: void receivedNewWrite(org.apache.hadoop.hdfs.DFSClient,org.apache.hadoop.nfs.nfs3.request.WRITE3Request,org.jboss.netty.channel.Channel,int,org.apache.hadoop.hdfs.nfs.nfs3.AsyncDataService,org.apache.hadoop.security.IdMappingServiceProvider)> has 12 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 466 with ID [104250e2-2272]
2020-08-25 12:10:02 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Repeated write request which hasn\'t been served: xid=") AT LINE 466 with ID [104250e2-2272]
2020-08-25 12:10:02 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(xid) AT LINE 466 with ID [104250e2-2272]
2020-08-25 12:10:02 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", drop it.") AT LINE 466 with ID [104250e2-2272]
2020-08-25 12:10:02 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 466 with ID [104250e2-2272]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack45.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack49) AT LINE 466 with ID [104250e2-2272]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 471 with ID [d354fa0c-cc75]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Repeated write request which is already served: xid=") AT LINE 471 with ID [d354fa0c-cc75]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(xid) AT LINE 471 with ID [d354fa0c-cc75]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", resend response.") AT LINE 471 with ID [d354fa0c-cc75]
2020-08-25 12:10:02 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 471 with ID [d354fa0c-cc75]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 471 with ID [d354fa0c-cc75]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack12 == 0 goto (branch) at line 418 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - No overhead is found at method <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: void loadFromZKCache(boolean)>
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack3 == 0 goto (branch) at line 172 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.balancer.KeyManager$BlockKeyUpdater: void run()>
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack20 = virtualinvoke node.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus getLeavingServiceStatus()>() at line 219 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: void startDecommission(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 6 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger LOG> AT LINE 227 with ID [805546b0-c6fb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startDecommission: Node {} in {}, nothing to do.") AT LINE 227 with ID [805546b0-c6fb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(node) AT LINE 227 with ID [805546b0-c6fb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 227 with ID [805546b0-c6fb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack12 = virtualinvoke node.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates getAdminState()>() AT LINE 227 with ID [805546b0-c6fb]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>($stack11, $stack12) AT LINE 227 with ID [805546b0-c6fb]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack14 != 0 goto shmId = staticinvoke <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$ShmId: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$ShmId createRandom()>() at line 318 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack11 != 0 goto fis = null at line 307 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry$NewShmInfo createNewMemorySegment(java.lang.String,org.apache.hadoop.net.unix.DomainSocket)> has 11 units and 3 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack39 = <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: org.apache.commons.logging.Log LOG> AT LINE 308 with ID [1a949e4d-b357]
2020-08-25 12:10:02 [INFO] - 	 -> $stack40 = interfaceinvoke $stack39.<org.apache.commons.logging.Log: boolean isTraceEnabled()>() AT LINE 308 with ID [1a949e4d-b357]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack40 == 0 goto $stack41 = new java.lang.UnsupportedOperationException AT LINE 308 with ID [1a949e4d-b357]
2020-08-25 12:10:02 [INFO] - 	 -> $stack42 = <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: org.apache.commons.logging.Log LOG> AT LINE 309 with ID [1a949e4d-b357]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("createNewMemorySegment: ShortCircuitRegistry is not enabled.") AT LINE 309 with ID [1a949e4d-b357]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: org.apache.commons.logging.Log LOG> AT LINE 333 with ID [e42b9a2b-2e34]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createNewMemorySegment: created ") AT LINE 333 with ID [e42b9a2b-2e34]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry$NewShmInfo: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$ShmId access$000(org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry$NewShmInfo)>(info) AT LINE 333 with ID [e42b9a2b-2e34]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack30) AT LINE 333 with ID [e42b9a2b-2e34]
2020-08-25 12:10:02 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 333 with ID [e42b9a2b-2e34]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack28.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack32) AT LINE 333 with ID [e42b9a2b-2e34]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: void initPerfMonitoring(org.apache.hadoop.hdfs.protocol.DatanodeInfo[])> has 3 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 1088 with ID [72bc827d-1d89]
2020-08-25 12:10:02 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver: java.lang.String mirrorNameForMetrics> AT LINE 1088 with ID [72bc827d-1d89]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Will collect peer metrics for downstream node {}", $stack11) AT LINE 1088 with ID [72bc827d-1d89]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler$MetaInfo: void flush()> has 6 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack13 = staticinvoke <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.commons.logging.Log access$200()>() AT LINE 1614 with ID [d2e2b2ec-d1ad]
2020-08-25 12:10:02 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Flushing ") AT LINE 1614 with ID [d2e2b2ec-d1ad]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = virtualinvoke this.<org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler$MetaInfo: java.lang.String toString()>() AT LINE 1614 with ID [d2e2b2ec-d1ad]
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16) AT LINE 1614 with ID [d2e2b2ec-d1ad]
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1614 with ID [d2e2b2ec-d1ad]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 1614 with ID [d2e2b2ec-d1ad]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslRpcServer: void <init>(org.apache.hadoop.security.SaslRpcServer$AuthMethod)> has 5 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = <org.apache.hadoop.security.SaslRpcServer: org.slf4j.Logger LOG> AT LINE 111 with ID [93a0fcce-238e]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Kerberos principal name is ") AT LINE 111 with ID [93a0fcce-238e]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fullName) AT LINE 111 with ID [93a0fcce-238e]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 111 with ID [93a0fcce-238e]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 111 with ID [93a0fcce-238e]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack177 >= 1 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2140 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack175 == 1 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2145 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack192 == 1 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2075 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack191 >= 3 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2080 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack190 == 1 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2085 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack189 == 1 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2090 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack188 == 2 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2095 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack187 == 2 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2100 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack186 == 4 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2105 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack185 == 4 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2161 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack183 == 2 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2115 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack182 == 2 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2120 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack181 == 2 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2125 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack180 == 3 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2161 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack178 == 2 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2135 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack206 == 2 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2020 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack205 == 2 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2025 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack204 == 2 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2030 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack203 <= 6 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2035 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack202 == 1 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2040 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack201 == 1 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2045 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack200 == 2 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2050 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack199 == 1 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2055 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack198 == 1 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2060 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack195 <= 2 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2067 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack193 == 2 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.DFSAdmin: void init()>() at line 2070 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack8 >= 1 goto exitCode = -1 at line 2007 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.DFSAdmin: int run(java.lang.String[])> has 6 units and 3 lines
2020-08-25 12:10:02 [INFO] - 	 -> v#34 = null AT LINE 2163 with ID [d676690f-9176]
2020-08-25 12:10:02 [INFO] - 	 -> $stack130 = <org.apache.hadoop.hdfs.tools.DFSAdmin: org.apache.commons.logging.Log LOG> AT LINE 2270 with ID [d676690f-9176]
2020-08-25 12:10:02 [INFO] - 	 -> $stack131 = interfaceinvoke $stack130.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 2270 with ID [d676690f-9176]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack131 == 0 goto return exitCode#35 AT LINE 2270 with ID [d676690f-9176]
2020-08-25 12:10:02 [INFO] - 	 -> $stack132 = <org.apache.hadoop.hdfs.tools.DFSAdmin: org.apache.commons.logging.Log LOG> AT LINE 2271 with ID [d676690f-9176]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack132.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Exception encountered:", v#34) AT LINE 2271 with ID [d676690f-9176]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = this.<org.apache.hadoop.yarn.server.nodemanager.security.NMTokenSecretManagerInNM: java.util.Map appToAppAttemptMap> at line 198 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.security.NMTokenSecretManagerInNM: void appFinished(org.apache.hadoop.yarn.api.records.ApplicationId)> has 5 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.nodemanager.security.NMTokenSecretManagerInNM: org.slf4j.Logger LOG> AT LINE 195 with ID [9c032b18-49b3]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing application attempts NMToken keys for application ") AT LINE 195 with ID [9c032b18-49b3]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 195 with ID [9c032b18-49b3]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 195 with ID [9c032b18-49b3]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 195 with ID [9c032b18-49b3]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.policy.OrderingPolicy getPendingAppsOrderingPolicy()>() at line 785 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: void activateApplications()> has 41 units and 3 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack161 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack162 = virtualinvoke $stack160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("application ") AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack163 = virtualinvoke nodePartition#14.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: java.lang.String getId()>() AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack164 = virtualinvoke $stack162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack163) AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack165 = virtualinvoke $stack164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AMResource ") AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack166 = virtualinvoke nodePartition#14.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.api.records.Resource getAMResource(java.lang.String)>(partitionName) AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack167 = virtualinvoke $stack165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack166) AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack168 = virtualinvoke $stack167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxAMResourcePerQueuePercent ") AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack169 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: float maxAMResourcePerQueuePercent> AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack170 = virtualinvoke $stack168.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack169) AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack171 = virtualinvoke $stack170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" amLimit ") AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack172 = virtualinvoke $stack171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(amLimit) AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack173 = virtualinvoke $stack172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastClusterResource ") AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack174 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.api.records.Resource lastClusterResource> AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack175 = virtualinvoke $stack173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack174) AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack176 = virtualinvoke $stack175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" amIfStarted ") AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack177 = virtualinvoke $stack176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(amIfStarted) AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack178 = virtualinvoke $stack177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AM node-partition name ") AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack179 = virtualinvoke $stack178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(partitionName) AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack180 = virtualinvoke $stack179.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack161.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack180) AT LINE 810 with ID [1f0f199b-4a5b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack151 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 831 with ID [63f1f817-30dc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack152 = virtualinvoke $stack150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not activating application ") AT LINE 831 with ID [63f1f817-30dc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack153 = virtualinvoke $stack152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationId) AT LINE 831 with ID [63f1f817-30dc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack154 = virtualinvoke $stack153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as  amIfStarted: ") AT LINE 831 with ID [63f1f817-30dc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack155 = virtualinvoke $stack154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(amIfStarted) AT LINE 831 with ID [63f1f817-30dc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack156 = virtualinvoke $stack155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeds amLimit: ") AT LINE 831 with ID [63f1f817-30dc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack157 = virtualinvoke $stack156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(amLimit) AT LINE 831 with ID [63f1f817-30dc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack158 = virtualinvoke $stack157.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 831 with ID [63f1f817-30dc]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack151.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack158) AT LINE 831 with ID [63f1f817-30dc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack111 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 867 with ID [f9a72dc4-5ba2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack112 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not activating application ") AT LINE 867 with ID [f9a72dc4-5ba2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack113 = virtualinvoke $stack112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationId) AT LINE 867 with ID [f9a72dc4-5ba2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack114 = virtualinvoke $stack113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user: ") AT LINE 867 with ID [f9a72dc4-5ba2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack115 = virtualinvoke $stack114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(user) AT LINE 867 with ID [f9a72dc4-5ba2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack116 = virtualinvoke $stack115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as userAmIfStarted: ") AT LINE 867 with ID [f9a72dc4-5ba2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack117 = virtualinvoke $stack116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(userAmIfStarted) AT LINE 867 with ID [f9a72dc4-5ba2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack118 = virtualinvoke $stack117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeds userAmLimit: ") AT LINE 867 with ID [f9a72dc4-5ba2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack119 = virtualinvoke $stack118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(userAMLimit) AT LINE 867 with ID [f9a72dc4-5ba2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack120 = virtualinvoke $stack119.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 867 with ID [f9a72dc4-5ba2]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack111.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack120) AT LINE 867 with ID [f9a72dc4-5ba2]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: void interruptAndJoin()> has 2 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: org.slf4j.Logger LOG> AT LINE 374 with ID [0d8d4785-3979]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>("Wait for lease checker to terminate") AT LINE 374 with ID [0d8d4785-3979]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.mapred.ResourceMgrDelegate: java.lang.String getStagingAreaDir()> has 5 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack8 = <org.apache.hadoop.mapred.ResourceMgrDelegate: org.apache.commons.logging.Log LOG> AT LINE 255 with ID [91c107e2-1695]
2020-08-25 12:10:02 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getStagingAreaDir: dir=") AT LINE 255 with ID [91c107e2-1695]
2020-08-25 12:10:02 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(path) AT LINE 255 with ID [91c107e2-1695]
2020-08-25 12:10:02 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 255 with ID [91c107e2-1695]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 255 with ID [91c107e2-1695]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack10 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() at line 1340 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack18 == 0 goto $stack19 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>() at line 1335 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = cause instanceof java.io.IOException at line 1331 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.mapred.ShuffleHandler$Shuffle: void exceptionCaught(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ExceptionEvent)> has 4 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() AT LINE 1336 with ID [b656855c-90a0]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack28.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Ignoring closed channel error", cause) AT LINE 1336 with ID [b656855c-90a0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() AT LINE 1341 with ID [ecc275a7-e880]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Ignoring client socket close", cause) AT LINE 1341 with ID [ecc275a7-e880]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: void markContainerForPreemption(org.apache.hadoop.yarn.api.records.ApplicationAttemptId,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer)> has 11 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1785 with ID [f7ff6d6a-76cb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack10 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEventType: org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEventType MARK_CONTAINER_FOR_PREEMPTION> AT LINE 1785 with ID [f7ff6d6a-76cb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack11 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10) AT LINE 1785 with ID [f7ff6d6a-76cb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": appAttempt:") AT LINE 1785 with ID [f7ff6d6a-76cb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack13 = virtualinvoke aid.<org.apache.hadoop.yarn.api.records.ApplicationAttemptId: java.lang.String toString()>() AT LINE 1785 with ID [f7ff6d6a-76cb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13) AT LINE 1785 with ID [f7ff6d6a-76cb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" container: ") AT LINE 1785 with ID [f7ff6d6a-76cb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = virtualinvoke cont.<java.lang.Object: java.lang.String toString()>() AT LINE 1785 with ID [f7ff6d6a-76cb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16) AT LINE 1785 with ID [f7ff6d6a-76cb]
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1785 with ID [f7ff6d6a-76cb]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 1785 with ID [f7ff6d6a-76cb]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: void printChildQueues()> has 9 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack4 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.commons.logging.Log LOG> AT LINE 787 with ID [02e04655-ebb9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("printChildQueues - queue: ") AT LINE 787 with ID [02e04655-ebb9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack6 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: java.lang.String getQueuePath()>() AT LINE 787 with ID [02e04655-ebb9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6) AT LINE 787 with ID [02e04655-ebb9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" child-queues: ") AT LINE 787 with ID [02e04655-ebb9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack9 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: java.lang.String getChildQueuesToPrint()>() AT LINE 787 with ID [02e04655-ebb9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9) AT LINE 787 with ID [02e04655-ebb9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 787 with ID [02e04655-ebb9]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 787 with ID [02e04655-ebb9]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.io.TestSequenceFile: void sortTest(org.apache.hadoop.fs.FileSystem,int,int,int,boolean,org.apache.hadoop.fs.Path)> has 6 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = <org.apache.hadoop.io.TestSequenceFile: org.slf4j.Logger LOG> AT LINE 284 with ID [686171ce-f30a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sorting ") AT LINE 284 with ID [686171ce-f30a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 284 with ID [686171ce-f30a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" records") AT LINE 284 with ID [686171ce-f30a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 284 with ID [686171ce-f30a]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 284 with ID [686171ce-f30a]
2020-08-25 12:10:02 [WARN] - No overhead is found at method <org.apache.hadoop.security.KDiag: void printDefaultRealm()>
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS checkCommit(org.apache.hadoop.hdfs.DFSClient,long,org.jboss.netty.channel.Channel,int,org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes,boolean)> has 6 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 816 with ID [5c3f4930-f6af]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got commit status: ") AT LINE 816 with ID [5c3f4930-f6af]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke ret.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS: java.lang.String name()>() AT LINE 816 with ID [5c3f4930-f6af]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 816 with ID [5c3f4930-f6af]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 816 with ID [5c3f4930-f6af]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 816 with ID [5c3f4930-f6af]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: java.io.File moveBlockFiles(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi,org.apache.hadoop.hdfs.protocol.Block,java.io.File,java.io.File)> has 11 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 926 with ID [da826d13-93de]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addFinalizedBlock: Moved ") AT LINE 926 with ID [da826d13-93de]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcmeta) AT LINE 926 with ID [da826d13-93de]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 926 with ID [da826d13-93de]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dstmeta) AT LINE 926 with ID [da826d13-93de]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") AT LINE 926 with ID [da826d13-93de]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcfile) AT LINE 926 with ID [da826d13-93de]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 926 with ID [da826d13-93de]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dstfile) AT LINE 926 with ID [da826d13-93de]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 926 with ID [da826d13-93de]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String)>($stack30) AT LINE 926 with ID [da826d13-93de]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if bytesToRead != 0 goto return bytesToRead at line 333 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack44 == 0 goto this.<org.apache.hadoop.hdfs.client.impl.BlockReaderRemote: boolean eos> = 1 at line 326 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack47 >= 0 goto this.<org.apache.hadoop.hdfs.client.impl.BlockReaderRemote: long lastChunkOffset> = chunkOffset at line 326 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack66 >= $stack65 goto $stack57 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderRemote: java.io.DataInputStream in> at line 307 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack78 >= $stack80 goto $stack56 = <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote: boolean $assertionsDisabled> at line 307 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if bytesToRead <= len goto $stack55 = <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote: boolean $assertionsDisabled> at line 301 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack103 == 0 goto $stack23 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderRemote: int checksumSize> at line 274 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack105 != null goto $stack22 = <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote: boolean $assertionsDisabled> at line 274 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if len >= $stack107 goto $stack21 = <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote: boolean $assertionsDisabled> at line 269 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack113 != 0 goto $stack114 = virtualinvoke header.<org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader: long getSeqno()>() at line 252 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack18 == 0 goto $stack19 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderRemote: int dataLeft> at line 238 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack13 == 0 goto chunkOffset = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderRemote: long lastChunkOffset> at line 223 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote: int readChunkImpl(long,byte[],int,int,byte[])> has 2 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack111 = <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote: org.slf4j.Logger LOG> AT LINE 249 with ID [3851a0d3-2c62]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack111.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("DFSClient readChunk got header {}", header) AT LINE 249 with ID [3851a0d3-2c62]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.CuratorService: void zkDelete(java.lang.String,boolean,org.apache.curator.framework.api.BackgroundCallback)> has 5 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack7 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 666 with ID [4ddc4592-e9c0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack8 = interfaceinvoke $stack7.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 666 with ID [4ddc4592-e9c0]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack8 == 0 goto $stack9 = this.<org.apache.hadoop.registry.client.impl.zk.CuratorService: org.apache.curator.framework.CuratorFramework curator> AT LINE 666 with ID [4ddc4592-e9c0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 667 with ID [4ddc4592-e9c0]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Deleting {}", fullpath) AT LINE 667 with ID [4ddc4592-e9c0]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack7 == 0 goto return at line 813 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.conf.Configuration: void reloadExistingConfigurations()> has 9 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack11 = <org.apache.hadoop.conf.Configuration: org.slf4j.Logger LOG> AT LINE 810 with ID [410b4882-e766]
2020-08-25 12:10:02 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reloading ") AT LINE 810 with ID [410b4882-e766]
2020-08-25 12:10:02 [INFO] - 	 -> $stack13 = <org.apache.hadoop.conf.Configuration: java.util.WeakHashMap REGISTRY> AT LINE 810 with ID [410b4882-e766]
2020-08-25 12:10:02 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.util.WeakHashMap: java.util.Set keySet()>() AT LINE 810 with ID [410b4882-e766]
2020-08-25 12:10:02 [INFO] - 	 -> $stack15 = interfaceinvoke $stack14.<java.util.Set: int size()>() AT LINE 810 with ID [410b4882-e766]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15) AT LINE 810 with ID [410b4882-e766]
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" existing configurations") AT LINE 810 with ID [410b4882-e766]
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 810 with ID [410b4882-e766]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 810 with ID [410b4882-e766]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: void <init>(org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerContext,java.lang.String,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSQueue,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSQueue)> has 8 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 164 with ID [ef4657d1-1efd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LeafQueue: name=") AT LINE 164 with ID [ef4657d1-1efd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(queueName) AT LINE 164 with ID [ef4657d1-1efd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", fullname=") AT LINE 164 with ID [ef4657d1-1efd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: java.lang.String getQueuePath()>() AT LINE 164 with ID [ef4657d1-1efd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 164 with ID [ef4657d1-1efd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 164 with ID [ef4657d1-1efd]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 164 with ID [ef4657d1-1efd]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack75 != 0 goto $stack23 = virtualinvoke childNodeStatus.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() at line 359 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 359 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore: void loadRMDTSecretManagerState(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState)> has 16 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack63 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 381 with ID [878ac592-acd7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack64 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded delegation key: keyId=") AT LINE 381 with ID [878ac592-acd7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack65 = virtualinvoke key.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 381 with ID [878ac592-acd7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack66 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack65) AT LINE 381 with ID [878ac592-acd7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expirationDate=") AT LINE 381 with ID [878ac592-acd7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack68 = virtualinvoke key.<org.apache.hadoop.security.token.delegation.DelegationKey: long getExpiryDate()>() AT LINE 381 with ID [878ac592-acd7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack68) AT LINE 381 with ID [878ac592-acd7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 381 with ID [878ac592-acd7]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack63.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack70) AT LINE 381 with ID [878ac592-acd7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack50 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 395 with ID [48486004-bd62]
2020-08-25 12:10:02 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded RMDelegationTokenIdentifier: ") AT LINE 395 with ID [48486004-bd62]
2020-08-25 12:10:02 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(identifier) AT LINE 395 with ID [48486004-bd62]
2020-08-25 12:10:02 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" renewDate=") AT LINE 395 with ID [48486004-bd62]
2020-08-25 12:10:02 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(renewDate) AT LINE 395 with ID [48486004-bd62]
2020-08-25 12:10:02 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 395 with ID [48486004-bd62]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack50.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack55) AT LINE 395 with ID [48486004-bd62]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack14 > 0 goto this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: long curMinute> = newMinute at line 337 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack12 != 0 goto $stack13 = this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: long curMinute> at line 332 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: void expireOldScannedBytesRecords(long)> has 13 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 339 with ID [f1d16d2c-ec54]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = newarray (java.lang.Object)[4] AT LINE 339 with ID [f1d16d2c-ec54]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16[0] = this AT LINE 339 with ID [f1d16d2c-ec54]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(slotIdx) AT LINE 339 with ID [f1d16d2c-ec54]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16[1] = $stack20 AT LINE 339 with ID [f1d16d2c-ec54]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: long curMinute> AT LINE 339 with ID [f1d16d2c-ec54]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack21) AT LINE 339 with ID [f1d16d2c-ec54]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16[2] = $stack23 AT LINE 339 with ID [f1d16d2c-ec54]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(newMinute) AT LINE 339 with ID [f1d16d2c-ec54]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16[3] = $stack25 AT LINE 339 with ID [f1d16d2c-ec54]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("{}: updateScannedBytes is zeroing out slotIdx {}.  curMinute = {}; newMinute = {}", $stack16) AT LINE 339 with ID [f1d16d2c-ec54]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: long[] scannedBytes> AT LINE 343 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> $stack30[slotIdx] = 0L AT LINE 343 with ID []
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack47 == 0 goto (branch) at line 413 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack25 <= olderThanAge goto (branch) at line 397 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if p == null goto (branch) at line 392 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = total cmp 0L at line 391 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack30 == 0 goto (branch) at line 420 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: long getSmapBasedRssMemorySize(int)> has 20 units and 3 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack49 = <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: org.apache.commons.logging.Log LOG> AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total(") AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(olderThanAge) AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): PID : ") AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack53 = virtualinvoke p.<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree$ProcessInfo: java.lang.String getPid()>() AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack53) AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", info : ") AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack56 = virtualinvoke info.<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree$ProcessSmapMemoryInfo: java.lang.String toString()>() AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack56) AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", total : ") AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack59 = total * 1024L AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack59) AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack49.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack61) AT LINE 414 with ID [5dfef005-59ff]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: org.apache.commons.logging.Log LOG> AT LINE 420 with ID [9883ab73-7640]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = interfaceinvoke $stack29.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 420 with ID [9883ab73-7640]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack30 == 0 goto (branch) AT LINE 420 with ID [9883ab73-7640]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: org.apache.commons.logging.Log LOG> AT LINE 421 with ID [9883ab73-7640]
2020-08-25 12:10:02 [INFO] - 	 -> $stack32 = virtualinvoke procMemInfo.<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree$ProcessTreeSmapMemInfo: java.lang.String toString()>() AT LINE 421 with ID [9883ab73-7640]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 421 with ID [9883ab73-7640]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack20 == 0 goto return at line 127 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.loghandler.NonAggregatingLogHandler: void recover()> has 8 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.loghandler.NonAggregatingLogHandler: org.slf4j.Logger LOG> AT LINE 132 with ID [c425e09d-8a31]
2020-08-25 12:10:02 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling deletion of ") AT LINE 132 with ID [c425e09d-8a31]
2020-08-25 12:10:02 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 132 with ID [c425e09d-8a31]
2020-08-25 12:10:02 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" logs in ") AT LINE 132 with ID [c425e09d-8a31]
2020-08-25 12:10:02 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(deleteDelayMsec) AT LINE 132 with ID [c425e09d-8a31]
2020-08-25 12:10:02 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec") AT LINE 132 with ID [c425e09d-8a31]
2020-08-25 12:10:02 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 132 with ID [c425e09d-8a31]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String)>($stack40) AT LINE 132 with ID [c425e09d-8a31]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.fs.contract.AbstractFSContractTestBase: void setup()> has 4 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack2 = <org.apache.hadoop.fs.contract.AbstractFSContractTestBase: org.slf4j.Logger LOG> AT LINE 175 with ID [452ef0b1-6993]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String)>("== Setup ==") AT LINE 175 with ID [452ef0b1-6993]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = <org.apache.hadoop.fs.contract.AbstractFSContractTestBase: org.slf4j.Logger LOG> AT LINE 194 with ID [9dd12a98-e751]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>("== Setup complete ==") AT LINE 194 with ID [9dd12a98-e751]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testRBWReplicas()> has 6 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 431 with ID [5e97697c-24aa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 431 with ID [5e97697c-24aa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 431 with ID [5e97697c-24aa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27) AT LINE 431 with ID [5e97697c-24aa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 431 with ID [5e97697c-24aa]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 431 with ID [5e97697c-24aa]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack12 == 0 goto <org.apache.hadoop.fs.FileSystem: boolean FILE_SYSTEMS_LOADED> = 1 at line 3153 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.fs.FileSystem: void loadFileSystems()> has 15 units and 3 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack7 = <org.apache.hadoop.fs.FileSystem: org.slf4j.Logger LOGGER> AT LINE 3148 with ID [ce4bd389-e735]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>("Loading filesystems") AT LINE 3148 with ID [ce4bd389-e735]
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = <org.apache.hadoop.fs.FileSystem: org.slf4j.Logger LOGGER> AT LINE 3159 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = interfaceinvoke $stack18.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 3159 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack19 == 0 goto (branch) AT LINE 3159 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = <org.apache.hadoop.fs.FileSystem: org.slf4j.Logger LOGGER> AT LINE 3160 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = newarray (java.lang.Object)[3] AT LINE 3160 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke fs.<org.apache.hadoop.fs.FileSystem: java.lang.String getScheme()>() AT LINE 3160 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21[0] = $stack25 AT LINE 3160 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = virtualinvoke fs.<java.lang.Object: java.lang.Class getClass()>() AT LINE 3160 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21[1] = $stack27 AT LINE 3160 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke fs.<java.lang.Object: java.lang.Class getClass()>() AT LINE 3160 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = staticinvoke <org.apache.hadoop.util.ClassUtil: java.lang.String findContainingJar(java.lang.Class)>($stack29) AT LINE 3160 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21[2] = $stack30 AT LINE 3160 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("{}:// = {} from {}", $stack21) AT LINE 3160 with ID [71e8ecc7-a3cc]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.apache.hadoop.yarn.server.timeline.TimelineStore getCachedStore(org.apache.hadoop.yarn.api.records.timeline.TimelineEntityGroupId,java.util.List)> has 8 units and 4 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 1008 with ID [cad16640-c44b]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Set up new cache item for id {}", groupId) AT LINE 1008 with ID [cad16640-c44b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 1012 with ID [f6e6f90f-a73d]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Set applogs {} for group id {}", appLogs, groupId) AT LINE 1012 with ID [f6e6f90f-a73d]
2020-08-25 12:10:02 [INFO] - 	 -> appLogs = virtualinvoke cacheItem.<org.apache.hadoop.yarn.server.timeline.EntityCacheItem: org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs getAppLogs()>() AT LINE 1022 with ID [aa380f6b-9052]
2020-08-25 12:10:02 [INFO] - 	 -> $stack14 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 1023 with ID [aa380f6b-9052]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = virtualinvoke appLogs.<org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs: org.apache.hadoop.yarn.api.records.ApplicationId getAppId()>() AT LINE 1023 with ID [aa380f6b-9052]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("try refresh cache {} {}", groupId, $stack16) AT LINE 1023 with ID [aa380f6b-9052]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if hostname#20 == null goto $stack27 = new org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor at line 985 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack12 != 0 goto $stack14 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> at line 964 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack123 != 0 goto virtualinvoke nodeReg.<org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration: void setIpAddr(java.lang.String)>(ip) at line 964 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void registerDatanode(org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration)> has 6 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack101 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 990 with ID [814cf105-25e5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack102 = interfaceinvoke $stack101.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 990 with ID [814cf105-25e5]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack102 == 0 goto message#26 = 0 AT LINE 990 with ID [814cf105-25e5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack108 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 991 with ID [814cf105-25e5]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack108.<org.slf4j.Logger: void debug(java.lang.String)>("BLOCK* registerDatanode: node restarted.") AT LINE 991 with ID [814cf105-25e5]
2020-08-25 12:10:02 [INFO] - 	 -> goto [?= message#26 = 0] AT LINE 991 with ID [814cf105-25e5]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack25 == 0 goto (branch) at line 1334 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if segmentOpen == 0 goto (branch) at line 1358 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNode: void copyEditLogSegmentsToSharedDir(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.util.Collection,org.apache.hadoop.hdfs.server.namenode.NNStorage,org.apache.hadoop.conf.Configuration)> has 21 units and 4 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger LOG> AT LINE 1335 with ID [843a8c4b-3b44]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning to copy stream ") AT LINE 1335 with ID [843a8c4b-3b44]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(stream) AT LINE 1335 with ID [843a8c4b-3b44]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to shared edits") AT LINE 1335 with ID [843a8c4b-3b44]
2020-08-25 12:10:02 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1335 with ID [843a8c4b-3b44]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String)>($stack32) AT LINE 1335 with ID [843a8c4b-3b44]
2020-08-25 12:10:02 [INFO] - 	 -> $stack57 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger LOG> AT LINE 1340 with ID [55be9767-4352]
2020-08-25 12:10:02 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("copying op: ") AT LINE 1340 with ID [55be9767-4352]
2020-08-25 12:10:02 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(op) AT LINE 1340 with ID [55be9767-4352]
2020-08-25 12:10:02 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1340 with ID [55be9767-4352]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack57.<org.slf4j.Logger: void trace(java.lang.String)>($stack60) AT LINE 1340 with ID [55be9767-4352]
2020-08-25 12:10:02 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger LOG> AT LINE 1352 with ID [d8648475-525c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ending log segment because of END_LOG_SEGMENT op in ") AT LINE 1352 with ID [d8648475-525c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(stream) AT LINE 1352 with ID [d8648475-525c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1352 with ID [d8648475-525c]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String)>($stack49) AT LINE 1352 with ID [d8648475-525c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack36 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger LOG> AT LINE 1359 with ID [1f28f103-2777]
2020-08-25 12:10:02 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ending log segment because of end of stream in ") AT LINE 1359 with ID [1f28f103-2777]
2020-08-25 12:10:02 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(stream) AT LINE 1359 with ID [1f28f103-2777]
2020-08-25 12:10:02 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1359 with ID [1f28f103-2777]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void debug(java.lang.String)>($stack39) AT LINE 1359 with ID [1f28f103-2777]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: void removePendingChangeRequests(java.util.List)> has 15 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = <org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: org.apache.commons.logging.Log LOG> AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RM has confirmed changed resource allocation for container ") AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Current resource allocation:") AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = virtualinvoke changedContainer.<org.apache.hadoop.yarn.api.records.UpdatedContainer: org.apache.hadoop.yarn.api.records.Container getContainer()>() AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.Resource getResource()>() AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack23) AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Remove pending change request:") AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = this.<org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: java.util.Map pendingChange> AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = interfaceinvoke $stack26.<java.util.Map: java.lang.Object get(java.lang.Object)>(containerId) AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = (java.util.AbstractMap$SimpleEntry) $stack27 AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>() AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack29) AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack31) AT LINE 447 with ID [ea5e69a7-d537]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if i >= 1000 goto $stack9 = new org.apache.hadoop.util.TestIdentityHashStore$6 at line 144 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if i >= 1000 goto $stack8 = new org.apache.hadoop.util.TestIdentityHashStore$5 at line 135 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if i >= 1000 goto i = 0 at line 132 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.util.TestIdentityHashStore: void testAdditionsAndRemovals()> has 2 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack6 = <org.apache.hadoop.util.TestIdentityHashStore: org.slf4j.Logger LOG> AT LINE 130 with ID [c333e79c-a58d]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>("generating 1000 keys") AT LINE 130 with ID [c333e79c-a58d]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void storeRMDelegationTokenState(org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier,java.lang.Long)> has 15 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack47 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 1037 with ID [daebd0d7-59b1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing RMDelegationToken_") AT LINE 1037 with ID [daebd0d7-59b1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack49 = virtualinvoke rmDTIdentifier.<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 1037 with ID [daebd0d7-59b1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack49) AT LINE 1037 with ID [daebd0d7-59b1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1037 with ID [daebd0d7-59b1]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack47.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack51) AT LINE 1037 with ID [daebd0d7-59b1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack32 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 1053 with ID [fe4bf2c2-e688]
2020-08-25 12:10:02 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing ") AT LINE 1053 with ID [fe4bf2c2-e688]
2020-08-25 12:10:02 [INFO] - 	 -> $stack34 = this.<org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: java.lang.String dtSequenceNumberPath> AT LINE 1053 with ID [fe4bf2c2-e688]
2020-08-25 12:10:02 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 1053 with ID [fe4bf2c2-e688]
2020-08-25 12:10:02 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". SequenceNumber: ") AT LINE 1053 with ID [fe4bf2c2-e688]
2020-08-25 12:10:02 [INFO] - 	 -> $stack37 = virtualinvoke rmDTIdentifier.<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 1053 with ID [fe4bf2c2-e688]
2020-08-25 12:10:02 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack37) AT LINE 1053 with ID [fe4bf2c2-e688]
2020-08-25 12:10:02 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1053 with ID [fe4bf2c2-e688]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack39) AT LINE 1053 with ID [fe4bf2c2-e688]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = virtualinvoke getStat.<org.apache.zookeeper.data.Stat: java.lang.String toString()>() at line 414 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void logRootNodeAcls(java.lang.String)> has 18 units and 10 lines
2020-08-25 12:10:02 [INFO] - 	 -> getStat = $stack7 AT LINE 408 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: java.lang.String zkRootNodePath> AT LINE 409 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> getAcls = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: java.util.List getACL(java.lang.String)>($stack8) AT LINE 409 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> builder = $stack10 AT LINE 411 with ID [695ead0e-25ca]
2020-08-25 12:10:02 [INFO] - 	 -> virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix) AT LINE 412 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> i$ = interfaceinvoke getAcls.<java.util.List: java.util.Iterator iterator()>() AT LINE 414 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> $stack13 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>() AT LINE 414 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> if $stack13 == 0 goto $stack14 = virtualinvoke getStat.<org.apache.zookeeper.data.Stat: java.lang.String toString()>() AT LINE 414 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 420 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> acl = (org.apache.zookeeper.data.ACL) $stack18 AT LINE 420 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = virtualinvoke acl.<org.apache.zookeeper.data.ACL: java.lang.String toString()>() AT LINE 415 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19) AT LINE 415 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> goto [?= $stack13 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] AT LINE 416 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> $stack14 = virtualinvoke getStat.<org.apache.zookeeper.data.Stat: java.lang.String toString()>() AT LINE 418 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 418 with ID []
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 419 with ID [695ead0e-25ca]
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 419 with ID [695ead0e-25ca]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack17) AT LINE 419 with ID [695ead0e-25ca]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack17 == 0 goto (branch) at line 130 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack9 == 0 goto return at line 126 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.security.AppPriorityACLsManager: void addPrioirityACLs(java.util.List,java.lang.String)> has 9 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.resourcemanager.security.AppPriorityACLsManager: org.apache.commons.logging.Log LOG> AT LINE 131 with ID [500e15c6-acf3]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Priority ACL group added: max-priority - ") AT LINE 131 with ID [500e15c6-acf3]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = virtualinvoke priorityACLGroup.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AppPriorityACLGroup: org.apache.hadoop.yarn.api.records.Priority getMaxPriority()>() AT LINE 131 with ID [500e15c6-acf3]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack22) AT LINE 131 with ID [500e15c6-acf3]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("default-priority - ") AT LINE 131 with ID [500e15c6-acf3]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke priorityACLGroup.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AppPriorityACLGroup: org.apache.hadoop.yarn.api.records.Priority getDefaultPriority()>() AT LINE 131 with ID [500e15c6-acf3]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack25) AT LINE 131 with ID [500e15c6-acf3]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 131 with ID [500e15c6-acf3]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 131 with ID [500e15c6-acf3]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse allocate(org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest)> has 2 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.slf4j.Logger LOG> AT LINE 528 with ID [6542316e-c9ae]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String)>("Received new AMRMToken") AT LINE 528 with ID [6542316e-c9ae]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack24 == 0 goto $stack25 = this.<org.apache.hadoop.mapreduce.JobResourceUploader: org.apache.hadoop.fs.FileSystem jtFs> at line 157 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.JobResourceUploader: void uploadResourcesInternal(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)> has 7 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = <org.apache.hadoop.mapreduce.JobResourceUploader: org.apache.commons.logging.Log LOG> AT LINE 156 with ID [cd3dd883-5b9b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("default FileSystem: ") AT LINE 156 with ID [cd3dd883-5b9b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = this.<org.apache.hadoop.mapreduce.JobResourceUploader: org.apache.hadoop.fs.FileSystem jtFs> AT LINE 156 with ID [cd3dd883-5b9b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<org.apache.hadoop.fs.FileSystem: java.net.URI getUri()>() AT LINE 156 with ID [cd3dd883-5b9b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack20) AT LINE 156 with ID [cd3dd883-5b9b]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 156 with ID [cd3dd883-5b9b]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 156 with ID [cd3dd883-5b9b]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack67 >= $stack68 goto $stack65 = virtualinvoke samples.<java.util.ArrayList: java.lang.Object[] toArray()>() at line 204 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if i >= $stack28 goto i = 0 at line 169 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.mapred.lib.InputSampler$RandomSampler: java.lang.Object[] getSample(org.apache.hadoop.mapred.InputFormat,org.apache.hadoop.mapred.JobConf)> has 5 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = staticinvoke <org.apache.hadoop.mapred.lib.InputSampler: org.apache.commons.logging.Log access$000()>() AT LINE 167 with ID [3831ab09-bca0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seed: ") AT LINE 167 with ID [3831ab09-bca0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(seed) AT LINE 167 with ID [3831ab09-bca0]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 167 with ID [3831ab09-bca0]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 167 with ID [3831ab09-bca0]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if tgt != null goto $stack29 = this.<org.apache.hadoop.security.UserGroupInformation$1: org.apache.hadoop.security.UserGroupInformation this$0> at line 1000 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if tgt != null goto $stack16 = this.<org.apache.hadoop.security.UserGroupInformation$1: org.apache.hadoop.security.UserGroupInformation this$0> at line 979 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.security.UserGroupInformation$1: void run()> has 15 units and 4 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack54 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 988 with ID [0935d21f-e08e]
2020-08-25 12:10:02 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current time is ") AT LINE 988 with ID [0935d21f-e08e]
2020-08-25 12:10:02 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(now) AT LINE 988 with ID [0935d21f-e08e]
2020-08-25 12:10:02 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 988 with ID [0935d21f-e08e]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack54.<org.slf4j.Logger: void debug(java.lang.String)>($stack57) AT LINE 988 with ID [0935d21f-e08e]
2020-08-25 12:10:02 [INFO] - 	 -> $stack59 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 989 with ID [6084540f-3519]
2020-08-25 12:10:02 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Next refresh is ") AT LINE 989 with ID [6084540f-3519]
2020-08-25 12:10:02 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(nextRefresh) AT LINE 989 with ID [6084540f-3519]
2020-08-25 12:10:02 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 989 with ID [6084540f-3519]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack59.<org.slf4j.Logger: void debug(java.lang.String)>($stack62) AT LINE 989 with ID [6084540f-3519]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 995 with ID [24ca777b-33a2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = interfaceinvoke $stack24.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 995 with ID [24ca777b-33a2]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack25 == 0 goto $stack26 = this.<org.apache.hadoop.security.UserGroupInformation$1: org.apache.hadoop.security.UserGroupInformation this$0> AT LINE 995 with ID [24ca777b-33a2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack43 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 996 with ID [24ca777b-33a2]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void debug(java.lang.String)>("renewed ticket") AT LINE 996 with ID [24ca777b-33a2]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack12 != 0 goto $stack13 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> at line 731 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: java.util.List loadCompletedResources(org.apache.hadoop.yarn.server.utils.LeveldbIterator,java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 736 with ID [16dea177-d472]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading completed resource from ") AT LINE 736 with ID [16dea177-d472]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 736 with ID [16dea177-d472]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 736 with ID [16dea177-d472]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 736 with ID [16dea177-d472]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack18 >= splits goto (branch) at line 140 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack7 == 0 goto (branch) at line 139 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.examples.terasort.TeraScheduler: org.apache.hadoop.examples.terasort.TeraScheduler$Host pickBestHost()> has 5 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack11 = <org.apache.hadoop.examples.terasort.TeraScheduler: org.slf4j.Logger LOG> AT LINE 147 with ID [3540b318-58a1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("picking ") AT LINE 147 with ID [3540b318-58a1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(result) AT LINE 147 with ID [3540b318-58a1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 147 with ID [3540b318-58a1]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 147 with ID [3540b318-58a1]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack26 == 0 goto $stack27 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType: org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType NODE_LOCAL> at line 304 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack22 != 0 goto $stack23 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: java.util.Map allowedLocalityLevel> at line 296 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack19 >= 0 goto $stack20 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock> at line 289 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType getAllowedLocalityLevel(org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,int,double,double)> has 28 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack74 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack75 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SchedulingOpportunities: ") AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(schedulingOpportunities) AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nodeLocalityThreshold: ") AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(thresholdNum) AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", change allowedLocality from NODE_LOCAL to RACK_LOCAL") AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", priority: ") AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack81 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack82 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack81) AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", app attempt id: ") AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack84 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId attemptId> AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack84) AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack74.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack86) AT LINE 318 with ID [4572219d-3b00]
2020-08-25 12:10:02 [INFO] - 	 -> $stack51 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SchedulingOpportunities: ") AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(schedulingOpportunities) AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rackLocalityThreshold: ") AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(thresholdNum) AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", change allowedLocality from RACK_LOCAL to OFF_SWITCH") AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", priority: ") AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack58 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack58) AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", app attempt id: ") AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack61 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId attemptId> AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack61) AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack51.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack63) AT LINE 328 with ID [c3b46859-b6a5]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack12 != 0 goto $stack2 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> at line 728 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector: void monitorActiveStatus()> has 5 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack5 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 724 with ID [17ed7a0a-fc6d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Monitoring active leader for ") AT LINE 724 with ID [17ed7a0a-fc6d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 724 with ID [17ed7a0a-fc6d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 724 with ID [17ed7a0a-fc6d]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>($stack8) AT LINE 724 with ID [17ed7a0a-fc6d]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.metrics.ganglia.GangliaContext31: void init(java.lang.String,org.apache.hadoop.metrics.ContextFactory)> has 2 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack5 = <org.apache.hadoop.metrics.ganglia.GangliaContext31: org.slf4j.Logger LOG> AT LINE 51 with ID [e9ee4a47-7bb1]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>("Initializing the GangliaContext31 for Ganglia 3.1 metrics.") AT LINE 51 with ID [e9ee4a47-7bb1]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 62 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = this.<org.apache.hadoop.metrics2.lib.MutableRates: java.util.Set protocolCache> at line 60 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.lib.MutableRates: void init(java.lang.Class)> has 2 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack14 = <org.apache.hadoop.metrics2.lib.MutableRates: org.slf4j.Logger LOG> AT LINE 64 with ID [c95020db-bacb]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>(name) AT LINE 64 with ID [c95020db-bacb]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void storeContainerQueued(org.apache.hadoop.yarn.api.records.ContainerId)> has 5 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 362 with ID [32002df6-63d4]
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storeContainerQueued: containerId=") AT LINE 362 with ID [32002df6-63d4]
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 362 with ID [32002df6-63d4]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 362 with ID [32002df6-63d4]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 362 with ID [32002df6-63d4]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack10 == nestLevel goto $stack11 = virtualinvoke this.<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.yarn.webapp.View$ViewContext context()>() at line 70 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.webapp.view.HtmlBlock: void render()> has 4 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack4 = <org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.slf4j.Logger LOG> AT LINE 68 with ID [619b8ede-46db]
2020-08-25 12:10:02 [INFO] - 	 -> $stack6 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() AT LINE 68 with ID [619b8ede-46db]
2020-08-25 12:10:02 [INFO] - 	 -> $stack7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(nestLevel) AT LINE 68 with ID [619b8ede-46db]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Rendering {} @{}", $stack6, $stack7) AT LINE 68 with ID [619b8ede-46db]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack28 == null goto i#8 = virtualinvoke inodesInPath.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>() at line 192 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker: void checkPermission(org.apache.hadoop.hdfs.server.namenode.INodesInPath,boolean,org.apache.hadoop.fs.permission.FsAction,org.apache.hadoop.fs.permission.FsAction,org.apache.hadoop.fs.permission.FsAction,org.apache.hadoop.fs.permission.FsAction,boolean)> has 17 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack55 = <org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker: org.apache.commons.logging.Log LOG> AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACCESS CHECK: ") AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", doCheckOwner=") AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(doCheckOwner) AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ancestorAccess=") AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(ancestorAccess) AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", parentAccess=") AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(parentAccess) AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", access=") AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(access) AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", subAccess=") AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(subAccess) AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ignoreEmptyDir=") AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(ignoreEmptyDir) AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack55.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack70) AT LINE 167 with ID [386dd6ed-fa3a]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testFinalizedReplicas()> has 6 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 309 with ID [bea11db9-bd8d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 309 with ID [bea11db9-bd8d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 309 with ID [bea11db9-bd8d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 309 with ID [bea11db9-bd8d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 309 with ID [bea11db9-bd8d]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack31) AT LINE 309 with ID [bea11db9-bd8d]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if i$#9 >= len$ goto (branch) at line 940 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack19 == 0 goto $stack20 = this.<org.apache.hadoop.hdfs.DFSClient: org.apache.htrace.core.Tracer tracer> at line 939 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = new java.util.LinkedHashMap at line 926 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack61 != 0 goto hdfsLoc = (org.apache.hadoop.fs.HdfsBlockLocation) loc at line 927 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = new java.util.ArrayList at line 919 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSClient: org.apache.hadoop.fs.BlockStorageLocation[] getBlockStorageLocations(java.util.List)> has 8 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack37 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 960 with ID [660c7e18-1bf8]
2020-08-25 12:10:02 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("metadata returned: ") AT LINE 960 with ID [660c7e18-1bf8]
2020-08-25 12:10:02 [INFO] - 	 -> $stack39 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>("\n") AT LINE 960 with ID [660c7e18-1bf8]
2020-08-25 12:10:02 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<com.google.common.base.Joiner: com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String)>("=") AT LINE 960 with ID [660c7e18-1bf8]
2020-08-25 12:10:02 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<com.google.common.base.Joiner$MapJoiner: java.lang.String join(java.util.Map)>(hdfsLoc#11) AT LINE 960 with ID [660c7e18-1bf8]
2020-08-25 12:10:02 [INFO] - 	 -> $stack42 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack41) AT LINE 960 with ID [660c7e18-1bf8]
2020-08-25 12:10:02 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 960 with ID [660c7e18-1bf8]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack37.<org.slf4j.Logger: void trace(java.lang.String)>($stack43) AT LINE 960 with ID [660c7e18-1bf8]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> at line 1123 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Client$Connection$3: void run()> has 14 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.ipc.Client$Connection$3: org.apache.hadoop.ipc.Client$Connection this$1> AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<org.apache.hadoop.ipc.Client$Connection: java.lang.String getName()>() AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sending #") AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = this.<org.apache.hadoop.ipc.Client$Connection$3: org.apache.hadoop.ipc.Client$Call val$call> AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = $stack26.<org.apache.hadoop.ipc.Client$Call: int id> AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack27) AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.ipc.Client$Connection$3: org.apache.hadoop.ipc.Client$Call val$call> AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = $stack30.<org.apache.hadoop.ipc.Client$Call: org.apache.hadoop.io.Writable rpcRequest> AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> $stack32 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31) AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String)>($stack33) AT LINE 1127 with ID [0765a0ae-0739]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack17 == 0 goto return at line 523 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testRecoveryInProgressException()> has 6 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 518 with ID [830f2759-050a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 518 with ID [830f2759-050a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 518 with ID [830f2759-050a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31) AT LINE 518 with ID [830f2759-050a]
2020-08-25 12:10:02 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 518 with ID [830f2759-050a]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack33) AT LINE 518 with ID [830f2759-050a]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if cached == null goto local = staticinvoke <org.apache.hadoop.net.NetUtils: boolean isLocalAddress(java.net.InetAddress)>(addr) at line 489 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSUtilClient: boolean isLocalAddress(java.net.InetSocketAddress)> has 13 units and 4 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.DFSUtilClient: org.slf4j.Logger LOG> AT LINE 490 with ID [7421845f-b152]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = virtualinvoke cached.<java.lang.Boolean: boolean booleanValue()>() AT LINE 490 with ID [7421845f-b152]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack22 == 0 goto $stack25 = "not" AT LINE 490 with ID [7421845f-b152]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = "" AT LINE 491 with ID [7421845f-b152]
2020-08-25 12:10:02 [INFO] - 	 -> goto [?= interfaceinvoke $stack20.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Address {} is {} local", targetAddr, $stack25)] AT LINE 491 with ID [7421845f-b152]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = "not" AT LINE 491 with ID [7421845f-b152]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Address {} is {} local", targetAddr, $stack25) AT LINE 490 with ID [7421845f-b152]
2020-08-25 12:10:02 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.DFSUtilClient: org.slf4j.Logger LOG> AT LINE 496 with ID [660e8c3a-b124]
2020-08-25 12:10:02 [INFO] - 	 -> if local == 0 goto $stack16 = "not" AT LINE 496 with ID [660e8c3a-b124]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = "" AT LINE 498 with ID [660e8c3a-b124]
2020-08-25 12:10:02 [INFO] - 	 -> goto [?= interfaceinvoke $stack9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Address {} is {} local", targetAddr, $stack16)] AT LINE 498 with ID [660e8c3a-b124]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = "not" AT LINE 498 with ID [660e8c3a-b124]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Address {} is {} local", targetAddr, $stack16) AT LINE 496 with ID [660e8c3a-b124]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: java.lang.String[] getGroupsForUser(java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.slf4j.Logger LOG> AT LINE 1632 with ID [276cd8f3-4b0d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting groups for user ") AT LINE 1632 with ID [276cd8f3-4b0d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 1632 with ID [276cd8f3-4b0d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1632 with ID [276cd8f3-4b0d]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack10) AT LINE 1632 with ID [276cd8f3-4b0d]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack11 == null goto $stack12 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> at line 259 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack11 = this.<org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.apache.hadoop.security.SaslPropertiesResolver saslPropsResolver> at line 263 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = this.<org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: java.util.concurrent.atomic.AtomicBoolean fallbackToSimpleAuth> at line 247 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack7 != 0 goto $stack8 = virtualinvoke datanodeId.<org.apache.hadoop.hdfs.protocol.DatanodeID: int getXferPort()>() at line 243 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if encryptionKey == null goto $stack7 = staticinvoke <org.apache.hadoop.security.UserGroupInformation: boolean isSecurityEnabled()>() at line 238 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair send(java.net.InetAddress,java.io.OutputStream,java.io.InputStream,org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey,org.apache.hadoop.security.token.Token,org.apache.hadoop.hdfs.protocol.DatanodeID)> has 12 units and 6 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> AT LINE 239 with ID [2f02400c-1cb5]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("SASL client doing encrypted handshake for addr = {}, datanodeId = {}", addr, datanodeId) AT LINE 239 with ID [2f02400c-1cb5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> AT LINE 244 with ID [2919b036-92b7]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("SASL client skipping handshake in unsecured configuration for addr = {}, datanodeId = {}", addr, datanodeId) AT LINE 244 with ID [2919b036-92b7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> AT LINE 248 with ID [b41b91ba-6189]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("SASL client skipping handshake in secured configuration with privileged port for addr = {}, datanodeId = {}", addr, datanodeId) AT LINE 248 with ID [b41b91ba-6189]
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> AT LINE 254 with ID [48b76536-b4de]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("SASL client skipping handshake in secured configuration with unsecured cluster for addr = {}, datanodeId = {}", addr, datanodeId) AT LINE 254 with ID [48b76536-b4de]
2020-08-25 12:10:02 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> AT LINE 260 with ID [5eb2f205-20bc]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("SASL client doing general handshake for addr = {}, datanodeId = {}", addr, datanodeId) AT LINE 260 with ID [5eb2f205-20bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> AT LINE 268 with ID [3f96b932-2cf5]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("SASL client skipping handshake in secured configuration with no SASL protection configured for addr = {}, datanodeId = {}", addr, datanodeId) AT LINE 268 with ID [3f96b932-2cf5]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: boolean completeFile(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.lang.String,org.apache.hadoop.hdfs.protocol.ExtendedBlock,long)> has 7 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 596 with ID [480c828f-9255]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.completeFile: ") AT LINE 596 with ID [480c828f-9255]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 596 with ID [480c828f-9255]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 596 with ID [480c828f-9255]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(holder) AT LINE 596 with ID [480c828f-9255]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 596 with ID [480c828f-9255]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String)>($stack30) AT LINE 596 with ID [480c828f-9255]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack13 == 0 goto mostAvailableAmongLowVolumes = virtualinvoke volumesWithSpaces.<org.apache.hadoop.hdfs.server.datanode.fsdataset.AvailableSpaceVolumeChoosingPolicy$AvailableSpaceVolumeList: long getMostAvailableSpaceAmongVolumesWithLowAvailableSpace()>() at line 137 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.AvailableSpaceVolumeChoosingPolicy: org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi doChooseVolume(java.util.List,long)> has 21 units and 3 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack67 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.AvailableSpaceVolumeChoosingPolicy: org.apache.commons.logging.Log LOG> AT LINE 142 with ID [ff44a5a6-32cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("All volumes are within the configured free space balance threshold. Selecting ") AT LINE 142 with ID [ff44a5a6-32cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(volume) AT LINE 142 with ID [ff44a5a6-32cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for write of block size ") AT LINE 142 with ID [ff44a5a6-32cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(replicaSize) AT LINE 142 with ID [ff44a5a6-32cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 142 with ID [ff44a5a6-32cc]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack67.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack72) AT LINE 142 with ID [ff44a5a6-32cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack38 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.AvailableSpaceVolumeChoosingPolicy: org.apache.commons.logging.Log LOG> AT LINE 170 with ID [9cae9ca4-2f60]
2020-08-25 12:10:02 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Volumes are imbalanced. Selecting ") AT LINE 170 with ID [9cae9ca4-2f60]
2020-08-25 12:10:02 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(volume) AT LINE 170 with ID [9cae9ca4-2f60]
2020-08-25 12:10:02 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from high available space volumes for write of block size ") AT LINE 170 with ID [9cae9ca4-2f60]
2020-08-25 12:10:02 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(replicaSize) AT LINE 170 with ID [9cae9ca4-2f60]
2020-08-25 12:10:02 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 170 with ID [9cae9ca4-2f60]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack43) AT LINE 170 with ID [9cae9ca4-2f60]
2020-08-25 12:10:02 [INFO] - 	 -> $stack53 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.AvailableSpaceVolumeChoosingPolicy: org.apache.commons.logging.Log LOG> AT LINE 178 with ID [d116bd9c-dd95]
2020-08-25 12:10:02 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Volumes are imbalanced. Selecting ") AT LINE 178 with ID [d116bd9c-dd95]
2020-08-25 12:10:02 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(volume) AT LINE 178 with ID [d116bd9c-dd95]
2020-08-25 12:10:02 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from low available space volumes for write of block size ") AT LINE 178 with ID [d116bd9c-dd95]
2020-08-25 12:10:02 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(replicaSize) AT LINE 178 with ID [d116bd9c-dd95]
2020-08-25 12:10:02 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 178 with ID [d116bd9c-dd95]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack53.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack58) AT LINE 178 with ID [d116bd9c-dd95]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl: void checkMetricsRecords(java.util.List)> has 3 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack3 = <org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl: org.slf4j.Logger LOG> AT LINE 424 with ID [da406522-35f2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack4 = virtualinvoke recs.<java.lang.Object: java.lang.String toString()>() AT LINE 424 with ID [da406522-35f2]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>($stack4) AT LINE 424 with ID [da406522-35f2]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if type != null goto $stack7 = this.<org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31: org.slf4j.Logger LOG> at line 56 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if value != null goto (branch) at line 53 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if name != null goto (branch) at line 50 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31: void emitMetric(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.metrics2.sink.ganglia.GangliaConf,org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope)> has 15 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = this.<org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31: org.slf4j.Logger LOG> AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Emitting metric ") AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type ") AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(type) AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value ") AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value) AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", slope ") AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke gSlope.<org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope: java.lang.String name()>() AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from hostname ") AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = virtualinvoke this.<org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31: java.lang.String getHostName()>() AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27) AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack29) AT LINE 62 with ID [22b64e14-87dd]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack7 = virtualinvoke replica1.<org.apache.hadoop.hdfs.server.datanode.ReplicaInfo: long getGenerationStamp()>() at line 621 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice: org.apache.hadoop.hdfs.server.datanode.ReplicaInfo selectReplicaToDelete(org.apache.hadoop.hdfs.server.datanode.ReplicaInfo,org.apache.hadoop.hdfs.server.datanode.ReplicaInfo)> has 7 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice: org.apache.commons.logging.Log LOG> AT LINE 640 with ID [9250efa7-0931]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resolveDuplicateReplicas decide to keep ") AT LINE 640 with ID [9250efa7-0931]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(replicaToKeep) AT LINE 640 with ID [9250efa7-0931]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  Will try to delete ") AT LINE 640 with ID [9250efa7-0931]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(replicaToDelete) AT LINE 640 with ID [9250efa7-0931]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 640 with ID [9250efa7-0931]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 640 with ID [9250efa7-0931]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack58 == 0 goto (branch) at line 309 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if j >= $stack42 goto $stack44 = (long) length at line 303 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if i >= length goto virtualinvoke writer.<java.io.Writer: void close()>() at line 283 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TestTextInputFormat: void verifyPartitions(int,int,org.apache.hadoop.fs.Path,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.mapred.JobConf)> has 23 units and 3 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack48 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 304 with ID [7cc1e89b-c1aa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("split[") AT LINE 304 with ID [7cc1e89b-c1aa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j) AT LINE 304 with ID [7cc1e89b-c1aa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]= ") AT LINE 304 with ID [7cc1e89b-c1aa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack52 = splits[j] AT LINE 304 with ID [7cc1e89b-c1aa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack52) AT LINE 304 with ID [7cc1e89b-c1aa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 304 with ID [7cc1e89b-c1aa]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack48.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack54) AT LINE 304 with ID [7cc1e89b-c1aa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack85 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 311 with ID [325ce45b-c1c2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack86 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read ") AT LINE 311 with ID [325ce45b-c1c2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v) AT LINE 311 with ID [325ce45b-c1c2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 311 with ID [325ce45b-c1c2]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack85.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack88) AT LINE 311 with ID [325ce45b-c1c2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack60 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 324 with ID [cbd42848-d33c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splits[") AT LINE 324 with ID [cbd42848-d33c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j) AT LINE 324 with ID [cbd42848-d33c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=") AT LINE 324 with ID [cbd42848-d33c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack64 = splits[j] AT LINE 324 with ID [cbd42848-d33c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack65 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack64) AT LINE 324 with ID [cbd42848-d33c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=") AT LINE 324 with ID [cbd42848-d33c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(counter) AT LINE 324 with ID [cbd42848-d33c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 324 with ID [cbd42848-d33c]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack60.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack68) AT LINE 324 with ID [cbd42848-d33c]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.server.LdapAuthenticationHandler: org.apache.hadoop.security.authentication.server.AuthenticationToken authenticate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> has 2 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack9 = <org.apache.hadoop.security.authentication.server.LdapAuthenticationHandler: org.slf4j.Logger logger> AT LINE 185 with ID [ddcce427-6fc8]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void trace(java.lang.String)>("Basic auth starting") AT LINE 185 with ID [ddcce427-6fc8]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if mmap != null goto $stack18 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: int outstandingMmapCount> at line 846 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.apache.hadoop.hdfs.shortcircuit.ClientMmap getOrCreateClientMmap(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica,boolean)> has 14 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack52 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 824 with ID [296a4bc5-663c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack51 = newarray (java.lang.Object)[3] AT LINE 824 with ID [296a4bc5-663c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack51[0] = this AT LINE 824 with ID [296a4bc5-663c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack51[1] = replica AT LINE 824 with ID [296a4bc5-663c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack55 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(delta) AT LINE 824 with ID [296a4bc5-663c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack51[2] = $stack55 AT LINE 824 with ID [296a4bc5-663c]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack52.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("{}: can\'t create client mmap for {} because we failed to create one just {}ms ago.", $stack51) AT LINE 824 with ID [296a4bc5-663c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack47 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 828 with ID [6d060b3b-deb5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack46 = newarray (java.lang.Object)[3] AT LINE 828 with ID [6d060b3b-deb5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack46[0] = this AT LINE 828 with ID [6d060b3b-deb5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack46[1] = replica AT LINE 828 with ID [6d060b3b-deb5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack50 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(delta) AT LINE 828 with ID [6d060b3b-deb5]
2020-08-25 12:10:02 [INFO] - 	 -> $stack46[2] = $stack50 AT LINE 828 with ID [6d060b3b-deb5]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("{}: retrying client mmap for {}, {} ms after the previous failure.", $stack46) AT LINE 828 with ID [6d060b3b-deb5]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack19 == 0 goto return e#17 at line 467 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.registry.server.services.RegistryAdminService: int purge(java.lang.String,org.apache.hadoop.registry.server.services.RegistryAdminService$NodeSelector,org.apache.hadoop.registry.server.services.RegistryAdminService$PurgePolicy,org.apache.curator.framework.api.BackgroundCallback)> has 20 units and 8 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> AT LINE 426 with ID [9d3f75f3-8f6f]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = interfaceinvoke $stack28.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 426 with ID [9d3f75f3-8f6f]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack29 == 0 goto $stack30 = <org.apache.hadoop.registry.server.services.RegistryAdminService$3: int[] $SwitchMap$org$apache$hadoop$registry$server$services$RegistryAdminService$PurgePolicy> AT LINE 426 with ID [9d3f75f3-8f6f]
2020-08-25 12:10:02 [INFO] - 	 -> $stack48 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> AT LINE 427 with ID [9d3f75f3-8f6f]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack48.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Match on record @ {} with children ", path) AT LINE 427 with ID [9d3f75f3-8f6f]
2020-08-25 12:10:02 [INFO] - 	 -> $stack44 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> AT LINE 433 with ID [59bd227c-4cc7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack45 = interfaceinvoke $stack44.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 433 with ID [59bd227c-4cc7]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack45 == 0 goto toDelete = 0 AT LINE 433 with ID [59bd227c-4cc7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack46 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> AT LINE 434 with ID [59bd227c-4cc7]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String)>("Skipping deletion") AT LINE 434 with ID [59bd227c-4cc7]
2020-08-25 12:10:02 [INFO] - 	 -> $stack38 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> AT LINE 440 with ID [947284c9-ff22]
2020-08-25 12:10:02 [INFO] - 	 -> $stack39 = interfaceinvoke $stack38.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 440 with ID [947284c9-ff22]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack39 == 0 goto toDelete = 1 AT LINE 440 with ID [947284c9-ff22]
2020-08-25 12:10:02 [INFO] - 	 -> $stack41 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> AT LINE 441 with ID [947284c9-ff22]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack41.<org.slf4j.Logger: void debug(java.lang.String)>("Scheduling for deletion with children") AT LINE 441 with ID [947284c9-ff22]
2020-08-25 12:10:02 [INFO] - 	 -> $stack33 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> AT LINE 447 with ID [baf2c752-8456]
2020-08-25 12:10:02 [INFO] - 	 -> $stack34 = interfaceinvoke $stack33.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 447 with ID [baf2c752-8456]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack34 == 0 goto $stack35 = new org.apache.hadoop.fs.PathIsNotEmptyDirectoryException AT LINE 447 with ID [baf2c752-8456]
2020-08-25 12:10:02 [INFO] - 	 -> $stack36 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> AT LINE 448 with ID [baf2c752-8456]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void debug(java.lang.String)>("Failing deletion operation") AT LINE 448 with ID [baf2c752-8456]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if highest != null goto protocolImpl = highest.<org.apache.hadoop.ipc.RPC$Server$VerProtocolImpl: org.apache.hadoop.ipc.RPC$Server$ProtoClassProtoImpl protocolTarget> at line 483 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if highest != null goto $stack93 = new org.apache.hadoop.ipc.RPC$VersionMismatch at line 499 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if protocolImpl != null goto highest#4 = staticinvoke <org.apache.hadoop.util.Time: long now()>() at line 495 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack25 == 0 goto clientVersion = staticinvoke <org.apache.hadoop.ipc.WritableRpcEngine$Invocation: long access$300(org.apache.hadoop.ipc.WritableRpcEngine$Invocation)>(call) at line 461 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.ipc.WritableRpcEngine$Server$WritableRpcInvoker: org.apache.hadoop.io.Writable call(org.apache.hadoop.ipc.RPC$Server,java.lang.String,org.apache.hadoop.io.Writable,long)> has 16 units and 3 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Served: ") AT LINE 545 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> $stack66 = virtualinvoke call.<org.apache.hadoop.ipc.WritableRpcEngine$Invocation: java.lang.String getMethodName()>() AT LINE 545 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> $stack67 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack66) AT LINE 545 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" queueTime= ") AT LINE 545 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(qTime) AT LINE 545 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" procesingTime= ") AT LINE 545 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(processingTime) AT LINE 545 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> msg = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 545 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg) AT LINE 548 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception= ") AT LINE 548 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> $stack78 = virtualinvoke exception.<java.lang.Object: java.lang.Class getClass()>() AT LINE 548 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 548 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> $stack80 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack79) AT LINE 548 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> msg = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 548 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> $stack73 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 550 with ID [924f104a-6f50]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack73.<org.slf4j.Logger: void debug(java.lang.String)>(msg) AT LINE 550 with ID [924f104a-6f50]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack16 == 0 goto virtualinvoke this.<org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$RecoveryTaskContiguous: void syncBlock(java.util.List)>(syncList) at line 175 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if errorCount != $stack15 goto (branch) at line 160 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack14 = this.<org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$RecoveryTaskContiguous: org.apache.hadoop.hdfs.protocol.DatanodeInfo[] locs> at line 113 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$RecoveryTaskContiguous: void recover()> has 24 units and 3 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack97 = <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker: org.slf4j.Logger LOG> AT LINE 131 with ID [d5ed6543-ebfa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack98 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block recovery: Ignored replica with invalid original state: ") AT LINE 131 with ID [d5ed6543-ebfa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(info) AT LINE 131 with ID [d5ed6543-ebfa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from DataNode: ") AT LINE 131 with ID [d5ed6543-ebfa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(id) AT LINE 131 with ID [d5ed6543-ebfa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack102 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 131 with ID [d5ed6543-ebfa]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack97.<org.slf4j.Logger: void debug(java.lang.String)>($stack102) AT LINE 131 with ID [d5ed6543-ebfa]
2020-08-25 12:10:02 [INFO] - 	 -> $stack76 = <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker: org.slf4j.Logger LOG> AT LINE 138 with ID [0375b430-ba35]
2020-08-25 12:10:02 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block recovery: DataNode: ") AT LINE 138 with ID [0375b430-ba35]
2020-08-25 12:10:02 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(id) AT LINE 138 with ID [0375b430-ba35]
2020-08-25 12:10:02 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have ") AT LINE 138 with ID [0375b430-ba35]
2020-08-25 12:10:02 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("replica for block: ") AT LINE 138 with ID [0375b430-ba35]
2020-08-25 12:10:02 [INFO] - 	 -> $stack81 = this.<org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$RecoveryTaskContiguous: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 138 with ID [0375b430-ba35]
2020-08-25 12:10:02 [INFO] - 	 -> $stack82 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack81) AT LINE 138 with ID [0375b430-ba35]
2020-08-25 12:10:02 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 138 with ID [0375b430-ba35]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack76.<org.slf4j.Logger: void debug(java.lang.String)>($stack83) AT LINE 138 with ID [0375b430-ba35]
2020-08-25 12:10:02 [INFO] - 	 -> $stack68 = <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker: org.slf4j.Logger LOG> AT LINE 141 with ID [fa835b37-11a9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block recovery: Ignored replica with invalid generation stamp or length: ") AT LINE 141 with ID [fa835b37-11a9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(info) AT LINE 141 with ID [fa835b37-11a9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ") AT LINE 141 with ID [fa835b37-11a9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DataNode: ") AT LINE 141 with ID [fa835b37-11a9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(id) AT LINE 141 with ID [fa835b37-11a9]
2020-08-25 12:10:02 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 141 with ID [fa835b37-11a9]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack68.<org.slf4j.Logger: void debug(java.lang.String)>($stack74) AT LINE 141 with ID [fa835b37-11a9]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if idsFromPlugin == null goto (branch) at line 974 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = specialinvoke this.<org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: java.util.List getTimelineStoresFromCacheIds(java.util.Set,java.lang.String,java.util.List)>(groupIds, entityType, cacheItems) at line 963 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: java.util.List getTimelineStoresForRead(java.lang.String,java.lang.String,java.util.List)> has 24 units and 4 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 964 with ID [61bd6d32-debc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack14 = newarray (java.lang.Object)[3] AT LINE 964 with ID [61bd6d32-debc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = virtualinvoke cacheIdPlugin.<java.lang.Object: java.lang.Class getClass()>() AT LINE 964 with ID [61bd6d32-debc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.Class: java.lang.String getName()>() AT LINE 964 with ID [61bd6d32-debc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack14[0] = $stack19 AT LINE 964 with ID [61bd6d32-debc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack14[1] = entityId AT LINE 964 with ID [61bd6d32-debc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack14[2] = entityType AT LINE 964 with ID [61bd6d32-debc]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Trying plugin {} for id {} and type {}", $stack14) AT LINE 964 with ID [61bd6d32-debc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack33 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 969 with ID [089202d3-c4df]
2020-08-25 12:10:02 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Plugin returned null ") AT LINE 969 with ID [089202d3-c4df]
2020-08-25 12:10:02 [INFO] - 	 -> $stack35 = virtualinvoke cacheIdPlugin.<java.lang.Object: java.lang.Class getClass()>() AT LINE 969 with ID [089202d3-c4df]
2020-08-25 12:10:02 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.Class: java.lang.String getName()>() AT LINE 969 with ID [089202d3-c4df]
2020-08-25 12:10:02 [INFO] - 	 -> $stack37 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack36) AT LINE 969 with ID [089202d3-c4df]
2020-08-25 12:10:02 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 969 with ID [089202d3-c4df]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String)>($stack38) AT LINE 969 with ID [089202d3-c4df]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 971 with ID [d05ac579-1679]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Plugin returned ids: ") AT LINE 971 with ID [d05ac579-1679]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(idsFromPlugin) AT LINE 971 with ID [d05ac579-1679]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 971 with ID [d05ac579-1679]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 971 with ID [d05ac579-1679]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 976 with ID [f536dd35-5891]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = virtualinvoke cacheIdPlugin.<java.lang.Object: java.lang.Class getClass()>() AT LINE 976 with ID [f536dd35-5891]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.Class: java.lang.String getName()>() AT LINE 976 with ID [f536dd35-5891]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("plugin {} returns a non-null value on query", $stack31) AT LINE 976 with ID [f536dd35-5891]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator$ScheduledRequests: org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor$ContainerRequest assignWithoutLocality(org.apache.hadoop.yarn.api.records.Container)> has 6 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack14 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 1283 with ID [ba61a4d8-35b6]
2020-08-25 12:10:02 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigning container ") AT LINE 1283 with ID [ba61a4d8-35b6]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(allocated) AT LINE 1283 with ID [ba61a4d8-35b6]
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to reduce") AT LINE 1283 with ID [ba61a4d8-35b6]
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1283 with ID [ba61a4d8-35b6]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 1283 with ID [ba61a4d8-35b6]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.hadoop.yarn.server.resourcemanager.scheduler.YarnScheduler access$2800(org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl)>(app) at line 1106 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack15 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: java.util.Map access$2500(org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl)>(app) at line 1092 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack41 == 0 goto (branch) at line 1095 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack9 == null goto $stack10 = staticinvoke <org.apache.hadoop.security.UserGroupInformation: boolean isSecurityEnabled()>() at line 1068 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl$RMAppRecoveredTransition: org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppState transition(org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl,org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppEvent)> has 23 units and 3 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack43 = interfaceinvoke msg#18.<java.util.Map$Entry: java.lang.Object getValue()>() AT LINE 1096 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack44 = (java.lang.Long) $stack43 AT LINE 1096 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.Long: long longValue()>() AT LINE 1096 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack46 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.hadoop.yarn.util.Clock access$1200(org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl)>(app) AT LINE 1096 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack47 = interfaceinvoke $stack46.<org.apache.hadoop.yarn.util.Clock: long getTime()>() AT LINE 1096 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> remainingTime = $stack45 - $stack47 AT LINE 1096 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack48 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.commons.logging.Log access$2300()>() AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application ") AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack51 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.hadoop.yarn.api.records.ApplicationId access$1700(org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl)>(app) AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack51) AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is registered for timeout monitor, type=") AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack54 = interfaceinvoke msg#18.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack54) AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remaining timeout=") AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack57 = remainingTime cmp 0L AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack57 <= 0 goto $stack61 = 0L AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack61 = remainingTime / 1000L AT LINE 1102 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> goto [?= $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack61)] AT LINE 1102 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack61 = 0L AT LINE 1102 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack61) AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds") AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack48.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack60) AT LINE 1097 with ID [67aef21d-cb28]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if first == 0 goto $stack81 = new java.lang.StringBuilder at line 439 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack62 <= 0 goto (branch) at line 481 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack59 != 0 goto $stack60 = staticinvoke <java.lang.System: long currentTimeMillis()>() at line 479 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack57 == 0 goto (branch) at line 478 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack56 == 0 goto $stack57 = this.<org.apache.hadoop.yarn.applications.unmanagedamlauncher.UnmanagedAMLauncher: boolean amCompleted> at line 472 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack11 == 0 goto staticinvoke <java.lang.Thread: void sleep(long)>(1000L) at line 438 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.applications.unmanagedamlauncher.UnmanagedAMLauncher: org.apache.hadoop.yarn.api.records.ApplicationReport monitorApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Set)>
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack100 <= 0 goto (branch) at line 623 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if length <= 0 goto (branch) at line 615 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if listing != null goto $stack95 = virtualinvoke listing.<org.apache.hadoop.hdfs.protocol.DirectoryListing: int getRemainingEntries()>() at line 609 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if length >= partialListing#17 goto $stack83 = virtualinvoke location#15.<org.apache.hadoop.hdfs.protocol.DirectoryListing: int getRemainingEntries()>() at line 630 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if location#15 == null goto (branch) at line 628 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack44 != 0 goto $stack40 = interfaceinvoke nnListing.<java.util.Map: int size()>() at line 675 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack54 == 0 goto (branch) at line 651 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack76 == 0 goto $stack38 = this.<org.apache.hadoop.hdfs.server.federation.router.RouterClientProtocol: org.apache.hadoop.hdfs.server.federation.resolver.FileSubclusterResolver subclusterResolver> at line 626 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack73 == 0 goto $stack74 = interfaceinvoke listings.<java.util.Map: java.util.Collection values()>() at line 606 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.RouterClientProtocol: org.apache.hadoop.hdfs.protocol.DirectoryListing getListing(java.lang.String,byte[],boolean)> has 4 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack93 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 607 with ID [709c56eb-48cf]
2020-08-25 12:10:02 [INFO] - 	 -> location = (org.apache.hadoop.hdfs.server.federation.resolver.RemoteLocation) $stack93 AT LINE 607 with ID [709c56eb-48cf]
2020-08-25 12:10:02 [INFO] - 	 -> $stack102 = <org.apache.hadoop.hdfs.server.federation.router.RouterClientProtocol: org.slf4j.Logger LOG> AT LINE 610 with ID [709c56eb-48cf]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack102.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Cannot get listing from {}", location) AT LINE 610 with ID [709c56eb-48cf]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: void save()> has 15 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 816 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = interfaceinvoke $stack29.<org.slf4j.Logger: boolean isTraceEnabled()>() AT LINE 816 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> if $stack30 == 0 goto return AT LINE 816 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> $stack33 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 817 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = newarray (java.lang.Object)[3] AT LINE 817 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> $stack32 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl this$0> AT LINE 817 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> $stack36 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: java.lang.String access$400(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl)>($stack32) AT LINE 817 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31[0] = $stack36 AT LINE 817 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> $stack37 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.lang.String bpid> AT LINE 817 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31[1] = $stack37 AT LINE 817 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> $stack39 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.codehaus.jackson.map.ObjectWriter access$1000()>() AT LINE 817 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> $stack40 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorState state> AT LINE 817 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<org.codehaus.jackson.map.ObjectWriter: java.lang.String writeValueAsString(java.lang.Object)>($stack40) AT LINE 817 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31[2] = $stack41 AT LINE 817 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("save({}, {}): saved {}", $stack31) AT LINE 817 with ID [2986b9a6-8b71]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = staticinvoke <org.apache.hadoop.net.unix.DomainSocket: java.lang.String getLoadingFailureReason()>() at line 114 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory: void <init>(org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf)> has 7 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = <org.apache.hadoop.util.PerformanceAdvisory: org.slf4j.Logger LOG> AT LINE 111 with ID [6adac347-dfee]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String)>("Both short-circuit local reads and UNIX domain socket are disabled.") AT LINE 111 with ID [6adac347-dfee]
2020-08-25 12:10:02 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory: org.slf4j.Logger LOG> AT LINE 121 with ID [8f2092e0-9335]
2020-08-25 12:10:02 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(feature) AT LINE 121 with ID [8f2092e0-9335]
2020-08-25 12:10:02 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is enabled.") AT LINE 121 with ID [8f2092e0-9335]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 121 with ID [8f2092e0-9335]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 121 with ID [8f2092e0-9335]
2020-08-25 12:10:02 [WARN] - No overhead is found at method <org.apache.hadoop.security.UserGroupInformation: java.lang.Object doAs(java.security.PrivilegedExceptionAction)>
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if rmAppAttempt != null goto masterContainer = interfaceinvoke rmAppAttempt.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttempt: org.apache.hadoop.yarn.api.records.Container getMasterContainer()>() at line 296 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack16 == 0 goto rmAppAttempt = interfaceinvoke rmApp.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp: org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttempt getRMAppAttempt(org.apache.hadoop.yarn.api.records.ApplicationAttemptId)>(appAttemptId) at line 287 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if rmApp != null goto $stack15 = interfaceinvoke rmApp.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp: org.apache.hadoop.yarn.api.records.ApplicationSubmissionContext getApplicationSubmissionContext()>() at line 279 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService: void handleNMContainerStatus(org.apache.hadoop.yarn.server.api.protocolrecords.NMContainerStatus,org.apache.hadoop.yarn.api.records.NodeId)> has 6 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack41 = <org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService: org.apache.commons.logging.Log LOG> AT LINE 289 with ID [a4de721e-436f]
2020-08-25 12:10:02 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring container completion status for unmanaged AM ") AT LINE 289 with ID [a4de721e-436f]
2020-08-25 12:10:02 [INFO] - 	 -> $stack43 = interfaceinvoke rmApp.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 289 with ID [a4de721e-436f]
2020-08-25 12:10:02 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack43) AT LINE 289 with ID [a4de721e-436f]
2020-08-25 12:10:02 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 289 with ID [a4de721e-436f]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack41.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack45) AT LINE 289 with ID [a4de721e-436f]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack21 == 0 goto (branch) at line 659 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if appCollectorData == null goto $stack20 = <org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService: org.apache.commons.logging.Log LOG> at line 656 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if app == null goto (branch) at line 653 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack13 == 0 goto interfaceinvoke response.<org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatResponse: void setAppCollectors(java.util.Map)>(liveAppCollectorsMap) at line 651 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService: void setAppCollectorsMapToResponse(java.util.List,org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatResponse)> has 6 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService: org.apache.commons.logging.Log LOG> AT LINE 660 with ID [f3c86f0c-e039]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collector for applicaton: ") AT LINE 660 with ID [f3c86f0c-e039]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 660 with ID [f3c86f0c-e039]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasn\'t registered yet!") AT LINE 660 with ID [f3c86f0c-e039]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 660 with ID [f3c86f0c-e039]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 660 with ID [f3c86f0c-e039]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack32 == $stack31 goto $stack9 = this.<org.apache.hadoop.mapreduce.task.reduce.EventFetcher: org.apache.hadoop.mapred.TaskUmbilicalProtocol umbilical> at line 147 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack32 = lengthof events at line 141 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack48 == 0 goto $stack29 = this.<org.apache.hadoop.mapreduce.task.reduce.EventFetcher: int fromEventIdx> at line 141 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.task.reduce.EventFetcher: int getMapCompletionEvents()> has 9 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = <org.apache.hadoop.mapreduce.task.reduce.EventFetcher: org.apache.commons.logging.Log LOG> AT LINE 127 with ID [18d2e2eb-f1cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got ") AT LINE 127 with ID [18d2e2eb-f1cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = lengthof events AT LINE 127 with ID [18d2e2eb-f1cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack21) AT LINE 127 with ID [18d2e2eb-f1cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" map completion events from ") AT LINE 127 with ID [18d2e2eb-f1cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = this.<org.apache.hadoop.mapreduce.task.reduce.EventFetcher: int fromEventIdx> AT LINE 127 with ID [18d2e2eb-f1cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24) AT LINE 127 with ID [18d2e2eb-f1cc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 127 with ID [18d2e2eb-f1cc]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 127 with ID [18d2e2eb-f1cc]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if idsFromPlugin == null goto (branch) at line 991 don't merge! Need manual examination!
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = specialinvoke this.<org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: java.util.List getTimelineStoresFromCacheIds(java.util.Set,java.lang.String,java.util.List)>(groupIds, entityType, cacheItems) at line 987 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: java.util.List getTimelineStoresForRead(java.lang.String,org.apache.hadoop.yarn.server.timeline.NameValuePair,java.util.Collection,java.util.List)> has 4 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 992 with ID [224e7a25-bd7c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = virtualinvoke cacheIdPlugin.<java.lang.Object: java.lang.Class getClass()>() AT LINE 992 with ID [224e7a25-bd7c]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.Class: java.lang.String getName()>() AT LINE 992 with ID [224e7a25-bd7c]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("plugin {} returns a non-null value on query {}", $stack20, idsFromPlugin) AT LINE 992 with ID [224e7a25-bd7c]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack30 != $stack31 goto (branch) at line 361 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: void removeCompletedApps(org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext)> has 14 units and 2 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack33 = <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: org.apache.commons.logging.Log LOG> AT LINE 351 with ID [9b626755-c8e2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Consider non-existing app ") AT LINE 351 with ID [9b626755-c8e2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 351 with ID [9b626755-c8e2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as completed") AT LINE 351 with ID [9b626755-c8e2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 351 with ID [9b626755-c8e2]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 351 with ID [9b626755-c8e2]
2020-08-25 12:10:02 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: org.apache.commons.logging.Log LOG> AT LINE 358 with ID [e159c48c-ba60]
2020-08-25 12:10:02 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remove ") AT LINE 358 with ID [e159c48c-ba60]
2020-08-25 12:10:02 [INFO] - 	 -> $stack17 = interfaceinvoke rmApp.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp: org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppState getState()>() AT LINE 358 with ID [e159c48c-ba60]
2020-08-25 12:10:02 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack17) AT LINE 358 with ID [e159c48c-ba60]
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" app ") AT LINE 358 with ID [e159c48c-ba60]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 358 with ID [e159c48c-ba60]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 358 with ID [e159c48c-ba60]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 358 with ID [e159c48c-ba60]
2020-08-25 12:10:02 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: void close()>
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack36 == 0 goto $stack37 = <org.apache.hadoop.security.SecurityUtil: org.apache.hadoop.security.SecurityUtil$HostResolver hostResolver> at line 543 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.security.SecurityUtil: java.net.InetAddress getByName(java.lang.String)> has 8 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = <org.apache.hadoop.security.SecurityUtil: org.slf4j.Logger LOG> AT LINE 540 with ID [733c9644-b063]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Name lookup for ") AT LINE 540 with ID [733c9644-b063]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(hostname) AT LINE 540 with ID [733c9644-b063]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took ") AT LINE 540 with ID [733c9644-b063]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(elapsedMs) AT LINE 540 with ID [733c9644-b063]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms.") AT LINE 540 with ID [733c9644-b063]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 540 with ID [733c9644-b063]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void trace(java.lang.String)>($stack25) AT LINE 540 with ID [733c9644-b063]
2020-08-25 12:10:02 [WARN] - Both branch of IfStmt if $stack40 != 0 goto $stack41 = virtualinvoke attemptNodePrefix.<java.lang.String: int length()>() at line 483 don't merge! Need manual examination!
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: int loadRMApp(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState,org.apache.hadoop.yarn.server.utils.LeveldbIterator,java.lang.String,byte[])> has 8 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 499 with ID [a1912275-77a1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded application ") AT LINE 499 with ID [a1912275-77a1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 499 with ID [a1912275-77a1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ") AT LINE 499 with ID [a1912275-77a1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(entry#2) AT LINE 499 with ID [a1912275-77a1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attempts") AT LINE 499 with ID [a1912275-77a1]
2020-08-25 12:10:02 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 499 with ID [a1912275-77a1]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 499 with ID [a1912275-77a1]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskAttemptImpl: void handle(org.apache.hadoop.mapreduce.v2.app.job.event.TaskAttemptEvent)> has 9 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack56 = <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskAttemptImpl: org.apache.commons.logging.Log LOG> AT LINE 1255 with ID [443b43f8-964d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ") AT LINE 1255 with ID [443b43f8-964d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack58 = virtualinvoke event.<org.apache.hadoop.mapreduce.v2.app.job.event.TaskAttemptEvent: org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId getTaskAttemptID()>() AT LINE 1255 with ID [443b43f8-964d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack58) AT LINE 1255 with ID [443b43f8-964d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ") AT LINE 1255 with ID [443b43f8-964d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack61 = virtualinvoke event.<org.apache.hadoop.mapreduce.v2.app.job.event.TaskAttemptEvent: java.lang.Enum getType()>() AT LINE 1255 with ID [443b43f8-964d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack61) AT LINE 1255 with ID [443b43f8-964d]
2020-08-25 12:10:02 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1255 with ID [443b43f8-964d]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack56.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack63) AT LINE 1255 with ID [443b43f8-964d]
2020-08-25 12:10:02 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: void addResourceRequest(org.apache.hadoop.yarn.api.records.Priority,java.lang.String,org.apache.hadoop.yarn.api.records.ExecutionTypeRequest,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.client.api.AMRMClient$ContainerRequest,boolean,java.lang.String)> has 16 units and 1 lines
2020-08-25 12:10:02 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: org.apache.commons.logging.Log LOG> AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addResourceRequest: applicationId= priority=") AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack21 = virtualinvoke priority.<org.apache.hadoop.yarn.api.records.Priority: int getPriority()>() AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack21) AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resourceName=") AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourceName) AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numContainers=") AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack26 = resourceRequestInfo.<org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl$ResourceRequestInfo: org.apache.hadoop.yarn.api.records.ResourceRequest remoteRequest> AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<org.apache.hadoop.yarn.api.records.ResourceRequest: int getNumContainers()>() AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack28 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack27) AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #asks=") AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: java.util.Set ask> AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack31 = interfaceinvoke $stack30.<java.util.Set: int size()>() AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack32 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31) AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:02 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack33) AT LINE 867 with ID [4a9c52fc-f0bc]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.server.JWTRedirectAuthenticationHandler: org.apache.hadoop.security.authentication.server.AuthenticationToken alternateAuthenticate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = <org.apache.hadoop.security.authentication.server.JWTRedirectAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 179 with ID [aedd604a-f715]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String)>("Issuing AuthenticationToken for user.") AT LINE 179 with ID [aedd604a-f715]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack6 != 0 goto return 0 at line 655 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: boolean checkAndStartWrite(org.apache.hadoop.hdfs.nfs.nfs3.AsyncDataService,org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx)> has 12 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 658 with ID [d4cccc04-b4db]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trigger the write back task. Current nextOffset: ") AT LINE 658 with ID [d4cccc04-b4db]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nextOffset> AT LINE 658 with ID [d4cccc04-b4db]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.util.concurrent.atomic.AtomicLong: long get()>() AT LINE 658 with ID [d4cccc04-b4db]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack20) AT LINE 658 with ID [d4cccc04-b4db]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 658 with ID [d4cccc04-b4db]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 658 with ID [d4cccc04-b4db]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 665 with ID [7488ec8e-d6f4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = interfaceinvoke $stack8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 665 with ID [7488ec8e-d6f4]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack9 == 0 goto return 1 AT LINE 665 with ID [7488ec8e-d6f4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 666 with ID [7488ec8e-d6f4]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("The write back thread is working.") AT LINE 666 with ID [7488ec8e-d6f4]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: void setOwner(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)> has 10 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: org.apache.commons.logging.Log LOG> AT LINE 355 with ID [ede9add2-a112]
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = interfaceinvoke $stack4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 355 with ID [ede9add2-a112]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack5 == 0 goto staticinvoke <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$Native$Elevated: void chown(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)>(p, username, groupname) AT LINE 355 with ID [ede9add2-a112]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: org.apache.commons.logging.Log LOG> AT LINE 356 with ID [ede9add2-a112]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = newarray (java.lang.Object)[3] AT LINE 356 with ID [ede9add2-a112]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6[0] = p AT LINE 356 with ID [ede9add2-a112]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6[1] = username AT LINE 356 with ID [ede9add2-a112]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6[2] = groupname AT LINE 356 with ID [ede9add2-a112]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("EFS:setOwner: %s %s %s", $stack6) AT LINE 356 with ID [ede9add2-a112]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack8) AT LINE 356 with ID [ede9add2-a112]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if response != null goto $stack25 = this.<org.apache.hadoop.yarn.server.uam.UnmanagedApplicationManager$AMRequestHandlerThread: org.apache.hadoop.yarn.server.uam.UnmanagedApplicationManager this$0> at line 599 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if request != null goto $stack14 = staticinvoke <org.apache.hadoop.yarn.server.uam.UnmanagedApplicationManager: org.slf4j.Logger access$100()>() at line 585 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack12 != 0 goto request = virtualinvoke requestInfo.<org.apache.hadoop.yarn.server.uam.UnmanagedApplicationManager$AsyncAllocateRequestInfo: org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest getRequest()>() at line 578 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if requestInfo != null goto $stack12 = this.<org.apache.hadoop.yarn.server.uam.UnmanagedApplicationManager$AMRequestHandlerThread: boolean keepRunning> at line 574 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack31 != null goto $stack32 = virtualinvoke requestInfo.<org.apache.hadoop.yarn.server.uam.UnmanagedApplicationManager$AsyncAllocateRequestInfo: org.apache.hadoop.yarn.util.AsyncCallback getCallback()>() at line 617 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.uam.UnmanagedApplicationManager$AMRequestHandlerThread: void run()> has 26 units and 5 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = staticinvoke <org.apache.hadoop.yarn.server.uam.UnmanagedApplicationManager: org.slf4j.Logger access$100()>() AT LINE 589 with ID [64410e89-9de5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending Heartbeat to Unmanaged AM. AskList:") AT LINE 589 with ID [64410e89-9de5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = virtualinvoke request.<org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest: java.util.List getAskList()>() AT LINE 589 with ID [64410e89-9de5]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack55 != null goto $stack56 = virtualinvoke request.<org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest: java.util.List getAskList()>() AT LINE 589 with ID [64410e89-9de5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = " empty" AT LINE 599 with ID [64410e89-9de5]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= $stack59 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack58)] AT LINE 599 with ID [64410e89-9de5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke request.<org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest: java.util.List getAskList()>() AT LINE 589 with ID [64410e89-9de5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = interfaceinvoke $stack56.<java.util.List: int size()>() AT LINE 589 with ID [64410e89-9de5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack57) AT LINE 589 with ID [64410e89-9de5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack58) AT LINE 589 with ID [64410e89-9de5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 589 with ID [64410e89-9de5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack52.<org.slf4j.Logger: void debug(java.lang.String)>($stack60) AT LINE 589 with ID [64410e89-9de5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = staticinvoke <org.apache.hadoop.yarn.server.uam.UnmanagedApplicationManager: org.slf4j.Logger access$100()>() AT LINE 606 with ID [8cbe832b-0b7c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String)>("Received new AMRMToken") AT LINE 606 with ID [8cbe832b-0b7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = staticinvoke <org.apache.hadoop.yarn.server.uam.UnmanagedApplicationManager: org.slf4j.Logger access$100()>() AT LINE 612 with ID [6d88ef5e-4838]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received Heartbeat reply from RM. Allocated Containers:") AT LINE 612 with ID [6d88ef5e-4838]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke response.<org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse: java.util.List getAllocatedContainers()>() AT LINE 612 with ID [6d88ef5e-4838]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack38 != null goto $stack39 = virtualinvoke response.<org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse: java.util.List getAllocatedContainers()>() AT LINE 612 with ID [6d88ef5e-4838]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = " empty" AT LINE 617 with ID [6d88ef5e-4838]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= $stack42 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack41)] AT LINE 617 with ID [6d88ef5e-4838]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke response.<org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse: java.util.List getAllocatedContainers()>() AT LINE 612 with ID [6d88ef5e-4838]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = interfaceinvoke $stack39.<java.util.List: int size()>() AT LINE 612 with ID [6d88ef5e-4838]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack40) AT LINE 612 with ID [6d88ef5e-4838]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack41) AT LINE 612 with ID [6d88ef5e-4838]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 612 with ID [6d88ef5e-4838]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String)>($stack43) AT LINE 612 with ID [6d88ef5e-4838]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack10 == 0 goto specialinvoke this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: void ref(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica)>(e#2) at line 745 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = virtualinvoke e#2.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: boolean isStale()>() at line 738 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if e#2 != null goto $stack9 = e#2.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: boolean purged> at line 734 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack7 == null goto e#2 = virtualinvoke info.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplicaInfo: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica getReplica()>() at line 728 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplicaInfo fetch(org.apache.hadoop.hdfs.ExtendedBlockId,org.apache.hadoop.util.Waitable)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 721 with ID [c1835882-1084]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: found waitable for {}", this, key) AT LINE 721 with ID [c1835882-1084]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack12 == 0 goto return null at line 47 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack28 == 0 goto (branch) at line 54 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack26 == 0 goto (branch) at line 50 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if service != null goto $stack6 = <org.apache.hadoop.yarn.security.AMRMTokenSelector: org.apache.commons.logging.Log LOG> at line 43 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.security.AMRMTokenSelector: org.apache.hadoop.security.token.Token selectToken(org.apache.hadoop.io.Text,java.util.Collection)> has 16 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.security.AMRMTokenSelector: org.apache.commons.logging.Log LOG> AT LINE 46 with ID [c6f26dae-71ef]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking for a token with service ") AT LINE 46 with ID [c6f26dae-71ef]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke service.<org.apache.hadoop.io.Text: java.lang.String toString()>() AT LINE 46 with ID [c6f26dae-71ef]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 46 with ID [c6f26dae-71ef]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 46 with ID [c6f26dae-71ef]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack10) AT LINE 46 with ID [c6f26dae-71ef]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.security.AMRMTokenSelector: org.apache.commons.logging.Log LOG> AT LINE 48 with ID [e60e0690-061a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token kind is ") AT LINE 48 with ID [e60e0690-061a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getKind()>() AT LINE 48 with ID [e60e0690-061a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<org.apache.hadoop.io.Text: java.lang.String toString()>() AT LINE 48 with ID [e60e0690-061a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 48 with ID [e60e0690-061a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and the token\'s service name is ") AT LINE 48 with ID [e60e0690-061a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 48 with ID [e60e0690-061a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 48 with ID [e60e0690-061a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 48 with ID [e60e0690-061a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 48 with ID [e60e0690-061a]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack17 == 0 goto virtualinvoke this.<org.apache.hadoop.mapred.ShuffleHandler$Shuffle: void setResponseHeaders(org.jboss.netty.handler.codec.http.HttpResponse,boolean,long)>(response, keepAliveParam, contentLength) at line 1149 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.ShuffleHandler$Shuffle: void populateHeaders(java.util.List,java.lang.String,java.lang.String,int,org.jboss.netty.handler.codec.http.HttpRequest,org.jboss.netty.handler.codec.http.HttpResponse,boolean,java.util.Map)> has 14 units and 6 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = outputInfo.<org.apache.hadoop.mapred.ShuffleHandler$Shuffle$MapOutputInfo: org.apache.hadoop.mapred.IndexRecord indexRecord> AT LINE 1161 with ID [UNKNOWN_ID]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = $stack41.<org.apache.hadoop.mapred.IndexRecord: long partLength> AT LINE 1161 with ID [UNKNOWN_ID]
2020-08-25 12:10:03 [INFO] - 	 -> contentLength = contentLength + $stack42 AT LINE 1161 with ID [UNKNOWN_ID]
2020-08-25 12:10:03 [INFO] - 	 -> i$#4 = $stack20 AT LINE 1172 with ID [f189cf71-2ba4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke i$#4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(jobId) AT LINE 1173 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reducer ") AT LINE 1173 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(reduce) AT LINE 1173 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke i$#4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length ") AT LINE 1174 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(contentLength) AT LINE 1174 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke i$#4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mappers: ") AT LINE 1175 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mapIds) AT LINE 1175 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$1300()>() AT LINE 1176 with ID [f189cf71-2ba4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke i$#4.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1176 with ID [f189cf71-2ba4]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 1176 with ID [f189cf71-2ba4]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack5 == 0 goto $stack6 = this.<org.apache.hadoop.hdfs.server.blockmanagement.SlowDiskTracker: java.util.ArrayList slowDisksReport> at line 259 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.blockmanagement.SlowDiskTracker: java.lang.String getSlowDiskReportAsJsonString()>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack42 >= 0 goto $stack43 = <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger LOG> at line 219 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: void serviceInit(org.apache.hadoop.conf.Configuration)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger LOG> AT LINE 227 with ID [2c6384da-3210]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("yarn.nodemanager.duration-to-track-stopped-containers :") AT LINE 227 with ID [2c6384da-3210]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = this.<org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: long durationToTrackStoppedContainers> AT LINE 227 with ID [2c6384da-3210]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack58) AT LINE 227 with ID [2c6384da-3210]
2020-08-25 12:10:03 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 227 with ID [2c6384da-3210]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack56.<org.slf4j.Logger: void debug(java.lang.String)>($stack60) AT LINE 227 with ID [2c6384da-3210]
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.http.TestHttpServerWebapps: void testMissingServerResource()>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack48 != 0 goto (branch) at line 468 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack45 == 0 goto (branch) at line 467 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack28 != 0 goto (branch) at line 481 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack20 == 0 goto (branch) at line 480 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: void handle(org.apache.hadoop.yarn.server.resourcemanager.NodesListManagerEvent)> has 10 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: org.apache.commons.logging.Log LOG> AT LINE 466 with ID [36de882f-52a5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(eventNode) AT LINE 466 with ID [36de882f-52a5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reported unusable") AT LINE 466 with ID [36de882f-52a5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 466 with ID [36de882f-52a5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack40) AT LINE 466 with ID [36de882f-52a5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: org.apache.commons.logging.Log LOG> AT LINE 479 with ID [b8ede19e-dc8f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(eventNode) AT LINE 479 with ID [b8ede19e-dc8f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reported usable") AT LINE 479 with ID [b8ede19e-dc8f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 479 with ID [b8ede19e-dc8f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 479 with ID [b8ede19e-dc8f]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if peer == null goto $stack6 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.RemotePeerFactory remotePeerFactory> at line 810 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.client.impl.BlockReaderFactory$BlockReaderPeer nextTcpPeer()> has 4 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 811 with ID [8952ed4d-7b2c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("nextTcpPeer: reusing existing peer {}", peer) AT LINE 811 with ID [8952ed4d-7b2c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 818 with ID [1ba2a0eb-9c4f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("nextTcpPeer: created newConnectedPeer {}", peer) AT LINE 818 with ID [1ba2a0eb-9c4f]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: org.apache.hadoop.fs.permission.FsPermission loadAndReturnPerm(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)> has 8 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 258 with ID [03089c5a-0e66]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = interfaceinvoke $stack8.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 258 with ID [03089c5a-0e66]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack9 == 0 goto $stack10 = this.<org.apache.hadoop.crypto.key.JavaKeyStoreProvider: org.apache.hadoop.fs.FileSystem fs> AT LINE 258 with ID [03089c5a-0e66]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 259 with ID [03089c5a-0e66]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = newarray (java.lang.Object)[1] AT LINE 259 with ID [03089c5a-0e66]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12[0] = pathToLoad AT LINE 259 with ID [03089c5a-0e66]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("KeyStore loaded successfully from \'%s\'!!", $stack12) AT LINE 259 with ID [03089c5a-0e66]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 259 with ID [03089c5a-0e66]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.ResourceHandlerModule: org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsBlkioResourceHandlerImpl getCgroupsBlkioResourceHandler(org.apache.hadoop.conf.Configuration)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.ResourceHandlerModule: org.slf4j.Logger LOG> AT LINE 167 with ID [841980c0-1633]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>("Creating new cgroups blkio handler") AT LINE 167 with ID [841980c0-1633]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack29 == 0 goto $stack30 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock> at line 1219 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if user != null goto $stack24 = virtualinvoke user.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager$User: org.apache.hadoop.yarn.api.records.Resource getUsed(java.lang.String)>(p) at line 1209 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: boolean accept(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ResourceCommitRequest)> has 13 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 1211 with ID [b14a483c-38ab]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ") AT LINE 1211 with ID [b14a483c-38ab]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(username) AT LINE 1211 with ID [b14a483c-38ab]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has been removed!") AT LINE 1211 with ID [b14a483c-38ab]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1211 with ID [b14a483c-38ab]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack51.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack55) AT LINE 1211 with ID [b14a483c-38ab]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 1222 with ID [6f2071db-c798]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Used resource=") AT LINE 1222 with ID [6f2071db-c798]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(usedResource#2) AT LINE 1222 with ID [6f2071db-c798]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeded user-limit=") AT LINE 1222 with ID [6f2071db-c798]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(userLimit) AT LINE 1222 with ID [6f2071db-c798]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1222 with ID [6f2071db-c798]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack43) AT LINE 1222 with ID [6f2071db-c798]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if clazz != null goto $stack8 = <org.apache.hadoop.fs.FileSystem: org.slf4j.Logger LOGGER> at line 3219 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.fs.FileSystem: java.lang.Class getFileSystemClass(java.lang.String,org.apache.hadoop.conf.Configuration)> has 12 units and 6 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = <org.apache.hadoop.fs.FileSystem: org.slf4j.Logger LOGGER> AT LINE 3203 with ID [69a1b47a-d55c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Looking for FS supporting {}", scheme) AT LINE 3203 with ID [69a1b47a-d55c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = <org.apache.hadoop.fs.FileSystem: org.slf4j.Logger LOGGER> AT LINE 3207 with ID [457d5448-3d4d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("looking for configuration option {}", property) AT LINE 3207 with ID [457d5448-3d4d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = <org.apache.hadoop.fs.FileSystem: org.slf4j.Logger LOGGER> AT LINE 3211 with ID [bd10f8df-9caf]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("No configuration: skipping check for fs.{}.impl", scheme) AT LINE 3211 with ID [bd10f8df-9caf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.fs.FileSystem: org.slf4j.Logger LOGGER> AT LINE 3214 with ID [945dce7f-9a60]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>("Looking in service filesystems for implementation class") AT LINE 3214 with ID [945dce7f-9a60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.fs.FileSystem: org.slf4j.Logger LOGGER> AT LINE 3217 with ID [a0ce39a0-4b78]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Filesystem {} defined in configuration option", scheme) AT LINE 3217 with ID [a0ce39a0-4b78]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.fs.FileSystem: org.slf4j.Logger LOGGER> AT LINE 3223 with ID [f877850e-7b7d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("FS for {} is {}", scheme, clazz) AT LINE 3223 with ID [f877850e-7b7d]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: void free()> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: org.slf4j.Logger LOG> AT LINE 634 with ID [aff8d433-3d3f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 634 with ID [aff8d433-3d3f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": freed") AT LINE 634 with ID [aff8d433-3d3f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 634 with ID [aff8d433-3d3f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void trace(java.lang.String)>($stack9) AT LINE 634 with ID [aff8d433-3d3f]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: void onCompleteLazyPersist(java.lang.String,long,long,java.io.File[],org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl)> has 15 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LazyWriter: Finish persisting RamDisk block:  block pool Id: ") AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(bpId) AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" block id: ") AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(blockId) AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to block file ") AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = savedFiles[1] AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack40) AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and meta file ") AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = savedFiles[0] AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack43) AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on target volume ") AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(targetVolume) AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String)>($stack47) AT LINE 3080 with ID [9b096025-df6b]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack20 == 0 goto (branch) at line 106 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack15 == 0 goto (branch) at line 105 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack11 == 0 goto return at line 96 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.security.authentication.client.AuthenticatedURL$AuthCookieHandler: void put(java.net.URI,java.util.Map)>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack99 == 0 goto $stack100 = new java.io.IOException at line 299 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if rState#44 >= $stack66 goto $stack67 = <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker: org.slf4j.Logger LOG> at line 309 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack63 == 0 goto $stack64 = interfaceinvoke r#31.<java.util.List: int size()>() at line 297 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack62 == 0 goto $stack63 = interfaceinvoke r#31.<java.util.List: boolean isEmpty()>() at line 284 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack148 != 0 goto virtualinvoke r.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: void setNumBytes(long)>(rState#23) at line 273 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack183 == 0 goto virtualinvoke r.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: void setNumBytes(long)>(finalizedLength) at line 230 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack190 == 0 goto (branch) at line 237 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack156 == 0 goto (branch) at line 255 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack145 == 0 goto $stack146 = <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$RecoveryTaskContiguous: boolean $assertionsDisabled> at line 249 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack216 > 0 goto rState#10 = interfaceinvoke syncList.<java.util.List: java.util.Iterator iterator()>() at line 237 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack45 != 0 goto (branch) at line 269 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack37 == 0 goto $stack38 = new java.util.ArrayList at line 207 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack232 == 0 goto $stack228 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$BlockRecord: org.apache.hadoop.hdfs.server.protocol.ReplicaRecoveryInfo access$400(org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$BlockRecord)>(r) at line 220 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if rState != $stack225 goto (branch) at line 213 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack245 > 0 goto $stack221 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$BlockRecord: org.apache.hadoop.hdfs.server.protocol.ReplicaRecoveryInfo access$400(org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$BlockRecord)>(r) at line 213 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack35 == 0 goto bestState = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState RWR> at line 193 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$RecoveryTaskContiguous: void syncBlock(java.util.List)> has 58 units and 4 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack256 = <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker: org.slf4j.Logger LOG> AT LINE 195 with ID [0086f0fe-cc4e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack257 = virtualinvoke $stack255.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("syncBlock for block ") AT LINE 195 with ID [0086f0fe-cc4e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack258 = this.<org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$RecoveryTaskContiguous: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 195 with ID [0086f0fe-cc4e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack259 = virtualinvoke $stack257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack258) AT LINE 195 with ID [0086f0fe-cc4e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack260 = virtualinvoke $stack259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", all datanodes don\'t ") AT LINE 195 with ID [0086f0fe-cc4e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack261 = virtualinvoke $stack260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("have the block or their replicas have 0 length. The block can ") AT LINE 195 with ID [0086f0fe-cc4e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack262 = virtualinvoke $stack261.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("be deleted.") AT LINE 195 with ID [0086f0fe-cc4e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack263 = virtualinvoke $stack262.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 195 with ID [0086f0fe-cc4e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack256.<org.slf4j.Logger: void debug(java.lang.String)>($stack263) AT LINE 195 with ID [0086f0fe-cc4e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack193 = <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker: org.slf4j.Logger LOG> AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack194 = virtualinvoke $stack192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("syncBlock replicaInfo: block=") AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack195 = this.<org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$RecoveryTaskContiguous: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack196 = virtualinvoke $stack194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack195) AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack197 = virtualinvoke $stack196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", from datanode ") AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack198 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$BlockRecord: org.apache.hadoop.hdfs.protocol.DatanodeID access$500(org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$BlockRecord)>(r) AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack199 = virtualinvoke $stack197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack198) AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack200 = virtualinvoke $stack199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", receivedState=") AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack201 = virtualinvoke rState.<org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState: java.lang.String name()>() AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack202 = virtualinvoke $stack200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack201) AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack203 = virtualinvoke $stack202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", receivedLength=") AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack204 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$BlockRecord: org.apache.hadoop.hdfs.server.protocol.ReplicaRecoveryInfo access$400(org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$BlockRecord)>(r) AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack205 = virtualinvoke $stack204.<org.apache.hadoop.hdfs.server.protocol.ReplicaRecoveryInfo: long getNumBytes()>() AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack206 = virtualinvoke $stack203.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack205) AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack207 = virtualinvoke $stack206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bestState=FINALIZED, finalizedLength=") AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack208 = virtualinvoke $stack207.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(finalizedLength) AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack209 = virtualinvoke $stack208.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack193.<org.slf4j.Logger: void debug(java.lang.String)>($stack209) AT LINE 238 with ID [c5d66fec-3a16]
2020-08-25 12:10:03 [INFO] - 	 -> $stack159 = <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker: org.slf4j.Logger LOG> AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack160 = virtualinvoke $stack158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("syncBlock replicaInfo: block=") AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack161 = this.<org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$RecoveryTaskContiguous: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack162 = virtualinvoke $stack160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack161) AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack163 = virtualinvoke $stack162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", from datanode ") AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack164 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$BlockRecord: org.apache.hadoop.hdfs.protocol.DatanodeID access$500(org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$BlockRecord)>(r) AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack165 = virtualinvoke $stack163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack164) AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack166 = virtualinvoke $stack165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", receivedState=") AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack167 = virtualinvoke rState.<org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState: java.lang.String name()>() AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack168 = virtualinvoke $stack166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack167) AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack169 = virtualinvoke $stack168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", receivedLength=") AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack170 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$BlockRecord: org.apache.hadoop.hdfs.server.protocol.ReplicaRecoveryInfo access$400(org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$BlockRecord)>(r) AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack171 = virtualinvoke $stack170.<org.apache.hadoop.hdfs.server.protocol.ReplicaRecoveryInfo: long getNumBytes()>() AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack172 = virtualinvoke $stack169.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack171) AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack173 = virtualinvoke $stack172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bestState=") AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack174 = virtualinvoke bestState.<org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState: java.lang.String name()>() AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack175 = virtualinvoke $stack173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack174) AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack176 = virtualinvoke $stack175.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack159.<org.slf4j.Logger: void debug(java.lang.String)>($stack176) AT LINE 256 with ID [8bdfe62b-4acd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack73 = <org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker: org.slf4j.Logger LOG> AT LINE 316 with ID [9cb6fb0b-24d9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack74 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Datanode triggering commitBlockSynchronization, block=") AT LINE 316 with ID [9cb6fb0b-24d9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack75 = this.<org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker$RecoveryTaskContiguous: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 316 with ID [9cb6fb0b-24d9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack76 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack75) AT LINE 316 with ID [9cb6fb0b-24d9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newGs=") AT LINE 316 with ID [9cb6fb0b-24d9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = virtualinvoke r.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getGenerationStamp()>() AT LINE 316 with ID [9cb6fb0b-24d9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack79 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack78) AT LINE 316 with ID [9cb6fb0b-24d9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newLength=") AT LINE 316 with ID [9cb6fb0b-24d9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack81 = virtualinvoke r.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getNumBytes()>() AT LINE 316 with ID [9cb6fb0b-24d9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack82 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack81) AT LINE 316 with ID [9cb6fb0b-24d9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 316 with ID [9cb6fb0b-24d9]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack73.<org.slf4j.Logger: void debug(java.lang.String)>($stack83) AT LINE 316 with ID [9cb6fb0b-24d9]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = <org.apache.hadoop.mapreduce.task.reduce.ShuffleSchedulerImpl: org.apache.commons.logging.Log LOG> at line 481 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack37 != 0 goto (branch) at line 481 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack32 != 0 goto (branch) at line 483 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if includedMaps < 20 goto (branch) at line 475 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack45 != 0 goto (branch) at line 471 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack40 != 0 goto (branch) at line 473 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.task.reduce.ShuffleSchedulerImpl: java.util.List getMapsForHost(org.apache.hadoop.mapreduce.task.reduce.MapHost)> has 14 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> totalSize = interfaceinvoke list.<java.util.List: int size()>() AT LINE 469 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.mapreduce.task.reduce.ShuffleSchedulerImpl: org.apache.commons.logging.Log LOG> AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("assigned ") AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(includedMaps) AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ") AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(totalSize) AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(host) AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.Thread: java.lang.String getName()>() AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 488 with ID [0b4ca77d-67ca]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.io.file.tfile.Compression$Algorithm: void returnDecompressor(org.apache.hadoop.io.compress.Decompressor)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = <org.apache.hadoop.io.file.tfile.Compression: org.slf4j.Logger LOG> AT LINE 340 with ID [57c7a099-676b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returned a decompressor: ") AT LINE 340 with ID [57c7a099-676b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke decompressor.<java.lang.Object: int hashCode()>() AT LINE 340 with ID [57c7a099-676b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack7) AT LINE 340 with ID [57c7a099-676b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 340 with ID [57c7a099-676b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>($stack9) AT LINE 340 with ID [57c7a099-676b]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.LogInfo: long parseForStore(org.apache.hadoop.yarn.server.timeline.TimelineDataManager,org.apache.hadoop.fs.Path,boolean,org.codehaus.jackson.JsonFactory,org.codehaus.jackson.map.ObjectMapper,org.apache.hadoop.fs.FileSystem)> has 7 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.timeline.LogInfo: org.slf4j.Logger LOG> AT LINE 104 with ID [bd445d15-8730]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = this.<org.apache.hadoop.yarn.server.timeline.LogInfo: java.lang.String attemptDirName> AT LINE 104 with ID [bd445d15-8730]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Parsing for log dir {} on attempt {}", appDirPath, $stack15) AT LINE 104 with ID [bd445d15-8730]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.timeline.LogInfo: org.slf4j.Logger LOG> AT LINE 112 with ID [0144ed4e-e85f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.yarn.server.timeline.LogInfo: long offset> AT LINE 112 with ID [0144ed4e-e85f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack21) AT LINE 112 with ID [0144ed4e-e85f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Parsing {} at offset {}", logPath, $stack24) AT LINE 112 with ID [0144ed4e-e85f]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack5 == 0 goto $stack6 = this.<org.apache.hadoop.service.AbstractService: java.lang.Object stateChangeLock> at line 186 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.service.AbstractService: void start()> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.service.AbstractService: org.slf4j.Logger LOG> AT LINE 198 with ID [7f82fb26-e0aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service ") AT LINE 198 with ID [7f82fb26-e0aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke this.<org.apache.hadoop.service.AbstractService: java.lang.String getName()>() AT LINE 198 with ID [7f82fb26-e0aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20) AT LINE 198 with ID [7f82fb26-e0aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is started") AT LINE 198 with ID [7f82fb26-e0aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 198 with ID [7f82fb26-e0aa]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack23) AT LINE 198 with ID [7f82fb26-e0aa]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if peer#2 != null goto $stack9 = new org.apache.hadoop.hdfs.client.impl.BlockReaderFactory$BlockReaderPeer at line 795 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if peer == null goto $stack3 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.ClientContext clientContext> at line 788 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.client.impl.BlockReaderFactory$BlockReaderPeer nextDomainPeer()> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 789 with ID [bca5c6a2-01ac]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("nextDomainPeer: reusing existing peer {}", peer) AT LINE 789 with ID [bca5c6a2-01ac]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataXceiver: void blockChecksum(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.security.token.Token)> has 11 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack69 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 1014 with ID [593ccc6f-4411]
2020-08-25 12:10:03 [INFO] - 	 -> $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("block=") AT LINE 1014 with ID [593ccc6f-4411]
2020-08-25 12:10:03 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 1014 with ID [593ccc6f-4411]
2020-08-25 12:10:03 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bytesPerCRC=") AT LINE 1014 with ID [593ccc6f-4411]
2020-08-25 12:10:03 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(bytesPerCRC) AT LINE 1014 with ID [593ccc6f-4411]
2020-08-25 12:10:03 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", crcPerBlock=") AT LINE 1014 with ID [593ccc6f-4411]
2020-08-25 12:10:03 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(crcPerBlock) AT LINE 1014 with ID [593ccc6f-4411]
2020-08-25 12:10:03 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", md5=") AT LINE 1014 with ID [593ccc6f-4411]
2020-08-25 12:10:03 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(md5) AT LINE 1014 with ID [593ccc6f-4411]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1014 with ID [593ccc6f-4411]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack69.<org.slf4j.Logger: void debug(java.lang.String)>($stack78) AT LINE 1014 with ID [593ccc6f-4411]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: void allocateContainersToNode(org.apache.hadoop.yarn.api.records.NodeId,boolean)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1241 with ID [7a07dc70-7c55]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigned maximum number of off-switch containers: ") AT LINE 1241 with ID [7a07dc70-7c55]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(offswitchCount) AT LINE 1241 with ID [7a07dc70-7c55]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", assignments so far: ") AT LINE 1241 with ID [7a07dc70-7c55]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(assignment) AT LINE 1241 with ID [7a07dc70-7c55]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1241 with ID [7a07dc70-7c55]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 1241 with ID [7a07dc70-7c55]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if appId == null goto $stack14 = virtualinvoke stat.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() at line 369 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack9 == 0 goto return logsToScanCount at line 365 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: int scanActiveLogs(org.apache.hadoop.fs.Path)> has 3 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 370 with ID [e746393d-a52b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke stat.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() AT LINE 370 with ID [e746393d-a52b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("scan logs for {} in {}", appId, $stack19) AT LINE 370 with ID [e746393d-a52b]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplicaInfo requestFileDescriptors(org.apache.hadoop.hdfs.net.DomainPeer,org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot)> has 4 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack94 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 611 with ID [d96a398e-c2bb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack94.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Sending receipt verification byte for slot {}", slot) AT LINE 611 with ID [d96a398e-c2bb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 644 with ID [a6ba2d88-735d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}:{}", this, key#7) AT LINE 644 with ID [a6ba2d88-735d]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack18 != 0 goto return at line 162 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService: void updateToken(org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier,java.lang.Long)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = <org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService: org.apache.commons.logging.Log LOG> AT LINE 144 with ID [2a88177a-1301]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating token ") AT LINE 144 with ID [2a88177a-1301]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke tokenId.<org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 144 with ID [2a88177a-1301]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack29) AT LINE 144 with ID [2a88177a-1301]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 144 with ID [2a88177a-1301]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack31) AT LINE 144 with ID [2a88177a-1301]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.registry.server.services.DeleteCompletionCallback: void processResult(org.apache.curator.framework.CuratorFramework,org.apache.curator.framework.api.CuratorEvent)> has 5 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack3 = <org.apache.hadoop.registry.server.services.DeleteCompletionCallback: org.slf4j.Logger LOG> AT LINE 45 with ID [ea99e696-c4aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = interfaceinvoke $stack3.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 45 with ID [ea99e696-c4aa]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack4 == 0 goto $stack5 = this.<org.apache.hadoop.registry.server.services.DeleteCompletionCallback: java.util.concurrent.atomic.AtomicInteger events> AT LINE 45 with ID [ea99e696-c4aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.registry.server.services.DeleteCompletionCallback: org.slf4j.Logger LOG> AT LINE 46 with ID [ea99e696-c4aa]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Delete event {}", event) AT LINE 46 with ID [ea99e696-c4aa]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: void removeRMDelegationTokenState(org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 762 with ID [7184ce73-87cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing token at ") AT LINE 762 with ID [7184ce73-87cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tokenKey) AT LINE 762 with ID [7184ce73-87cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 762 with ID [7184ce73-87cb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 762 with ID [7184ce73-87cb]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack38 != $stack39 goto $stack40 = interfaceinvoke nnRegistrations.<java.util.Map: java.lang.Object get(java.lang.Object)>(nnId) at line 202 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack24 == 0 goto $stack25 = <org.apache.hadoop.hdfs.server.federation.store.impl.MembershipStoreImpl: org.slf4j.Logger LOG> at line 226 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack21 == 0 goto $stack22 = interfaceinvoke nnRegistrations.<java.util.Map: java.util.Collection values()>() at line 200 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.store.impl.MembershipStoreImpl: boolean loadCache(boolean)> has 4 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.federation.store.impl.MembershipStoreImpl: org.slf4j.Logger LOG> AT LINE 233 with ID [98353b85-07e3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = interfaceinvoke cachedRecords.<java.util.List: int size()>() AT LINE 233 with ID [98353b85-07e3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack27) AT LINE 233 with ID [98353b85-07e3]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Refreshed {} NN registrations from State Store", $stack28) AT LINE 233 with ID [98353b85-07e3]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: void handle(org.apache.hadoop.mapreduce.v2.app.job.event.TaskEvent)> has 9 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: org.apache.commons.logging.Log LOG> AT LINE 650 with ID [7b0fc7bb-6d1c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ") AT LINE 650 with ID [7b0fc7bb-6d1c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke event.<org.apache.hadoop.mapreduce.v2.app.job.event.TaskEvent: org.apache.hadoop.mapreduce.v2.api.records.TaskId getTaskID()>() AT LINE 650 with ID [7b0fc7bb-6d1c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack28) AT LINE 650 with ID [7b0fc7bb-6d1c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ") AT LINE 650 with ID [7b0fc7bb-6d1c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke event.<org.apache.hadoop.mapreduce.v2.app.job.event.TaskEvent: java.lang.Enum getType()>() AT LINE 650 with ID [7b0fc7bb-6d1c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31) AT LINE 650 with ID [7b0fc7bb-6d1c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 650 with ID [7b0fc7bb-6d1c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack33) AT LINE 650 with ID [7b0fc7bb-6d1c]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack5 == 0 goto $stack6 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UncachingTask: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache this$0> at line 560 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UncachingTask: void run()> has 16 units and 4 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UncachingTask: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache this$0> AT LINE 576 with ID [a5a06f75-8e73, 0ee0684c-18ac]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = value.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$Value: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.MappableBlock mappableBlock> AT LINE 576 with ID [a5a06f75-8e73, 0ee0684c-18ac]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.MappableBlock: long getLength()>() AT LINE 576 with ID [a5a06f75-8e73, 0ee0684c-18ac]
2020-08-25 12:10:03 [INFO] - 	 -> newUsedBytes#4 = virtualinvoke $stack23.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: long release(long)>($stack24) AT LINE 576 with ID [a5a06f75-8e73, 0ee0684c-18ac]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UncachingTask: long revocationTimeMs> AT LINE 579 with ID [0ee0684c-18ac, a5a06f75-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = $stack33 cmp 0L AT LINE 579 with ID [0ee0684c-18ac, a5a06f75-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack34 == 0 goto $stack35 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger access$400()>() AT LINE 579 with ID [0ee0684c-18ac, a5a06f75-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger access$400()>() AT LINE 580 with ID [a5a06f75-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UncachingTask: org.apache.hadoop.hdfs.ExtendedBlockId key> AT LINE 580 with ID [a5a06f75-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(newUsedBytes#4) AT LINE 580 with ID [a5a06f75-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Uncaching of {} completed. usedBytes = {}", $stack41, $stack42) AT LINE 580 with ID [a5a06f75-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= return] AT LINE 580 with ID [0ee0684c-18ac, a5a06f75-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger access$400()>() AT LINE 583 with ID [0ee0684c-18ac]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UncachingTask: org.apache.hadoop.hdfs.ExtendedBlockId key> AT LINE 583 with ID [0ee0684c-18ac]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(newUsedBytes#4) AT LINE 583 with ID [0ee0684c-18ac]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Deferred uncaching of {} completed. usedBytes = {}", $stack37, $stack38) AT LINE 583 with ID [0ee0684c-18ac]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack16 != 0 goto specialinvoke this.<org.apache.hadoop.mapred.lib.MultithreadedMapRunner: void checkForExceptionsFromProcessingThreads()>() at line 170 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = <org.apache.hadoop.mapred.lib.MultithreadedMapRunner: org.apache.commons.logging.Log LOG> at line 146 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.lib.MultithreadedMapRunner: void run(org.apache.hadoop.mapred.RecordReader,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)> has 14 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = <org.apache.hadoop.mapred.lib.MultithreadedMapRunner: org.apache.commons.logging.Log LOG> AT LINE 159 with ID [be033af6-3b19]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished dispatching all Mappper.map calls, job ") AT LINE 159 with ID [be033af6-3b19]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = this.<org.apache.hadoop.mapred.lib.MultithreadedMapRunner: org.apache.hadoop.mapred.JobConf job> AT LINE 159 with ID [be033af6-3b19]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<org.apache.hadoop.mapred.JobConf: java.lang.String getJobName()>() AT LINE 159 with ID [be033af6-3b19]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 159 with ID [be033af6-3b19]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 159 with ID [be033af6-3b19]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack36) AT LINE 159 with ID [be033af6-3b19]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = <org.apache.hadoop.mapred.lib.MultithreadedMapRunner: org.apache.commons.logging.Log LOG> AT LINE 172 with ID [e364cc39-262f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Awaiting all running Mappper.map calls to finish, job ") AT LINE 172 with ID [e364cc39-262f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = this.<org.apache.hadoop.mapred.lib.MultithreadedMapRunner: org.apache.hadoop.mapred.JobConf job> AT LINE 172 with ID [e364cc39-262f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<org.apache.hadoop.mapred.JobConf: java.lang.String getJobName()>() AT LINE 172 with ID [e364cc39-262f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 172 with ID [e364cc39-262f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 172 with ID [e364cc39-262f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 172 with ID [e364cc39-262f]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if val >= 0 goto (branch) at line 407 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= $stack61 goto i#26 = newarray (byte)[1] at line 393 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack26 != null goto (branch) at line 362 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataXceiver: void requestShortCircuitFds(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.security.token.Token,org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$SlotId,int,boolean)> has 10 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack76 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 405 with ID [0200bb9d-aa79]
2020-08-25 12:10:03 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading receipt verification byte for ") AT LINE 405 with ID [0200bb9d-aa79]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(slotId) AT LINE 405 with ID [0200bb9d-aa79]
2020-08-25 12:10:03 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 405 with ID [0200bb9d-aa79]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack76.<org.slf4j.Logger: void trace(java.lang.String)>($stack79) AT LINE 405 with ID [0200bb9d-aa79]
2020-08-25 12:10:03 [INFO] - 	 -> $stack70 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 411 with ID [f1bc9540-2258]
2020-08-25 12:10:03 [INFO] - 	 -> $stack71 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receipt verification is not enabled on the DataNode.  Not verifying ") AT LINE 411 with ID [f1bc9540-2258]
2020-08-25 12:10:03 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(slotId) AT LINE 411 with ID [f1bc9540-2258]
2020-08-25 12:10:03 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 411 with ID [f1bc9540-2258]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack70.<org.slf4j.Logger: void trace(java.lang.String)>($stack73) AT LINE 411 with ID [f1bc9540-2258]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.io.TestWritableUtils: void testValue(int,int)> has 10 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = <org.apache.hadoop.io.TestWritableUtils: org.slf4j.Logger LOG> AT LINE 39 with ID [d5c0d90d-cf33]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Value = ") AT LINE 39 with ID [d5c0d90d-cf33]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(val) AT LINE 39 with ID [d5c0d90d-cf33]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 39 with ID [d5c0d90d-cf33]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String)>($stack32) AT LINE 39 with ID [d5c0d90d-cf33]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = <org.apache.hadoop.io.TestWritableUtils: org.slf4j.Logger LOG> AT LINE 42 with ID [396dc367-3c72]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Buffer = ") AT LINE 42 with ID [396dc367-3c72]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(printer) AT LINE 42 with ID [396dc367-3c72]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 42 with ID [396dc367-3c72]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack38.<org.slf4j.Logger: void debug(java.lang.String)>($stack41) AT LINE 42 with ID [396dc367-3c72]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack62 >= 0 goto (branch) at line 292 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack57 < 0 goto (branch) at line 314 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack32 == 0 goto (branch) at line 333 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack28 != $stack29 goto (branch) at line 327 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$PollTimerTask: void run()> has 24 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack87 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: org.apache.commons.logging.Log access$1300()>() AT LINE 301 with ID [1de7e3dc-f850]
2020-08-25 12:10:03 [INFO] - 	 -> $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove ") AT LINE 301 with ID [1de7e3dc-f850]
2020-08-25 12:10:03 [INFO] - 	 -> $stack90 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext: org.apache.hadoop.yarn.api.records.NodeState access$200(org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext)>(d) AT LINE 301 with ID [1de7e3dc-f850]
2020-08-25 12:10:03 [INFO] - 	 -> $stack91 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack90) AT LINE 301 with ID [1de7e3dc-f850]
2020-08-25 12:10:03 [INFO] - 	 -> $stack92 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 301 with ID [1de7e3dc-f850]
2020-08-25 12:10:03 [INFO] - 	 -> $stack93 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext: org.apache.hadoop.yarn.api.records.NodeId access$1200(org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext)>(d) AT LINE 301 with ID [1de7e3dc-f850]
2020-08-25 12:10:03 [INFO] - 	 -> $stack94 = virtualinvoke $stack92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack93) AT LINE 301 with ID [1de7e3dc-f850]
2020-08-25 12:10:03 [INFO] - 	 -> $stack95 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 301 with ID [1de7e3dc-f850]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack87.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack95) AT LINE 301 with ID [1de7e3dc-f850]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: org.apache.commons.logging.Log access$1300()>() AT LINE 309 with ID [13fe0a8a-5e97]
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove ") AT LINE 309 with ID [13fe0a8a-5e97]
2020-08-25 12:10:03 [INFO] - 	 -> $stack81 = interfaceinvoke rmNode.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: org.apache.hadoop.yarn.api.records.NodeState getState()>() AT LINE 309 with ID [13fe0a8a-5e97]
2020-08-25 12:10:03 [INFO] - 	 -> $stack82 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack81) AT LINE 309 with ID [13fe0a8a-5e97]
2020-08-25 12:10:03 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 309 with ID [13fe0a8a-5e97]
2020-08-25 12:10:03 [INFO] - 	 -> $stack84 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext: org.apache.hadoop.yarn.api.records.NodeId access$1200(org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext)>(d) AT LINE 309 with ID [13fe0a8a-5e97]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack84) AT LINE 309 with ID [13fe0a8a-5e97]
2020-08-25 12:10:03 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 309 with ID [13fe0a8a-5e97]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack78.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack86) AT LINE 309 with ID [13fe0a8a-5e97]
2020-08-25 12:10:03 [INFO] - 	 -> $stack65 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: org.apache.commons.logging.Log access$1300()>() AT LINE 317 with ID [32aec94f-3e9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Identified stale and timeout node ") AT LINE 317 with ID [32aec94f-3e9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack68 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext: org.apache.hadoop.yarn.api.records.NodeId access$1200(org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext)>(d) AT LINE 317 with ID [32aec94f-3e9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack68) AT LINE 317 with ID [32aec94f-3e9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 317 with ID [32aec94f-3e9b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack65.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack70) AT LINE 317 with ID [32aec94f-3e9b]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack53 == 0 goto (branch) at line 448 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if dttr == null goto $stack41 = this.<org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer: java.util.concurrent.ConcurrentMap appTokens> at line 509 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack35 == 0 goto (branch) at line 506 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack90 == 0 goto (branch) at line 470 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if ts != null goto $stack19 = <org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer: org.apache.commons.logging.Log LOG> at line 427 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer: void handleAppSubmitEvent(org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer$AbstractDelegationTokenRenewerAppEvent)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack112 = <org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer: org.apache.commons.logging.Log LOG> AT LINE 432 with ID [1f881e42-3f5a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack113 = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registering tokens for renewal for: appId = ") AT LINE 432 with ID [1f881e42-3f5a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack114 = virtualinvoke $stack113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationId) AT LINE 432 with ID [1f881e42-3f5a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack115 = virtualinvoke $stack114.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 432 with ID [1f881e42-3f5a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack112.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack115) AT LINE 432 with ID [1f881e42-3f5a]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack70 == 0 goto (branch) at line 1082 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack26 == 0 goto $stack27 = staticinvoke <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: java.util.Set access$2100(org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl)>(task) at line 1099 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack20 >= $stack21 goto $stack22 = <org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptCompletionEventStatus: org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptCompletionEventStatus TIPFAILED> at line 1071 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl$AttemptFailedTransition: org.apache.hadoop.mapreduce.v2.app.job.TaskStateInternal transition(org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl,org.apache.hadoop.mapreduce.v2.app.job.event.TaskEvent)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = staticinvoke <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: org.apache.commons.logging.Log access$1700()>() AT LINE 1111 with ID [b7304b76-ee08]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not generating HistoryFinish event since start event not generated for task: ") AT LINE 1111 with ID [b7304b76-ee08]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke task.<org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: org.apache.hadoop.mapreduce.v2.api.records.TaskId getID()>() AT LINE 1111 with ID [b7304b76-ee08]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack32) AT LINE 1111 with ID [b7304b76-ee08]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1111 with ID [b7304b76-ee08]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 1111 with ID [b7304b76-ee08]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: void unregisterSlot(int)> has 3 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: org.slf4j.Logger LOG> AT LINE 614 with ID [315aa024-b0e6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(slotIdx) AT LINE 614 with ID [315aa024-b0e6]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: unregisterSlot {}", this, $stack13) AT LINE 614 with ID [315aa024-b0e6]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack41 == 0 goto (branch) at line 641 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack30 != 0 goto (branch) at line 652 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack29 != 0 goto (branch) at line 652 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack28 != 0 goto (branch) at line 652 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack27 != 0 goto (branch) at line 652 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if splitIndex != 0 goto (branch) at line 633 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack25 == 0 goto (branch) at line 633 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if splitIndex > 4 goto return at line 625 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack17 == 0 goto $stack18 = this.<org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: int delegationTokenNodeSplitIndex> at line 632 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void loadRMDelegationTokenState(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 649 with ID [985d1c28-d451]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown child node with name ") AT LINE 649 with ID [985d1c28-d451]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(childNodeName) AT LINE 649 with ID [985d1c28-d451]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" under") AT LINE 649 with ID [985d1c28-d451]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tokenRoot) AT LINE 649 with ID [985d1c28-d451]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 649 with ID [985d1c28-d451]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 649 with ID [985d1c28-d451]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack5 != null goto $stack6 = virtualinvoke resourcesOptions.<java.lang.String: boolean equals(java.lang.Object)>("cgroups=none") at line 368 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DockerLinuxContainerRuntime: void addCGroupParentIfRequired(java.lang.String,java.lang.String,org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker.DockerRunCommand)> has 21 units and 7 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DockerLinuxContainerRuntime: org.slf4j.Logger LOG> AT LINE 369 with ID [ce26be59-e5f4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = interfaceinvoke $stack32.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 369 with ID [ce26be59-e5f4]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack33 == 0 goto return AT LINE 369 with ID [ce26be59-e5f4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DockerLinuxContainerRuntime: org.slf4j.Logger LOG> AT LINE 370 with ID [ce26be59-e5f4]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String)>("cGroupsHandler is null. cgroups are not in use. nothing to do.") AT LINE 370 with ID [ce26be59-e5f4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DockerLinuxContainerRuntime: org.slf4j.Logger LOG> AT LINE 378 with ID [219610cc-aaa8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = interfaceinvoke $stack29.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 378 with ID [219610cc-aaa8]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack30 == 0 goto return AT LINE 378 with ID [219610cc-aaa8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DockerLinuxContainerRuntime: org.slf4j.Logger LOG> AT LINE 379 with ID [219610cc-aaa8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String)>("no resource restrictions specified. not using docker\'s cgroup options") AT LINE 379 with ID [219610cc-aaa8]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= return] AT LINE 379 with ID [219610cc-aaa8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DockerLinuxContainerRuntime: org.slf4j.Logger LOG> AT LINE 383 with ID [1758efd3-506a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = interfaceinvoke $stack7.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 383 with ID [1758efd3-506a]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack8 == 0 goto $stack9 = new java.lang.StringBuilder AT LINE 383 with ID [1758efd3-506a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DockerLinuxContainerRuntime: org.slf4j.Logger LOG> AT LINE 384 with ID [1758efd3-506a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String)>("using docker\'s cgroups options") AT LINE 384 with ID [1758efd3-506a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DockerLinuxContainerRuntime: org.slf4j.Logger LOG> AT LINE 391 with ID [9b14e1cd-a1dc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using cgroup parent: ") AT LINE 391 with ID [9b14e1cd-a1dc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(cGroupPath) AT LINE 391 with ID [9b14e1cd-a1dc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 391 with ID [9b14e1cd-a1dc]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 391 with ID [9b14e1cd-a1dc]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack56 >= 0 goto $stack59 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> at line 685 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack6 != null goto now = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() at line 679 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.util.List getSubdirEntries()> has 38 units and 4 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = newarray (java.lang.Object)[4] AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl this$0> AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: java.lang.String access$400(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl)>($stack58) AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57[0] = $stack62 AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack63 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.lang.String bpid> AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57[1] = $stack63 AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack64 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorState state> AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack66 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorState: java.lang.String access$600(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorState)>($stack64) AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57[2] = $stack66 AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack68 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(delta) AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57[3] = $stack68 AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack59.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("getSubdirEntries({}, {}): purging entries cache for {} after {} ms.", $stack57) AT LINE 688 with ID [c4244601-e2c3]
2020-08-25 12:10:03 [INFO] - 	 -> if entries != null goto $stack28 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 702 with ID [00be4765-7596, bda2b8b3-b803]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 703 with ID [bda2b8b3-b803]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = newarray (java.lang.Object)[3] AT LINE 703 with ID [bda2b8b3-b803]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl this$0> AT LINE 703 with ID [bda2b8b3-b803]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: java.lang.String access$400(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl)>($stack40) AT LINE 703 with ID [bda2b8b3-b803]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39[0] = $stack44 AT LINE 703 with ID [bda2b8b3-b803]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.lang.String bpid> AT LINE 703 with ID [bda2b8b3-b803]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39[1] = $stack45 AT LINE 703 with ID [bda2b8b3-b803]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke delta#2.<java.io.File: java.lang.String getAbsolutePath()>() AT LINE 703 with ID [bda2b8b3-b803]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39[2] = $stack47 AT LINE 703 with ID [bda2b8b3-b803]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack41.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("getSubdirEntries({}, {}): no entries found in {}", $stack39) AT LINE 703 with ID [bda2b8b3-b803]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.util.List cache> = entries] AT LINE 703 with ID [00be4765-7596, bda2b8b3-b803]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = newarray (java.lang.Object)[4] AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl this$0> AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: java.lang.String access$400(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl)>($stack27) AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26[0] = $stack31 AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.lang.String bpid> AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26[1] = $stack32 AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = interfaceinvoke entries.<java.util.List: int size()>() AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack34) AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26[2] = $stack35 AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke delta#2.<java.io.File: java.lang.String getAbsolutePath()>() AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26[3] = $stack37 AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("getSubdirEntries({}, {}): listed {} entries in {}", $stack26) AT LINE 706 with ID [00be4765-7596]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger: void logAuditEvent(boolean,java.lang.String,java.net.InetAddress,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileStatus)> has 36 units and 14 lines
2020-08-25 12:10:03 [INFO] - 	 -> t#2 = $stack12 AT LINE 63 with ID [0009e475-4435]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke t#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allowed=") AT LINE 64 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(succeeded) AT LINE 64 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t") AT LINE 64 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke t#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ugi=") AT LINE 65 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(userName) AT LINE 65 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t") AT LINE 65 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke t#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ip=") AT LINE 66 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(addr) AT LINE 66 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t") AT LINE 66 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke t#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cmd=") AT LINE 67 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(cmd) AT LINE 67 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t") AT LINE 67 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke t#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src=") AT LINE 68 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 68 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t") AT LINE 68 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke t#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dst=") AT LINE 69 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dst) AT LINE 69 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t") AT LINE 69 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> if null != status goto virtualinvoke t#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("perm=") AT LINE 70 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke t#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("perm=null") AT LINE 71 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= $stack41 = <org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger: org.slf4j.Logger LOG>] AT LINE 71 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke t#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("perm=") AT LINE 73 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke status.<org.apache.hadoop.fs.FileStatus: java.lang.String getOwner()>() AT LINE 74 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke t#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32) AT LINE 74 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") AT LINE 74 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke status.<org.apache.hadoop.fs.FileStatus: java.lang.String getGroup()>() AT LINE 75 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke t#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35) AT LINE 75 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") AT LINE 75 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke status.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.permission.FsPermission getPermission()>() AT LINE 76 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke t#2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack38) AT LINE 76 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = <org.apache.hadoop.hdfs.server.namenode.top.TopAuditLogger: org.slf4j.Logger LOG> AT LINE 78 with ID [0009e475-4435]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("------------------- logged event for top service: ") AT LINE 78 with ID [0009e475-4435]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(t#2) AT LINE 78 with ID [0009e475-4435]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 78 with ID [0009e475-4435]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack41.<org.slf4j.Logger: void debug(java.lang.String)>($stack44) AT LINE 78 with ID [0009e475-4435]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack25 >= $stack24 goto $stack26 = new java.lang.StringBuilder at line 500 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack22 == 0 goto specialinvoke this.<org.apache.hadoop.ha.ActiveStandbyElector: void fatalError(java.lang.String)>(errorMessage) at line 508 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = new java.lang.StringBuilder at line 481 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = staticinvoke <org.apache.hadoop.ha.ActiveStandbyElector: boolean isNodeExists(org.apache.zookeeper.KeeperException$Code)>(code) at line 471 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> at line 463 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector: void processResult(int,java.lang.String,java.lang.Object,java.lang.String)> has 20 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 465 with ID [6102dacd-1ca5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CreateNode result: ") AT LINE 465 with ID [6102dacd-1ca5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(rc) AT LINE 465 with ID [6102dacd-1ca5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for path: ") AT LINE 465 with ID [6102dacd-1ca5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 465 with ID [6102dacd-1ca5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" connectionState: ") AT LINE 465 with ID [6102dacd-1ca5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = this.<org.apache.hadoop.ha.ActiveStandbyElector: org.apache.hadoop.ha.ActiveStandbyElector$ConnectionState zkConnectionState> AT LINE 465 with ID [6102dacd-1ca5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack50) AT LINE 465 with ID [6102dacd-1ca5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  for ") AT LINE 465 with ID [6102dacd-1ca5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 465 with ID [6102dacd-1ca5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 465 with ID [6102dacd-1ca5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String)>($stack54) AT LINE 465 with ID [6102dacd-1ca5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 497 with ID [996f7a37-fe13]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>(errorMessage) AT LINE 497 with ID [996f7a37-fe13]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 501 with ID [479b2002-806d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retrying createNode createRetryCount: ") AT LINE 501 with ID [479b2002-806d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = this.<org.apache.hadoop.ha.ActiveStandbyElector: int createRetryCount> AT LINE 501 with ID [479b2002-806d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack35) AT LINE 501 with ID [479b2002-806d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 501 with ID [479b2002-806d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String)>($stack37) AT LINE 501 with ID [479b2002-806d]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if urlHashStr != null goto $stack16 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() at line 1220 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if null != tokenSecret goto enc_str = staticinvoke <org.apache.hadoop.mapreduce.security.SecureShuffleUtils: java.lang.String buildMsgFrom(java.net.URL)>(requestUri) at line 1211 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.ShuffleHandler$Shuffle: void verifyRequest(java.lang.String,org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.handler.codec.http.HttpRequest,org.jboss.netty.handler.codec.http.HttpResponse,java.net.URL)> has 24 units and 4 lines
2020-08-25 12:10:03 [INFO] - 	 -> len = virtualinvoke urlHashStr.<java.lang.String: int length()>() AT LINE 1225 with ID [8564d66f-7e83]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() AT LINE 1226 with ID [8564d66f-7e83]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("verifying request. enc_str=") AT LINE 1226 with ID [8564d66f-7e83]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(enc_str) AT LINE 1226 with ID [8564d66f-7e83]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; hash=...") AT LINE 1226 with ID [8564d66f-7e83]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = len / 2 AT LINE 1226 with ID [8564d66f-7e83]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = len - $stack41 AT LINE 1226 with ID [8564d66f-7e83]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = len - 1 AT LINE 1226 with ID [8564d66f-7e83]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke urlHashStr.<java.lang.String: java.lang.String substring(int,int)>($stack43, $stack42) AT LINE 1226 with ID [8564d66f-7e83]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44) AT LINE 1226 with ID [8564d66f-7e83]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1226 with ID [8564d66f-7e83]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack36.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack46) AT LINE 1226 with ID [8564d66f-7e83]
2020-08-25 12:10:03 [INFO] - 	 -> len = virtualinvoke len.<java.lang.String: int length()>() AT LINE 1242 with ID [7da2357a-551a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() AT LINE 1243 with ID [7da2357a-551a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fetcher request verfied. enc_str=") AT LINE 1243 with ID [7da2357a-551a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(enc_str) AT LINE 1243 with ID [7da2357a-551a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";reply=") AT LINE 1243 with ID [7da2357a-551a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = len / 2 AT LINE 1243 with ID [7da2357a-551a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = len - $stack29 AT LINE 1243 with ID [7da2357a-551a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = len - 1 AT LINE 1243 with ID [7da2357a-551a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke len.<java.lang.String: java.lang.String substring(int,int)>($stack31, $stack30) AT LINE 1243 with ID [7da2357a-551a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32) AT LINE 1243 with ID [7da2357a-551a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1243 with ID [7da2357a-551a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 1243 with ID [7da2357a-551a]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void storeContainerKilled(org.apache.hadoop.yarn.api.records.ContainerId)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 488 with ID [4ecdf67d-0cc8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storeContainerKilled: containerId=") AT LINE 488 with ID [4ecdf67d-0cc8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 488 with ID [4ecdf67d-0cc8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 488 with ID [4ecdf67d-0cc8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 488 with ID [4ecdf67d-0cc8]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack9 <= 0 goto $stack11 = <org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: org.apache.commons.logging.Log LOG> at line 291 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack6 <= 0 goto $stack8 = this.<org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: long usedMemory> at line 267 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: org.apache.hadoop.mapreduce.task.reduce.MapOutput reserve(org.apache.hadoop.mapreduce.TaskAttemptID,long,int)> has 30 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = <org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: org.apache.commons.logging.Log LOG> AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mapId) AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Stalling shuffle since usedMemory (") AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: long usedMemory> AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack30) AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is greater than memoryLimit (") AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = this.<org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: long memoryLimit> AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack33) AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").") AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" CommitMemory is (") AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = this.<org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: long commitMemory> AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack37) AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack40) AT LINE 292 with ID [e3eb7808-9067]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = <org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: org.apache.commons.logging.Log LOG> AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mapId) AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Proceeding with shuffle since usedMemory (") AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: long usedMemory> AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack14) AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is lesser than memoryLimit (") AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = this.<org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: long memoryLimit> AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack17) AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").") AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CommitMemory is (") AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: long commitMemory> AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack21) AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 299 with ID [4721ab8f-dec6]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.EditLogFileInputStream: org.apache.hadoop.hdfs.server.namenode.FSEditLogOp nextOpImpl(boolean)> has 14 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hdfs.server.namenode.EditLogFileInputStream: org.apache.commons.logging.Log LOG> AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("skipping ") AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(skipAmt) AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes at the end ") AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("of edit log  \'") AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke this.<org.apache.hadoop.hdfs.server.namenode.EditLogFileInputStream: java.lang.String getName()>() AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35) AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': reached txid ") AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(e#4) AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of ") AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = this.<org.apache.hadoop.hdfs.server.namenode.EditLogFileInputStream: long lastTxId> AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack40) AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack42) AT LINE 225 with ID [f7ccd965-9015]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack25 == 0 goto $stack26 = this.<org.apache.hadoop.metrics2.impl.MBeanInfoBuilder: int curRecNo> at line 104 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack22 == 0 goto $stack23 = virtualinvoke rec.<org.apache.hadoop.metrics2.impl.MetricsRecordImpl: java.lang.Iterable metrics()>() at line 100 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack9 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.slf4j.Logger LOG> at line 99 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MBeanInfoBuilder: javax.management.MBeanInfo get()> has 4 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.slf4j.Logger LOG> AT LINE 109 with ID [0daf785d-cc20]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.metrics2.impl.MBeanInfoBuilder: java.util.List attrs> AT LINE 109 with ID [0daf785d-cc20]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.Object: java.lang.String toString()>() AT LINE 109 with ID [0daf785d-cc20]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>($stack10) AT LINE 109 with ID [0daf785d-cc20]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack11 != $stack12 goto $stack7 = specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment allocateOrReserveNewContainers(org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet,boolean)>(ps, 0) at line 1419 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment allocateContainersOnMultiNodes(org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet)> has 5 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1412 with ID [28bf439e-b54a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = interfaceinvoke $stack16.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 1412 with ID [28bf439e-b54a]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack17 == 0 goto return null AT LINE 1412 with ID [28bf439e-b54a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1413 with ID [28bf439e-b54a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("This node or this node partition doesn\'t have available orkillable resource") AT LINE 1413 with ID [28bf439e-b54a]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack11 < 1 goto $stack12 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> at line 1496 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack10 <= 0 goto $stack11 = virtualinvoke nr.<org.apache.hadoop.hdfs.server.blockmanagement.NumberReplicas: int liveReplicas()>() at line 1489 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if node != null goto $stack8 = virtualinvoke b.<org.apache.hadoop.hdfs.server.blockmanagement.BlockToMarkCorrupt: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getStored()>() at line 1482 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean invalidateBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockToMarkCorrupt,org.apache.hadoop.hdfs.protocol.DatanodeInfo)> has 14 units and 4 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1480 with ID [d63888c7-aab2]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* invalidateBlock: {} on {}", b, dn) AT LINE 1480 with ID [d63888c7-aab2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1490 with ID [593314ad-fa1a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = newarray (java.lang.Object)[3] AT LINE 1490 with ID [593314ad-fa1a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16[0] = b AT LINE 1490 with ID [593314ad-fa1a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16[1] = dn AT LINE 1490 with ID [593314ad-fa1a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke nr.<org.apache.hadoop.hdfs.server.blockmanagement.NumberReplicas: int replicasOnStaleNodes()>() AT LINE 1490 with ID [593314ad-fa1a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack20) AT LINE 1490 with ID [593314ad-fa1a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16[2] = $stack21 AT LINE 1490 with ID [593314ad-fa1a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* invalidateBlocks: postponing invalidation of {} on {} because {} replica(s) are located on nodes with potentially out-of-date block reports", $stack16) AT LINE 1490 with ID [593314ad-fa1a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1500 with ID [03fb8859-81d9]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* invalidateBlocks: {} on {} listed for deletion.", b, dn) AT LINE 1500 with ID [03fb8859-81d9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1504 with ID [3912f089-f197]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* invalidateBlocks: {} on {} is the only copy and was not deleted", b, dn) AT LINE 1504 with ID [3912f089-f197]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: void setScriptExecutable(org.apache.hadoop.fs.Path,java.lang.String)> has 10 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.commons.logging.Log LOG> AT LINE 622 with ID [fd7f0c79-8269]
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = interfaceinvoke $stack3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 622 with ID [fd7f0c79-8269]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack4 == 0 goto specialinvoke this.<org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor: void setScriptExecutable(org.apache.hadoop.fs.Path,java.lang.String)>(script, owner) AT LINE 622 with ID [fd7f0c79-8269]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.commons.logging.Log LOG> AT LINE 623 with ID [fd7f0c79-8269]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = newarray (java.lang.Object)[2] AT LINE 623 with ID [fd7f0c79-8269]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke script.<org.apache.hadoop.fs.Path: java.lang.String toString()>() AT LINE 623 with ID [fd7f0c79-8269]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6[0] = $stack10 AT LINE 623 with ID [fd7f0c79-8269]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6[1] = owner AT LINE 623 with ID [fd7f0c79-8269]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("setScriptExecutable: %s owner:%s", $stack6) AT LINE 623 with ID [fd7f0c79-8269]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 623 with ID [fd7f0c79-8269]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if dotdotStatus#28 >= $stack75 goto (branch) at line 1656 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if dotdotStatus#28 >= cookieVerf#17 goto $stack56 = new org.apache.hadoop.nfs.nfs3.response.READDIR3Response$DirList3 at line 1664 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if postOpAttr != null goto (branch) at line 1621 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if dotdotStatus != null goto dotdotFileId = virtualinvoke dotdotStatus.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: long getFileId()>() at line 1602 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack130 == 0 goto $stack132 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> at line 1575 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack38 != 0 goto cookieVerf = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.READDIR3Request: long getCookieVerf()>() at line 1568 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if dirStatus != null goto $stack38 = virtualinvoke dirStatus.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: boolean isDir()>() at line 1564 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack33 > 0 goto $stack34 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> at line 1547 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack31 >= 0 goto count = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.READDIR3Request: long getCount()>() at line 1542 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.READDIR3Request: org.apache.hadoop.nfs.nfs3.request.READDIR3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 1528 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack24 != 0 goto $stack25 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache clientCache> at line 1522 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.READDIR3Response readdir(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 12 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack160 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 1553 with ID [9275fb8d-0629]
2020-08-25 12:10:03 [INFO] - 	 -> $stack161 = virtualinvoke $stack159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS READDIR fileId: ") AT LINE 1553 with ID [9275fb8d-0629]
2020-08-25 12:10:03 [INFO] - 	 -> $stack162 = virtualinvoke e#2.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 1553 with ID [9275fb8d-0629]
2020-08-25 12:10:03 [INFO] - 	 -> $stack163 = virtualinvoke $stack161.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack162) AT LINE 1553 with ID [9275fb8d-0629]
2020-08-25 12:10:03 [INFO] - 	 -> $stack164 = virtualinvoke $stack163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cookie: ") AT LINE 1553 with ID [9275fb8d-0629]
2020-08-25 12:10:03 [INFO] - 	 -> $stack165 = virtualinvoke $stack164.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(cookie) AT LINE 1553 with ID [9275fb8d-0629]
2020-08-25 12:10:03 [INFO] - 	 -> $stack166 = virtualinvoke $stack165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count: ") AT LINE 1553 with ID [9275fb8d-0629]
2020-08-25 12:10:03 [INFO] - 	 -> $stack167 = virtualinvoke $stack166.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(count) AT LINE 1553 with ID [9275fb8d-0629]
2020-08-25 12:10:03 [INFO] - 	 -> $stack168 = virtualinvoke $stack167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 1553 with ID [9275fb8d-0629]
2020-08-25 12:10:03 [INFO] - 	 -> $stack169 = virtualinvoke $stack168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 1553 with ID [9275fb8d-0629]
2020-08-25 12:10:03 [INFO] - 	 -> $stack170 = virtualinvoke $stack169.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1553 with ID [9275fb8d-0629]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack160.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack170) AT LINE 1553 with ID [9275fb8d-0629]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: void initFileSystem(java.net.URI)> has 30 units and 8 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 130 with ID [00bae2e5-9bf8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initialized local file as \'") AT LINE 130 with ID [00bae2e5-9bf8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: java.io.File file> AT LINE 130 with ID [00bae2e5-9bf8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack12) AT LINE 130 with ID [00bae2e5-9bf8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.") AT LINE 130 with ID [00bae2e5-9bf8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 130 with ID [00bae2e5-9bf8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 130 with ID [00bae2e5-9bf8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = <org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 132 with ID [060caaec-673a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the local file exists and is size ") AT LINE 132 with ID [060caaec-673a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: java.io.File file> AT LINE 132 with ID [060caaec-673a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.io.File: long length()>() AT LINE 132 with ID [060caaec-673a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack23) AT LINE 132 with ID [060caaec-673a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 132 with ID [060caaec-673a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 132 with ID [060caaec-673a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = <org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 133 with ID [9683a703-b481, 4db8827f-1064]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = interfaceinvoke $stack26.<org.slf4j.Logger: boolean isTraceEnabled()>() AT LINE 133 with ID [9683a703-b481, 4db8827f-1064]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack27 == 0 goto (branch) AT LINE 133 with ID [9683a703-b481, 4db8827f-1064]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = this.<org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: java.io.File file> AT LINE 134 with ID [9683a703-b481]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.io.File: boolean canRead()>() AT LINE 134 with ID [9683a703-b481]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack29 == 0 goto $stack30 = this.<org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: java.io.File file> AT LINE 134 with ID [9683a703-b481]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = <org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 135 with ID [9683a703-b481]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void trace(java.lang.String)>("we can read the local file.") AT LINE 135 with ID [9683a703-b481]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: java.io.File file> AT LINE 137 with ID [4db8827f-1064]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.io.File: boolean canWrite()>() AT LINE 137 with ID [4db8827f-1064]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack31 == 0 goto (branch) AT LINE 137 with ID [4db8827f-1064]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = <org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 138 with ID [4db8827f-1064]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void trace(java.lang.String)>("we can write the local file.") AT LINE 138 with ID [4db8827f-1064]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= (branch)] AT LINE 138 with ID [4db8827f-1064]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 142 with ID [68d7ca39-e2e1]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>("the local file does not exist.") AT LINE 142 with ID [68d7ca39-e2e1]
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.ha.HAAdmin: int run(java.lang.String[])>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack20 != 0 goto $stack21 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> at line 1147 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if blocks != null goto $stack20 = lengthof blocks at line 1145 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack68 != 0 goto (branch) at line 1146 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.protocol.LocatedBlocks createLocatedBlocks(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[],long,boolean,long,long,boolean,boolean,org.apache.hadoop.fs.FileEncryptionInfo)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 1152 with ID [53a07457-9645]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blocks = ") AT LINE 1152 with ID [53a07457-9645]
2020-08-25 12:10:03 [INFO] - 	 -> $stack60 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(blocks) AT LINE 1152 with ID [53a07457-9645]
2020-08-25 12:10:03 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack60) AT LINE 1152 with ID [53a07457-9645]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1152 with ID [53a07457-9645]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack58.<org.slf4j.Logger: void debug(java.lang.String)>($stack62) AT LINE 1152 with ID [53a07457-9645]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if maxSequentialBlockId#48 != 0 goto virtualinvoke in.<java.io.DataInputStream: void close()>() at line 448 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack32 == imgVersion goto $stack33 = <org.apache.hadoop.hdfs.protocol.LayoutVersion$Feature: org.apache.hadoop.hdfs.protocol.LayoutVersion$Feature SNAPSHOT> at line 326 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if curFile != null goto prog = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNode: org.apache.hadoop.hdfs.server.namenode.startupprogress.StartupProgress getStartupProgress()>() at line 327 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSImageFormat$Loader: void load(java.io.File)> has 10 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack147 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSImageFormat: org.apache.commons.logging.Log access$000()>() AT LINE 385 with ID [786234ba-b21d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack149 = virtualinvoke $stack148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("load last allocated InodeId from fsimage:") AT LINE 385 with ID [786234ba-b21d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack150 = virtualinvoke $stack149.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(stampAtIdSwitch) AT LINE 385 with ID [786234ba-b21d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack151 = virtualinvoke $stack150.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 385 with ID [786234ba-b21d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack147.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack151) AT LINE 385 with ID [786234ba-b21d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSImageFormat: org.apache.commons.logging.Log access$000()>() AT LINE 388 with ID [d1c3d74b-6ff2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = interfaceinvoke $stack55.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 388 with ID [d1c3d74b-6ff2]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack56 == 0 goto (branch) AT LINE 388 with ID [d1c3d74b-6ff2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack140 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSImageFormat: org.apache.commons.logging.Log access$000()>() AT LINE 389 with ID [d1c3d74b-6ff2]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack140.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Old layout version doesn\'t have inode id. Will assign new id for each inode.") AT LINE 389 with ID [d1c3d74b-6ff2]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack22 == 0 goto return 0 at line 144 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if aclExt != null goto owner = staticinvoke <org.apache.hadoop.yarn.server.timeline.security.TimelineACLsManager$AccessControlListExt: java.lang.String access$000(org.apache.hadoop.yarn.server.timeline.security.TimelineACLsManager$AccessControlListExt)>(aclExt) at line 122 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack10 != 0 goto $stack11 = this.<org.apache.hadoop.yarn.server.timeline.security.TimelineACLsManager: java.util.Map aclExts> at line 113 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.security.TimelineACLsManager: boolean checkAccess(org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.yarn.api.records.ApplicationAccessType,org.apache.hadoop.yarn.api.records.timeline.TimelineEntity)> has 24 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = <org.apache.hadoop.yarn.server.timeline.security.TimelineACLsManager: org.slf4j.Logger LOG> AT LINE 107 with ID [93977772-519c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Verifying the access of ") AT LINE 107 with ID [93977772-519c]
2020-08-25 12:10:03 [INFO] - 	 -> if callerUGI != null goto $stack57 = virtualinvoke callerUGI.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getShortUserName()>() AT LINE 107 with ID [93977772-519c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = null AT LINE 113 with ID [93977772-519c]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack57)] AT LINE 113 with ID [93977772-519c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = virtualinvoke callerUGI.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getShortUserName()>() AT LINE 107 with ID [93977772-519c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack57) AT LINE 107 with ID [93977772-519c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on the timeline entity ") AT LINE 107 with ID [93977772-519c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack63 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack60) AT LINE 107 with ID [93977772-519c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 107 with ID [93977772-519c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack55.<org.slf4j.Logger: void debug(java.lang.String)>($stack64) AT LINE 107 with ID [93977772-519c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = <org.apache.hadoop.yarn.server.timeline.security.TimelineACLsManager: org.slf4j.Logger LOG> AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACL not found for access-type ") AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationAccessType) AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for domain ") AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke entity.<org.apache.hadoop.yarn.api.records.timeline.TimelineEntity: java.lang.String getDomainId()>() AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33) AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" owned by ") AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(owner) AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Using default [") AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String)>($stack40) AT LINE 131 with ID [cdd025a4-62ce]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.timelineservice.NMTimelinePublisher: void publishApplicationEvent(org.apache.hadoop.yarn.server.nodemanager.containermanager.application.ApplicationEvent)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = <org.apache.hadoop.yarn.server.nodemanager.timelineservice.NMTimelinePublisher: org.apache.commons.logging.Log LOG> AT LINE 324 with ID [c7981469-6448]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke event.<org.apache.hadoop.yarn.server.nodemanager.containermanager.application.ApplicationEvent: java.lang.Enum getType()>() AT LINE 324 with ID [c7981469-6448]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack15) AT LINE 324 with ID [c7981469-6448]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a desired ApplicationEvent which") AT LINE 324 with ID [c7981469-6448]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" needs to be published by NMTimelinePublisher") AT LINE 324 with ID [c7981469-6448]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 324 with ID [c7981469-6448]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 324 with ID [c7981469-6448]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack14 == 0 goto return 0 at line 299 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack18 == 0 goto (branch) at line 301 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack22 == 0 goto (branch) at line 303 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack71 == 0 goto (branch) at line 264 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack57 == 0 goto (branch) at line 277 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack43 == 0 goto (branch) at line 287 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if null == $stack39 goto (branch) at line 286 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack37 == 0 goto $stack39 = virtualinvoke c#4.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ContainerAllocationProposal: org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer getAllocateFromReservedContainer()>() at line 275 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = virtualinvoke request.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ResourceCommitRequest: java.util.List getContainersToReserve()>() at line 273 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = virtualinvoke request.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ResourceCommitRequest: java.util.List getContainersToAllocate()>() at line 262 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: boolean anyContainerInFinalState(org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ResourceCommitRequest)> has 29 units and 4 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack76 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 266 with ID [0de57652-59cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To-release container=") AT LINE 266 with ID [0de57652-59cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = virtualinvoke c.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer getRmContainer()>() AT LINE 266 with ID [0de57652-59cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack79 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack78) AT LINE 266 with ID [0de57652-59cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is in final state") AT LINE 266 with ID [0de57652-59cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 266 with ID [0de57652-59cb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack76.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack81) AT LINE 266 with ID [0de57652-59cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 279 with ID [8c7fe094-d88c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To-release container=") AT LINE 279 with ID [8c7fe094-d88c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack64 = virtualinvoke r.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer getRmContainer()>() AT LINE 279 with ID [8c7fe094-d88c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack65 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack64) AT LINE 279 with ID [8c7fe094-d88c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", for to a new allocated container, is in final state") AT LINE 279 with ID [8c7fe094-d88c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 279 with ID [8c7fe094-d88c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack62.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack67) AT LINE 279 with ID [8c7fe094-d88c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 290 with ID [4cd987a1-ba31]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Allocate from reserved container") AT LINE 290 with ID [4cd987a1-ba31]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke c#4.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ContainerAllocationProposal: org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer getAllocateFromReservedContainer()>() AT LINE 290 with ID [4cd987a1-ba31]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer getRmContainer()>() AT LINE 290 with ID [4cd987a1-ba31]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack50) AT LINE 290 with ID [4cd987a1-ba31]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is in final state") AT LINE 290 with ID [4cd987a1-ba31]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 290 with ID [4cd987a1-ba31]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack47.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack53) AT LINE 290 with ID [4cd987a1-ba31]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 305 with ID [e7239854-d4ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To-release container=") AT LINE 305 with ID [e7239854-d4ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke r.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer getRmContainer()>() AT LINE 305 with ID [e7239854-d4ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack29) AT LINE 305 with ID [e7239854-d4ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", for a reserved container, is in final state") AT LINE 305 with ID [e7239854-d4ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 305 with ID [e7239854-d4ed]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 305 with ID [e7239854-d4ed]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: void adjustCrcChannelPosition(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.server.datanode.fsdataset.ReplicaOutputStreams,int)> has 9 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 1747 with ID [7de35906-2e60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Changing meta file offset of block ") AT LINE 1747 with ID [7de35906-2e60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(b) AT LINE 1747 with ID [7de35906-2e60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ") AT LINE 1747 with ID [7de35906-2e60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(oldPos) AT LINE 1747 with ID [7de35906-2e60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 1747 with ID [7de35906-2e60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(newPos) AT LINE 1747 with ID [7de35906-2e60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1747 with ID [7de35906-2e60]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 1747 with ID [7de35906-2e60]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack23 == null goto (branch) at line 846 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: void removeStoredToken(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier)> has 11 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 841 with ID [cedc0ad0-d3b8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing ZKDTSMDelegationToken_") AT LINE 841 with ID [cedc0ad0-d3b8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke ident.<org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 841 with ID [cedc0ad0-d3b8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack33) AT LINE 841 with ID [cedc0ad0-d3b8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 841 with ID [cedc0ad0-d3b8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String)>($stack35) AT LINE 841 with ID [cedc0ad0-d3b8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 858 with ID [44a170d5-8bd1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to remove a non-existing znode ") AT LINE 858 with ID [44a170d5-8bd1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodeRemovePath) AT LINE 858 with ID [44a170d5-8bd1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 858 with ID [44a170d5-8bd1]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 858 with ID [44a170d5-8bd1]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack13 == 0 goto return at line 320 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack21 == 0 goto (branch) at line 327 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: void preemptOrkillSelectedContainerAfterWait(java.util.Map,long)> has 16 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack65 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> AT LINE 314 with ID [c9401705-bd65]
2020-08-25 12:10:03 [INFO] - 	 -> $stack66 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting to preempt containers for selectedCandidates and size:") AT LINE 314 with ID [c9401705-bd65]
2020-08-25 12:10:03 [INFO] - 	 -> $stack67 = interfaceinvoke selectedCandidates.<java.util.Map: int size()>() AT LINE 314 with ID [c9401705-bd65]
2020-08-25 12:10:03 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack67) AT LINE 314 with ID [c9401705-bd65]
2020-08-25 12:10:03 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 314 with ID [c9401705-bd65]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack65.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack69) AT LINE 314 with ID [c9401705-bd65]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> AT LINE 324 with ID [0d41fc63-92bb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Send to scheduler: in app=") AT LINE 324 with ID [0d41fc63-92bb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appAttemptId) AT LINE 324 with ID [0d41fc63-92bb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #containers-to-be-preemptionCandidates=") AT LINE 324 with ID [0d41fc63-92bb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>() AT LINE 324 with ID [0d41fc63-92bb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = (java.util.Set) $stack58 AT LINE 324 with ID [0d41fc63-92bb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack60 = interfaceinvoke $stack59.<java.util.Set: int size()>() AT LINE 324 with ID [0d41fc63-92bb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack61 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack60) AT LINE 324 with ID [0d41fc63-92bb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 324 with ID [0d41fc63-92bb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack54.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack62) AT LINE 324 with ID [0d41fc63-92bb]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: void writeDomain(org.apache.hadoop.yarn.api.records.ApplicationAttemptId,org.apache.hadoop.yarn.api.records.timeline.TimelineDomain)> has 8 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: org.apache.commons.logging.Log LOG> AT LINE 301 with ID [93a64f73-3652]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing domains for ") AT LINE 301 with ID [93a64f73-3652]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke appAttemptId.<org.apache.hadoop.yarn.api.records.ApplicationAttemptId: java.lang.String toString()>() AT LINE 301 with ID [93a64f73-3652]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 301 with ID [93a64f73-3652]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 301 with ID [93a64f73-3652]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(domainLogPath) AT LINE 301 with ID [93a64f73-3652]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 301 with ID [93a64f73-3652]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack25) AT LINE 301 with ID [93a64f73-3652]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= length goto virtualinvoke writer.<java.io.Writer: void close()>() at line 192 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if length >= 500000 goto return at line 183 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= 3 goto $stack64 = virtualinvoke random.<java.util.Random: int nextInt(int)>(125000) at line 205 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if j >= $stack82 goto $stack84 = (long) length at line 213 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack113 == 0 goto (branch) at line 230 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.input.TestMRKeyValueTextInputFormat: void testSplitableCodecs()> has 25 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack90 = <org.apache.hadoop.mapreduce.lib.input.TestMRKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 214 with ID [01598f3a-73ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack91 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("split[") AT LINE 214 with ID [01598f3a-73ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack92 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j) AT LINE 214 with ID [01598f3a-73ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack93 = virtualinvoke $stack92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]= ") AT LINE 214 with ID [01598f3a-73ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack94 = interfaceinvoke splits.<java.util.List: java.lang.Object get(int)>(j) AT LINE 214 with ID [01598f3a-73ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack95 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack94) AT LINE 214 with ID [01598f3a-73ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack96 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 214 with ID [01598f3a-73ce]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack90.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack96) AT LINE 214 with ID [01598f3a-73ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack149 = <org.apache.hadoop.mapreduce.lib.input.TestMRKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 237 with ID [bb4b6299-b280]
2020-08-25 12:10:03 [INFO] - 	 -> $stack150 = virtualinvoke $stack148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read ") AT LINE 237 with ID [bb4b6299-b280]
2020-08-25 12:10:03 [INFO] - 	 -> $stack151 = virtualinvoke $stack150.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(k) AT LINE 237 with ID [bb4b6299-b280]
2020-08-25 12:10:03 [INFO] - 	 -> $stack152 = virtualinvoke $stack151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",") AT LINE 237 with ID [bb4b6299-b280]
2020-08-25 12:10:03 [INFO] - 	 -> $stack153 = virtualinvoke $stack152.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v) AT LINE 237 with ID [bb4b6299-b280]
2020-08-25 12:10:03 [INFO] - 	 -> $stack154 = virtualinvoke $stack153.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 237 with ID [bb4b6299-b280]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack149.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack154) AT LINE 237 with ID [bb4b6299-b280]
2020-08-25 12:10:03 [INFO] - 	 -> $stack115 = <org.apache.hadoop.mapreduce.lib.input.TestMRKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 245 with ID [934075f8-65ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack116 = virtualinvoke $stack114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splits[") AT LINE 245 with ID [934075f8-65ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack117 = virtualinvoke $stack116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j) AT LINE 245 with ID [934075f8-65ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack118 = virtualinvoke $stack117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=") AT LINE 245 with ID [934075f8-65ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack119 = interfaceinvoke splits.<java.util.List: java.lang.Object get(int)>(j) AT LINE 245 with ID [934075f8-65ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack120 = virtualinvoke $stack118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack119) AT LINE 245 with ID [934075f8-65ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack121 = virtualinvoke $stack120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=") AT LINE 245 with ID [934075f8-65ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack122 = virtualinvoke $stack121.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 245 with ID [934075f8-65ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack123 = virtualinvoke $stack122.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 245 with ID [934075f8-65ce]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack115.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack123) AT LINE 245 with ID [934075f8-65ce]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$#7 >= $stack30 goto (branch) at line 613 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack65 == 0 goto $stack12 = this.<org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.apache.hadoop.yarn.api.ApplicationMasterProtocol homeRM> at line 577 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.apache.hadoop.yarn.api.protocolrecords.FinishApplicationMasterResponse finishApplicationMaster(org.apache.hadoop.yarn.api.protocolrecords.FinishApplicationMasterRequest)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.slf4j.Logger LOG> AT LINE 618 with ID [a3603027-d14b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received finish application response from RM: ") AT LINE 618 with ID [a3603027-d14b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = virtualinvoke uamResponse.<org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor$FinishApplicationMasterResponseInfo: java.lang.String getSubClusterId()>() AT LINE 618 with ID [a3603027-d14b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack54) AT LINE 618 with ID [a3603027-d14b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 618 with ID [a3603027-d14b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack52.<org.slf4j.Logger: void debug(java.lang.String)>($stack56) AT LINE 618 with ID [a3603027-d14b]
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.apache.hadoop.hdfs.server.namenode.FSEditLogOp readOp(org.apache.hadoop.hdfs.server.namenode.EditLogInputStream)>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack17 == 0 goto virtualinvoke this.<org.apache.hadoop.service.launcher.ServiceLauncher: void bindCommandOptions()>() at line 294 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack9 == 0 goto i$#3 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>() at line 282 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.service.launcher.ServiceLauncher: void launchServiceAndExit(java.util.List)> has 9 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 286 with ID [d9410c7a-98db, d877983c-909e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = interfaceinvoke $stack11.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 286 with ID [d9410c7a-98db, d877983c-909e]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack12 == 0 goto virtualinvoke this.<org.apache.hadoop.service.launcher.ServiceLauncher: void registerFailureHandling()>() AT LINE 286 with ID [d9410c7a-98db, d877983c-909e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 287 with ID [d877983c-909e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = this.<org.apache.hadoop.service.launcher.ServiceLauncher: java.lang.String serviceName> AT LINE 287 with ID [d877983c-909e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = staticinvoke <org.apache.hadoop.service.launcher.ServiceLauncher: java.lang.String startupShutdownMessage(java.lang.String,java.util.List)>($stack34, args) AT LINE 287 with ID [d877983c-909e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String)>($stack36) AT LINE 287 with ID [d877983c-909e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 288 with ID [d9410c7a-98db]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack37.<org.slf4j.Logger: void debug(java.lang.String)>(i$#3) AT LINE 288 with ID [d9410c7a-98db]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack33 <= 0 goto $stack34 = this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.apache.hadoop.hdfs.server.datanode.VolumeScanner$Statistics stats> at line 518 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if block != null goto $stack113 = this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi$BlockIterator curBlockIter> at line 543 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack110 == 0 goto $stack111 = this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi$BlockIterator curBlockIter> at line 574 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack30 != 0 goto (branch) at line 505 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: long runLoop(org.apache.hadoop.hdfs.protocol.ExtendedBlock)> has 11 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack71 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 519 with ID [1736c15c-9677]
2020-08-25 12:10:03 [INFO] - 	 -> $stack73 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(timeout) AT LINE 519 with ID [1736c15c-9677]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack71.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: no block pools are ready to scan yet.  Waiting {} ms.", this, $stack73) AT LINE 519 with ID [1736c15c-9677]
2020-08-25 12:10:03 [INFO] - 	 -> $stack174 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 554 with ID [515bbb12-4595]
2020-08-25 12:10:03 [INFO] - 	 -> $stack172 = newarray (java.lang.Object)[3] AT LINE 554 with ID [515bbb12-4595]
2020-08-25 12:10:03 [INFO] - 	 -> $stack172[0] = this AT LINE 554 with ID [515bbb12-4595]
2020-08-25 12:10:03 [INFO] - 	 -> $stack173 = this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi$BlockIterator curBlockIter> AT LINE 554 with ID [515bbb12-4595]
2020-08-25 12:10:03 [INFO] - 	 -> $stack172[1] = $stack173 AT LINE 554 with ID [515bbb12-4595]
2020-08-25 12:10:03 [INFO] - 	 -> $stack177 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(timeout) AT LINE 554 with ID [515bbb12-4595]
2020-08-25 12:10:03 [INFO] - 	 -> $stack172[2] = $stack177 AT LINE 554 with ID [515bbb12-4595]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack174.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: saving block iterator {} after {} ms.", $stack172) AT LINE 554 with ID [515bbb12-4595]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler$FlushTimerTask: void run()> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = staticinvoke <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.commons.logging.Log access$200()>() AT LINE 1471 with ID [95669ab5-454e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("In flush timer task") AT LINE 1471 with ID [95669ab5-454e]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: void childAddStorage(java.lang.String,org.apache.hadoop.fs.StorageType)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: org.slf4j.Logger LOG> AT LINE 384 with ID [7e7ebf7b-0d59]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("child add storage: {}:{}", childName, type) AT LINE 384 with ID [7e7ebf7b-0d59]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack59 != $stack60 goto $stack61 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.activities.ActivitiesManager activitiesManager> at line 1164 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack57 != $stack58 goto $stack59 = virtualinvoke assignment.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment$SkippedType getSkippedType()>() at line 1158 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack56 == 0 goto $stack57 = virtualinvoke assignment.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment$SkippedType getSkippedType()>() at line 1152 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack24 != 0 goto $stack25 = new java.util.HashMap at line 1063 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack166 != 0 goto $stack23 = interfaceinvoke ps.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet: java.lang.String getPartition()>() at line 1073 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if null == assignment goto $stack22 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode RESPECT_PARTITION_EXCLUSIVITY> at line 1047 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment assignContainers(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode)> has 28 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack183 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 1038 with ID [5a2e47e1-8942]
2020-08-25 12:10:03 [INFO] - 	 -> $stack184 = virtualinvoke $stack182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("assignContainers: partition=") AT LINE 1038 with ID [5a2e47e1-8942]
2020-08-25 12:10:03 [INFO] - 	 -> $stack185 = interfaceinvoke ps.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet: java.lang.String getPartition()>() AT LINE 1038 with ID [5a2e47e1-8942]
2020-08-25 12:10:03 [INFO] - 	 -> $stack186 = virtualinvoke $stack184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack185) AT LINE 1038 with ID [5a2e47e1-8942]
2020-08-25 12:10:03 [INFO] - 	 -> $stack187 = virtualinvoke $stack186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #applications=") AT LINE 1038 with ID [5a2e47e1-8942]
2020-08-25 12:10:03 [INFO] - 	 -> $stack188 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.policy.OrderingPolicy orderingPolicy> AT LINE 1038 with ID [5a2e47e1-8942]
2020-08-25 12:10:03 [INFO] - 	 -> $stack189 = interfaceinvoke $stack188.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.policy.OrderingPolicy: int getNumSchedulableEntities()>() AT LINE 1038 with ID [5a2e47e1-8942]
2020-08-25 12:10:03 [INFO] - 	 -> $stack190 = virtualinvoke $stack187.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack189) AT LINE 1038 with ID [5a2e47e1-8942]
2020-08-25 12:10:03 [INFO] - 	 -> $stack191 = virtualinvoke $stack190.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1038 with ID [5a2e47e1-8942]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack183.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack191) AT LINE 1038 with ID [5a2e47e1-8942]
2020-08-25 12:10:03 [INFO] - 	 -> $stack149 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 1066 with ID [30dcdd99-9a88]
2020-08-25 12:10:03 [INFO] - 	 -> $stack150 = virtualinvoke $stack148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip this queue=") AT LINE 1066 with ID [30dcdd99-9a88]
2020-08-25 12:10:03 [INFO] - 	 -> $stack151 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: java.lang.String getQueuePath()>() AT LINE 1066 with ID [30dcdd99-9a88]
2020-08-25 12:10:03 [INFO] - 	 -> $stack152 = virtualinvoke $stack150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack151) AT LINE 1066 with ID [30dcdd99-9a88]
2020-08-25 12:10:03 [INFO] - 	 -> $stack153 = virtualinvoke $stack152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", because it doesn\'t need more resource, schedulingMode=") AT LINE 1066 with ID [30dcdd99-9a88]
2020-08-25 12:10:03 [INFO] - 	 -> $stack154 = virtualinvoke schedulingMode.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode: java.lang.String name()>() AT LINE 1066 with ID [30dcdd99-9a88]
2020-08-25 12:10:03 [INFO] - 	 -> $stack155 = virtualinvoke $stack153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack154) AT LINE 1066 with ID [30dcdd99-9a88]
2020-08-25 12:10:03 [INFO] - 	 -> $stack156 = virtualinvoke $stack155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node-partition=") AT LINE 1066 with ID [30dcdd99-9a88]
2020-08-25 12:10:03 [INFO] - 	 -> $stack157 = interfaceinvoke ps.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet: java.lang.String getPartition()>() AT LINE 1066 with ID [30dcdd99-9a88]
2020-08-25 12:10:03 [INFO] - 	 -> $stack158 = virtualinvoke $stack156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack157) AT LINE 1066 with ID [30dcdd99-9a88]
2020-08-25 12:10:03 [INFO] - 	 -> $stack159 = virtualinvoke $stack158.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1066 with ID [30dcdd99-9a88]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack149.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack159) AT LINE 1066 with ID [30dcdd99-9a88]
2020-08-25 12:10:03 [INFO] - 	 -> $stack83 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 1144 with ID [1dce5de2-563b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack84 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("post-assignContainers for application ") AT LINE 1144 with ID [1dce5de2-563b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 1144 with ID [1dce5de2-563b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack86 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack85) AT LINE 1144 with ID [1dce5de2-563b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1144 with ID [1dce5de2-563b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack83.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack87) AT LINE 1144 with ID [1dce5de2-563b]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: org.apache.hadoop.fs.permission.FsPermission tryLoadFromPath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 195 with ID [b7adc1f2-0e61]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>("KeyStore loaded successfully !!") AT LINE 195 with ID [b7adc1f2-0e61]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC: org.apache.hadoop.ipc.Server getServer(java.lang.Class,java.lang.Object,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.token.SecretManager,int,java.lang.String)> has 8 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC: org.apache.commons.logging.Log LOG> AT LINE 62 with ID [5b07ed6f-3ef9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating a HadoopYarnProtoRpc server for protocol ") AT LINE 62 with ID [5b07ed6f-3ef9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(protocol) AT LINE 62 with ID [5b07ed6f-3ef9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ") AT LINE 62 with ID [5b07ed6f-3ef9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numHandlers) AT LINE 62 with ID [5b07ed6f-3ef9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" handlers") AT LINE 62 with ID [5b07ed6f-3ef9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 62 with ID [5b07ed6f-3ef9]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 62 with ID [5b07ed6f-3ef9]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack33 == 0 goto $stack23 = this.<org.apache.hadoop.hdfs.server.datanode.metrics.DataNodeDiskMetrics$1: org.apache.hadoop.hdfs.server.datanode.metrics.DataNodeDiskMetrics this$0> at line 115 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack21 == 0 goto (branch) at line 82 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack12 == 0 goto return at line 73 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.metrics.DataNodeDiskMetrics$1: void run()> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.server.datanode.metrics.DataNodeDiskMetrics: org.slf4j.Logger LOG> AT LINE 103 with ID [6de0c42e-c5e5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String)>("No disk stats available for detecting outliers.") AT LINE 103 with ID [6de0c42e-c5e5]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack21 != 0 goto $stack5 = virtualinvoke file.<org.apache.hadoop.hdfs.server.namenode.INodeFile: boolean isUnderConstruction()>() at line 109 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: void persistBlocks(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile,boolean)> has 11 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 105 with ID [fcc9cc47-a5ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("persistBlocks: ") AT LINE 105 with ID [fcc9cc47-a5ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 105 with ID [fcc9cc47-a5ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ") AT LINE 105 with ID [fcc9cc47-a5ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke file.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[] getBlocks()>() AT LINE 105 with ID [fcc9cc47-a5ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = lengthof $stack14 AT LINE 105 with ID [fcc9cc47-a5ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15) AT LINE 105 with ID [fcc9cc47-a5ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" blocks is persisted to") AT LINE 105 with ID [fcc9cc47-a5ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" the file system") AT LINE 105 with ID [fcc9cc47-a5ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 105 with ID [fcc9cc47-a5ad]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 105 with ID [fcc9cc47-a5ad]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if null == $stack97 goto this.<org.apache.hadoop.hdfs.DataStreamer: java.io.DataOutputStream blockStream> = out at line 1810 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack108 != 0 goto $stack84 = new java.lang.StringBuilder at line 1802 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if null == $stack145 goto $stack33 = nodes[0] at line 1727 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if null == $stack179 goto $stack30 = <org.apache.hadoop.hdfs.DataStreamer: boolean $assertionsDisabled> at line 1717 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack25 != 0 goto firstBadLink = "" at line 1679 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DataStreamer: boolean createBlockOutputStream(org.apache.hadoop.hdfs.protocol.DatanodeInfo[],org.apache.hadoop.fs.StorageType[],long,boolean)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack182 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 1686 with ID [3e0cf12f-49ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack183 = virtualinvoke $stack181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pipeline = ") AT LINE 1686 with ID [3e0cf12f-49ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack184 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(nodes) AT LINE 1686 with ID [3e0cf12f-49ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack185 = virtualinvoke $stack183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack184) AT LINE 1686 with ID [3e0cf12f-49ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack186 = virtualinvoke $stack185.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1686 with ID [3e0cf12f-49ed]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack182.<org.slf4j.Logger: void debug(java.lang.String)>($stack186) AT LINE 1686 with ID [3e0cf12f-49ed]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.security.LocalizerTokenSelector: org.slf4j.Logger LOG> at line 43 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack14 == 0 goto (branch) at line 47 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.security.LocalizerTokenSelector: org.apache.hadoop.security.token.Token selectToken(org.apache.hadoop.io.Text,java.util.Collection)> has 11 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.security.LocalizerTokenSelector: org.slf4j.Logger LOG> AT LINE 41 with ID [a0e8913a-a902]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>("Using localizerTokenSelector.") AT LINE 41 with ID [a0e8913a-a902]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.security.LocalizerTokenSelector: org.slf4j.Logger LOG> AT LINE 45 with ID [52577dcd-06b1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token of kind ") AT LINE 45 with ID [52577dcd-06b1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getKind()>() AT LINE 45 with ID [52577dcd-06b1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 45 with ID [52577dcd-06b1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is found") AT LINE 45 with ID [52577dcd-06b1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 45 with ID [52577dcd-06b1]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 45 with ID [52577dcd-06b1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.security.LocalizerTokenSelector: org.slf4j.Logger LOG> AT LINE 51 with ID [94a496aa-f5b6]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>("Returning null.") AT LINE 51 with ID [94a496aa-f5b6]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: void editSchedule()> has 11 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.hadoop.yarn.util.Clock clock> AT LINE 298 with ID [dcba3b7a-9a7c]
2020-08-25 12:10:03 [INFO] - 	 -> startTs = interfaceinvoke $stack5.<org.apache.hadoop.yarn.util.Clock: long getTime()>() AT LINE 298 with ID [dcba3b7a-9a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> AT LINE 305 with ID [dcba3b7a-9a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total time used=") AT LINE 305 with ID [dcba3b7a-9a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.hadoop.yarn.util.Clock clock> AT LINE 305 with ID [dcba3b7a-9a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = interfaceinvoke $stack17.<org.apache.hadoop.yarn.util.Clock: long getTime()>() AT LINE 305 with ID [dcba3b7a-9a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = $stack18 - startTs AT LINE 305 with ID [dcba3b7a-9a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack19) AT LINE 305 with ID [dcba3b7a-9a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms.") AT LINE 305 with ID [dcba3b7a-9a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 305 with ID [dcba3b7a-9a7c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 305 with ID [dcba3b7a-9a7c]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.apache.zookeeper.data.ACL createACLfromUsername(java.lang.String,int)> has 5 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 959 with ID [68550339-c313]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = interfaceinvoke $stack16.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 959 with ID [68550339-c313]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack17 == 0 goto $stack4 = new org.apache.zookeeper.data.ACL AT LINE 959 with ID [68550339-c313]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 960 with ID [68550339-c313]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Appending kerberos realm to make {}", username) AT LINE 960 with ID [68550339-c313]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack57 == checksumsLen goto $stack37 = virtualinvoke curHeader.<org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader: long getSeqno()>() at line 225 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = virtualinvoke curHeader.<org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader: int getDataLen()>() at line 196 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack77 == $stack78 goto $stack11 = <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote2: org.slf4j.Logger LOG> at line 197 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote2: void readNextPacket()> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote2: org.slf4j.Logger LOG> AT LINE 193 with ID [710eb170-d81d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("DFSClient readNextPacket got header {}", curHeader) AT LINE 193 with ID [710eb170-d81d]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack14 == 0 goto return at line 836 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: void addDirectoryToJobListCache(org.apache.hadoop.fs.Path)> has 12 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log LOG> AT LINE 832 with ID [2cb617c9-f927]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding ") AT LINE 832 with ID [2cb617c9-f927]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(path) AT LINE 832 with ID [2cb617c9-f927]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to job list cache.") AT LINE 832 with ID [2cb617c9-f927]
2020-08-25 12:10:03 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 832 with ID [2cb617c9-f927]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack56.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack60) AT LINE 832 with ID [2cb617c9-f927]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log LOG> AT LINE 838 with ID [a3bca9fa-b53a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding in history for ") AT LINE 838 with ID [a3bca9fa-b53a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke fs.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() AT LINE 838 with ID [a3bca9fa-b53a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack39) AT LINE 838 with ID [a3bca9fa-b53a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 838 with ID [a3bca9fa-b53a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack41) AT LINE 838 with ID [a3bca9fa-b53a]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: void updateResourceUsagePerUser(org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager$User,org.apache.hadoop.yarn.api.records.Resource,java.lang.String,boolean)> has 12 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.commons.logging.Log LOG> AT LINE 1094 with ID [1b7374e2-c4ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User resource is updated.Total Resource usage for active users=") AT LINE 1094 with ID [1b7374e2-c4ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage totalResUsageForActiveUsers> AT LINE 1094 with ID [1b7374e2-c4ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getAllUsed()>() AT LINE 1094 with ID [1b7374e2-c4ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack15) AT LINE 1094 with ID [1b7374e2-c4ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") AT LINE 1094 with ID [1b7374e2-c4ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total Resource usage for non-active users=") AT LINE 1094 with ID [1b7374e2-c4ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage totalResUsageForNonActiveUsers> AT LINE 1094 with ID [1b7374e2-c4ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getAllUsed()>() AT LINE 1094 with ID [1b7374e2-c4ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack20) AT LINE 1094 with ID [1b7374e2-c4ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1094 with ID [1b7374e2-c4ce]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 1094 with ID [1b7374e2-c4ce]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack4 == 0 goto (branch) at line 1068 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Client$Connection: void run()> has 20 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 1064 with ID [76de272a-1f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke this.<org.apache.hadoop.ipc.Client$Connection: java.lang.String getName()>() AT LINE 1064 with ID [76de272a-1f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20) AT LINE 1064 with ID [76de272a-1f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": starting, having connections ") AT LINE 1064 with ID [76de272a-1f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = this.<org.apache.hadoop.ipc.Client$Connection: org.apache.hadoop.ipc.Client this$0> AT LINE 1064 with ID [76de272a-1f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = staticinvoke <org.apache.hadoop.ipc.Client: java.util.concurrent.ConcurrentMap access$2700(org.apache.hadoop.ipc.Client)>($stack23) AT LINE 1064 with ID [76de272a-1f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = interfaceinvoke $stack24.<java.util.concurrent.ConcurrentMap: int size()>() AT LINE 1064 with ID [76de272a-1f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack25) AT LINE 1064 with ID [76de272a-1f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1064 with ID [76de272a-1f2f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack27) AT LINE 1064 with ID [76de272a-1f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 1082 with ID [24ce338f-550b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke this.<org.apache.hadoop.ipc.Client$Connection: java.lang.String getName()>() AT LINE 1082 with ID [24ce338f-550b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9) AT LINE 1082 with ID [24ce338f-550b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": stopped, remaining connections ") AT LINE 1082 with ID [24ce338f-550b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.ipc.Client$Connection: org.apache.hadoop.ipc.Client this$0> AT LINE 1082 with ID [24ce338f-550b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = staticinvoke <org.apache.hadoop.ipc.Client: java.util.concurrent.ConcurrentMap access$2700(org.apache.hadoop.ipc.Client)>($stack12) AT LINE 1082 with ID [24ce338f-550b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = interfaceinvoke $stack13.<java.util.concurrent.ConcurrentMap: int size()>() AT LINE 1082 with ID [24ce338f-550b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack14) AT LINE 1082 with ID [24ce338f-550b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1082 with ID [24ce338f-550b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 1082 with ID [24ce338f-550b]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 1508 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: void blockReceivedAndDeleted(org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration,java.lang.String,org.apache.hadoop.hdfs.server.protocol.StorageReceivedDeletedBlocks[])> has 9 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.slf4j.Logger blockStateChangeLog> AT LINE 1503 with ID [254fd078-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*BLOCK* NameNode.blockReceivedAndDeleted: from ") AT LINE 1503 with ID [254fd078-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nodeReg) AT LINE 1503 with ID [254fd078-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 1503 with ID [254fd078-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = lengthof receivedAndDeletedBlocks AT LINE 1503 with ID [254fd078-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack22) AT LINE 1503 with ID [254fd078-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" blocks.") AT LINE 1503 with ID [254fd078-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1503 with ID [254fd078-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 1503 with ID [254fd078-92b3]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore$RMAppStateFileProcessor: void processChildNode(java.lang.String,java.lang.String,byte[])> has 10 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 949 with ID [f555e2d2-5462]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading application from node: ") AT LINE 949 with ID [f555e2d2-5462]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(childNodeName) AT LINE 949 with ID [f555e2d2-5462]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 949 with ID [f555e2d2-5462]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack40) AT LINE 949 with ID [f555e2d2-5462]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 961 with ID [e4500f37-937e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading application attempt from node: ") AT LINE 961 with ID [e4500f37-937e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(childNodeName) AT LINE 961 with ID [e4500f37-937e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 961 with ID [e4500f37-937e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 961 with ID [e4500f37-937e]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack17 == 0 goto $stack18 = new java.lang.RuntimeException at line 151 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = th instanceof java.lang.InterruptedException at line 149 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if th == null goto i = i + 1 at line 148 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= numberOfThreads goto return at line 144 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= numberOfThreads goto i = 0 at line 139 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper: void run(org.apache.hadoop.mapreduce.Mapper$Context)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = <org.apache.hadoop.mapreduce.lib.map.MultithreadedMapper: org.apache.commons.logging.Log LOG> AT LINE 134 with ID [28568bb0-fcb5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Configuring multithread runner to use ") AT LINE 134 with ID [28568bb0-fcb5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numberOfThreads) AT LINE 134 with ID [28568bb0-fcb5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threads") AT LINE 134 with ID [28568bb0-fcb5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 134 with ID [28568bb0-fcb5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack30) AT LINE 134 with ID [28568bb0-fcb5]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer$DelegationTokenCancelThread: void run()> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer: org.apache.commons.logging.Log access$100()>() AT LINE 338 with ID [1d8d141c-abee]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cancelling token ") AT LINE 338 with ID [1d8d141c-abee]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = tokenWithConf.<org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer$DelegationTokenCancelThread$TokenWithConf: org.apache.hadoop.security.token.Token token> AT LINE 338 with ID [1d8d141c-abee]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 338 with ID [1d8d141c-abee]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack17) AT LINE 338 with ID [1d8d141c-abee]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 338 with ID [1d8d141c-abee]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 338 with ID [1d8d141c-abee]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack101 == 0 goto $stack103 = <org.apache.hadoop.mapreduce.lib.input.TestMRKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> at line 131 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= length goto virtualinvoke writer.<java.io.Writer: void close()>() at line 92 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if length >= 10000 goto return at line 84 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= 3 goto $stack52 = virtualinvoke random.<java.util.Random: int nextInt(int)>(1000) at line 104 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if j >= $stack70 goto $stack72 = (long) length at line 112 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.input.TestMRKeyValueTextInputFormat: void testFormat()> has 43 units and 9 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = <org.apache.hadoop.mapreduce.lib.input.TestMRKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 87 with ID [3336429d-782a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("creating; entries = ") AT LINE 87 with ID [3336429d-782a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(length) AT LINE 87 with ID [3336429d-782a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 87 with ID [3336429d-782a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack44.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack47) AT LINE 87 with ID [3336429d-782a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke random.<java.util.Random: int nextInt(int)>(500) AT LINE 105 with ID [7a5b6de9-2c07]
2020-08-25 12:10:03 [INFO] - 	 -> numSplits = $stack56 + 1 AT LINE 105 with ID [7a5b6de9-2c07]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = <org.apache.hadoop.mapreduce.lib.input.TestMRKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 106 with ID [7a5b6de9-2c07]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splitting: requesting = ") AT LINE 106 with ID [7a5b6de9-2c07]
2020-08-25 12:10:03 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numSplits) AT LINE 106 with ID [7a5b6de9-2c07]
2020-08-25 12:10:03 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 106 with ID [7a5b6de9-2c07]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack58.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack61) AT LINE 106 with ID [7a5b6de9-2c07]
2020-08-25 12:10:03 [INFO] - 	 -> $stack64 = <org.apache.hadoop.mapreduce.lib.input.TestMRKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 108 with ID [4e0a71b7-603c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack65 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splitting: got =        ") AT LINE 108 with ID [4e0a71b7-603c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack66 = interfaceinvoke splits.<java.util.List: int size()>() AT LINE 108 with ID [4e0a71b7-603c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack67 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack66) AT LINE 108 with ID [4e0a71b7-603c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 108 with ID [4e0a71b7-603c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack64.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack68) AT LINE 108 with ID [4e0a71b7-603c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = <org.apache.hadoop.mapreduce.lib.input.TestMRKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 113 with ID [e58d964a-c6d4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack79 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("split[") AT LINE 113 with ID [e58d964a-c6d4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j) AT LINE 113 with ID [e58d964a-c6d4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]= ") AT LINE 113 with ID [e58d964a-c6d4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack82 = interfaceinvoke splits.<java.util.List: java.lang.Object get(int)>(j) AT LINE 113 with ID [e58d964a-c6d4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack83 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack82) AT LINE 113 with ID [e58d964a-c6d4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 113 with ID [e58d964a-c6d4]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack78.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack84) AT LINE 113 with ID [e58d964a-c6d4]
2020-08-25 12:10:03 [INFO] - 	 -> count = 0 AT LINE 130 with ID [c29007a7-536a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack128 = <org.apache.hadoop.mapreduce.lib.input.TestMRKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 142 with ID [f8b9d222-14ab]
2020-08-25 12:10:03 [INFO] - 	 -> $stack129 = virtualinvoke $stack127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read ") AT LINE 142 with ID [f8b9d222-14ab]
2020-08-25 12:10:03 [INFO] - 	 -> $stack130 = virtualinvoke $stack129.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v) AT LINE 142 with ID [f8b9d222-14ab]
2020-08-25 12:10:03 [INFO] - 	 -> $stack131 = virtualinvoke $stack130.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 142 with ID [f8b9d222-14ab]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack128.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack131) AT LINE 142 with ID [f8b9d222-14ab]
2020-08-25 12:10:03 [INFO] - 	 -> count = count + 1 AT LINE 145 with ID [c29007a7-536a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack103 = <org.apache.hadoop.mapreduce.lib.input.TestMRKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 147 with ID [c29007a7-536a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack104 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splits[") AT LINE 147 with ID [c29007a7-536a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack105 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j) AT LINE 147 with ID [c29007a7-536a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=") AT LINE 147 with ID [c29007a7-536a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack107 = interfaceinvoke splits.<java.util.List: java.lang.Object get(int)>(j) AT LINE 147 with ID [c29007a7-536a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack108 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack107) AT LINE 147 with ID [c29007a7-536a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack109 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=") AT LINE 147 with ID [c29007a7-536a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack110 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 147 with ID [c29007a7-536a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack111 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 147 with ID [c29007a7-536a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack103.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack111) AT LINE 147 with ID [c29007a7-536a]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack14 >= 0 goto $stack15 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger access$400()>() at line 543 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if anchored != 0 goto $stack12 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UncachingTask: long revocationTimeMs> at line 537 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack5 != 0 goto $stack6 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UncachingTask: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache this$0> at line 530 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UncachingTask: boolean shouldDefer()> has 3 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger access$400()>() AT LINE 538 with ID [e2a702cd-d44c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UncachingTask: org.apache.hadoop.hdfs.ExtendedBlockId key> AT LINE 538 with ID [e2a702cd-d44c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Uncaching {} now that it is no longer in use by any clients.", $stack34) AT LINE 538 with ID [e2a702cd-d44c]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor: void updateNode(org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode)> has 19 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor: org.apache.commons.logging.Log LOG> AT LINE 214 with ID [d3214e41-b9ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node update event from: ") AT LINE 214 with ID [d3214e41-b9ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = interfaceinvoke rmNode.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: org.apache.hadoop.yarn.api.records.NodeId getNodeID()>() AT LINE 214 with ID [d3214e41-b9ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack12) AT LINE 214 with ID [d3214e41-b9ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 214 with ID [d3214e41-b9ad]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 214 with ID [d3214e41-b9ad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor: org.apache.commons.logging.Log LOG> AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating ClusterNode [") AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = interfaceinvoke rmNode.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: org.apache.hadoop.yarn.api.records.NodeId getNodeID()>() AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack32) AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ") AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with queue wait time [") AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(estimatedQueueWaitTime) AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] and ") AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wait queue length [") AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(waitQueueLength) AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack41) AT LINE 256 with ID [24fbe370-73a8]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$JobListCache: void delete(org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = staticinvoke <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log access$000()>() AT LINE 287 with ID [73201a0d-160c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing from cache ") AT LINE 287 with ID [73201a0d-160c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(fileInfo) AT LINE 287 with ID [73201a0d-160c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 287 with ID [73201a0d-160c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 287 with ID [73201a0d-160c]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if a != null goto $stack8 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.slf4j.Logger LOG> at line 110 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: java.lang.Object getAttribute(java.lang.String)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.slf4j.Logger LOG> AT LINE 114 with ID [7ed559f2-f167]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute) AT LINE 114 with ID [7ed559f2-f167]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 114 with ID [7ed559f2-f167]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(a) AT LINE 114 with ID [7ed559f2-f167]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 114 with ID [7ed559f2-f167]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 114 with ID [7ed559f2-f167]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: void storeReservationState(org.apache.hadoop.yarn.proto.YarnProtos$ReservationAllocationStateProto,java.lang.String,java.lang.String)> has 9 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 676 with ID [c99d9041-203b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing state for reservation ") AT LINE 676 with ID [c99d9041-203b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reservationIdName) AT LINE 676 with ID [c99d9041-203b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" plan ") AT LINE 676 with ID [c99d9041-203b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(planName) AT LINE 676 with ID [c99d9041-203b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ") AT LINE 676 with ID [c99d9041-203b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 676 with ID [c99d9041-203b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 676 with ID [c99d9041-203b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 676 with ID [c99d9041-203b]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack28 == 0 goto return at line 136 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack24 == 0 goto this.<org.apache.hadoop.metrics.ganglia.GangliaContext31: int offset> = 0 at line 118 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if type != null goto $stack12 = <org.apache.hadoop.metrics.ganglia.GangliaContext31: org.slf4j.Logger LOG> at line 80 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if value != null goto (branch) at line 77 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if name != null goto (branch) at line 74 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.metrics.ganglia.GangliaContext31: void emitMetric(java.lang.String,java.lang.String,java.lang.String)> has 12 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = <org.apache.hadoop.metrics.ganglia.GangliaContext31: org.slf4j.Logger LOG> AT LINE 86 with ID [af32c962-852f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Emitting metric ") AT LINE 86 with ID [af32c962-852f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 86 with ID [af32c962-852f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type ") AT LINE 86 with ID [af32c962-852f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(type) AT LINE 86 with ID [af32c962-852f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value ") AT LINE 86 with ID [af32c962-852f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value) AT LINE 86 with ID [af32c962-852f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from hostname") AT LINE 86 with ID [af32c962-852f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = this.<org.apache.hadoop.metrics.ganglia.GangliaContext31: java.lang.String hostName> AT LINE 86 with ID [af32c962-852f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack50) AT LINE 86 with ID [af32c962-852f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 86 with ID [af32c962-852f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>($stack52) AT LINE 86 with ID [af32c962-852f]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer: void removeApplicationFromRenewal(org.apache.hadoop.yarn.api.records.ApplicationId)> has 9 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer: org.apache.commons.logging.Log LOG> AT LINE 808 with ID [a3bef9d5-7c5d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing delegation token for appId=") AT LINE 808 with ID [a3bef9d5-7c5d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationId) AT LINE 808 with ID [a3bef9d5-7c5d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; token=") AT LINE 808 with ID [a3bef9d5-7c5d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = dttr.<org.apache.hadoop.yarn.server.resourcemanager.security.DelegationTokenRenewer$DelegationTokenToRenew: org.apache.hadoop.security.token.Token token> AT LINE 808 with ID [a3bef9d5-7c5d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 808 with ID [a3bef9d5-7c5d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack39) AT LINE 808 with ID [a3bef9d5-7c5d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 808 with ID [a3bef9d5-7c5d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack41) AT LINE 808 with ID [a3bef9d5-7c5d]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.Groups: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Timer)> has 14 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = <org.apache.hadoop.security.Groups: org.slf4j.Logger LOG> AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group mapping impl=") AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = this.<org.apache.hadoop.security.Groups: org.apache.hadoop.security.GroupMappingServiceProvider impl> AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.Object: java.lang.Class getClass()>() AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.Class: java.lang.String getName()>() AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack40) AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; cacheTimeout=") AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = this.<org.apache.hadoop.security.Groups: long cacheTimeout> AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack43) AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; warningDeltaMs=") AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = this.<org.apache.hadoop.security.Groups: long warningDeltaMs> AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack46) AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void debug(java.lang.String)>($stack48) AT LINE 151 with ID [ad05e29a-1d3e]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.TestEditLogFileInputStream: void testScanCorruptEditLog()> has 17 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.namenode.TestEditLogFileInputStream: org.apache.commons.logging.Log LOG> AT LINE 91 with ID [c12a3567-ed3c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating test edit log file: ") AT LINE 91 with ID [c12a3567-ed3c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(editLog) AT LINE 91 with ID [c12a3567-ed3c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 91 with ID [c12a3567-ed3c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 91 with ID [c12a3567-ed3c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = <org.apache.hadoop.hdfs.server.namenode.TestEditLogFileInputStream: org.apache.commons.logging.Log LOG> AT LINE 120 with ID [baba1770-0dbd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupting last 4 bytes of edit log file ") AT LINE 120 with ID [baba1770-0dbd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(editLog) AT LINE 120 with ID [baba1770-0dbd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", whose length is ") AT LINE 120 with ID [baba1770-0dbd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileLen) AT LINE 120 with ID [baba1770-0dbd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 120 with ID [baba1770-0dbd]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack47) AT LINE 120 with ID [baba1770-0dbd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack61 = <org.apache.hadoop.hdfs.server.namenode.TestEditLogFileInputStream: org.apache.commons.logging.Log LOG> AT LINE 133 with ID [45afb1ac-d0e9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read transaction 1 from ") AT LINE 133 with ID [45afb1ac-d0e9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(editLog) AT LINE 133 with ID [45afb1ac-d0e9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 133 with ID [45afb1ac-d0e9]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack61.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack64) AT LINE 133 with ID [45afb1ac-d0e9]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if datanodes == null goto (branch) at line 1365 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack6 != 0 goto $stack7 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> at line 1354 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void addToInvalidates(org.apache.hadoop.hdfs.protocol.Block)> has 10 units and 7 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = null AT LINE 1361 with ID [5b407c5b-2dbb]
2020-08-25 12:10:03 [INFO] - 	 -> datanodes = $stack23 AT LINE 1357 with ID [5b407c5b-2dbb]
2020-08-25 12:10:03 [INFO] - 	 -> if datanodes == null goto (branch) AT LINE 1365 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke datanodes.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(node) AT LINE 1366 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 1366 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> if datanodes == null goto return AT LINE 1369 with ID [5b407c5b-2dbb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke datanodes.<java.lang.StringBuilder: int length()>() AT LINE 1372 with ID [5b407c5b-2dbb]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack13 == 0 goto return AT LINE 1372 with ID [5b407c5b-2dbb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1370 with ID [5b407c5b-2dbb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* addToInvalidates: {} {}", b, datanodes) AT LINE 1370 with ID [5b407c5b-2dbb]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path call()> has 10 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack77 = <org.apache.hadoop.yarn.util.FSDownload: org.apache.commons.logging.Log LOG> AT LINE 355 with ID [918d6564-1109]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting to download ") AT LINE 355 with ID [918d6564-1109]
2020-08-25 12:10:03 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(sCopy) AT LINE 355 with ID [918d6564-1109]
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 355 with ID [918d6564-1109]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack77.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack80) AT LINE 355 with ID [918d6564-1109]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = <org.apache.hadoop.yarn.util.FSDownload: org.apache.commons.logging.Log LOG> AT LINE 374 with ID [e9151285-76a5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File has been downloaded to ") AT LINE 374 with ID [e9151285-76a5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack53) AT LINE 374 with ID [e9151285-76a5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 374 with ID [e9151285-76a5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack51.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack57) AT LINE 374 with ID [e9151285-76a5]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if result == 0 goto loggingCounter = loggingCounter + -1 at line 749 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.AMRMClient: void waitFor(com.google.common.base.Supplier,int,int)> has 5 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.client.api.AMRMClient: org.apache.commons.logging.Log LOG> AT LINE 744 with ID [ccd123d6-8afe]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = interfaceinvoke $stack7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 744 with ID [ccd123d6-8afe]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack8 == 0 goto $stack9 = interfaceinvoke check.<com.google.common.base.Supplier: java.lang.Object get()>() AT LINE 744 with ID [ccd123d6-8afe]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.client.api.AMRMClient: org.apache.commons.logging.Log LOG> AT LINE 745 with ID [ccd123d6-8afe]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Check the condition for main loop.") AT LINE 745 with ID [ccd123d6-8afe]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack157 != null goto $stack158 = interfaceinvoke rsrc.<java.util.Map$Entry: java.lang.Object getValue()>() at line 1070 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack154 != null goto $stack155 = interfaceinvoke rsrc.<java.util.Map$Entry: java.lang.Object getValue()>() at line 1068 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack48 != 0 goto $stack49 = new org.apache.hadoop.yarn.exceptions.YarnException at line 1099 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack46 == null goto $stack47 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock> at line 1089 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack33 == 0 goto i$#3 = staticinvoke <org.apache.hadoop.yarn.server.utils.YarnServerSecurityUtils: org.apache.hadoop.security.Credentials parseCredentials(org.apache.hadoop.yarn.api.records.ContainerLaunchContext)>(launchContext) at line 1065 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack160 != null goto (branch) at line 1073 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: void startContainerInternal(org.apache.hadoop.yarn.security.ContainerTokenIdentifier,org.apache.hadoop.yarn.api.protocolrecords.StartContainerRequest)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack123 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: org.slf4j.Logger LOG> AT LINE 1118 with ID [fd0cb018-d8ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack124 = virtualinvoke $stack122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Flow context: ") AT LINE 1118 with ID [fd0cb018-d8ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack125 = virtualinvoke $stack124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(flowContext) AT LINE 1118 with ID [fd0cb018-d8ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack126 = virtualinvoke $stack125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" created for an application ") AT LINE 1118 with ID [fd0cb018-d8ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack127 = virtualinvoke $stack126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationID) AT LINE 1118 with ID [fd0cb018-d8ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack128 = virtualinvoke $stack127.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1118 with ID [fd0cb018-d8ed]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack123.<org.slf4j.Logger: void debug(java.lang.String)>($stack128) AT LINE 1118 with ID [fd0cb018-d8ed]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= $stack38 goto return at line 256 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= $stack24 goto $stack25 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.hadoop.hdfs.MiniDFSCluster cluster> at line 224 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: void blockReport_01()> has 37 units and 6 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack103 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 220 with ID [b7c905dc-008e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack104 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number of blocks allocated ") AT LINE 220 with ID [b7c905dc-008e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack105 = virtualinvoke blocks.<java.util.ArrayList: int size()>() AT LINE 220 with ID [b7c905dc-008e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack106 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack105) AT LINE 220 with ID [b7c905dc-008e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 220 with ID [b7c905dc-008e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack103.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack107) AT LINE 220 with ID [b7c905dc-008e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack90 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 227 with ID [b4931287-88c7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack91 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block ") AT LINE 227 with ID [b4931287-88c7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack92 = virtualinvoke b.<org.apache.hadoop.hdfs.protocol.Block: java.lang.String getBlockName()>() AT LINE 227 with ID [b4931287-88c7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack93 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack92) AT LINE 227 with ID [b4931287-88c7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack94 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" before\t") AT LINE 227 with ID [b4931287-88c7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack95 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size ") AT LINE 227 with ID [b4931287-88c7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack96 = virtualinvoke b.<org.apache.hadoop.hdfs.protocol.Block: long getNumBytes()>() AT LINE 227 with ID [b4931287-88c7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack97 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack96) AT LINE 227 with ID [b4931287-88c7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 227 with ID [b4931287-88c7]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack90.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack98) AT LINE 227 with ID [b4931287-88c7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 231 with ID [8dc6b1a4-11aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack63 = interfaceinvoke $stack62.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 231 with ID [8dc6b1a4-11aa]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack63 == 0 goto $stack64 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: java.util.Random rand> AT LINE 231 with ID [8dc6b1a4-11aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack83 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 232 with ID [8dc6b1a4-11aa]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack83.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Setting new length") AT LINE 232 with ID [8dc6b1a4-11aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack74 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 237 with ID [8a87006d-4295]
2020-08-25 12:10:03 [INFO] - 	 -> $stack75 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block ") AT LINE 237 with ID [8a87006d-4295]
2020-08-25 12:10:03 [INFO] - 	 -> $stack76 = virtualinvoke b.<org.apache.hadoop.hdfs.protocol.Block: java.lang.String getBlockName()>() AT LINE 237 with ID [8a87006d-4295]
2020-08-25 12:10:03 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack76) AT LINE 237 with ID [8a87006d-4295]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after\t ") AT LINE 237 with ID [8a87006d-4295]
2020-08-25 12:10:03 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size ") AT LINE 237 with ID [8a87006d-4295]
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = virtualinvoke b.<org.apache.hadoop.hdfs.protocol.Block: long getNumBytes()>() AT LINE 237 with ID [8a87006d-4295]
2020-08-25 12:10:03 [INFO] - 	 -> $stack81 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack80) AT LINE 237 with ID [8a87006d-4295]
2020-08-25 12:10:03 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 237 with ID [8a87006d-4295]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack74.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack82) AT LINE 237 with ID [8a87006d-4295]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 252 with ID [d9034cd0-5831]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("After mods: Number of blocks allocated ") AT LINE 252 with ID [d9034cd0-5831]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = interfaceinvoke blocksAfterReport.<java.util.List: int size()>() AT LINE 252 with ID [d9034cd0-5831]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack54) AT LINE 252 with ID [d9034cd0-5831]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 252 with ID [d9034cd0-5831]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack52.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack56) AT LINE 252 with ID [d9034cd0-5831]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.util.Progress: void set(float)> has 10 units and 5 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.util.Progress: org.slf4j.Logger LOG> AT LINE 165 with ID [103faa03-3f6e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>("Illegal progress value found, progress is Float.NaN. Progress will be changed to 0") AT LINE 165 with ID [103faa03-3f6e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = <org.apache.hadoop.util.Progress: org.slf4j.Logger LOG> AT LINE 170 with ID [67d33a9a-9cf8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>("Illegal progress value found, progress is Float.NEGATIVE_INFINITY. Progress will be changed to 0") AT LINE 170 with ID [67d33a9a-9cf8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = <org.apache.hadoop.util.Progress: org.slf4j.Logger LOG> AT LINE 175 with ID [f0829802-9b24]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>("Illegal progress value found, progress is less than 0. Progress will be changed to 0") AT LINE 175 with ID [f0829802-9b24]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.util.Progress: org.slf4j.Logger LOG> AT LINE 180 with ID [ecc17c32-10c2]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>("Illegal progress value found, progress is larger than 1. Progress will be changed to 1") AT LINE 180 with ID [ecc17c32-10c2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.util.Progress: org.slf4j.Logger LOG> AT LINE 185 with ID [738e4eb2-4ecb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>("Illegal progress value found, progress is Float.POSITIVE_INFINITY. Progress will be changed to 1") AT LINE 185 with ID [738e4eb2-4ecb]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: java.net.URL getNamenodeURL(java.lang.String,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: org.slf4j.Logger LOG> AT LINE 578 with ID [4357a8b5-0ba1]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("url={}", url) AT LINE 578 with ID [4357a8b5-0ba1]
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.util.Shell: void <clinit>()>
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.ReplicaInputStreams: void <init>(java.io.InputStream,java.io.InputStream,org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeReference,org.apache.hadoop.hdfs.server.datanode.FileIoProvider)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.ReplicaInputStreams: org.slf4j.Logger LOG> AT LINE 60 with ID [50aab102-1b9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get file descriptor for inputstream of class ") AT LINE 60 with ID [50aab102-1b9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.ReplicaInputStreams: java.io.InputStream dataIn> AT LINE 60 with ID [50aab102-1b9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.Object: java.lang.Class getClass()>() AT LINE 60 with ID [50aab102-1b9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack12) AT LINE 60 with ID [50aab102-1b9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 60 with ID [50aab102-1b9b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 60 with ID [50aab102-1b9b]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack20 != 0 goto $stack21 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>() at line 383 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack31 == 0 goto (branch) at line 393 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: int loadRMDTSecretManagerTokens(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState)> has 9 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 394 with ID [e84aecb3-d0aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded RM delegation token from ") AT LINE 394 with ID [e84aecb3-d0aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 394 with ID [e84aecb3-d0aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": tokenId=") AT LINE 394 with ID [e84aecb3-d0aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tokenId) AT LINE 394 with ID [e84aecb3-d0aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", renewDate=") AT LINE 394 with ID [e84aecb3-d0aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(renewDate) AT LINE 394 with ID [e84aecb3-d0aa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 394 with ID [e84aecb3-d0aa]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack41) AT LINE 394 with ID [e84aecb3-d0aa]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.ActiveUsersManager: void activateApplication(java.lang.String,org.apache.hadoop.yarn.api.records.ApplicationId)> has 8 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.ActiveUsersManager: org.apache.commons.logging.Log LOG> AT LINE 70 with ID [b0f6fc87-76a1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ") AT LINE 70 with ID [b0f6fc87-76a1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 70 with ID [b0f6fc87-76a1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" added to activeUsers, currently: ") AT LINE 70 with ID [b0f6fc87-76a1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ActiveUsersManager: int activeUsers> AT LINE 70 with ID [b0f6fc87-76a1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack23) AT LINE 70 with ID [b0f6fc87-76a1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 70 with ID [b0f6fc87-76a1]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack25) AT LINE 70 with ID [b0f6fc87-76a1]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= 1 goto $stack41 = staticinvoke <org.apache.hadoop.hdfs.nfs.nfs3.Nfs3Utils: java.lang.String getFileIdPath(org.apache.hadoop.nfs.nfs3.FileHandle)>(handle) at line 792 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if fis != null goto readCount = virtualinvoke fis.<org.apache.hadoop.fs.FSDataInputStream: int read(long,byte[],int,int)>(e, readbuffer, 0, count) at line 796 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack103 == 0 goto $stack104 = new org.apache.hadoop.nfs.nfs3.response.READ3Response at line 765 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if attrs != null goto $stack99 = virtualinvoke securityHandler.<org.apache.hadoop.oncrpc.security.SecurityHandler: int getUid()>() at line 756 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if count != 0 goto $stack36 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.nfs3.WriteManager writeManager> at line 744 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.READ3Request: org.apache.hadoop.nfs.nfs3.request.READ3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 719 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack25 != 0 goto $stack26 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache clientCache> at line 713 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.READ3Response read(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 18 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack127 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 738 with ID [6f83a6ae-af9e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack128 = virtualinvoke $stack126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS READ fileId: ") AT LINE 738 with ID [6f83a6ae-af9e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack129 = virtualinvoke handle.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 738 with ID [6f83a6ae-af9e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack130 = virtualinvoke $stack128.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack129) AT LINE 738 with ID [6f83a6ae-af9e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack131 = virtualinvoke $stack130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" offset: ") AT LINE 738 with ID [6f83a6ae-af9e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack132 = virtualinvoke $stack131.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(e) AT LINE 738 with ID [6f83a6ae-af9e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack133 = virtualinvoke $stack132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count: ") AT LINE 738 with ID [6f83a6ae-af9e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack134 = virtualinvoke $stack133.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 738 with ID [6f83a6ae-af9e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack135 = virtualinvoke $stack134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 738 with ID [6f83a6ae-af9e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack136 = virtualinvoke $stack135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 738 with ID [6f83a6ae-af9e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack137 = virtualinvoke $stack136.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 738 with ID [6f83a6ae-af9e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack127.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack137) AT LINE 738 with ID [6f83a6ae-af9e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack120 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 758 with ID [e263da24-b48b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack121 = virtualinvoke $stack119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t get path for fileId: ") AT LINE 758 with ID [e263da24-b48b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack122 = virtualinvoke handle.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 758 with ID [e263da24-b48b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack123 = virtualinvoke $stack121.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack122) AT LINE 758 with ID [e263da24-b48b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack124 = virtualinvoke $stack123.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 758 with ID [e263da24-b48b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack120.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack124) AT LINE 758 with ID [e263da24-b48b]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if scanner != null goto $stack7 = <org.apache.hadoop.hdfs.server.datanode.BlockScanner: org.slf4j.Logger LOG> at line 250 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack3 != 0 goto $stack4 = this.<org.apache.hadoop.hdfs.server.datanode.BlockScanner: java.util.TreeMap scanners> at line 244 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockScanner: void removeVolumeScanner(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi)> has 3 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.datanode.BlockScanner: org.slf4j.Logger LOG> AT LINE 245 with ID [ec0ad8aa-43b6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = interfaceinvoke volume.<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi: java.lang.String getStorageID()>() AT LINE 245 with ID [ec0ad8aa-43b6]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Not removing volume scanner for {}, because the block scanner is disabled.", $stack20) AT LINE 245 with ID [ec0ad8aa-43b6]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if allocatedSize == 0 goto $stack7 = staticinvoke <org.apache.hadoop.mapred.BackupStore: org.apache.commons.logging.Log access$400()>() at line 411 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.BackupStore$MemoryCache: void reinitialize(boolean)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = staticinvoke <org.apache.hadoop.mapred.BackupStore: org.apache.commons.logging.Log access$400()>() AT LINE 410 with ID [8c15eff5-9d3f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created a new mem block of ") AT LINE 410 with ID [8c15eff5-9d3f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(allocatedSize) AT LINE 410 with ID [8c15eff5-9d3f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 410 with ID [8c15eff5-9d3f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 410 with ID [8c15eff5-9d3f]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.util.RackResolver: org.apache.hadoop.net.Node coreResolve(java.lang.String)> has 14 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.util.RackResolver: org.apache.commons.logging.Log LOG> AT LINE 106 with ID [41d4072c-ac73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t resolve ") AT LINE 106 with ID [41d4072c-ac73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(hostName) AT LINE 106 with ID [41d4072c-ac73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Falling back to ") AT LINE 106 with ID [41d4072c-ac73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/default-rack") AT LINE 106 with ID [41d4072c-ac73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 106 with ID [41d4072c-ac73]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack17) AT LINE 106 with ID [41d4072c-ac73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = <org.apache.hadoop.yarn.util.RackResolver: org.apache.commons.logging.Log LOG> AT LINE 112 with ID [0e892db5-e23e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resolved ") AT LINE 112 with ID [0e892db5-e23e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(hostName) AT LINE 112 with ID [0e892db5-e23e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 112 with ID [0e892db5-e23e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(rName) AT LINE 112 with ID [0e892db5-e23e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 112 with ID [0e892db5-e23e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack30) AT LINE 112 with ID [0e892db5-e23e]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC: java.lang.Object getProxy(java.lang.Class,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = <org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC: org.apache.commons.logging.Log LOG> AT LINE 47 with ID [080d1977-e3d0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating a HadoopYarnProtoRpc proxy for protocol ") AT LINE 47 with ID [080d1977-e3d0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(protocol) AT LINE 47 with ID [080d1977-e3d0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 47 with ID [080d1977-e3d0]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack8) AT LINE 47 with ID [080d1977-e3d0]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: void addOrUpdateToken(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier,org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$DelegationTokenInformation,boolean)> has 11 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 894 with ID [d1b525ca-5bf5]
2020-08-25 12:10:03 [INFO] - 	 -> if isUpdate == 0 goto $stack46 = "Storing " AT LINE 894 with ID [d1b525ca-5bf5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = "Updating " AT LINE 898 with ID [d1b525ca-5bf5]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack46)] AT LINE 898 with ID [d1b525ca-5bf5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = "Storing " AT LINE 898 with ID [d1b525ca-5bf5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack46) AT LINE 894 with ID [d1b525ca-5bf5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ZKDTSMDelegationToken_") AT LINE 894 with ID [d1b525ca-5bf5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke ident.<org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 894 with ID [d1b525ca-5bf5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack42) AT LINE 894 with ID [d1b525ca-5bf5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 894 with ID [d1b525ca-5bf5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void debug(java.lang.String)>($stack44) AT LINE 894 with ID [d1b525ca-5bf5]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if attempt != null goto $stack4 = new org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerAppReport at line 388 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerAppReport getSchedulerAppInfo(org.apache.hadoop.yarn.api.records.ApplicationAttemptId)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: org.apache.commons.logging.Log LOG> AT LINE 390 with ID [1dcd781e-4642]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request for appInfo of unknown attempt ") AT LINE 390 with ID [1dcd781e-4642]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appAttemptId) AT LINE 390 with ID [1dcd781e-4642]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 390 with ID [1dcd781e-4642]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 390 with ID [1dcd781e-4642]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider$RequestHedgingInvocationHandler$1: java.lang.Object call()> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack2 = <org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider: org.slf4j.Logger LOG> AT LINE 113 with ID [8d799aef-b5dd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = this.<org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider$RequestHedgingInvocationHandler$1: java.lang.reflect.Method val$method> AT LINE 113 with ID [8d799aef-b5dd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack1 = this.<org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider$RequestHedgingInvocationHandler$1: java.util.Map$Entry val$pEntry> AT LINE 113 with ID [8d799aef-b5dd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = interfaceinvoke $stack1.<java.util.Map$Entry: java.lang.Object getValue()>() AT LINE 113 with ID [8d799aef-b5dd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = (org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo) $stack5 AT LINE 113 with ID [8d799aef-b5dd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = $stack6.<org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo: java.lang.String proxyInfo> AT LINE 113 with ID [8d799aef-b5dd]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Invoking method {} on proxy {}", $stack4, $stack7) AT LINE 113 with ID [8d799aef-b5dd]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack15 != 0 goto $stack17 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> at line 2484 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus appendFile(java.lang.String,java.lang.String,java.lang.String,java.util.EnumSet,boolean)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 2490 with ID [a2371266-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = newarray (java.lang.Object)[3] AT LINE 2490 with ID [a2371266-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16[0] = srcArg AT LINE 2490 with ID [a2371266-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16[1] = holder AT LINE 2490 with ID [a2371266-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16[2] = clientMachine AT LINE 2490 with ID [a2371266-8e73]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("DIR* NameSystem.appendFile: src={}, holder={}, clientMachine={}", $stack16) AT LINE 2490 with ID [a2371266-8e73]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack9 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.slf4j.Logger LOG> at line 111 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.hadoop.metrics2.impl.MetricsConfig loadFirst(java.lang.String,java.lang.String[])> has 6 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.slf4j.Logger LOG> AT LINE 116 with ID [b8710441-fb56]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = staticinvoke <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.String toString(org.apache.commons.configuration.Configuration)>(cf) AT LINE 116 with ID [b8710441-fb56]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 116 with ID [b8710441-fb56]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.slf4j.Logger LOG> AT LINE 118 with ID [d518f8e8-bb33]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke mc.<org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.String toString()>() AT LINE 118 with ID [d518f8e8-bb33]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String)>($stack28) AT LINE 118 with ID [d518f8e8-bb33]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: void createDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,java.lang.String)> has 12 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.commons.logging.Log LOG> AT LINE 610 with ID [6f0b26e1-139d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 610 with ID [6f0b26e1-139d]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack7 == 0 goto specialinvoke this.<org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor: void createDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean,java.lang.String)>(dirPath, perms#2, createParent, owner) AT LINE 610 with ID [6f0b26e1-139d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.commons.logging.Log LOG> AT LINE 611 with ID [6f0b26e1-139d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = newarray (java.lang.Object)[3] AT LINE 611 with ID [6f0b26e1-139d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke dirPath.<org.apache.hadoop.fs.Path: java.lang.String toString()>() AT LINE 611 with ID [6f0b26e1-139d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10[0] = $stack14 AT LINE 611 with ID [6f0b26e1-139d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke perms#2.<org.apache.hadoop.fs.permission.FsPermission: java.lang.String toString()>() AT LINE 611 with ID [6f0b26e1-139d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10[1] = $stack16 AT LINE 611 with ID [6f0b26e1-139d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10[2] = owner AT LINE 611 with ID [6f0b26e1-139d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("createDir: %s perm:%s owner:%s", $stack10) AT LINE 611 with ID [6f0b26e1-139d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack17) AT LINE 611 with ID [6f0b26e1-139d]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: void close()> has 12 units and 4 lines
2020-08-25 12:10:03 [INFO] - 	 -> suffix = "" AT LINE 234 with ID [afb75477-d1a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(suffix) AT LINE 244 with ID [afb75477-d1a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  munmapped.") AT LINE 244 with ID [afb75477-d1a9]
2020-08-25 12:10:03 [INFO] - 	 -> suffix = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 244 with ID [afb75477-d1a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(suffix) AT LINE 251 with ID [afb75477-d1a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  scheduling ") AT LINE 251 with ID [afb75477-d1a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot slot> AT LINE 251 with ID [afb75477-d1a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack28) AT LINE 251 with ID [afb75477-d1a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for later release.") AT LINE 251 with ID [afb75477-d1a9]
2020-08-25 12:10:03 [INFO] - 	 -> suffix = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 251 with ID [afb75477-d1a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: org.slf4j.Logger LOG> AT LINE 254 with ID [afb75477-d1a9]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("closed {}{}", this, suffix) AT LINE 254 with ID [afb75477-d1a9]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.fs.contract.AbstractFSContract: void <init>(org.apache.hadoop.conf.Configuration)> has 7 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack2 = virtualinvoke this.<org.apache.hadoop.fs.contract.AbstractFSContract: boolean maybeAddConfResource(java.lang.String)>("contract-test-options.xml") AT LINE 57 with ID [d07f9e5f-c499, 50d2e5ba-4b90]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack2 == 0 goto $stack3 = <org.apache.hadoop.fs.contract.AbstractFSContract: org.slf4j.Logger LOG> AT LINE 57 with ID [d07f9e5f-c499, 50d2e5ba-4b90]
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = <org.apache.hadoop.fs.contract.AbstractFSContract: org.slf4j.Logger LOG> AT LINE 58 with ID [50d2e5ba-4b90]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Loaded authentication keys from {}", "contract-test-options.xml") AT LINE 58 with ID [50d2e5ba-4b90]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= return] AT LINE 58 with ID [d07f9e5f-c499, 50d2e5ba-4b90]
2020-08-25 12:10:03 [INFO] - 	 -> $stack3 = <org.apache.hadoop.fs.contract.AbstractFSContract: org.slf4j.Logger LOG> AT LINE 60 with ID [d07f9e5f-c499]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Not loaded: {}", "contract-test-options.xml") AT LINE 60 with ID [d07f9e5f-c499]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getConfValueForRMInstance(java.lang.String,org.apache.hadoop.conf.Configuration)> has 9 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.conf.HAUtil: org.apache.commons.logging.Log LOG> AT LINE 305 with ID [bf7d4562-66b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getConfValueForRMInstance: prefix = ") AT LINE 305 with ID [bf7d4562-66b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix) AT LINE 305 with ID [bf7d4562-66b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; confKey being looked up = ") AT LINE 305 with ID [bf7d4562-66b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(confKey) AT LINE 305 with ID [bf7d4562-66b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; value being set to = ") AT LINE 305 with ID [bf7d4562-66b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retVal) AT LINE 305 with ID [bf7d4562-66b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 305 with ID [bf7d4562-66b3]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack16) AT LINE 305 with ID [bf7d4562-66b3]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack1 != 0 goto staticinvoke <org.apache.hadoop.security.JniBasedUnixGroupsMapping: void anchorNative()>() at line 45 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.JniBasedUnixGroupsMapping: void <clinit>()> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack2 = <org.apache.hadoop.security.JniBasedUnixGroupsMapping: org.slf4j.Logger LOG> AT LINE 50 with ID [0ac6ded7-6989]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String)>("Using JniBasedUnixGroupsMapping for Group resolution") AT LINE 50 with ID [0ac6ded7-6989]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if tried >= 3 goto (branch) at line 1347 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack21 != $stack20 goto tried = 0 at line 1338 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack55 != $stack54 goto $stack19 = this.<org.apache.hadoop.hdfs.DataStreamer: org.apache.hadoop.hdfs.protocol.datatransfer.BlockConstructionStage stage> at line 1335 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DataStreamer: void addDatanode2ExistingPipeline()> has 4 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.protocol.datatransfer.DataTransferProtocol: org.slf4j.Logger LOG> AT LINE 1311 with ID [2322f391-2d56]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = this.<org.apache.hadoop.hdfs.DataStreamer: long lastAckedSeqno> AT LINE 1311 with ID [2322f391-2d56]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack13) AT LINE 1311 with ID [2322f391-2d56]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("lastAckedSeqno = {}", $stack16) AT LINE 1311 with ID [2322f391-2d56]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack4 == 0 goto $stack6 = <org.apache.hadoop.net.NetworkTopology: org.slf4j.Logger LOG> at line 215 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if node != null goto $stack4 = node instanceof org.apache.hadoop.net.InnerNode at line 214 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.net.NetworkTopology: void remove(org.apache.hadoop.net.Node)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.net.NetworkTopology: org.slf4j.Logger LOG> AT LINE 228 with ID [2f2e2910-337d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("NetworkTopology became:\n{}", this) AT LINE 228 with ID [2f2e2910-337d]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack137 == 0 goto $stack73 = virtualinvoke request.<org.apache.hadoop.yarn.server.api.protocolrecords.RegisterNodeManagerRequest: java.util.Set getNodeLabels()>() at line 450 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack43 >= $stack44 goto $stack45 = this.<org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService: org.apache.hadoop.yarn.server.resourcemanager.security.RMContainerTokenSecretManager containerTokenSecretManager> at line 388 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack214 != 0 goto message = virtualinvoke nodeId.<org.apache.hadoop.yarn.api.records.NodeId: java.lang.String toString()>() at line 379 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack240 >= 0 goto $stack27 = this.<org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService: org.apache.hadoop.yarn.server.resourcemanager.NodesListManager nodesListManager> at line 347 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService: org.apache.hadoop.yarn.server.api.protocolrecords.RegisterNodeManagerResponse registerNodeManager(org.apache.hadoop.yarn.server.api.protocolrecords.RegisterNodeManagerRequest)> has 16 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack202 = <org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService: org.apache.commons.logging.Log LOG> AT LINE 369 with ID [51018b33-e2f0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack203 = virtualinvoke $stack201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource for node: ") AT LINE 369 with ID [51018b33-e2f0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack204 = virtualinvoke $stack203.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message) AT LINE 369 with ID [51018b33-e2f0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack205 = virtualinvoke $stack204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is adjusted from: ") AT LINE 369 with ID [51018b33-e2f0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack206 = virtualinvoke $stack205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(capability) AT LINE 369 with ID [51018b33-e2f0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack207 = virtualinvoke $stack206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to: ") AT LINE 369 with ID [51018b33-e2f0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack208 = virtualinvoke $stack207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dynamicLoadCapability) AT LINE 369 with ID [51018b33-e2f0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack209 = virtualinvoke $stack208.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to settings in dynamic-resources.xml.") AT LINE 369 with ID [51018b33-e2f0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack210 = virtualinvoke $stack209.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 369 with ID [51018b33-e2f0]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack202.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack210) AT LINE 369 with ID [51018b33-e2f0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack181 = <org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService: org.apache.commons.logging.Log LOG> AT LINE 420 with ID [26aa3cc8-acf8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack181.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Unexpected Rmnode state") AT LINE 420 with ID [26aa3cc8-acf8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack83 = virtualinvoke status#139.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(httpPort) AT LINE 475 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ") AT LINE 475 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack85 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registered with capability: ") AT LINE 475 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(capability) AT LINE 475 with ID []
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.security.authentication.util.KerberosName: void resetDefaultRealm()>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack40 == 0 goto i$ = i$ + 1 at line 372 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack36 = this.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: javax.xml.stream.XMLEventReader events> at line 371 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack30 == 0 goto $stack31 = this.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: javax.xml.stream.XMLEventReader events> at line 364 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: void loadNodeChildrenHelper(org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$Node,java.lang.String,java.lang.String[])> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.commons.logging.Log LOG> AT LINE 392 with ID [beb47ab1-6089]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping XMLEvent ") AT LINE 392 with ID [beb47ab1-6089]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(ev) AT LINE 392 with ID [beb47ab1-6089]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 392 with ID [beb47ab1-6089]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack48.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack51) AT LINE 392 with ID [beb47ab1-6089]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack42 == 0 goto $stack43 = new java.lang.IllegalArgumentException at line 400 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack39 == 0 goto $stack40 = <org.apache.hadoop.nfs.NfsExports: java.util.regex.Pattern HOSTNAME_FORMAT> at line 396 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack21 = virtualinvoke host.<java.lang.String: boolean contains(java.lang.CharSequence)>("*") at line 387 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack17 == 0 goto $stack18 = <org.apache.hadoop.nfs.NfsExports: java.util.regex.Pattern CIDR_FORMAT_LONG> at line 382 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack15 = <org.apache.hadoop.nfs.NfsExports: java.util.regex.Pattern CIDR_FORMAT_SHORT> at line 377 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.nfs.NfsExports: org.apache.hadoop.nfs.NfsExports$Match getMatch(java.lang.String)> has 35 units and 5 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack104 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> AT LINE 379 with ID [bc87b72c-91bc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack105 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using match all for \'") AT LINE 379 with ID [bc87b72c-91bc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(host) AT LINE 379 with ID [bc87b72c-91bc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and ") AT LINE 379 with ID [bc87b72c-91bc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack108 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(privilege) AT LINE 379 with ID [bc87b72c-91bc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack109 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 379 with ID [bc87b72c-91bc]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack104.<org.slf4j.Logger: void debug(java.lang.String)>($stack109) AT LINE 379 with ID [bc87b72c-91bc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack91 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> AT LINE 384 with ID [06f39822-93ee]
2020-08-25 12:10:03 [INFO] - 	 -> $stack92 = virtualinvoke $stack90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using CIDR match for \'") AT LINE 384 with ID [06f39822-93ee]
2020-08-25 12:10:03 [INFO] - 	 -> $stack93 = virtualinvoke $stack92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(host) AT LINE 384 with ID [06f39822-93ee]
2020-08-25 12:10:03 [INFO] - 	 -> $stack94 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and ") AT LINE 384 with ID [06f39822-93ee]
2020-08-25 12:10:03 [INFO] - 	 -> $stack95 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(privilege) AT LINE 384 with ID [06f39822-93ee]
2020-08-25 12:10:03 [INFO] - 	 -> $stack96 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 384 with ID [06f39822-93ee]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack91.<org.slf4j.Logger: void debug(java.lang.String)>($stack96) AT LINE 384 with ID [06f39822-93ee]
2020-08-25 12:10:03 [INFO] - 	 -> $stack71 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> AT LINE 389 with ID [354cb1a4-34b8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack72 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using CIDR match for \'") AT LINE 389 with ID [354cb1a4-34b8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(host) AT LINE 389 with ID [354cb1a4-34b8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and ") AT LINE 389 with ID [354cb1a4-34b8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(privilege) AT LINE 389 with ID [354cb1a4-34b8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 389 with ID [354cb1a4-34b8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack71.<org.slf4j.Logger: void debug(java.lang.String)>($stack76) AT LINE 389 with ID [354cb1a4-34b8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> AT LINE 397 with ID [dcfe4e48-1d86]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using Regex match for \'") AT LINE 397 with ID [dcfe4e48-1d86]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(host) AT LINE 397 with ID [dcfe4e48-1d86]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and ") AT LINE 397 with ID [dcfe4e48-1d86]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(privilege) AT LINE 397 with ID [dcfe4e48-1d86]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 397 with ID [dcfe4e48-1d86]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String)>($stack31) AT LINE 397 with ID [dcfe4e48-1d86]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> AT LINE 402 with ID [31af0ef6-a8cd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using exact match for \'") AT LINE 402 with ID [31af0ef6-a8cd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(host) AT LINE 402 with ID [31af0ef6-a8cd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and ") AT LINE 402 with ID [31af0ef6-a8cd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(privilege) AT LINE 402 with ID [31af0ef6-a8cd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 402 with ID [31af0ef6-a8cd]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack53.<org.slf4j.Logger: void debug(java.lang.String)>($stack58) AT LINE 402 with ID [31af0ef6-a8cd]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.store.impl.MembershipStoreImpl: org.apache.hadoop.hdfs.server.federation.store.protocol.NamenodeHeartbeatResponse namenodeHeartbeat(org.apache.hadoop.hdfs.server.federation.store.protocol.NamenodeHeartbeatRequest)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.server.federation.store.impl.MembershipStoreImpl: org.slf4j.Logger LOG> AT LINE 173 with ID [deb3f0db-708f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Updating NN registration: {} -> {}", existingEntry, record) AT LINE 173 with ID [deb3f0db-708f]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if download == 0 goto (branch) at line 213 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack61 != 0 goto download = specialinvoke this.<org.apache.hadoop.hdfs.server.namenode.ha.BootstrapStandby: int downloadImage(org.apache.hadoop.hdfs.server.namenode.NNStorage,org.apache.hadoop.hdfs.server.protocol.NamenodeProtocol)>(ioe#2, proxy) at line 204 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack57 != 0 goto download = specialinvoke this.<org.apache.hadoop.hdfs.server.namenode.ha.BootstrapStandby: int downloadImage(org.apache.hadoop.hdfs.server.namenode.NNStorage,org.apache.hadoop.hdfs.server.protocol.NamenodeProtocol)>(ioe#2, proxy) at line 207 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack11 = <java.lang.System: java.io.PrintStream out> at line 175 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.namenode.ha.BootstrapStandby: int doRun()>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack3 == 0 goto this.<org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: boolean closed> = 1 at line 476 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: void close()>
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.TokenAspect: void initDelegationToken(org.apache.hadoop.security.UserGroupInformation)> has 3 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = this.<org.apache.hadoop.hdfs.web.TokenAspect: org.slf4j.Logger LOG> AT LINE 156 with ID [cba5578f-2e99]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 156 with ID [cba5578f-2e99]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Found existing DT for {}", $stack6) AT LINE 156 with ID [cba5578f-2e99]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack10 = new org.apache.hadoop.conf.Configuration at line 53 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.HdfsUtils: boolean isHealthy(java.net.URI)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.client.HdfsUtils: org.slf4j.Logger LOG> AT LINE 71 with ID [d4246f59-11a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Is namenode in safemode? ") AT LINE 71 with ID [d4246f59-11a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(safemode) AT LINE 71 with ID [d4246f59-11a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; uri=") AT LINE 71 with ID [d4246f59-11a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(uri) AT LINE 71 with ID [d4246f59-11a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 71 with ID [d4246f59-11a9]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String)>($stack27) AT LINE 71 with ID [d4246f59-11a9]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.portmap.RpcProgramPortmap: org.apache.hadoop.oncrpc.XDR set(int,org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.XDR)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.portmap.RpcProgramPortmap: org.slf4j.Logger LOG> AT LINE 94 with ID [4a1f4bce-df05]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Portmap set key=") AT LINE 94 with ID [4a1f4bce-df05]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 94 with ID [4a1f4bce-df05]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 94 with ID [4a1f4bce-df05]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 94 with ID [4a1f4bce-df05]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack30 == 0 goto (branch) at line 275 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack27 == 0 goto (branch) at line 281 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if src == null goto $stack25 = virtualinvoke loc.<org.apache.hadoop.hdfs.server.federation.resolver.PathLocation: org.apache.hadoop.hdfs.server.federation.resolver.RemoteLocation getDefaultLocation()>() at line 274 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack19 == 0 goto $stack21 = <org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver: org.slf4j.Logger LOG> at line 270 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack14 != 0 goto $stack15 = this.<org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver: com.google.common.cache.Cache locationCache> at line 263 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver: void invalidateLocationCache(java.lang.String)> has 10 units and 4 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver: org.slf4j.Logger LOG> AT LINE 261 with ID [8410f0a3-82fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver: com.google.common.cache.Cache locationCache> AT LINE 261 with ID [8410f0a3-82fc]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Invalidating {} from {}", path, $stack9) AT LINE 261 with ID [8410f0a3-82fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = <org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver: org.slf4j.Logger LOG> AT LINE 276 with ID [8ecf4ed9-d292]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Removing {}", src) AT LINE 276 with ID [8ecf4ed9-d292]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver: org.slf4j.Logger LOG> AT LINE 282 with ID [ac6a852b-9395]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Removing default cache {}", dest) AT LINE 282 with ID [ac6a852b-9395]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver: org.slf4j.Logger LOG> AT LINE 288 with ID [1e55a361-b309]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = this.<org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver: com.google.common.cache.Cache locationCache> AT LINE 288 with ID [1e55a361-b309]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Location cache after invalidation: {}", $stack20) AT LINE 288 with ID [1e55a361-b309]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack12 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock> at line 1004 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack28 == 0 goto (branch) at line 1010 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if user != null goto resourceUsage = virtualinvoke user.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager$User: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage getResourceUsage()>() at line 992 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: void updateNonActiveUsersResourceUsage(java.lang.String)> has 23 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.commons.logging.Log LOG> AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User \'") AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(userName) AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has become non-active.Hence move user to non-active list.") AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Active users size = ") AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: java.util.Set activeUsersSet> AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = interfaceinvoke $stack36.<java.util.Set: int size()>() AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack37) AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-active users size = ") AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: java.util.Set nonActiveUsersSet> AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = interfaceinvoke $stack40.<java.util.Set: int size()>() AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack41) AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total Resource usage for active users=") AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage totalResUsageForActiveUsers> AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getAllUsed()>() AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack45) AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total Resource usage for non-active users=") AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage totalResUsageForNonActiveUsers> AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getAllUsed()>() AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack50) AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack52) AT LINE 1011 with ID [f5e93cfa-5c8c]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.hadoop.fs.Path localizeClasspathJar(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.String)> has 10 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.commons.logging.Log LOG> AT LINE 633 with ID [489fcae9-0bdb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 633 with ID [489fcae9-0bdb]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack7 == 0 goto $stack8 = new org.apache.hadoop.fs.permission.FsPermission AT LINE 633 with ID [489fcae9-0bdb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.commons.logging.Log LOG> AT LINE 634 with ID [489fcae9-0bdb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = newarray (java.lang.Object)[3] AT LINE 634 with ID [489fcae9-0bdb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12[0] = jarPath AT LINE 634 with ID [489fcae9-0bdb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12[1] = target AT LINE 634 with ID [489fcae9-0bdb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12[2] = owner AT LINE 634 with ID [489fcae9-0bdb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("localizeClasspathJar: %s %s o:%s", $stack12) AT LINE 634 with ID [489fcae9-0bdb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 634 with ID [489fcae9-0bdb]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if toWrite == null goto $stack16 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: boolean activeState> at line 1096 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: void executeWriteBack()> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1106 with ID [955a28b4-f420]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The openFileCtx is not active anymore, fileId: ") AT LINE 1106 with ID [955a28b4-f420]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes latestAttr> AT LINE 1106 with ID [955a28b4-f420]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes: long getFileId()>() AT LINE 1106 with ID [955a28b4-f420]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack45) AT LINE 1106 with ID [955a28b4-f420]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1106 with ID [955a28b4-f420]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack47) AT LINE 1106 with ID [955a28b4-f420]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack25 == 0 goto $stack26 = new org.apache.hadoop.security.AccessControlException at line 169 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if switchToSimple != 0 goto $stack10 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> at line 179 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack41 != null goto selectedAuthType = authType at line 160 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslRpcClient: org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth selectSaslClient(java.util.List)> has 10 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 176 with ID [74c39a88-6f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Use ") AT LINE 176 with ID [74c39a88-6f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke selectedAuthType.<org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth: java.lang.String getMethod()>() AT LINE 176 with ID [74c39a88-6f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 176 with ID [74c39a88-6f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication for protocol ") AT LINE 176 with ID [74c39a88-6f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.security.SaslRpcClient: java.lang.Class protocol> AT LINE 176 with ID [74c39a88-6f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 176 with ID [74c39a88-6f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19) AT LINE 176 with ID [74c39a88-6f2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 176 with ID [74c39a88-6f2f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 176 with ID [74c39a88-6f2f]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack19 != null goto $stack20 = new org.apache.hadoop.hdfs.client.impl.BlockReaderLocal$Builder at line 493 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if exc == null goto $stack19 = virtualinvoke info.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplicaInfo: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica getReplica()>() at line 488 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack10 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.ClientContext clientContext> at line 478 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.BlockReader getBlockReaderLocal()> has 13 units and 4 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 472 with ID [7592b7cf-40f5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("{}: trying to construct a BlockReaderLocal for short-circuit  reads.", this) AT LINE 472 with ID [7592b7cf-40f5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = <org.apache.hadoop.util.PerformanceAdvisory: org.slf4j.Logger LOG> AT LINE 479 with ID [c1d423e5-0bf8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory$PathInfo pathInfo> AT LINE 479 with ID [c1d423e5-0bf8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack49.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: {} is not usable for short circuit; giving up on BlockReaderLocal.", this, $stack48) AT LINE 479 with ID [c1d423e5-0bf8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 489 with ID [ad7d8839-0ada]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory$PathInfo pathInfo> AT LINE 489 with ID [ad7d8839-0ada]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack44.<org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory$PathInfo: java.lang.String getPath()>() AT LINE 489 with ID [ad7d8839-0ada]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: got InvalidToken exception while trying to construct BlockReaderLocal via {}", this, $stack47) AT LINE 489 with ID [ad7d8839-0ada]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = <org.apache.hadoop.util.PerformanceAdvisory: org.slf4j.Logger LOG> AT LINE 494 with ID [2c28e3de-c1b4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory$PathInfo pathInfo> AT LINE 494 with ID [2c28e3de-c1b4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack40.<org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory$PathInfo: java.lang.String getPath()>() AT LINE 494 with ID [2c28e3de-c1b4]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack41.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: failed to get ShortCircuitReplica. Cannot construct BlockReaderLocal via {}", this, $stack43) AT LINE 494 with ID [2c28e3de-c1b4]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack32 != 1 goto $stack33 = new org.apache.hadoop.io.retry.MultiException at line 144 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if numAttempts <= 0 goto $stack32 = interfaceinvoke proxyInfo#11.<java.util.Map: int size()>() at line 123 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack30 == 0 goto $stack31 = new java.util.HashMap at line 109 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack21 != 1 goto $stack22 = this.<org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider$RequestHedgingInvocationHandler: org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider this$0> at line 90 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider$RequestHedgingInvocationHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])> has 14 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack67 = <org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider: org.slf4j.Logger LOG> AT LINE 95 with ID [15723e50-e310]
2020-08-25 12:10:03 [INFO] - 	 -> $stack66 = this.<org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider$RequestHedgingInvocationHandler: org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider this$0> AT LINE 95 with ID [15723e50-e310]
2020-08-25 12:10:03 [INFO] - 	 -> $stack69 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider: org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo access$100(org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider)>($stack66) AT LINE 95 with ID [15723e50-e310]
2020-08-25 12:10:03 [INFO] - 	 -> $stack70 = $stack69.<org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo: java.lang.String proxyInfo> AT LINE 95 with ID [15723e50-e310]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack67.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Invocation successful on [{}]", $stack70) AT LINE 95 with ID [15723e50-e310]
2020-08-25 12:10:03 [INFO] - 	 -> $stack71 = <org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider: org.slf4j.Logger LOG> AT LINE 151 with ID [0c56b2db-b7a6]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack71.<org.slf4j.Logger: void trace(java.lang.String)>("Shutting down threadpool executor") AT LINE 151 with ID [0c56b2db-b7a6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider: org.slf4j.Logger LOG> AT LINE 129 with ID [b00d8b55-9eb3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = this.<org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider$RequestHedgingInvocationHandler: org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider this$0> AT LINE 129 with ID [b00d8b55-9eb3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider: org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo access$100(org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider)>($stack44) AT LINE 129 with ID [b00d8b55-9eb3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = $stack47.<org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo: java.lang.String proxyInfo> AT LINE 129 with ID [b00d8b55-9eb3]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Invocation successful on [{}]", $stack48) AT LINE 129 with ID [b00d8b55-9eb3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = <org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider: org.slf4j.Logger LOG> AT LINE 151 with ID [d5593f4c-f6a1]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack49.<org.slf4j.Logger: void trace(java.lang.String)>("Shutting down threadpool executor") AT LINE 151 with ID [d5593f4c-f6a1]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if nextMap != null goto i = i + 1 at line 1033 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= $stack70 goto return at line 1031 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if null != e#81 goto $stack53 = new org.jboss.netty.handler.codec.http.DefaultHttpResponse at line 992 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack47 == 1 goto $stack48 = interfaceinvoke reduceQ.<java.util.List: java.lang.Object get(int)>(0) at line 976 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if jobQ != null goto $stack45 = interfaceinvoke reduceQ.<java.util.List: int size()>() at line 972 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack24 == $stack25 goto $stack26 = "mapreduce" at line 937 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.ShuffleHandler$Shuffle: void messageReceived(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)> has 21 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack121 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() AT LINE 955 with ID [e386b400-ae40]
2020-08-25 12:10:03 [INFO] - 	 -> $stack123 = virtualinvoke $stack122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KeepAliveParam : ") AT LINE 955 with ID [e386b400-ae40]
2020-08-25 12:10:03 [INFO] - 	 -> $stack124 = virtualinvoke $stack123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(keepAliveList) AT LINE 955 with ID [e386b400-ae40]
2020-08-25 12:10:03 [INFO] - 	 -> $stack125 = virtualinvoke $stack124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") AT LINE 955 with ID [e386b400-ae40]
2020-08-25 12:10:03 [INFO] - 	 -> $stack126 = virtualinvoke $stack125.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(keepAliveParam) AT LINE 955 with ID [e386b400-ae40]
2020-08-25 12:10:03 [INFO] - 	 -> $stack127 = virtualinvoke $stack126.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 955 with ID [e386b400-ae40]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack121.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack127) AT LINE 955 with ID [e386b400-ae40]
2020-08-25 12:10:03 [INFO] - 	 -> $stack90 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack92 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RECV: ") AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack93 = interfaceinvoke request.<org.jboss.netty.handler.codec.http.HttpRequest: java.lang.String getUri()>() AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack94 = virtualinvoke $stack92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack93) AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack95 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  mapId: ") AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack96 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mapIds) AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  reduceId: ") AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(reduceQ) AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  jobId: ") AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(jobQ) AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  keepAlive: ") AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack102 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(keepAliveParam) AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack103 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack90.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack103) AT LINE 963 with ID [0c7d337b-d8cb]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack16 == 0 goto return at line 620 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager$Monitor: void check()> has 33 units and 7 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack93 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger access$100()>() AT LINE 562 with ID [bea20453-9c2f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack93.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Newly-added node {}, doing full scan to find insufficiently-replicated blocks.", dn) AT LINE 562 with ID [bea20453-9c2f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger access$100()>() AT LINE 571 with ID [c32144f0-6ca1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates getAdminState()>() AT LINE 571 with ID [c32144f0-6ca1]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack41.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Processing {} node {}", $stack43, dn) AT LINE 571 with ID [c32144f0-6ca1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger access$100()>() AT LINE 582 with ID [4986ff3c-283a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack85.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Node {} has finished replicating current set of blocks, checking with the full block map.", dn) AT LINE 582 with ID [4986ff3c-283a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger access$100()>() AT LINE 603 with ID [be056017-b28a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates getAdminState()>() AT LINE 603 with ID [be056017-b28a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack78.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Node {} is sufficiently replicated and healthy, marked as {}.", $stack80) AT LINE 603 with ID [be056017-b28a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger access$100()>() AT LINE 606 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = newarray (java.lang.Object)[4] AT LINE 606 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59[0] = dn AT LINE 606 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> if isHealthy == 0 goto $stack68 = "isn\'t" AT LINE 606 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> $stack68 = "is" AT LINE 617 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= $stack59[1] = $stack68] AT LINE 617 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> $stack68 = "isn\'t" AT LINE 617 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59[1] = $stack68 AT LINE 606 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = virtualinvoke blocks.<java.util.AbstractList: int size()>() AT LINE 606 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> $stack63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack62) AT LINE 606 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59[2] = $stack63 AT LINE 606 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> $stack65 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates getAdminState()>() AT LINE 606 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59[3] = $stack65 AT LINE 606 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack58.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Node {} {} healthy. It needs to replicate {} more blocks. {} is still in progress.", $stack59) AT LINE 606 with ID [cc82ca35-7a12]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger access$100()>() AT LINE 612 with ID [50d289cf-6e9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = newarray (java.lang.Object)[3] AT LINE 612 with ID [50d289cf-6e9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46[0] = dn AT LINE 612 with ID [50d289cf-6e9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke blocks.<java.util.AbstractList: int size()>() AT LINE 612 with ID [50d289cf-6e9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack49) AT LINE 612 with ID [50d289cf-6e9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46[1] = $stack50 AT LINE 612 with ID [50d289cf-6e9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates getAdminState()>() AT LINE 612 with ID [50d289cf-6e9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46[2] = $stack52 AT LINE 612 with ID [50d289cf-6e9b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Node {} still has {} blocks to replicate before it is a candidate to finish {}.", $stack46) AT LINE 612 with ID [50d289cf-6e9b]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.applications.distributedshell.ApplicationMaster$NMCallbackHandler: void onContainerStopped(org.apache.hadoop.yarn.api.records.ContainerId)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = staticinvoke <org.apache.hadoop.yarn.applications.distributedshell.ApplicationMaster: org.apache.commons.logging.Log access$200()>() AT LINE 992 with ID [4cfb2daf-4d9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Succeeded to stop Container ") AT LINE 992 with ID [4cfb2daf-4d9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 992 with ID [4cfb2daf-4d9b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 992 with ID [4cfb2daf-4d9b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack10) AT LINE 992 with ID [4cfb2daf-4d9b]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.security.BaseContainerTokenSecretManager: byte[] createPassword(org.apache.hadoop.yarn.security.ContainerTokenIdentifier)> has 12 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.security.BaseContainerTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 90 with ID [61a2bb6e-794a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating password for ") AT LINE 90 with ID [61a2bb6e-794a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.yarn.api.records.ContainerId getContainerID()>() AT LINE 90 with ID [61a2bb6e-794a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack15) AT LINE 90 with ID [61a2bb6e-794a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ") AT LINE 90 with ID [61a2bb6e-794a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>() AT LINE 90 with ID [61a2bb6e-794a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack18) AT LINE 90 with ID [61a2bb6e-794a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to be run on NM ") AT LINE 90 with ID [61a2bb6e-794a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: java.lang.String getNmHostAddress()>() AT LINE 90 with ID [61a2bb6e-794a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 90 with ID [61a2bb6e-794a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 90 with ID [61a2bb6e-794a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 90 with ID [61a2bb6e-794a]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack49 == 0 goto (branch) at line 509 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack42 == 0 goto (branch) at line 507 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack30 == 0 goto return at line 502 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack18 != 0 goto $stack19 = staticinvoke <com.google.common.cache.CacheBuilder: com.google.common.cache.CacheBuilder newBuilder()>() at line 489 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: void handleInitContainerResources(org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.event.ContainerLocalizationRequestEvent)> has 9 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: org.slf4j.Logger LOG> AT LINE 510 with ID [f5123f9a-8cb0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Localizing ") AT LINE 510 with ID [f5123f9a-8cb0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = virtualinvoke req.<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalResourceRequest: org.apache.hadoop.fs.Path getPath()>() AT LINE 510 with ID [f5123f9a-8cb0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack54) AT LINE 510 with ID [f5123f9a-8cb0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for container ") AT LINE 510 with ID [f5123f9a-8cb0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = interfaceinvoke c.<org.apache.hadoop.yarn.server.nodemanager.containermanager.container.Container: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 510 with ID [f5123f9a-8cb0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack57) AT LINE 510 with ID [f5123f9a-8cb0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 510 with ID [f5123f9a-8cb0]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack52.<org.slf4j.Logger: void debug(java.lang.String)>($stack59) AT LINE 510 with ID [f5123f9a-8cb0]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if null != app#4 goto l5 = virtualinvoke app#4.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: boolean moveReservation(org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode)>(toBeMovedContainer, sourceNode, targetNode) at line 2639 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack14 == null goto $stack15 = interfaceinvoke toBeMovedContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() at line 2629 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack13 == targetNode goto $stack14 = virtualinvoke targetNode.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer getReservedContainer()>() at line 2619 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if null != sourceNode goto $stack12 = virtualinvoke targetNode.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.api.records.NodeId getNodeID()>() at line 2610 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: boolean moveReservedContainer(org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode)> has 30 units and 7 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 2605 with ID [5d3da96f-4823]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to move container=") AT LINE 2605 with ID [5d3da96f-4823]
2020-08-25 12:10:03 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(toBeMovedContainer) AT LINE 2605 with ID [5d3da96f-4823]
2020-08-25 12:10:03 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to node=") AT LINE 2605 with ID [5d3da96f-4823]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = virtualinvoke targetNode.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.api.records.NodeId getNodeID()>() AT LINE 2605 with ID [5d3da96f-4823]
2020-08-25 12:10:03 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack62) AT LINE 2605 with ID [5d3da96f-4823]
2020-08-25 12:10:03 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2605 with ID [5d3da96f-4823]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack58.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack64) AT LINE 2605 with ID [5d3da96f-4823]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 2612 with ID [3ad337db-f034]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to move reservation, cannot find source node=") AT LINE 2612 with ID [3ad337db-f034]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = interfaceinvoke toBeMovedContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.NodeId getNodeId()>() AT LINE 2612 with ID [3ad337db-f034]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack51) AT LINE 2612 with ID [3ad337db-f034]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2612 with ID [3ad337db-f034]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack49.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack53) AT LINE 2612 with ID [3ad337db-f034]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 2620 with ID [d8b761ec-54df]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = interfaceinvoke $stack38.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 2620 with ID [d8b761ec-54df]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack39 == 0 goto app = 0 AT LINE 2620 with ID [d8b761ec-54df]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 2621 with ID [d8b761ec-54df]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack41.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Failed to move reservation, node updated or removed, moving cancelled.") AT LINE 2621 with ID [d8b761ec-54df]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 2630 with ID [c1598cc3-73eb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = interfaceinvoke $stack31.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 2630 with ID [c1598cc3-73eb]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack32 == 0 goto app = 0 AT LINE 2630 with ID [c1598cc3-73eb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 2631 with ID [c1598cc3-73eb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Target node\'s reservation status changed, moving cancelled.") AT LINE 2631 with ID [c1598cc3-73eb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 2641 with ID [d6d14e51-0f5b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find to-be-moved container\'s application=") AT LINE 2641 with ID [d6d14e51-0f5b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = interfaceinvoke toBeMovedContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 2641 with ID [d6d14e51-0f5b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack25) AT LINE 2641 with ID [d6d14e51-0f5b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2641 with ID [d6d14e51-0f5b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 2641 with ID [d6d14e51-0f5b]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if toInvalidate != null goto (branch) at line 3778 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if dnDescriptor#2 != null goto $stack11 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.InvalidateBlocks invalidateBlocks> at line 3770 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager datanodeManager> at line 3764 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: int invalidateWorkForOneNode(org.apache.hadoop.hdfs.protocol.DatanodeInfo)> has 10 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 3765 with ID [b05b6fff-1721]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String)>("In safemode, not computing replication work") AT LINE 3765 with ID [b05b6fff-1721]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 3787 with ID [0e9fe995-9772]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = newarray (java.lang.Object)[3] AT LINE 3787 with ID [0e9fe995-9772]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() AT LINE 3787 with ID [0e9fe995-9772]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 3787 with ID [0e9fe995-9772]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14[0] = $stack19 AT LINE 3787 with ID [0e9fe995-9772]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14[1] = dn AT LINE 3787 with ID [0e9fe995-9772]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14[2] = toInvalidate AT LINE 3787 with ID [0e9fe995-9772]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* {}: ask {} to delete {}", $stack14) AT LINE 3787 with ID [0e9fe995-9772]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack74 == 0 goto $stack75 = this.<org.apache.hadoop.yarn.webapp.WebApps$Builder: java.lang.String csrfConfigPrefix> at line 320 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack70 == 0 goto $stack71 = this.<org.apache.hadoop.yarn.webapp.WebApps$Builder: java.util.HashMap attributes> at line 317 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp build(org.apache.hadoop.yarn.webapp.WebApp)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.webapp.WebApps: org.slf4j.Logger LOG> AT LINE 254 with ID [a10f54c7-a0d1]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("setting webapp host class to {}", cls) AT LINE 254 with ID [a10f54c7-a0d1]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack3 == 0 goto return null at line 126 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.ResourceHandlerModule: org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficControlBandwidthHandlerImpl getTrafficControlBandwidthHandler(org.apache.hadoop.conf.Configuration)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.ResourceHandlerModule: org.slf4j.Logger LOG> AT LINE 131 with ID [4a7e8dba-a77c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>("Creating new traffic control bandwidth handler") AT LINE 131 with ID [4a7e8dba-a77c]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack28 == 0 goto $stack29 = this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttempt currentAttempt> at line 939 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: void recover(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState)> has 14 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.commons.logging.Log LOG> AT LINE 915 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = interfaceinvoke $stack11.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 915 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack12 == 0 goto $stack13 = this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: java.lang.StringBuilder diagnostics> AT LINE 915 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.commons.logging.Log LOG> AT LINE 916 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = newarray (java.lang.Object)[3] AT LINE 916 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 916 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58[0] = $stack62 AT LINE 916 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> $stack64 = virtualinvoke appState.<org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationStateData: int getAttemptCount()>() AT LINE 916 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> $stack65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack64) AT LINE 916 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58[1] = $stack65 AT LINE 916 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> $stack66 = this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppState recoveredFinalState> AT LINE 916 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58[2] = $stack66 AT LINE 916 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> $stack67 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Recovering app: %s with %d attempts and final state = %s", $stack58) AT LINE 916 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack59.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack67) AT LINE 916 with ID [0592fa2c-1209]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack15 == 0 goto return at line 103 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.task.reduce.LocalFetcher: void doCopy(java.util.Set)> has 8 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.mapreduce.task.reduce.LocalFetcher: org.apache.commons.logging.Log LOG> AT LINE 102 with ID [68e76ef2-a456]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LocalFetcher ") AT LINE 102 with ID [68e76ef2-a456]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = this.<org.apache.hadoop.mapreduce.task.reduce.LocalFetcher: int id> AT LINE 102 with ID [68e76ef2-a456]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack10) AT LINE 102 with ID [68e76ef2-a456]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" going to fetch: ") AT LINE 102 with ID [68e76ef2-a456]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(map) AT LINE 102 with ID [68e76ef2-a456]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 102 with ID [68e76ef2-a456]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 102 with ID [68e76ef2-a456]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$#30 >= len$#29 goto $stack45 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> at line 1642 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack42 == 0 goto (branch) at line 1649 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if block#20 == null goto (branch) at line 1640 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack29 == 0 goto $stack31 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> at line 1638 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack21 == 0 goto $stack22 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.namenode.Namesystem namesystem> at line 1605 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack67 == 0 goto $stack69 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicy blockplacement> at line 1609 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if rw == null goto (branch) at line 1594 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack77 == 0 goto priority = priority + 1 at line 1592 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if priority >= $stack16 goto exitmonitor excludedNodes at line 1591 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: int computeReplicationWorkForBlocks(java.util.List)> has 27 units and 7 lines
2020-08-25 12:10:03 [INFO] - 	 -> rw#27 = $stack43 AT LINE 1641 with ID [acb185af-8830]
2020-08-25 12:10:03 [INFO] - 	 -> arr$#28 = block#20 AT LINE 1642 with ID [UNKNOWN_ID]
2020-08-25 12:10:03 [INFO] - 	 -> len$#29 = lengthof arr$#28 AT LINE 1642 with ID [UNKNOWN_ID]
2020-08-25 12:10:03 [INFO] - 	 -> i$#30 = 0 AT LINE 1642 with ID [UNKNOWN_ID]
2020-08-25 12:10:03 [INFO] - 	 -> if i$#30 >= len$#29 goto $stack45 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1642 with ID [UNKNOWN_ID]
2020-08-25 12:10:03 [INFO] - 	 -> target#31 = arr$#28[i$#30] AT LINE 1649 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke rw#27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32) AT LINE 1643 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = virtualinvoke target#31.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor getDatanodeDescriptor()>() AT LINE 1644 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> virtualinvoke rw#27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack52) AT LINE 1644 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> i$#30 = i$#30 + 1 AT LINE 1642 with ID [UNKNOWN_ID]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= (branch)] AT LINE 1642 with ID [UNKNOWN_ID]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1646 with ID [acb185af-8830]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = newarray (java.lang.Object)[3] AT LINE 1646 with ID [acb185af-8830]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke i$#11.<org.apache.hadoop.hdfs.server.blockmanagement.ReplicationWork: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor getSrcNode()>() AT LINE 1646 with ID [acb185af-8830]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44[0] = $stack48 AT LINE 1646 with ID [acb185af-8830]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = virtualinvoke i$#11.<org.apache.hadoop.hdfs.server.blockmanagement.ReplicationWork: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getBlock()>() AT LINE 1646 with ID [acb185af-8830]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44[1] = $stack50 AT LINE 1646 with ID [acb185af-8830]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44[2] = rw#27 AT LINE 1646 with ID [acb185af-8830]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* ask {} to replicate {} to {}", $stack44) AT LINE 1646 with ID [acb185af-8830]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1651 with ID [7754c682-e48e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.UnderReplicatedBlocks neededReplications> AT LINE 1651 with ID [7754c682-e48e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack30.<org.apache.hadoop.hdfs.server.blockmanagement.UnderReplicatedBlocks: int size()>() AT LINE 1651 with ID [7754c682-e48e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack33) AT LINE 1651 with ID [7754c682-e48e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.PendingReplicationBlocks pendingReplications> AT LINE 1651 with ID [7754c682-e48e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<org.apache.hadoop.hdfs.server.blockmanagement.PendingReplicationBlocks: int size()>() AT LINE 1651 with ID [7754c682-e48e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack36) AT LINE 1651 with ID [7754c682-e48e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* neededReplications = {} pendingReplications = {}", $stack34, $stack37) AT LINE 1651 with ID [7754c682-e48e]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack35 >= 0 goto (branch) at line 169 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack9 == 0 goto startIndex = virtualinvoke range.<org.apache.hadoop.mapred.SortedRanges$Range: long getStartIndex()>() at line 135 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.SortedRanges: void remove(org.apache.hadoop.mapred.SortedRanges$Range)> has 19 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = <org.apache.hadoop.mapred.SortedRanges: org.apache.commons.logging.Log LOG> AT LINE 144 with ID [53af273b-b179]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("previousRange ") AT LINE 144 with ID [53af273b-b179]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(previousRange) AT LINE 144 with ID [53af273b-b179]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 144 with ID [53af273b-b179]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack43) AT LINE 144 with ID [53af273b-b179]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = <org.apache.hadoop.mapred.SortedRanges: org.apache.commons.logging.Log LOG> AT LINE 150 with ID [9132fe1e-19ff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removed previousRange ") AT LINE 150 with ID [9132fe1e-19ff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(previousRange) AT LINE 150 with ID [9132fe1e-19ff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 150 with ID [9132fe1e-19ff]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack58.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack61) AT LINE 150 with ID [9132fe1e-19ff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = <org.apache.hadoop.mapred.SortedRanges: org.apache.commons.logging.Log LOG> AT LINE 162 with ID [ab729345-537b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nextRange ") AT LINE 162 with ID [ab729345-537b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nextRange) AT LINE 162 with ID [ab729345-537b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   startIndex:") AT LINE 162 with ID [ab729345-537b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(startIndex) AT LINE 162 with ID [ab729345-537b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  endIndex:") AT LINE 162 with ID [ab729345-537b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(endIndex) AT LINE 162 with ID [ab729345-537b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 162 with ID [ab729345-537b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 162 with ID [ab729345-537b]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: int read(java.nio.ByteBuffer)> has 33 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> traceFormatStr = "read(buf.remaining={}, block={}, filename={}, canSkipChecksum={})" AT LINE 408 with ID [e393bf70-99cc, 4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.slf4j.Logger LOG> AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(traceFormatStr) AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": starting") AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = newarray (java.lang.Object)[4] AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke buf.<java.nio.ByteBuffer: int remaining()>() AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack15) AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13[0] = $stack16 AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13[1] = $stack17 AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: java.lang.String filename> AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13[2] = $stack18 AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(canSkipChecksum) AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13[3] = $stack20 AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>($stack12, $stack13) AT LINE 410 with ID [e393bf70-99cc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.slf4j.Logger LOG> AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(traceFormatStr) AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": returning {}") AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = newarray (java.lang.Object)[5] AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke buf.<java.nio.ByteBuffer: int remaining()>() AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack29) AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27[0] = $stack30 AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27[1] = $stack31 AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: java.lang.String filename> AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27[2] = $stack32 AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(canSkipChecksum) AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27[3] = $stack34 AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(nRead) AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27[4] = $stack36 AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>($stack26, $stack27) AT LINE 424 with ID [4d871011-eb7b]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: void stopMaintenance(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger LOG> AT LINE 329 with ID [76cb01d0-8c43]
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopMaintenance: Node {} in {}, nothing to do.") AT LINE 329 with ID [76cb01d0-8c43]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(node) AT LINE 329 with ID [76cb01d0-8c43]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 329 with ID [76cb01d0-8c43]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke node.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates getAdminState()>() AT LINE 329 with ID [76cb01d0-8c43]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>($stack7, $stack8) AT LINE 329 with ID [76cb01d0-8c43]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack61 != 0 goto $stack64 = virtualinvoke theControl.<org.apache.hadoop.mapred.jobcontrol.JobControl: java.util.ArrayList getFailedJobs()>() at line 119 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.jobcontrol.TestLocalJobControl: void testLocalJobControlDataCopy()> has 37 units and 6 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack68 = <org.apache.hadoop.mapred.jobcontrol.TestLocalJobControl: org.apache.commons.logging.Log LOG> AT LINE 120 with ID [981072a7-4e77]
2020-08-25 12:10:03 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Jobs in waiting state: ") AT LINE 120 with ID [981072a7-4e77]
2020-08-25 12:10:03 [INFO] - 	 -> $stack70 = virtualinvoke theControl.<org.apache.hadoop.mapred.jobcontrol.JobControl: java.util.ArrayList getWaitingJobs()>() AT LINE 120 with ID [981072a7-4e77]
2020-08-25 12:10:03 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.util.ArrayList: int size()>() AT LINE 120 with ID [981072a7-4e77]
2020-08-25 12:10:03 [INFO] - 	 -> $stack72 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack71) AT LINE 120 with ID [981072a7-4e77]
2020-08-25 12:10:03 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 120 with ID [981072a7-4e77]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack68.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack73) AT LINE 120 with ID [981072a7-4e77]
2020-08-25 12:10:03 [INFO] - 	 -> $stack75 = <org.apache.hadoop.mapred.jobcontrol.TestLocalJobControl: org.apache.commons.logging.Log LOG> AT LINE 121 with ID [7e70c745-72c4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack76 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Jobs in ready state: ") AT LINE 121 with ID [7e70c745-72c4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack77 = virtualinvoke theControl.<org.apache.hadoop.mapred.jobcontrol.JobControl: java.util.ArrayList getReadyJobs()>() AT LINE 121 with ID [7e70c745-72c4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.util.ArrayList: int size()>() AT LINE 121 with ID [7e70c745-72c4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack79 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack78) AT LINE 121 with ID [7e70c745-72c4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 121 with ID [7e70c745-72c4]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack75.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack80) AT LINE 121 with ID [7e70c745-72c4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack82 = <org.apache.hadoop.mapred.jobcontrol.TestLocalJobControl: org.apache.commons.logging.Log LOG> AT LINE 122 with ID [2b98e353-2557]
2020-08-25 12:10:03 [INFO] - 	 -> $stack83 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Jobs in running state: ") AT LINE 122 with ID [2b98e353-2557]
2020-08-25 12:10:03 [INFO] - 	 -> $stack84 = virtualinvoke theControl.<org.apache.hadoop.mapred.jobcontrol.JobControl: java.util.ArrayList getRunningJobs()>() AT LINE 122 with ID [2b98e353-2557]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85 = virtualinvoke $stack84.<java.util.ArrayList: int size()>() AT LINE 122 with ID [2b98e353-2557]
2020-08-25 12:10:03 [INFO] - 	 -> $stack86 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack85) AT LINE 122 with ID [2b98e353-2557]
2020-08-25 12:10:03 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 122 with ID [2b98e353-2557]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack82.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack87) AT LINE 122 with ID [2b98e353-2557]
2020-08-25 12:10:03 [INFO] - 	 -> $stack89 = <org.apache.hadoop.mapred.jobcontrol.TestLocalJobControl: org.apache.commons.logging.Log LOG> AT LINE 123 with ID [cb6396ae-81a7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack90 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Jobs in success state: ") AT LINE 123 with ID [cb6396ae-81a7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack91 = virtualinvoke theControl.<org.apache.hadoop.mapred.jobcontrol.JobControl: java.util.ArrayList getSuccessfulJobs()>() AT LINE 123 with ID [cb6396ae-81a7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack92 = virtualinvoke $stack91.<java.util.ArrayList: int size()>() AT LINE 123 with ID [cb6396ae-81a7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack93 = virtualinvoke $stack90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack92) AT LINE 123 with ID [cb6396ae-81a7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack94 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 123 with ID [cb6396ae-81a7]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack89.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack94) AT LINE 123 with ID [cb6396ae-81a7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack96 = <org.apache.hadoop.mapred.jobcontrol.TestLocalJobControl: org.apache.commons.logging.Log LOG> AT LINE 125 with ID [5d3bd426-dabe]
2020-08-25 12:10:03 [INFO] - 	 -> $stack97 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Jobs in failed state: ") AT LINE 125 with ID [5d3bd426-dabe]
2020-08-25 12:10:03 [INFO] - 	 -> $stack98 = virtualinvoke theControl.<org.apache.hadoop.mapred.jobcontrol.JobControl: java.util.ArrayList getFailedJobs()>() AT LINE 125 with ID [5d3bd426-dabe]
2020-08-25 12:10:03 [INFO] - 	 -> $stack99 = virtualinvoke $stack98.<java.util.ArrayList: int size()>() AT LINE 125 with ID [5d3bd426-dabe]
2020-08-25 12:10:03 [INFO] - 	 -> $stack100 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack99) AT LINE 125 with ID [5d3bd426-dabe]
2020-08-25 12:10:03 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 125 with ID [5d3bd426-dabe]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack96.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack101) AT LINE 125 with ID [5d3bd426-dabe]
2020-08-25 12:10:03 [INFO] - 	 -> $stack102 = <org.apache.hadoop.mapred.jobcontrol.TestLocalJobControl: org.apache.commons.logging.Log LOG> AT LINE 126 with ID [4758781a-47c5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack102.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("\n") AT LINE 126 with ID [4758781a-47c5]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: void setReservable(java.lang.String,boolean)> has 9 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> AT LINE 992 with ID [110eb35e-edaf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("here setReservableQueue: queuePrefix=") AT LINE 992 with ID [110eb35e-edaf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: java.lang.String getQueuePrefix(java.lang.String)>(queue) AT LINE 992 with ID [110eb35e-edaf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 992 with ID [110eb35e-edaf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isReservableQueue=") AT LINE 992 with ID [110eb35e-edaf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: boolean isReservable(java.lang.String)>(queue) AT LINE 992 with ID [110eb35e-edaf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack14) AT LINE 992 with ID [110eb35e-edaf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 992 with ID [110eb35e-edaf]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 992 with ID [110eb35e-edaf]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack17 != 0 goto cmd = null at line 444 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BPServiceActor: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand cacheReport()> has 17 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = <org.apache.hadoop.hdfs.server.datanode.BPServiceActor: org.slf4j.Logger LOG> AT LINE 452 with ID [1f0d594d-4277]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending cacheReport from service actor: ") AT LINE 452 with ID [1f0d594d-4277]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 452 with ID [1f0d594d-4277]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 452 with ID [1f0d594d-4277]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack53.<org.slf4j.Logger: void debug(java.lang.String)>($stack56) AT LINE 452 with ID [1f0d594d-4277]
2020-08-25 12:10:03 [INFO] - 	 -> createCost = createTime - startTime AT LINE 462 with ID [51d41358-4194]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = <org.apache.hadoop.hdfs.server.datanode.BPServiceActor: org.slf4j.Logger LOG> AT LINE 466 with ID [51d41358-4194]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CacheReport of ") AT LINE 466 with ID [51d41358-4194]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = interfaceinvoke blockIds.<java.util.List: int size()>() AT LINE 466 with ID [51d41358-4194]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack44) AT LINE 466 with ID [51d41358-4194]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" block(s) took ") AT LINE 466 with ID [51d41358-4194]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(createCost) AT LINE 466 with ID [51d41358-4194]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec to generate and ") AT LINE 466 with ID [51d41358-4194]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(sendCost) AT LINE 466 with ID [51d41358-4194]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs for RPC and NN processing") AT LINE 466 with ID [51d41358-4194]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 466 with ID [51d41358-4194]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 466 with ID [51d41358-4194]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl$TestSink: void putMetrics(org.apache.hadoop.metrics2.MetricsRecord)> has 3 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack2 = staticinvoke <org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl: org.slf4j.Logger access$000()>() AT LINE 82 with ID [c5302feb-a493]
2020-08-25 12:10:03 [INFO] - 	 -> $stack3 = virtualinvoke record.<java.lang.Object: java.lang.String toString()>() AT LINE 82 with ID [c5302feb-a493]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String)>($stack3) AT LINE 82 with ID [c5302feb-a493]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= $stack13 goto return at line 609 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.ipc.DecayRpcScheduler: void updateAverageResponseTime(boolean)> has 12 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = <org.apache.hadoop.ipc.DecayRpcScheduler: org.slf4j.Logger LOG> AT LINE 628 with ID [5bc05e67-23c9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = interfaceinvoke $stack24.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 628 with ID [5bc05e67-23c9]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack25 == 0 goto $stack26 = this.<org.apache.hadoop.ipc.DecayRpcScheduler: java.util.concurrent.atomic.AtomicLongArray responseTimeTotalInCurrWindow> AT LINE 628 with ID [5bc05e67-23c9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = <org.apache.hadoop.ipc.DecayRpcScheduler: org.slf4j.Logger LOG> AT LINE 629 with ID [5bc05e67-23c9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = newarray (java.lang.Object)[3] AT LINE 629 with ID [5bc05e67-23c9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i) AT LINE 629 with ID [5bc05e67-23c9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30[0] = $stack34 AT LINE 629 with ID [5bc05e67-23c9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(averageResponseTime) AT LINE 629 with ID [5bc05e67-23c9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30[1] = $stack36 AT LINE 629 with ID [5bc05e67-23c9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(responseTimeCount) AT LINE 629 with ID [5bc05e67-23c9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30[2] = $stack38 AT LINE 629 with ID [5bc05e67-23c9]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("updateAverageResponseTime queue: {} Average: {} Count: {}", $stack30) AT LINE 629 with ID [5bc05e67-23c9]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack68 == 0 goto $stack69 = this.<org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.iq80.leveldb.DB db> at line 573 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void removeContainer(org.apache.hadoop.yarn.api.records.ContainerId)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack79 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 556 with ID [d7220c2f-3971]
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeContainer: containerId=") AT LINE 556 with ID [d7220c2f-3971]
2020-08-25 12:10:03 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 556 with ID [d7220c2f-3971]
2020-08-25 12:10:03 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 556 with ID [d7220c2f-3971]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack79.<org.slf4j.Logger: void debug(java.lang.String)>($stack82) AT LINE 556 with ID [d7220c2f-3971]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if is != null goto systemId = staticinvoke <com.ctc.wstx.io.SystemId: com.ctc.wstx.io.SystemId construct(java.lang.String)>(systemIdStr) at line 2708 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.conf.Configuration: javax.xml.stream.XMLStreamReader parse(java.io.InputStream,java.lang.String,boolean)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = <org.apache.hadoop.conf.Configuration: org.slf4j.Logger LOG> AT LINE 2706 with ID [4550fd5b-215c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing input stream ") AT LINE 2706 with ID [4550fd5b-215c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(is) AT LINE 2706 with ID [4550fd5b-215c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2706 with ID [4550fd5b-215c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack27) AT LINE 2706 with ID [4550fd5b-215c]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= $stack85 goto staticinvoke <org.apache.hadoop.ipc.TestRPC: void stop(org.apache.hadoop.ipc.Server,org.apache.hadoop.ipc.TestRpcBase$TestRpcService)>(server, proxy) at line 513 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= $stack83 goto $stack84 = <java.lang.System: java.io.PrintStream out> at line 505 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.ipc.TestRPC: void testCallsInternal(org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack15 == 0 goto return map at line 755 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger LOG> at line 745 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: java.util.Map parseCredentials(java.util.Map)> has 13 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 760 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - 	 -> entry = (java.util.Map$Entry) $stack17 AT LINE 760 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger LOG> AT LINE 756 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retrieved credentials form RM for ") AT LINE 756 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 756 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 756 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 756 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>() AT LINE 756 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = (org.apache.hadoop.security.Credentials) $stack24 AT LINE 756 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<org.apache.hadoop.security.Credentials: java.util.Collection getAllTokens()>() AT LINE 756 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack26) AT LINE 756 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 756 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack28) AT LINE 756 with ID [7468811d-181a]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector$WatcherWithClientRef: void process(org.apache.zookeeper.WatchedEvent)> has 9 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = this.<org.apache.hadoop.ha.ActiveStandbyElector$WatcherWithClientRef: java.util.concurrent.CountDownLatch hasSetZooKeeper> AT LINE 1188 with ID [fc69c887-1625]
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = this.<org.apache.hadoop.ha.ActiveStandbyElector$WatcherWithClientRef: org.apache.hadoop.ha.ActiveStandbyElector this$0> AT LINE 1188 with ID [fc69c887-1625]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = staticinvoke <org.apache.hadoop.ha.ActiveStandbyElector: int access$700(org.apache.hadoop.ha.ActiveStandbyElector)>($stack4) AT LINE 1188 with ID [fc69c887-1625]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = (long) $stack6 AT LINE 1188 with ID [fc69c887-1625]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> AT LINE 1188 with ID [fc69c887-1625]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack5.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>($stack8, $stack7) AT LINE 1188 with ID [fc69c887-1625]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack9 != 0 goto $stack11 = this.<org.apache.hadoop.ha.ActiveStandbyElector$WatcherWithClientRef: org.apache.hadoop.ha.ActiveStandbyElector this$0> AT LINE 1188 with ID [fc69c887-1625]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 1189 with ID [fc69c887-1625]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>("Event received with stale zk") AT LINE 1189 with ID [fc69c887-1625]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if old == null goto $stack7 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> at line 269 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server: void registerProtocolEngine(org.apache.hadoop.ipc.RPC$RpcKind,java.lang.Class,org.apache.hadoop.ipc.RPC$RpcInvoker)> has 9 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 275 with ID [97f1a5a4-489a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rpcKind=") AT LINE 275 with ID [97f1a5a4-489a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(rpcKind) AT LINE 275 with ID [97f1a5a4-489a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rpcRequestWrapperClass=") AT LINE 275 with ID [97f1a5a4-489a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(rpcRequestWrapperClass) AT LINE 275 with ID [97f1a5a4-489a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rpcInvoker=") AT LINE 275 with ID [97f1a5a4-489a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(rpcInvoker) AT LINE 275 with ID [97f1a5a4-489a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 275 with ID [97f1a5a4-489a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 275 with ID [97f1a5a4-489a]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack28 != 0 goto return needSync at line 609 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack45 == 0 goto (branch) at line 604 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack63 == 0 goto i$ = i$ + 1 at line 597 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack54 != 0 goto $stack55 = virtualinvoke iip.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getLastINode()>() at line 562 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack97 != 0 goto start = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() at line 563 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.LeaseManager: boolean checkLeases()> has 22 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack84 = <org.apache.hadoop.hdfs.server.namenode.LeaseManager: org.apache.commons.logging.Log LOG> AT LINE 582 with ID [0ee22261-795d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lease recovery for inode ") AT LINE 582 with ID [0ee22261-795d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(id) AT LINE 582 with ID [0ee22261-795d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is complete. ") AT LINE 582 with ID [0ee22261-795d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File closed.") AT LINE 582 with ID [0ee22261-795d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 582 with ID [0ee22261-795d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack84.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack89) AT LINE 582 with ID [0ee22261-795d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack76 = <org.apache.hadoop.hdfs.server.namenode.LeaseManager: org.apache.commons.logging.Log LOG> AT LINE 585 with ID [b994f52f-f2a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Started block recovery ") AT LINE 585 with ID [b994f52f-f2a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(p) AT LINE 585 with ID [b994f52f-f2a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lease ") AT LINE 585 with ID [b994f52f-f2a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(leaseToCheck) AT LINE 585 with ID [b994f52f-f2a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 585 with ID [b994f52f-f2a8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack76.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack81) AT LINE 585 with ID [b994f52f-f2a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack67 = <org.apache.hadoop.hdfs.server.namenode.LeaseManager: org.apache.commons.logging.Log LOG> AT LINE 598 with ID [b692aeec-0c8e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Breaking out of checkLeases after ") AT LINE 598 with ID [b692aeec-0c8e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack69 = this.<org.apache.hadoop.hdfs.server.namenode.LeaseManager: org.apache.hadoop.hdfs.server.namenode.FSNamesystem fsnamesystem> AT LINE 598 with ID [b692aeec-0c8e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getMaxLockHoldToReleaseLeaseMs()>() AT LINE 598 with ID [b692aeec-0c8e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack71 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack70) AT LINE 598 with ID [b692aeec-0c8e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms.") AT LINE 598 with ID [b692aeec-0c8e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 598 with ID [b692aeec-0c8e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack67.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack73) AT LINE 598 with ID [b692aeec-0c8e]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack19 == 0 goto $stack20 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> at line 650 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: void removeApplicationStateInternal(org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationStateData)> has 12 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 655 with ID [56330a17-6542]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing state for app ") AT LINE 655 with ID [56330a17-6542]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 655 with ID [56330a17-6542]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") AT LINE 655 with ID [56330a17-6542]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = appState.<org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationStateData: java.util.Map attempts> AT LINE 655 with ID [56330a17-6542]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = interfaceinvoke $stack28.<java.util.Map: int size()>() AT LINE 655 with ID [56330a17-6542]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack29) AT LINE 655 with ID [56330a17-6542]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attempts") AT LINE 655 with ID [56330a17-6542]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ") AT LINE 655 with ID [56330a17-6542]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(appKey) AT LINE 655 with ID [56330a17-6542]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 655 with ID [56330a17-6542]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 655 with ID [56330a17-6542]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack40 == 0 goto $stack41 = virtualinvoke this.<org.apache.hadoop.yarn.server.timeline.EntityLogInfo: long getOffset()>() at line 206 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack25 == 0 goto (branch) at line 191 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityLogInfo: long doParse(org.apache.hadoop.yarn.server.timeline.TimelineDataManager,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.ObjectMapper,org.apache.hadoop.security.UserGroupInformation,boolean)> has 9 units and 5 lines
2020-08-25 12:10:03 [INFO] - 	 -> etype = virtualinvoke entity.<org.apache.hadoop.yarn.api.records.timeline.TimelineEntity: java.lang.String getEntityType()>() AT LINE 193 with ID [2792873b-a240, 3cb5ea22-6f7b]
2020-08-25 12:10:03 [INFO] - 	 -> eid = virtualinvoke entity.<org.apache.hadoop.yarn.api.records.timeline.TimelineEntity: java.lang.String getEntityId()>() AT LINE 194 with ID [2792873b-a240]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = <org.apache.hadoop.yarn.server.timeline.EntityLogInfo: org.slf4j.Logger LOG> AT LINE 195 with ID [3cb5ea22-6f7b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Read entity {}", etype) AT LINE 195 with ID [3cb5ea22-6f7b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = <org.apache.hadoop.yarn.server.timeline.EntityLogInfo: org.slf4j.Logger LOG> AT LINE 198 with ID [211aca05-8104]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(bytesParsed) AT LINE 198 with ID [211aca05-8104]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Parser now at offset {}", $stack34) AT LINE 198 with ID [211aca05-8104]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = <org.apache.hadoop.yarn.server.timeline.EntityLogInfo: org.slf4j.Logger LOG> AT LINE 201 with ID [2792873b-a240]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Adding {}({}) to store", eid, etype) AT LINE 201 with ID [2792873b-a240]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue: void addCall(org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.io.retry.AsyncCallHandler: org.slf4j.Logger LOG> AT LINE 114 with ID [6559f9eb-6ef5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add ") AT LINE 114 with ID [6559f9eb-6ef5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(call) AT LINE 114 with ID [6559f9eb-6ef5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 114 with ID [6559f9eb-6ef5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack10) AT LINE 114 with ID [6559f9eb-6ef5]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack22 == 0 goto return 0 at line 137 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack12 != 0 goto applicationACL = <org.apache.hadoop.yarn.server.security.ApplicationACLsManager: org.apache.hadoop.security.authorize.AccessControlList DEFAULT_YARN_APP_ACL> at line 108 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.security.ApplicationACLsManager: boolean checkAccess(org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.yarn.api.records.ApplicationAccessType,java.lang.String,org.apache.hadoop.yarn.api.records.ApplicationId)> has 33 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = <org.apache.hadoop.yarn.server.security.ApplicationACLsManager: org.apache.commons.logging.Log LOG> AT LINE 102 with ID [72148936-8941]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Verifying access-type ") AT LINE 102 with ID [72148936-8941]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationAccessType) AT LINE 102 with ID [72148936-8941]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 102 with ID [72148936-8941]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(callerUGI) AT LINE 102 with ID [72148936-8941]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on application ") AT LINE 102 with ID [72148936-8941]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationId) AT LINE 102 with ID [72148936-8941]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" owned by ") AT LINE 102 with ID [72148936-8941]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(applicationOwner) AT LINE 102 with ID [72148936-8941]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 102 with ID [72148936-8941]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack50.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack59) AT LINE 102 with ID [72148936-8941]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = <org.apache.hadoop.yarn.server.security.ApplicationACLsManager: org.apache.commons.logging.Log LOG> AT LINE 116 with ID [a62cbca6-708e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACL not found for application ") AT LINE 116 with ID [a62cbca6-708e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationId) AT LINE 116 with ID [a62cbca6-708e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" owned by ") AT LINE 116 with ID [a62cbca6-708e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(applicationOwner) AT LINE 116 with ID [a62cbca6-708e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Using default [") AT LINE 116 with ID [a62cbca6-708e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 116 with ID [a62cbca6-708e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") AT LINE 116 with ID [a62cbca6-708e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 116 with ID [a62cbca6-708e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack48) AT LINE 116 with ID [a62cbca6-708e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = <org.apache.hadoop.yarn.server.security.ApplicationACLsManager: org.apache.commons.logging.Log LOG> AT LINE 126 with ID [99e997b8-cd11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACL not found for access-type ") AT LINE 126 with ID [99e997b8-cd11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationAccessType) AT LINE 126 with ID [99e997b8-cd11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for application ") AT LINE 126 with ID [99e997b8-cd11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationId) AT LINE 126 with ID [99e997b8-cd11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" owned by ") AT LINE 126 with ID [99e997b8-cd11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(applicationOwner) AT LINE 126 with ID [99e997b8-cd11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Using default [") AT LINE 126 with ID [99e997b8-cd11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 126 with ID [99e997b8-cd11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") AT LINE 126 with ID [99e997b8-cd11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 126 with ID [99e997b8-cd11]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 126 with ID [99e997b8-cd11]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack74 != 0 goto (branch) at line 310 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack46 != 0 goto return serverPrincipal at line 334 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack45 != null goto $stack46 = virtualinvoke serverPrincipal.<java.lang.String: boolean equals(java.lang.Object)>(pattern#2) at line 329 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack43 == 0 goto $stack44 = new org.apache.hadoop.security.authentication.util.KerberosName at line 325 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if serverKey != null goto $stack20 = new javax.security.auth.kerberos.KerberosPrincipal at line 296 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if krbInfo != null goto serverKey = interfaceinvoke krbInfo.<org.apache.hadoop.security.KerberosInfo: java.lang.String serverPrincipal()>() at line 292 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslRpcClient: java.lang.String getServerPrincipal(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth)> has 19 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 291 with ID [d6a83ec9-c7fa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Get kerberos info proto:") AT LINE 291 with ID [d6a83ec9-c7fa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.security.SaslRpcClient: java.lang.Class protocol> AT LINE 291 with ID [d6a83ec9-c7fa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack14) AT LINE 291 with ID [d6a83ec9-c7fa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" info:") AT LINE 291 with ID [d6a83ec9-c7fa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(krbInfo) AT LINE 291 with ID [d6a83ec9-c7fa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 291 with ID [d6a83ec9-c7fa]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 291 with ID [d6a83ec9-c7fa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 321 with ID [34fcd230-6cff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getting serverKey: ") AT LINE 321 with ID [34fcd230-6cff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(serverKey) AT LINE 321 with ID [34fcd230-6cff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" conf value: ") AT LINE 321 with ID [34fcd230-6cff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack61 = this.<org.apache.hadoop.security.SaslRpcClient: org.apache.hadoop.conf.Configuration conf> AT LINE 321 with ID [34fcd230-6cff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>(serverKey) AT LINE 321 with ID [34fcd230-6cff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack63 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack62) AT LINE 321 with ID [34fcd230-6cff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" principal: ") AT LINE 321 with ID [34fcd230-6cff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(pattern#2) AT LINE 321 with ID [34fcd230-6cff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 321 with ID [34fcd230-6cff]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack57.<org.slf4j.Logger: void debug(java.lang.String)>($stack66) AT LINE 321 with ID [34fcd230-6cff]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.Nfs3Utils: void writeChannelCommit(org.jboss.netty.channel.Channel,org.apache.hadoop.oncrpc.XDR,int)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 140 with ID [bd16d8ab-2793]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Commit done:") AT LINE 140 with ID [bd16d8ab-2793]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(xid) AT LINE 140 with ID [bd16d8ab-2793]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 140 with ID [bd16d8ab-2793]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack12) AT LINE 140 with ID [bd16d8ab-2793]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue$Processor: void kill(org.apache.hadoop.util.Daemon)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.io.retry.AsyncCallHandler: org.slf4j.Logger LOG> AT LINE 188 with ID [60d2ca2e-80bb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Killing ") AT LINE 188 with ID [60d2ca2e-80bb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(d) AT LINE 188 with ID [60d2ca2e-80bb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 188 with ID [60d2ca2e-80bb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack11) AT LINE 188 with ID [60d2ca2e-80bb]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.resource.DynamicResourceConfiguration: void setOverCommitTimeoutPerNode(java.lang.String,int)> has 8 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.resource.DynamicResourceConfiguration: org.apache.commons.logging.Log LOG> AT LINE 116 with ID [a58f2120-e2e2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DRConf - setOverCommitTimeoutPerNode: nodePrefix=") AT LINE 116 with ID [a58f2120-e2e2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.resource.DynamicResourceConfiguration: java.lang.String getNodePrefix(java.lang.String)>(node) AT LINE 116 with ID [a58f2120-e2e2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 116 with ID [a58f2120-e2e2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", overCommitTimeout=") AT LINE 116 with ID [a58f2120-e2e2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(overCommitTimeout) AT LINE 116 with ID [a58f2120-e2e2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 116 with ID [a58f2120-e2e2]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 116 with ID [a58f2120-e2e2]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack24 >= $stack23 goto $stack25 = new java.lang.StringBuilder at line 563 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack21 == 0 goto specialinvoke this.<org.apache.hadoop.ha.ActiveStandbyElector: void fatalError(java.lang.String)>(errorMessage) at line 570 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = new java.lang.StringBuilder at line 551 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = staticinvoke <org.apache.hadoop.ha.ActiveStandbyElector: boolean isNodeDoesNotExist(org.apache.zookeeper.KeeperException$Code)>(code) at line 535 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack52 != 0 goto $stack9 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> at line 535 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack7 == 0 goto this.<org.apache.hadoop.ha.ActiveStandbyElector: boolean monitorLockNodePending> = 0 at line 523 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector: void processResult(int,java.lang.String,java.lang.Object,org.apache.zookeeper.data.Stat)> has 14 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 530 with ID [7aaaaccf-a1fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StatNode result: ") AT LINE 530 with ID [7aaaaccf-a1fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(rc) AT LINE 530 with ID [7aaaaccf-a1fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for path: ") AT LINE 530 with ID [7aaaaccf-a1fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 530 with ID [7aaaaccf-a1fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" connectionState: ") AT LINE 530 with ID [7aaaaccf-a1fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = this.<org.apache.hadoop.ha.ActiveStandbyElector: org.apache.hadoop.ha.ActiveStandbyElector$ConnectionState zkConnectionState> AT LINE 530 with ID [7aaaaccf-a1fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack45) AT LINE 530 with ID [7aaaaccf-a1fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 530 with ID [7aaaaccf-a1fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 530 with ID [7aaaaccf-a1fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 530 with ID [7aaaaccf-a1fc]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void debug(java.lang.String)>($stack49) AT LINE 530 with ID [7aaaaccf-a1fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 560 with ID [8588df8c-3f4a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>(errorMessage) AT LINE 560 with ID [8588df8c-3f4a]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack2 <= 0 goto return 1 at line 286 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: boolean checkClosed()> has 12 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack3 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 287 with ID [a42fef41-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = interfaceinvoke $stack3.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 287 with ID [a42fef41-4022]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack4 == 0 goto return 0 AT LINE 287 with ID [a42fef41-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 288 with ID [a42fef41-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = newarray (java.lang.Object)[2] AT LINE 288 with ID [a42fef41-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack5[0] = this AT LINE 288 with ID [a42fef41-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.apache.hadoop.util.CloseableReferenceCount reference> AT LINE 288 with ID [a42fef41-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack6.<org.apache.hadoop.util.CloseableReferenceCount: int getReferenceCount()>() AT LINE 288 with ID [a42fef41-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack10) AT LINE 288 with ID [a42fef41-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack5[1] = $stack11 AT LINE 288 with ID [a42fef41-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The reference count for %s is %d, wait to be 0.", $stack5) AT LINE 288 with ID [a42fef41-4022]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 288 with ID [a42fef41-4022]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack12 != 0 goto $stack10 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> at line 217 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair checkTrustAndSend(java.net.InetAddress,java.io.OutputStream,java.io.InputStream,org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataEncryptionKeyFactory,org.apache.hadoop.security.token.Token,org.apache.hadoop.hdfs.protocol.DatanodeID)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> AT LINE 214 with ID [9faf3310-0df1]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("SASL client skipping handshake on trusted connection for addr = {}, datanodeId = {}", addr, datanodeId) AT LINE 214 with ID [9faf3310-0df1]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack44 > 0 goto (branch) at line 493 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack40 == 0 goto (branch) at line 492 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack29 == 0 goto $stack30 = this.<org.apache.hadoop.yarn.server.resourcemanager.reservation.InMemoryPlan: java.util.concurrent.locks.Lock writeLock> at line 508 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack26 == 0 goto $stack27 = this.<org.apache.hadoop.yarn.server.resourcemanager.reservation.InMemoryPlan: java.util.concurrent.locks.Lock writeLock> at line 502 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack36 == 0 goto $stack25 = this.<org.apache.hadoop.yarn.server.resourcemanager.reservation.InMemoryPlan: java.util.concurrent.locks.Lock readLock> at line 490 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.reservation.InMemoryPlan: void archiveCompletedReservations(long)> has 3 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = <org.apache.hadoop.yarn.server.resourcemanager.reservation.InMemoryPlan: org.slf4j.Logger LOG> AT LINE 477 with ID [f54fdec3-9520]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(tick) AT LINE 477 with ID [f54fdec3-9520]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Running archival at time: {}", $stack16) AT LINE 477 with ID [f54fdec3-9520]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor: void updateNodeResource(org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode,org.apache.hadoop.yarn.api.records.ResourceOption)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor: org.apache.commons.logging.Log LOG> AT LINE 274 with ID [77e84604-bf5c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node resource update event from: ") AT LINE 274 with ID [77e84604-bf5c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = interfaceinvoke rmNode.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: org.apache.hadoop.yarn.api.records.NodeId getNodeID()>() AT LINE 274 with ID [77e84604-bf5c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack6) AT LINE 274 with ID [77e84604-bf5c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 274 with ID [77e84604-bf5c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack8) AT LINE 274 with ID [77e84604-bf5c]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BPServiceActor$LifelineSender: void sendLifeline()> has 10 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hdfs.server.datanode.BPServiceActor: org.slf4j.Logger LOG> AT LINE 1067 with ID [66180d3f-cc81]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending lifeline with ") AT LINE 1067 with ID [66180d3f-cc81]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = lengthof reports AT LINE 1067 with ID [66180d3f-cc81]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack48) AT LINE 1067 with ID [66180d3f-cc81]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" storage ") AT LINE 1067 with ID [66180d3f-cc81]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reports from service actor: ") AT LINE 1067 with ID [66180d3f-cc81]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = this.<org.apache.hadoop.hdfs.server.datanode.BPServiceActor$LifelineSender: org.apache.hadoop.hdfs.server.datanode.BPServiceActor this$0> AT LINE 1067 with ID [66180d3f-cc81]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack52) AT LINE 1067 with ID [66180d3f-cc81]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1067 with ID [66180d3f-cc81]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String)>($stack54) AT LINE 1067 with ID [66180d3f-cc81]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager$EndpointShmManager: void freeSlot(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot)> has 4 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = staticinvoke <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: org.slf4j.Logger access$000()>() AT LINE 296 with ID [6001c4fe-e9e5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: freeing empty stale {}", this, shm) AT LINE 296 with ID [6001c4fe-e9e5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = staticinvoke <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: org.slf4j.Logger access$000()>() AT LINE 321 with ID [6b702e32-f90f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: shutting down UNIX domain socket for empty {}", this, shm) AT LINE 321 with ID [6b702e32-f90f]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.Resource getHeadroom()> has 17 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Headroom calculation for ") AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: java.lang.String getName()>() AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30) AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Min(") AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(queueFairShare=") AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(queueFairShare) AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - queueUsage=") AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(queueUsage) AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("),") AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxAvailableResource=") AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(maxAvailableResource) AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Headroom=") AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(headroom) AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack43) AT LINE 255 with ID [c0ceee88-bf09]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack23 == 0 goto (branch) at line 190 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack12 == 0 goto return null at line 203 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack18 == 0 goto interfaceinvoke response.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(401) at line 189 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.server.MultiSchemeAuthenticationHandler: org.apache.hadoop.security.authentication.server.AuthenticationToken authenticate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> has 3 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = <org.apache.hadoop.security.authentication.server.MultiSchemeAuthenticationHandler: org.slf4j.Logger logger> AT LINE 194 with ID [6f5f38a6-d5f3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke token.<org.apache.hadoop.security.authentication.server.AuthenticationToken: java.lang.String getType()>() AT LINE 194 with ID [6f5f38a6-d5f3]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Token generated with type {}", $stack30) AT LINE 194 with ID [6f5f38a6-d5f3]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack33 != 0 goto (branch) at line 70 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack38 <= 0 goto (branch) at line 86 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if path != null goto $stack10 = <org.apache.hadoop.yarn.server.nodemanager.util.ProcessIdFileReader: org.slf4j.Logger LOG> at line 49 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.util.ProcessIdFileReader: java.lang.String getProcessId(org.apache.hadoop.fs.Path)> has 16 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = <org.apache.hadoop.yarn.server.nodemanager.util.ProcessIdFileReader: org.slf4j.Logger LOG> AT LINE 53 with ID [94c5fb86-a9e6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Accessing pid from pid file ") AT LINE 53 with ID [94c5fb86-a9e6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(path) AT LINE 53 with ID [94c5fb86-a9e6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 53 with ID [94c5fb86-a9e6]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>($stack45) AT LINE 53 with ID [94c5fb86-a9e6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.yarn.server.nodemanager.util.ProcessIdFileReader: org.slf4j.Logger LOG> AT LINE 103 with ID [8880ed23-08d2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got pid ") AT LINE 103 with ID [8880ed23-08d2]
2020-08-25 12:10:03 [INFO] - 	 -> if processId == null goto $stack25 = "null" AT LINE 103 with ID [8880ed23-08d2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = processId AT LINE 106 with ID [8880ed23-08d2]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25)] AT LINE 106 with ID [8880ed23-08d2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = "null" AT LINE 106 with ID [8880ed23-08d2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 103 with ID [8880ed23-08d2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from path ") AT LINE 103 with ID [8880ed23-08d2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(path) AT LINE 103 with ID [8880ed23-08d2]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 103 with ID [8880ed23-08d2]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack23) AT LINE 103 with ID [8880ed23-08d2]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData getProxy(java.lang.String,org.apache.hadoop.yarn.api.records.ContainerId)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: org.apache.commons.logging.Log LOG> AT LINE 113 with ID [33fe9652-9992]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Refreshing proxy as NMToken got updated for node : ") AT LINE 113 with ID [33fe9652-9992]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerManagerBindAddr) AT LINE 113 with ID [33fe9652-9992]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 113 with ID [33fe9652-9992]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 113 with ID [33fe9652-9992]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = this.<org.apache.hadoop.metrics2.impl.MetricsSystemImpl: java.util.Map sinks> at line 468 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void stopSinks()> has 11 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.slf4j.Logger LOG> AT LINE 470 with ID [09929e9a-7653]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping metrics sink ") AT LINE 470 with ID [09929e9a-7653]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 470 with ID [09929e9a-7653]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = (java.lang.String) $stack14 AT LINE 470 with ID [09929e9a-7653]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 470 with ID [09929e9a-7653]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": class=") AT LINE 470 with ID [09929e9a-7653]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke sa.<org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: org.apache.hadoop.metrics2.MetricsSink sink()>() AT LINE 470 with ID [09929e9a-7653]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.Object: java.lang.Class getClass()>() AT LINE 470 with ID [09929e9a-7653]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 470 with ID [09929e9a-7653]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 470 with ID [09929e9a-7653]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 470 with ID [09929e9a-7653]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.util.MRApps: java.lang.ClassLoader createJobClassLoader(org.apache.hadoop.conf.Configuration)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.mapreduce.v2.util.MRApps: org.apache.commons.logging.Log LOG> AT LINE 417 with ID [9af11479-aaf7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("APP_CLASSPATH=") AT LINE 417 with ID [9af11479-aaf7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(appClasspath) AT LINE 417 with ID [9af11479-aaf7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 417 with ID [9af11479-aaf7]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 417 with ID [9af11479-aaf7]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if handle != null goto $stack28 = <org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.commons.logging.Log LOG> at line 152 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack21 != 0 goto $stack22 = this.<org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.hadoop.hdfs.DFSClient dfsClient> at line 128 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if accessPrivilege != $stack13 goto path = virtualinvoke xdr.<org.apache.hadoop.oncrpc.XDR: java.lang.String readString()>() at line 114 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack10 != null goto $stack11 = this.<org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.hadoop.nfs.NfsExports hostsMatcher> at line 109 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.hadoop.oncrpc.XDR mnt(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.XDR,int,java.net.InetAddress)> has 14 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack70 = <org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.commons.logging.Log LOG> AT LINE 121 with ID [3128d047-968c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack71 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MOUNT MNT path: ") AT LINE 121 with ID [3128d047-968c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 121 with ID [3128d047-968c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 121 with ID [3128d047-968c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(client) AT LINE 121 with ID [3128d047-968c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 121 with ID [3128d047-968c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack70.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack75) AT LINE 121 with ID [3128d047-968c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack61 = <org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.commons.logging.Log LOG> AT LINE 126 with ID [008a3444-bd22]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got host: ") AT LINE 126 with ID [008a3444-bd22]
2020-08-25 12:10:03 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(host) AT LINE 126 with ID [008a3444-bd22]
2020-08-25 12:10:03 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path: ") AT LINE 126 with ID [008a3444-bd22]
2020-08-25 12:10:03 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 126 with ID [008a3444-bd22]
2020-08-25 12:10:03 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 126 with ID [008a3444-bd22]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack61.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack66) AT LINE 126 with ID [008a3444-bd22]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if maxMapThreads >= 1 goto $stack6 = this.<org.apache.hadoop.mapred.LocalJobRunner$Job: int numMapTasks> at line 415 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.LocalJobRunner$Job: java.util.concurrent.ExecutorService createMapExecutor()> has 13 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.mapred.LocalJobRunner: org.apache.commons.logging.Log LOG> AT LINE 422 with ID [34637633-28a7]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Starting mapper thread pool executor.") AT LINE 422 with ID [34637633-28a7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = <org.apache.hadoop.mapred.LocalJobRunner: org.apache.commons.logging.Log LOG> AT LINE 423 with ID [85ed862f-0cb9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Max local threads: ") AT LINE 423 with ID [85ed862f-0cb9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(maxMapThreads) AT LINE 423 with ID [85ed862f-0cb9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 423 with ID [85ed862f-0cb9]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 423 with ID [85ed862f-0cb9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = <org.apache.hadoop.mapred.LocalJobRunner: org.apache.commons.logging.Log LOG> AT LINE 424 with ID [9e6f837b-9d0f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Map tasks to process: ") AT LINE 424 with ID [9e6f837b-9d0f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.mapred.LocalJobRunner$Job: int numMapTasks> AT LINE 424 with ID [9e6f837b-9d0f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack18) AT LINE 424 with ID [9e6f837b-9d0f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 424 with ID [9e6f837b-9d0f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 424 with ID [9e6f837b-9d0f]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$#2 >= len$ goto (branch) at line 742 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack29 == 0 goto i$#3 = interfaceinvoke datanodesMap.<java.util.Map: java.util.Collection values()>() at line 739 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.RouterRpcServer: org.apache.hadoop.hdfs.protocol.DatanodeInfo[] getDatanodeReport(org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType,boolean,long)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = <org.apache.hadoop.hdfs.server.federation.router.RouterRpcServer: org.slf4j.Logger LOG> AT LINE 751 with ID [8ad0c502-2660]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("{} is in multiple subclusters", nodeId) AT LINE 751 with ID [8ad0c502-2660]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: void bindJVMtoJAASFile(java.io.File)> has 6 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack3 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 657 with ID [a6f8cc48-d76e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = interfaceinvoke $stack3.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 657 with ID [a6f8cc48-d76e]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack4 == 0 goto $stack5 = <org.apache.zookeeper.Environment: java.lang.String JAAS_CONF_KEY> AT LINE 657 with ID [a6f8cc48-d76e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 658 with ID [a6f8cc48-d76e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.zookeeper.Environment: java.lang.String JAAS_CONF_KEY> AT LINE 658 with ID [a6f8cc48-d76e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Binding {} to {}", $stack7, path) AT LINE 658 with ID [a6f8cc48-d76e]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack6 = new java.util.LinkedList at line 128 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.security.JniBasedUnixGroupsNetgroupMapping: java.util.List getUsersForNetgroup(java.lang.String)>
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: void stopDecommission(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger LOG> AT LINE 250 with ID [71844ec5-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopDecommission: Node {} in {}, nothing to do.") AT LINE 250 with ID [71844ec5-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(node) AT LINE 250 with ID [71844ec5-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 250 with ID [71844ec5-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke node.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates getAdminState()>() AT LINE 250 with ID [71844ec5-92b3]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>($stack19, $stack20) AT LINE 250 with ID [71844ec5-92b3]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if scope == null goto (branch) at line 834 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DataStreamer: void run()> has 8 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack138 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 709 with ID [e4ac7fb3-d202]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack138.<org.slf4j.Logger: void debug(java.lang.String)>("Allocating new block") AT LINE 709 with ID [e4ac7fb3-d202]
2020-08-25 12:10:03 [INFO] - 	 -> $stack132 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 713 with ID [b0bb5da5-2cd7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack131 = this.<org.apache.hadoop.hdfs.DataStreamer: org.apache.hadoop.hdfs.DataStreamer$BlockToWrite block> AT LINE 713 with ID [b0bb5da5-2cd7]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack132.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Append to block {}", $stack131) AT LINE 713 with ID [b0bb5da5-2cd7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 766 with ID [3af5d640-aab8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = this.<org.apache.hadoop.hdfs.DataStreamer: org.apache.hadoop.hdfs.DataStreamer$BlockToWrite block> AT LINE 766 with ID [3af5d640-aab8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack55.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("DataStreamer block {} sending packet {}", $stack54, e#99) AT LINE 766 with ID [3af5d640-aab8]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.server.JWTRedirectAuthenticationHandler: boolean validateSignature(com.nimbusds.jwt.SignedJWT)> has 6 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = <org.apache.hadoop.security.authentication.server.JWTRedirectAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 275 with ID [d3c282ae-a2c7]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>("JWT token is in a SIGNED state") AT LINE 275 with ID [d3c282ae-a2c7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.security.authentication.server.JWTRedirectAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 277 with ID [1aac218d-7eac]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>("JWT token signature is not null") AT LINE 277 with ID [1aac218d-7eac]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = <org.apache.hadoop.security.authentication.server.JWTRedirectAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 282 with ID [6a3fa6c8-0192]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>("JWT token has been successfully verified") AT LINE 282 with ID [6a3fa6c8-0192]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = this.<org.apache.hadoop.metrics2.impl.MetricsSystemImpl: java.util.Map allSinks> at line 275 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.MetricsSink register(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSink)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.slf4j.Logger LOG> AT LINE 274 with ID [492e53b0-9481]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 274 with ID [492e53b0-9481]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 274 with ID [492e53b0-9481]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(description) AT LINE 274 with ID [492e53b0-9481]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 274 with ID [492e53b0-9481]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>($stack9) AT LINE 274 with ID [492e53b0-9481]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack7 = <org.apache.hadoop.yarn.webapp.Router: org.slf4j.Logger LOG> at line 285 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.webapp.Router: java.lang.Class load(java.lang.Class,java.lang.String)> has 4 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = <org.apache.hadoop.yarn.webapp.Router: org.slf4j.Logger LOG> AT LINE 282 with ID [e9b2bbbf-f52a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("trying: {}", className) AT LINE 282 with ID [e9b2bbbf-f52a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.yarn.webapp.Router: org.slf4j.Logger LOG> AT LINE 286 with ID [87902394-0525]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("found {}", className) AT LINE 286 with ID [87902394-0525]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if remoteUser != null goto (branch) at line 229 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.common.JspHelper: org.apache.hadoop.security.UserGroupInformation getUGI(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod,boolean)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.common.JspHelper: org.apache.commons.logging.Log LOG> AT LINE 256 with ID [459f9f85-c987]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getUGI is returning: ") AT LINE 256 with ID [459f9f85-c987]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke ugi.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getShortUserName()>() AT LINE 256 with ID [459f9f85-c987]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 256 with ID [459f9f85-c987]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 256 with ID [459f9f85-c987]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 256 with ID [459f9f85-c987]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack44 != 0 goto $stack10 = new java.lang.StringBuilder at line 407 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.io.retry.RetryInvocationHandler: void log(java.lang.reflect.Method,boolean,int,long,java.lang.Exception)> has 3 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = <org.apache.hadoop.io.retry.RetryInvocationHandler: org.slf4j.Logger LOG> AT LINE 413 with ID [3decfe55-37c5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke b.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 413 with ID [3decfe55-37c5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($stack25, ex) AT LINE 413 with ID [3decfe55-37c5]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack13 == 0 goto (branch) at line 393 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.fs.RawLocalFileSystem: boolean handleEmptyDstDirectoryOnWindows(org.apache.hadoop.fs.Path,java.io.File,org.apache.hadoop.fs.Path,java.io.File)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.fs.RawLocalFileSystem: org.apache.commons.logging.Log LOG> AT LINE 385 with ID [a3795063-a9fb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting empty destination and renaming ") AT LINE 385 with ID [a3795063-a9fb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(src) AT LINE 385 with ID [a3795063-a9fb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 385 with ID [a3795063-a9fb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dst) AT LINE 385 with ID [a3795063-a9fb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 385 with ID [a3795063-a9fb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 385 with ID [a3795063-a9fb]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager: void stopThreads()> has 5 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack3 = <org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 644 with ID [0c740770-f9a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = interfaceinvoke $stack3.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 644 with ID [0c740770-f9a8]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack4 == 0 goto this.<org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager: boolean running> = 0 AT LINE 644 with ID [0c740770-f9a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 645 with ID [0c740770-f9a8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>("Stopping expired delegation token remover thread") AT LINE 645 with ID [0c740770-f9a8]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter$AttemptDirCache: org.apache.hadoop.fs.Path createAttemptDir(org.apache.hadoop.yarn.api.records.ApplicationAttemptId)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = staticinvoke <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: org.apache.commons.logging.Log access$000()>() AT LINE 1005 with ID [6a9f65de-894e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New attempt directory created - ") AT LINE 1005 with ID [6a9f65de-894e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(attemptDir) AT LINE 1005 with ID [6a9f65de-894e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1005 with ID [6a9f65de-894e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 1005 with ID [6a9f65de-894e]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack9 == 0 goto return at line 592 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker: void checkNotSymlink(org.apache.hadoop.hdfs.server.namenode.INode,byte[][],int)> has 16 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> link = virtualinvoke inode.<org.apache.hadoop.hdfs.server.namenode.INode: java.lang.String getLocalName()>() AT LINE 584 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker: org.apache.commons.logging.Log LOG> AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UnresolvedPathException  path: ") AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" preceding: ") AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(preceding) AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count: ") AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i) AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" link: ") AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(link) AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" target: ") AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(target) AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remainder: ") AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(remainder) AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack36) AT LINE 585 with ID [3ea1bbc3-b184]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.applications.distributedshell.ApplicationMaster$NMCallbackHandler: void onContainerStatusReceived(org.apache.hadoop.yarn.api.records.ContainerId,org.apache.hadoop.yarn.api.records.ContainerStatus)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = staticinvoke <org.apache.hadoop.yarn.applications.distributedshell.ApplicationMaster: org.apache.commons.logging.Log access$200()>() AT LINE 1001 with ID [c3538d12-f552]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container Status: id=") AT LINE 1001 with ID [c3538d12-f552]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 1001 with ID [c3538d12-f552]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", status=") AT LINE 1001 with ID [c3538d12-f552]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerStatus) AT LINE 1001 with ID [c3538d12-f552]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1001 with ID [c3538d12-f552]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 1001 with ID [c3538d12-f552]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$EntityLogCleaner: void run()> has 4 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 906 with ID [455fcc22-40e0]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>("Cleaner starting") AT LINE 906 with ID [455fcc22-40e0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 920 with ID [1c006128-5d73]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>("Cleaner finished") AT LINE 920 with ID [1c006128-5d73]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack33 == 0 goto return amResourceRequests at line 716 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack49 == 0 goto $stack50 = new java.lang.StringBuilder at line 687 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack29 == 0 goto $stack30 = <org.apache.hadoop.mapred.YARNRunner: org.apache.commons.logging.Log LOG> at line 684 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.YARNRunner: java.util.List generateResourceRequests()> has 16 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack73 = <org.apache.hadoop.mapred.YARNRunner: org.apache.commons.logging.Log LOG> AT LINE 673 with ID [3b96f3ba-efd5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack74 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppMaster capability = ") AT LINE 673 with ID [3b96f3ba-efd5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(capability) AT LINE 673 with ID [3b96f3ba-efd5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 673 with ID [3b96f3ba-efd5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack73.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack76) AT LINE 673 with ID [3b96f3ba-efd5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 722 with ID [d100afa6-ea4c]
2020-08-25 12:10:03 [INFO] - 	 -> amStrictResource#12 = (org.apache.hadoop.yarn.api.records.ResourceRequest) $stack35 AT LINE 722 with ID [d100afa6-ea4c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = <org.apache.hadoop.mapred.YARNRunner: org.apache.commons.logging.Log LOG> AT LINE 717 with ID [d100afa6-ea4c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ResourceRequest: resource = ") AT LINE 717 with ID [d100afa6-ea4c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke amStrictResource#12.<org.apache.hadoop.yarn.api.records.ResourceRequest: java.lang.String getResourceName()>() AT LINE 717 with ID [d100afa6-ea4c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39) AT LINE 717 with ID [d100afa6-ea4c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", locality = ") AT LINE 717 with ID [d100afa6-ea4c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke amStrictResource#12.<org.apache.hadoop.yarn.api.records.ResourceRequest: boolean getRelaxLocality()>() AT LINE 717 with ID [d100afa6-ea4c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack42) AT LINE 717 with ID [d100afa6-ea4c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 717 with ID [d100afa6-ea4c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack44) AT LINE 717 with ID [d100afa6-ea4c]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack17 != 0 goto (branch) at line 507 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack14 == 0 goto (branch) at line 506 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack13 > 0 goto $stack14 = virtualinvoke stat.<org.apache.hadoop.fs.FileStatus: boolean isDirectory()>() at line 499 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack9 == 0 goto return 1 at line 497 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: boolean shouldCleanAppLogDir(org.apache.hadoop.fs.Path,long,org.apache.hadoop.fs.FileSystem,long)> has 3 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 502 with ID [5628a154-90bc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke stat.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() AT LINE 502 with ID [5628a154-90bc]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{} not being cleaned due to {}", appLogPath, $stack20) AT LINE 502 with ID [5628a154-90bc]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult renameTo(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo,boolean,org.apache.hadoop.fs.Options$Rename[])> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 289 with ID [7e9f7a1d-197c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* FSDirectory.renameTo: ") AT LINE 289 with ID [7e9f7a1d-197c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 289 with ID [7e9f7a1d-197c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 289 with ID [7e9f7a1d-197c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dst) AT LINE 289 with ID [7e9f7a1d-197c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 289 with ID [7e9f7a1d-197c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String)>($stack33) AT LINE 289 with ID [7e9f7a1d-197c]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: void handle(org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppEvent)> has 23 units and 4 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.commons.logging.Log LOG> AT LINE 878 with ID [9bfbdd97-ce80]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing event for ") AT LINE 878 with ID [9bfbdd97-ce80]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appID) AT LINE 878 with ID [9bfbdd97-ce80]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ") AT LINE 878 with ID [9bfbdd97-ce80]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke event.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppEvent: java.lang.Enum getType()>() AT LINE 878 with ID [9bfbdd97-ce80]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack13) AT LINE 878 with ID [9bfbdd97-ce80]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 878 with ID [9bfbdd97-ce80]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 878 with ID [9bfbdd97-ce80]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppState getState()>() AT LINE 897 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> if oldState == $stack21 goto $stack22 = this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock> AT LINE 897 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.commons.logging.Log LOG> AT LINE 904 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = interfaceinvoke $stack23.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 904 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack24 == 0 goto $stack22 = this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock> AT LINE 904 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.commons.logging.Log LOG> AT LINE 898 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = newarray (java.lang.Object)[4] AT LINE 898 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26[0] = appID AT LINE 898 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26[1] = oldState AT LINE 898 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppState getState()>() AT LINE 898 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26[2] = $stack30 AT LINE 898 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke event.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppEvent: java.lang.Enum getType()>() AT LINE 898 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26[3] = $stack32 AT LINE 898 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s State change from %s to %s on event = %s", $stack26) AT LINE 898 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack33) AT LINE 898 with ID [ce63afe0-9fe7]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if result != 0 goto $stack45 = new org.apache.hadoop.nfs.nfs3.response.RMDIR3Response at line 1303 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack40 <= 0 goto result = virtualinvoke dfsClient.<org.apache.hadoop.hdfs.DFSClient: boolean delete(java.lang.String,boolean)>(fileIdPath, 0) at line 1296 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack39 != 0 goto $stack40 = virtualinvoke fstat.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: int getChildrenNum()>() at line 1292 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if fstat != null goto $stack39 = virtualinvoke fstat.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: boolean isDir()>() at line 1289 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack32 != 0 goto $stack33 = new java.lang.StringBuilder at line 1283 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if preOpDirAttr != null goto $stack29 = new org.apache.hadoop.nfs.nfs3.response.WccData at line 1276 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.RMDIR3Request: org.apache.hadoop.nfs.nfs3.request.RMDIR3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 1251 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.RMDIR3Response rmdir(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 10 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack60 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 1267 with ID [4b88a113-211f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS RMDIR dir fileId: ") AT LINE 1267 with ID [4b88a113-211f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = virtualinvoke e#2.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 1267 with ID [4b88a113-211f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack62) AT LINE 1267 with ID [4b88a113-211f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fileName: ") AT LINE 1267 with ID [4b88a113-211f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) AT LINE 1267 with ID [4b88a113-211f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 1267 with ID [4b88a113-211f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 1267 with ID [4b88a113-211f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1267 with ID [4b88a113-211f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack60.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack68) AT LINE 1267 with ID [4b88a113-211f]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if replicaState != null goto $stack34 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> at line 3258 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if l17 == null goto virtualinvoke lock.<org.apache.hadoop.util.AutoCloseableLock: void close()>() at line 3254 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if lock == null goto (branch) at line 3312 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl$LazyWriter: void evictBlocks(long)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack94 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 3263 with ID [2d5e3309-22cd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack95 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Evicting block ") AT LINE 3263 with ID [2d5e3309-22cd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack96 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(replicaState) AT LINE 3263 with ID [2d5e3309-22cd]
2020-08-25 12:10:03 [INFO] - 	 -> $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3263 with ID [2d5e3309-22cd]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack94.<org.slf4j.Logger: void debug(java.lang.String)>($stack97) AT LINE 3263 with ID [2d5e3309-22cd]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= numBlockIters goto $stack21 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> at line 383 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack33 > 0 goto minTimeoutMs = staticinvoke <java.lang.Math: long min(long,long)>(minTimeoutMs, waitMs) at line 394 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack28 != 0 goto iterStartMs = interfaceinvoke iter.<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi$BlockIterator: long getIterStartMs()>() at line 386 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if numBlockIters != 0 goto $stack16 = this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi$BlockIterator curBlockIter> at line 366 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: long findNextUsableBlockIter()> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack60 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 367 with ID [9ccb6920-3ebb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack60.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("{}: no block pools are registered.", this) AT LINE 367 with ID [9ccb6920-3ebb]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack16 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> at line 945 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack36 == null goto $stack37 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() at line 948 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack32 == 0 goto (branch) at line 947 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: void accept(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache$CacheVisitor)> has 15 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = newarray (java.lang.Object)[6] AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke visitor.<java.lang.Object: java.lang.Class getClass()>() AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.Class: java.lang.String getName()>() AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15[0] = $stack20 AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: int outstandingMmapCount> AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack21) AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15[1] = $stack23 AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15[2] = replicas AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15[3] = failedLoads AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.apache.commons.collections.map.LinkedMap evictable> AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15[4] = $stack24 AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.apache.commons.collections.map.LinkedMap evictableMmapped> AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15[5] = $stack25 AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("visiting {} with outstandingMmapCount={}, replicas={}, failedLoads={}, evictable={}, evictableMmapped={}", $stack15) AT LINE 958 with ID [4e89e57a-30e8]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack19 != $stack18 goto exitmonitor l3 at line 175 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack6 == $stack5 goto $stack7 = virtualinvoke this.<org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: int getOriginalCount()>() at line 152 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: long dumpData(java.io.FileOutputStream,java.io.RandomAccessFile)> has 16 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: org.apache.commons.logging.Log LOG> AT LINE 154 with ID [ceac2c1f-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No need to dump with status(replied,dataState):(") AT LINE 154 with ID [ceac2c1f-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = this.<org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: boolean replied> AT LINE 154 with ID [ceac2c1f-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack47) AT LINE 154 with ID [ceac2c1f-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",") AT LINE 154 with ID [ceac2c1f-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = this.<org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx$DataState dataState> AT LINE 154 with ID [ceac2c1f-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack50) AT LINE 154 with ID [ceac2c1f-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 154 with ID [ceac2c1f-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 154 with ID [ceac2c1f-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack45.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack53) AT LINE 154 with ID [ceac2c1f-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: org.apache.commons.logging.Log LOG> AT LINE 167 with ID [6e54a5b6-fc00]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("After dump, new dumpFileOffset:") AT LINE 167 with ID [6e54a5b6-fc00]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = this.<org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: long dumpFileOffset> AT LINE 167 with ID [6e54a5b6-fc00]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack29) AT LINE 167 with ID [6e54a5b6-fc00]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 167 with ID [6e54a5b6-fc00]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack31) AT LINE 167 with ID [6e54a5b6-fc00]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack17 != 0 goto $stack18 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() at line 831 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs: void moveToDone()> has 3 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 829 with ID [330a8ad4-48f6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = this.<org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs: org.apache.hadoop.yarn.api.records.ApplicationId appId> AT LINE 829 with ID [330a8ad4-48f6]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Application {} is done, trying to move to done dir {}", $stack13, doneAppPath) AT LINE 829 with ID [330a8ad4-48f6]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void loadDelegationTokenFromNode(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState,java.lang.String)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 680 with ID [f1b4f6da-cb2a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded RMDelegationTokenIdentifier: ") AT LINE 680 with ID [f1b4f6da-cb2a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(identifier) AT LINE 680 with ID [f1b4f6da-cb2a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" renewDate=") AT LINE 680 with ID [f1b4f6da-cb2a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(renewDate) AT LINE 680 with ID [f1b4f6da-cb2a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 680 with ID [f1b4f6da-cb2a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack31) AT LINE 680 with ID [f1b4f6da-cb2a]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$#7 >= len$ goto this.<org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: long lastUpdate> = now at line 108 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack18 == 0 goto $stack20 = this.<org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: java.util.Set proxyAddresses> at line 119 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack17 = this.<org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: java.util.Set proxyAddresses> at line 106 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: java.util.Set getProxyAddresses()> has 6 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = <org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: org.slf4j.Logger LOG> AT LINE 109 with ID [c83634b7-5c55]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = interfaceinvoke $stack25.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 109 with ID [c83634b7-5c55]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack26 == 0 goto $stack27 = this.<org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: java.util.Set proxyAddresses> AT LINE 109 with ID [c83634b7-5c55]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = <org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: org.slf4j.Logger LOG> AT LINE 110 with ID [c83634b7-5c55]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke add.<java.net.InetAddress: java.lang.String getHostAddress()>() AT LINE 110 with ID [c83634b7-5c55]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("proxy address is: {}", $stack34) AT LINE 110 with ID [c83634b7-5c55]
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider: void pushToZK(byte[],byte[],byte[])>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack5 == 0 goto return at line 240 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.blockmanagement.PendingReplicationBlocks$PendingReplicationMonitor: void run()>
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.fs.DelegationTokenRenewer: void removeRenewAction(org.apache.hadoop.fs.FileSystem)>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack24 = this.<org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.hadoop.hdfs.server.datanode.BlockRecoveryWorker recoveryWorker> at line 575 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testZeroLenReplicas()> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 569 with ID [7dd7c930-2ed7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 569 with ID [7dd7c930-2ed7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 569 with ID [7dd7c930-2ed7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39) AT LINE 569 with ID [7dd7c930-2ed7]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 569 with ID [7dd7c930-2ed7]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack41) AT LINE 569 with ID [7dd7c930-2ed7]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.security.NMTokenSecretManagerInNM: void setNodeId(org.apache.hadoop.yarn.api.records.NodeId)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = <org.apache.hadoop.yarn.server.nodemanager.security.NMTokenSecretManagerInNM: org.slf4j.Logger LOG> AT LINE 251 with ID [e9f0538d-58a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updating nodeId : ") AT LINE 251 with ID [e9f0538d-58a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nodeId) AT LINE 251 with ID [e9f0538d-58a8]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 251 with ID [e9f0538d-58a8]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>($stack8) AT LINE 251 with ID [e9f0538d-58a8]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack5 >= 0 goto $stack6 = <org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: org.apache.commons.logging.Log LOG> at line 76 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.yarn.client.api.NMTokenCache)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: org.apache.commons.logging.Log LOG> AT LINE 83 with ID [23b416a6-e52e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("yarn.client.max-cached-nodemanagers-proxies : ") AT LINE 83 with ID [23b416a6-e52e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: int maxConnectedNMs> AT LINE 83 with ID [23b416a6-e52e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack18) AT LINE 83 with ID [23b416a6-e52e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 83 with ID [23b416a6-e52e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 83 with ID [23b416a6-e52e]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack52 <= 0 goto $stack22 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> at line 1079 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack19 > 0 goto $stack20 = virtualinvoke range.<org.apache.hadoop.hdfs.nfs.nfs3.OffsetRange: long getMin()>() at line 1051 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.ConcurrentNavigableMap pendingWrites> at line 1018 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx offerNextToWrite()> has 49 units and 8 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack118 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1020 with ID [7db92306-7e2e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack119 = virtualinvoke $stack117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The async write task has no pending writes, fileId: ") AT LINE 1020 with ID [7db92306-7e2e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack120 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes latestAttr> AT LINE 1020 with ID [7db92306-7e2e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack121 = virtualinvoke $stack120.<org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes: long getFileId()>() AT LINE 1020 with ID [7db92306-7e2e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack122 = virtualinvoke $stack119.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack121) AT LINE 1020 with ID [7db92306-7e2e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack123 = virtualinvoke $stack122.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1020 with ID [7db92306-7e2e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack118.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack123) AT LINE 1020 with ID [7db92306-7e2e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack102 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1040 with ID [466e20bc-93f9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack103 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("range.getMin()=") AT LINE 1040 with ID [466e20bc-93f9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack104 = virtualinvoke range.<org.apache.hadoop.hdfs.nfs.nfs3.OffsetRange: long getMin()>() AT LINE 1040 with ID [466e20bc-93f9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack105 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack104) AT LINE 1040 with ID [466e20bc-93f9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nextOffset=") AT LINE 1040 with ID [466e20bc-93f9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack107 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nextOffset> AT LINE 1040 with ID [466e20bc-93f9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack108 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack107) AT LINE 1040 with ID [466e20bc-93f9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack109 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1040 with ID [466e20bc-93f9]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack102.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack109) AT LINE 1040 with ID [466e20bc-93f9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack91 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1046 with ID [055dddcf-dfff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack92 = interfaceinvoke $stack91.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 1046 with ID [055dddcf-dfff]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack92 == 0 goto $stack93 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nextOffset> AT LINE 1046 with ID [055dddcf-dfff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack96 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1047 with ID [055dddcf-dfff]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack96.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("The next sequential write has not arrived yet") AT LINE 1047 with ID [055dddcf-dfff]
2020-08-25 12:10:03 [INFO] - 	 -> $stack83 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1053 with ID [78852eec-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack84 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remove write ") AT LINE 1053 with ID [78852eec-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85 = virtualinvoke range.<org.apache.hadoop.hdfs.nfs.nfs3.OffsetRange: java.lang.String toString()>() AT LINE 1053 with ID [78852eec-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack86 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack85) AT LINE 1053 with ID [78852eec-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which is already written from the list") AT LINE 1053 with ID [78852eec-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1053 with ID [78852eec-4022]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack83.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack88) AT LINE 1053 with ID [78852eec-4022]
2020-08-25 12:10:03 [INFO] - 	 -> $stack71 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1067 with ID [41ffcb83-f537]
2020-08-25 12:10:03 [INFO] - 	 -> $stack72 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Change nextOffset (after trim) to ") AT LINE 1067 with ID [41ffcb83-f537]
2020-08-25 12:10:03 [INFO] - 	 -> $stack73 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nextOffset> AT LINE 1067 with ID [41ffcb83-f537]
2020-08-25 12:10:03 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.util.concurrent.atomic.AtomicLong: long get()>() AT LINE 1067 with ID [41ffcb83-f537]
2020-08-25 12:10:03 [INFO] - 	 -> $stack75 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack74) AT LINE 1067 with ID [41ffcb83-f537]
2020-08-25 12:10:03 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1067 with ID [41ffcb83-f537]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack71.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack76) AT LINE 1067 with ID [41ffcb83-f537]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1072 with ID [a9abfde1-fe51]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remove write ") AT LINE 1072 with ID [a9abfde1-fe51]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke range.<org.apache.hadoop.hdfs.nfs.nfs3.OffsetRange: java.lang.String toString()>() AT LINE 1072 with ID [a9abfde1-fe51]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack43) AT LINE 1072 with ID [a9abfde1-fe51]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from the list") AT LINE 1072 with ID [a9abfde1-fe51]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1072 with ID [a9abfde1-fe51]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack41.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack46) AT LINE 1072 with ID [a9abfde1-fe51]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1080 with ID [513c58dd-cceb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Change nextOffset to ") AT LINE 1080 with ID [513c58dd-cceb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nextOffset> AT LINE 1080 with ID [513c58dd-cceb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.util.concurrent.atomic.AtomicLong: long get()>() AT LINE 1080 with ID [513c58dd-cceb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack36) AT LINE 1080 with ID [513c58dd-cceb]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1080 with ID [513c58dd-cceb]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack38) AT LINE 1080 with ID [513c58dd-cceb]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack44 == 0 goto $stack23 = new org.apache.hadoop.fs.permission.PermissionStatus at line 749 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack18 != 0 goto $stack20 = this.<org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.apache.hadoop.hdfs.server.namenode.FSNamesystem namesystem> at line 731 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.apache.hadoop.hdfs.protocol.HdfsFileStatus create(java.lang.String,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,org.apache.hadoop.io.EnumSetWritable,boolean,short,long,org.apache.hadoop.crypto.CryptoProtocolVersion[])> has 9 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.slf4j.Logger stateChangeLog> AT LINE 728 with ID [be352eb0-7462]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*DIR* NameNode.create: file ") AT LINE 728 with ID [be352eb0-7462]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 728 with ID [be352eb0-7462]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 728 with ID [be352eb0-7462]
2020-08-25 12:10:03 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(clientName) AT LINE 728 with ID [be352eb0-7462]
2020-08-25 12:10:03 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ") AT LINE 728 with ID [be352eb0-7462]
2020-08-25 12:10:03 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(clientMachine) AT LINE 728 with ID [be352eb0-7462]
2020-08-25 12:10:03 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 728 with ID [be352eb0-7462]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack55.<org.slf4j.Logger: void debug(java.lang.String)>($stack62) AT LINE 728 with ID [be352eb0-7462]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache: org.apache.hadoop.security.UserGroupInformation getUserGroupInformation(java.lang.String,org.apache.hadoop.security.UserGroupInformation)> has 9 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache: org.apache.commons.logging.Log LOG> AT LINE 200 with ID [9a46d0e5-defc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = interfaceinvoke $stack7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 200 with ID [9a46d0e5-defc]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack8 == 0 goto return ugi AT LINE 200 with ID [9a46d0e5-defc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache: org.apache.commons.logging.Log LOG> AT LINE 201 with ID [9a46d0e5-defc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = newarray (java.lang.Object)[2] AT LINE 201 with ID [9a46d0e5-defc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9[0] = ugi AT LINE 201 with ID [9a46d0e5-defc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9[1] = effectiveUser AT LINE 201 with ID [9a46d0e5-defc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Created ugi: %s for username: %s", $stack9) AT LINE 201 with ID [9a46d0e5-defc]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 201 with ID [9a46d0e5-defc]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack36 == 0 goto $stack32 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptState: org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptState SCHEDULED> at line 1129 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.hadoop.yarn.server.resourcemanager.RMContext access$2000(org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl)>(appAttempt) at line 1096 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack8 != 0 goto staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: void access$2800(org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl)>(appAttempt) at line 1088 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl$ScheduleTransition: org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptState transition(org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl,org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptEvent)> has 15 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.commons.logging.Log access$2500()>() AT LINE 1105 with ID [80e067ed-2b73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting node count for blacklist to ") AT LINE 1105 with ID [80e067ed-2b73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i$#3) AT LINE 1105 with ID [80e067ed-2b73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1105 with ID [80e067ed-2b73]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack54.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack58) AT LINE 1105 with ID [80e067ed-2b73]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.commons.logging.Log access$2500()>() AT LINE 1112 with ID [e8b45411-b910]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using blacklist for AM: additions(") AT LINE 1112 with ID [e8b45411-b910]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke amReq#4.<org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest: java.util.List getBlacklistAdditions()>() AT LINE 1112 with ID [e8b45411-b910]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack41) AT LINE 1112 with ID [e8b45411-b910]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") and removals(") AT LINE 1112 with ID [e8b45411-b910]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke amReq#4.<org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest: java.util.List getBlacklistRemovals()>() AT LINE 1112 with ID [e8b45411-b910]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack44) AT LINE 1112 with ID [e8b45411-b910]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 1112 with ID [e8b45411-b910]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1112 with ID [e8b45411-b910]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack47) AT LINE 1112 with ID [e8b45411-b910]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.api.records.Resource getComputedResourceLimitForAllUsers(java.lang.String,org.apache.hadoop.yarn.api.records.Resource,java.lang.String,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode)> has 11 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.commons.logging.Log LOG> AT LINE 578 with ID [42eb8d68-b6cf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userLimit is fetched. userLimit=") AT LINE 578 with ID [42eb8d68-b6cf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(userLimitResource#3) AT LINE 578 with ID [42eb8d68-b6cf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userSpecificUserLimit=") AT LINE 578 with ID [42eb8d68-b6cf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(userSpecificUserLimit) AT LINE 578 with ID [42eb8d68-b6cf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", schedulingMode=") AT LINE 578 with ID [42eb8d68-b6cf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(schedulingMode) AT LINE 578 with ID [42eb8d68-b6cf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", partition=") AT LINE 578 with ID [42eb8d68-b6cf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodePartition) AT LINE 578 with ID [42eb8d68-b6cf]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 578 with ID [42eb8d68-b6cf]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 578 with ID [42eb8d68-b6cf]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.util.concurrent.ExecutorHelper: void logThrowableFromAfterExecute(java.lang.Runnable,java.lang.Throwable)> has 11 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = <org.apache.hadoop.util.concurrent.ExecutorHelper: org.slf4j.Logger LOG> AT LINE 37 with ID [1ffd5c95-4ce5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("afterExecute in thread: ") AT LINE 37 with ID [1ffd5c95-4ce5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 37 with ID [1ffd5c95-4ce5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.Thread: java.lang.String getName()>() AT LINE 37 with ID [1ffd5c95-4ce5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 37 with ID [1ffd5c95-4ce5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", runnable type: ") AT LINE 37 with ID [1ffd5c95-4ce5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke r.<java.lang.Object: java.lang.Class getClass()>() AT LINE 37 with ID [1ffd5c95-4ce5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.Class: java.lang.String getName()>() AT LINE 37 with ID [1ffd5c95-4ce5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27) AT LINE 37 with ID [1ffd5c95-4ce5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 37 with ID [1ffd5c95-4ce5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack29) AT LINE 37 with ID [1ffd5c95-4ce5]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.security.TokenCache: org.apache.hadoop.security.Credentials loadTokens(java.lang.String,org.apache.hadoop.mapred.JobConf)> has 13 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.mapreduce.security.TokenCache: org.apache.commons.logging.Log LOG> AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Task: Loaded jobTokenFile from: ") AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke localJobTokenFile.<org.apache.hadoop.fs.Path: java.net.URI toUri()>() AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.net.URI: java.lang.String getPath()>() AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16) AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; num of sec keys  = ") AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke ts.<org.apache.hadoop.security.Credentials: int numberOfSecretKeys()>() AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack19) AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Number of tokens ") AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke ts.<org.apache.hadoop.security.Credentials: int numberOfTokens()>() AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack22) AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 201 with ID [e346843e-dac3]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack50 == 0 goto (branch) at line 540 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if assignedContainers != 0 goto (branch) at line 529 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if maxContainers <= 0 goto (branch) at line 525 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: void assignContainers(org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode)> has 15 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.commons.logging.Log LOG> AT LINE 499 with ID [8dc1441d-d2ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("assignContainers: node=") AT LINE 499 with ID [8dc1441d-d2ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode getRMNode()>() AT LINE 499 with ID [8dc1441d-d2ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = interfaceinvoke $stack14.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: java.lang.String getNodeAddress()>() AT LINE 499 with ID [8dc1441d-d2ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 499 with ID [8dc1441d-d2ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #applications=") AT LINE 499 with ID [8dc1441d-d2ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: java.util.concurrent.ConcurrentMap applications> AT LINE 499 with ID [8dc1441d-d2ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = interfaceinvoke $stack18.<java.util.concurrent.ConcurrentMap: int size()>() AT LINE 499 with ID [8dc1441d-d2ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack19) AT LINE 499 with ID [8dc1441d-d2ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 499 with ID [8dc1441d-d2ca]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 499 with ID [8dc1441d-d2ca]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.commons.logging.Log LOG> AT LINE 511 with ID [8c7237ca-8aad]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("pre-assignContainers") AT LINE 511 with ID [8c7237ca-8aad]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.commons.logging.Log LOG> AT LINE 536 with ID [559c9ddb-924a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack45.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("post-assignContainers") AT LINE 536 with ID [559c9ddb-924a]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService: void removeTokenMasterKey(org.apache.hadoop.security.token.delegation.DelegationKey)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService: org.apache.commons.logging.Log LOG> AT LINE 287 with ID [fbdc6236-da05]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing master key ") AT LINE 287 with ID [fbdc6236-da05]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke masterKey.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 287 with ID [fbdc6236-da05]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack12) AT LINE 287 with ID [fbdc6236-da05]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 287 with ID [fbdc6236-da05]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 287 with ID [fbdc6236-da05]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if existing#2 != null goto newNode = virtualinvoke existing#2.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getLastINode()>() at line 174 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack23 != 0 goto $stack7 = virtualinvoke fsd.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: long allocateNewInodeId()>() at line 175 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirMkdirOp: org.apache.hadoop.hdfs.server.namenode.INodesInPath createSingleDirectory(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath,byte[],org.apache.hadoop.fs.permission.PermissionStatus)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 186 with ID [c646489e-35fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mkdirs: created directory ") AT LINE 186 with ID [c646489e-35fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(cur) AT LINE 186 with ID [c646489e-35fc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 186 with ID [c646489e-35fc]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 186 with ID [c646489e-35fc]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataTransferSaslUtil: org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair createStreamPair(org.apache.hadoop.conf.Configuration,org.apache.hadoop.crypto.CipherOption,java.io.OutputStream,java.io.InputStream,boolean)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataTransferSaslUtil: org.slf4j.Logger LOG> AT LINE 339 with ID [5a2f9166-660c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>("Creating IOStreamPair of CryptoInputStream and CryptoOutputStream.") AT LINE 339 with ID [5a2f9166-660c]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor: void removeNode(org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode)> has 15 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor: org.apache.commons.logging.Log LOG> AT LINE 194 with ID [16586943-b4dc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node delete event for: ") AT LINE 194 with ID [16586943-b4dc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = interfaceinvoke removedRMNode.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: org.apache.hadoop.net.Node getNode()>() AT LINE 194 with ID [16586943-b4dc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = interfaceinvoke $stack8.<org.apache.hadoop.net.Node: java.lang.String getName()>() AT LINE 194 with ID [16586943-b4dc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9) AT LINE 194 with ID [16586943-b4dc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 194 with ID [16586943-b4dc]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 194 with ID [16586943-b4dc]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor: org.apache.commons.logging.Log LOG> AT LINE 205 with ID [6e99c06d-920f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delete ClusterNode: ") AT LINE 205 with ID [6e99c06d-920f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = interfaceinvoke removedRMNode.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: org.apache.hadoop.yarn.api.records.NodeId getNodeID()>() AT LINE 205 with ID [6e99c06d-920f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack23) AT LINE 205 with ID [6e99c06d-920f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 205 with ID [6e99c06d-920f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack25) AT LINE 205 with ID [6e99c06d-920f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor: org.apache.commons.logging.Log LOG> AT LINE 207 with ID [675448a1-ebc9]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Node not in list!") AT LINE 207 with ID [675448a1-ebc9]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.timelineservice.NMTimelinePublisher: void publishContainerEvent(org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerEvent)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.nodemanager.timelineservice.NMTimelinePublisher: org.apache.commons.logging.Log LOG> AT LINE 345 with ID [0388cc90-d1b4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke event.<org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerEvent: java.lang.Enum getType()>() AT LINE 345 with ID [0388cc90-d1b4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack12) AT LINE 345 with ID [0388cc90-d1b4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a desired ContainerEvent which needs to be published by") AT LINE 345 with ID [0388cc90-d1b4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NMTimelinePublisher") AT LINE 345 with ID [0388cc90-d1b4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 345 with ID [0388cc90-d1b4]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 345 with ID [0388cc90-d1b4]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack5 == 0 goto $stack6 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(providerUriStr) at line 56 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.util.KMSUtil: org.apache.hadoop.crypto.key.KeyProvider createKeyProvider(org.apache.hadoop.conf.Configuration,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack3 = <org.apache.hadoop.util.KMSUtil: org.slf4j.Logger LOG> AT LINE 52 with ID [eed4860d-c807]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating key provider with config key {}", configKeyName) AT LINE 52 with ID [eed4860d-c807]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack47 != 0 goto i = i + 1 at line 319 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack46 != 0 goto $stack47 = virtualinvoke key.<org.apache.hadoop.io.RandomDatum: boolean equals(java.lang.Object)>(value) at line 317 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= count goto virtualinvoke reader.<org.apache.hadoop.io.SequenceFile$Reader: void close()>() at line 310 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= count goto $stack24 = <org.apache.hadoop.io.TestSequenceFile: org.slf4j.Logger LOG> at line 296 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.io.TestSequenceFile: void checkSort(org.apache.hadoop.fs.FileSystem,int,int,org.apache.hadoop.fs.Path)> has 12 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = <org.apache.hadoop.io.TestSequenceFile: org.slf4j.Logger LOG> AT LINE 303 with ID [888bd8e1-6fae]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checking order of ") AT LINE 303 with ID [888bd8e1-6fae]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 303 with ID [888bd8e1-6fae]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" records") AT LINE 303 with ID [888bd8e1-6fae]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 303 with ID [888bd8e1-6fae]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack28) AT LINE 303 with ID [888bd8e1-6fae]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = <org.apache.hadoop.io.TestSequenceFile: org.slf4j.Logger LOG> AT LINE 324 with ID [2a753e46-539a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sucessfully checked ") AT LINE 324 with ID [2a753e46-539a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 324 with ID [2a753e46-539a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" records") AT LINE 324 with ID [2a753e46-539a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 324 with ID [2a753e46-539a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack37.<org.slf4j.Logger: void debug(java.lang.String)>($stack41) AT LINE 324 with ID [2a753e46-539a]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.ipc.RPC$Server: void registerProtocolAndImpl(org.apache.hadoop.ipc.RPC$RpcKind,java.lang.Class,java.lang.Object)> has 16 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.ipc.RPC$Server: org.slf4j.Logger LOG> AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RpcKind = ") AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(rpcKind) AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Protocol Name = ") AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(protocolName) AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version=") AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(version) AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ProtocolImpl=") AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke protocolImpl.<java.lang.Object: java.lang.Class getClass()>() AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.Class: java.lang.String getName()>() AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" protocolClass=") AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke protocolClass.<java.lang.Class: java.lang.String getName()>() AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack31) AT LINE 893 with ID [b37c84ff-21c6]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.hadoop.oncrpc.XDR umnt(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.XDR,int,java.net.InetAddress)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.commons.logging.Log LOG> AT LINE 170 with ID [e7843e0e-49af]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MOUNT UMNT path: ") AT LINE 170 with ID [e7843e0e-49af]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 170 with ID [e7843e0e-49af]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 170 with ID [e7843e0e-49af]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(client) AT LINE 170 with ID [e7843e0e-49af]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 170 with ID [e7843e0e-49af]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 170 with ID [e7843e0e-49af]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack18 != $stack21 goto $stack17 = new org.apache.hadoop.security.token.SecretManager$InvalidToken at line 243 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.security.NMTokenSecretManagerInNM: void appAttemptStartContainer(org.apache.hadoop.yarn.security.NMTokenIdentifier)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = <org.apache.hadoop.yarn.server.nodemanager.security.NMTokenSecretManagerInNM: org.slf4j.Logger LOG> AT LINE 232 with ID [5fd9d3b7-1030]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NMToken key updated for application attempt : ") AT LINE 232 with ID [5fd9d3b7-1030]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 232 with ID [5fd9d3b7-1030]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<org.apache.hadoop.yarn.api.records.ApplicationAttemptId: java.lang.String toString()>() AT LINE 232 with ID [5fd9d3b7-1030]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 232 with ID [5fd9d3b7-1030]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 232 with ID [5fd9d3b7-1030]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String)>($stack31) AT LINE 232 with ID [5fd9d3b7-1030]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: void resetDigestACLs()> has 5 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack1 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 343 with ID [aa000fda-1a7f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack2 = interfaceinvoke $stack1.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 343 with ID [aa000fda-1a7f]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack2 == 0 goto $stack3 = this.<org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.util.List digestACLs> AT LINE 343 with ID [aa000fda-1a7f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack4 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 344 with ID [aa000fda-1a7f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String)>("Cleared digest ACLs") AT LINE 344 with ID [aa000fda-1a7f]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.web.webhdfs.HdfsWriter: void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)> has 7 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.server.datanode.web.webhdfs.HdfsWriter: org.apache.commons.logging.Log LOG> AT LINE 79 with ID [1b7d842e-b854]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack10 == null goto return AT LINE 79 with ID [1b7d842e-b854]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.server.datanode.web.webhdfs.HdfsWriter: org.apache.commons.logging.Log LOG> AT LINE 82 with ID [1b7d842e-b854]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = interfaceinvoke $stack11.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 82 with ID [1b7d842e-b854]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack12 == 0 goto return AT LINE 82 with ID [1b7d842e-b854]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.server.datanode.web.webhdfs.HdfsWriter: org.apache.commons.logging.Log LOG> AT LINE 80 with ID [1b7d842e-b854]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Exception in channel handler ", cause) AT LINE 80 with ID [1b7d842e-b854]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if block != null goto $stack18 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> at line 439 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: long scanBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock,long)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 442 with ID [7c530af2-c391]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("start scanning block {}", block) AT LINE 442 with ID [7c530af2-c391]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack3 == 0 goto return at line 249 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache$StreamMonitor: void run()> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = staticinvoke <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: org.apache.commons.logging.Log access$100()>() AT LINE 257 with ID [57d85465-7980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StreamMonitor can still have a sleep:") AT LINE 257 with ID [57d85465-7980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = 5000L - workedTime AT LINE 257 with ID [57d85465-7980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = $stack19 / 1000L AT LINE 257 with ID [57d85465-7980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack20) AT LINE 257 with ID [57d85465-7980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 257 with ID [57d85465-7980]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack22) AT LINE 257 with ID [57d85465-7980]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalizedResource: void handle(org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.event.ResourceEvent)> has 26 units and 4 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke event.<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.event.ResourceEvent: org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalResourceRequest getLocalResourceRequest()>() AT LINE 193 with ID [c7238de1-59a3, cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> resourcePath = virtualinvoke $stack8.<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalResourceRequest: org.apache.hadoop.fs.Path getPath()>() AT LINE 193 with ID [c7238de1-59a3, cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalizedResource: org.slf4j.Logger LOG> AT LINE 195 with ID [c7238de1-59a3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ") AT LINE 195 with ID [c7238de1-59a3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(resourcePath) AT LINE 195 with ID [c7238de1-59a3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ") AT LINE 195 with ID [c7238de1-59a3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke event.<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.event.ResourceEvent: java.lang.Enum getType()>() AT LINE 195 with ID [c7238de1-59a3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack47) AT LINE 195 with ID [c7238de1-59a3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 195 with ID [c7238de1-59a3]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void debug(java.lang.String)>($stack49) AT LINE 195 with ID [c7238de1-59a3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalizedResource: org.slf4j.Logger LOG> AT LINE 206 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource ") AT LINE 206 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(resourcePath) AT LINE 206 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(->") AT LINE 213 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalizedResource: org.apache.hadoop.fs.Path localPath> AT LINE 213 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack34) AT LINE 213 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 213 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 213 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = "" AT LINE 213 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37) AT LINE 206 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transitioned from ") AT LINE 206 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(oldState) AT LINE 206 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 206 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(newState) AT LINE 206 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 206 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String)>($stack31) AT LINE 206 with ID [cb094ff2-264f]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack9 == 0 goto return codec at line 67 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if klasses != null goto codec = null at line 63 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.crypto.CryptoCodec: org.apache.hadoop.crypto.CryptoCodec getInstance(org.apache.hadoop.conf.Configuration,org.apache.hadoop.crypto.CipherSuite)> has 7 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = <org.apache.hadoop.util.PerformanceAdvisory: org.slf4j.Logger LOG> AT LINE 72 with ID [1d56c3d7-a86e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke klass.<java.lang.Class: java.lang.String getName()>() AT LINE 72 with ID [1d56c3d7-a86e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Using crypto codec {}.", $stack23) AT LINE 72 with ID [1d56c3d7-a86e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = <org.apache.hadoop.util.PerformanceAdvisory: org.slf4j.Logger LOG> AT LINE 77 with ID [53b407b2-4a58]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke klass.<java.lang.Class: java.lang.String getName()>() AT LINE 77 with ID [53b407b2-4a58]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke cipherSuite.<org.apache.hadoop.crypto.CipherSuite: java.lang.String getName()>() AT LINE 77 with ID [53b407b2-4a58]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Crypto codec {} doesn\'t meet the cipher suite {}.", $stack18, $stack19) AT LINE 77 with ID [53b407b2-4a58]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack6 != 0 goto $stack5 = new org.apache.hadoop.yarn.server.nodemanager.containermanager.runtime.ContainerExecutionException at line 109 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DelegatingLinuxContainerRuntime: org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.LinuxContainerRuntime pickContainerRuntime(java.util.Map)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DelegatingLinuxContainerRuntime: org.slf4j.Logger LOG> AT LINE 113 with ID [1145a1e6-8c2b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using container runtime: ") AT LINE 113 with ID [1145a1e6-8c2b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke runtime.<java.lang.Object: java.lang.Class getClass()>() AT LINE 113 with ID [1145a1e6-8c2b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 113 with ID [1145a1e6-8c2b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 113 with ID [1145a1e6-8c2b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 113 with ID [1145a1e6-8c2b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 113 with ID [1145a1e6-8c2b]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult renameToInt(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,java.lang.String,boolean)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 54 with ID [cfbea9ba-9fa1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.renameTo: ") AT LINE 54 with ID [cfbea9ba-9fa1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 54 with ID [cfbea9ba-9fa1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 54 with ID [cfbea9ba-9fa1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dst) AT LINE 54 with ID [cfbea9ba-9fa1]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 54 with ID [cfbea9ba-9fa1]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 54 with ID [cfbea9ba-9fa1]
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.security.UserGroupInformation: java.util.List getGroups()>
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.resolver.order.HashFirstResolver: java.lang.String getFirstNamespace(java.lang.String,org.apache.hadoop.hdfs.server.federation.resolver.PathLocation)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.server.federation.resolver.order.HashFirstResolver: org.slf4j.Logger LOG> AT LINE 32 with ID [12bb1100-293c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Only using the first part of the path: {} -> {}", path, trimmedPath) AT LINE 32 with ID [12bb1100-293c]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack10 >= 0 goto $stack11 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: org.slf4j.Logger LOG> at line 563 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: void loadDirectoriesInINodeSection(java.io.InputStream)> has 8 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: org.slf4j.Logger LOG> AT LINE 565 with ID [2e9f3f4a-3f46]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = interfaceinvoke $stack15.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 565 with ID [2e9f3f4a-3f46]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack16 == 0 goto $stack17 = virtualinvoke p.<org.apache.hadoop.hdfs.server.namenode.FsImageProto$INodeSection$INode: boolean hasDirectory()>() AT LINE 565 with ID [2e9f3f4a-3f46]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = i % 10000 AT LINE 563 with ID [2e9f3f4a-3f46]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack21 != 0 goto $stack17 = virtualinvoke p.<org.apache.hadoop.hdfs.server.namenode.FsImageProto$INodeSection$INode: boolean hasDirectory()>() AT LINE 563 with ID [2e9f3f4a-3f46]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: org.slf4j.Logger LOG> AT LINE 566 with ID [2e9f3f4a-3f46]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i) AT LINE 566 with ID [2e9f3f4a-3f46]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scanned {} inodes.", $stack25) AT LINE 566 with ID [2e9f3f4a-3f46]
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.security.TestLdapGroupsMapping: void testLdapReadTimeout()>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack8 != 0 goto $stack9 = this.<org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl$HeartbeatThread: org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl this$0> at line 264 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl$HeartbeatThread: void run()>
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void finishResourceLocalization(java.lang.String,org.apache.hadoop.yarn.api.records.ApplicationId,org.apache.hadoop.yarn.proto.YarnServerNodemanagerRecoveryProtos$LocalizedResourceProto)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 818 with ID [4b24dcc4-c49e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing localized resource to ") AT LINE 818 with ID [4b24dcc4-c49e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(completedKey) AT LINE 818 with ID [4b24dcc4-c49e]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 818 with ID [4b24dcc4-c49e]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack26) AT LINE 818 with ID [4b24dcc4-c49e]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if j >= numBytes goto virtualinvoke out.<org.apache.hadoop.fs.FSDataOutputStream: void close()>() at line 70 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= numFiles goto $stack27 = <org.apache.hadoop.mapred.TestMultiFileInputFormat: org.apache.hadoop.mapred.JobConf job> at line 64 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TestMultiFileInputFormat: org.apache.hadoop.fs.Path initFiles(org.apache.hadoop.fs.FileSystem,int,int)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = <org.apache.hadoop.mapred.TestMultiFileInputFormat: org.apache.commons.logging.Log LOG> AT LINE 75 with ID [2734b53e-2213]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created file ") AT LINE 75 with ID [2734b53e-2213]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(path) AT LINE 75 with ID [2734b53e-2213]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with length ") AT LINE 75 with ID [2734b53e-2213]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numBytes) AT LINE 75 with ID [2734b53e-2213]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 75 with ID [2734b53e-2213]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack44.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack49) AT LINE 75 with ID [2734b53e-2213]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.webproxy.ProxyUtils: void sendRedirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)> has 11 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.server.webproxy.ProxyUtils: org.slf4j.Logger LOG> AT LINE 76 with ID [3392abe7-cc82]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 76 with ID [3392abe7-cc82]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack7 == 0 goto location = interfaceinvoke response.<javax.servlet.http.HttpServletResponse: java.lang.String encodeRedirectURL(java.lang.String)>(target) AT LINE 76 with ID [3392abe7-cc82]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = <org.apache.hadoop.yarn.server.webproxy.ProxyUtils: org.slf4j.Logger LOG> AT LINE 77 with ID [3392abe7-cc82]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = newarray (java.lang.Object)[3] AT LINE 77 with ID [3392abe7-cc82]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>() AT LINE 77 with ID [3392abe7-cc82]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27[0] = $stack31 AT LINE 77 with ID [3392abe7-cc82]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>() AT LINE 77 with ID [3392abe7-cc82]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27[1] = $stack33 AT LINE 77 with ID [3392abe7-cc82]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27[2] = target AT LINE 77 with ID [3392abe7-cc82]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Redirecting {} {} to {}", $stack27) AT LINE 77 with ID [3392abe7-cc82]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplicaInfo create(org.apache.hadoop.hdfs.ExtendedBlockId,org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache$ShortCircuitReplicaCreator,org.apache.hadoop.util.Waitable)> has 5 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 763 with ID [5f524853-13fa]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: loading {}", this, key) AT LINE 763 with ID [5f524853-13fa]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 773 with ID [11280bf2-f42f]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke info.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplicaInfo: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica getReplica()>() AT LINE 773 with ID [11280bf2-f42f]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: successfully loaded {}", this, $stack38) AT LINE 773 with ID [11280bf2-f42f]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslInputStream: int readMoreData()> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = <org.apache.hadoop.security.SaslInputStream: org.slf4j.Logger LOG> AT LINE 100 with ID [51b00dfb-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Actual length is ") AT LINE 100 with ID [51b00dfb-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(length) AT LINE 100 with ID [51b00dfb-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 100 with ID [51b00dfb-e89a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String)>($stack32) AT LINE 100 with ID [51b00dfb-e89a]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if len$ >= 5 goto return arr$#22 at line 465 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$ >= len$ goto arr$#22 = 0 at line 451 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= 5 goto (branch) at line 453 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= $stack22 goto $stack23 = <org.apache.hadoop.fs.loadGenerator.LoadGenerator: long[] durations> at line 411 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if ioe#2 == 0 goto staticinvoke <org.apache.hadoop.fs.loadGenerator.LoadGenerator: void barrier()>() at line 405 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.fs.loadGenerator.LoadGenerator: int generateLoadOnNN()> has 24 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = <org.apache.hadoop.fs.loadGenerator.LoadGenerator: org.slf4j.Logger LOG> AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack81 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Moving to index ") AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack82 = <org.apache.hadoop.fs.loadGenerator.LoadGenerator: int currentIndex> AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack83 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack82) AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": r = ") AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack86 = <org.apache.hadoop.fs.loadGenerator.LoadGenerator: double[] readProbs> AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85 = <org.apache.hadoop.fs.loadGenerator.LoadGenerator: int currentIndex> AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack87 = $stack86[$stack85] AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack88 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($stack87) AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", w = ") AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack90 = <org.apache.hadoop.fs.loadGenerator.LoadGenerator: double[] writeProbs> AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack91 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack90) AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack92 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for duration ") AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack94 = <org.apache.hadoop.fs.loadGenerator.LoadGenerator: long[] durations> AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack93 = <org.apache.hadoop.fs.loadGenerator.LoadGenerator: int currentIndex> AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack95 = $stack94[$stack93] AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack96 = virtualinvoke $stack92.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack95) AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack80.<org.slf4j.Logger: void debug(java.lang.String)>($stack97) AT LINE 436 with ID [4962b99d-1a68]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = <org.apache.hadoop.fs.loadGenerator.LoadGenerator: org.slf4j.Logger LOG> AT LINE 446 with ID [c90c8c05-68a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = interfaceinvoke $stack26.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 446 with ID [c90c8c05-68a9]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack27 == 0 goto i#12 = 0 AT LINE 446 with ID [c90c8c05-68a9]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = <org.apache.hadoop.fs.loadGenerator.LoadGenerator: org.slf4j.Logger LOG> AT LINE 447 with ID [c90c8c05-68a9]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack52.<org.slf4j.Logger: void debug(java.lang.String)>("Done with testing.  Waiting for threads to finish.") AT LINE 447 with ID [c90c8c05-68a9]
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: void chooseRemoteRack(int,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,java.util.Set,long,int,java.util.List,boolean,java.util.EnumMap)>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack4 == 0 goto shexec = null at line 779 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.util.Shell: boolean isSetsidSupported()> has 10 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.util.Shell: org.slf4j.Logger LOG> AT LINE 807 with ID [dbe2f33a-ac49]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setsid exited with exit code ") AT LINE 807 with ID [dbe2f33a-ac49]
2020-08-25 12:10:03 [INFO] - 	 -> if shexec == null goto $stack16 = "(null executor)" AT LINE 807 with ID [dbe2f33a-ac49]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke shexec.<org.apache.hadoop.util.Shell$ShellCommandExecutor: int getExitCode()>() AT LINE 811 with ID [dbe2f33a-ac49]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack15) AT LINE 811 with ID [dbe2f33a-ac49]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack16)] AT LINE 811 with ID [dbe2f33a-ac49]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = "(null executor)" AT LINE 811 with ID [dbe2f33a-ac49]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack16) AT LINE 807 with ID [dbe2f33a-ac49]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 807 with ID [dbe2f33a-ac49]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack13) AT LINE 807 with ID [dbe2f33a-ac49]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BPServiceActor: org.apache.hadoop.hdfs.server.protocol.HeartbeatResponse sendHeartBeat(boolean)> has 8 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack76 = <org.apache.hadoop.hdfs.server.datanode.BPServiceActor: org.slf4j.Logger LOG> AT LINE 495 with ID [2f46765b-945d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending heartbeat with ") AT LINE 495 with ID [2f46765b-945d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = lengthof reports AT LINE 495 with ID [2f46765b-945d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack79 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack78) AT LINE 495 with ID [2f46765b-945d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" storage reports from service actor: ") AT LINE 495 with ID [2f46765b-945d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 495 with ID [2f46765b-945d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 495 with ID [2f46765b-945d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack76.<org.slf4j.Logger: void debug(java.lang.String)>($stack82) AT LINE 495 with ID [2f46765b-945d]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() at line 770 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack22 == 0 goto (branch) at line 775 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack19 == 0 goto (branch) at line 771 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs: void addSummaryLog(java.lang.String,java.lang.String,java.lang.String,boolean)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 776 with ID [54f11fee-7f0c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Incoming log {} not present in my summaryLogs list, add it", filename) AT LINE 776 with ID [54f11fee-7f0c]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TaskAttemptListenerImpl: boolean ping(org.apache.hadoop.mapred.TaskAttemptID)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = <org.apache.hadoop.mapred.TaskAttemptListenerImpl: org.apache.commons.logging.Log LOG> AT LINE 310 with ID [3dd01805-2c93]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ping from ") AT LINE 310 with ID [3dd01805-2c93]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke taskAttemptID.<org.apache.hadoop.mapred.TaskAttemptID: java.lang.String toString()>() AT LINE 310 with ID [3dd01805-2c93]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7) AT LINE 310 with ID [3dd01805-2c93]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 310 with ID [3dd01805-2c93]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack9) AT LINE 310 with ID [3dd01805-2c93]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testRBW_RWRReplicas()> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 455 with ID [00c7f5ac-48ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 455 with ID [00c7f5ac-48ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 455 with ID [00c7f5ac-48ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 455 with ID [00c7f5ac-48ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 455 with ID [00c7f5ac-48ed]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 455 with ID [00c7f5ac-48ed]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack18 <= 0 goto $stack20 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> at line 399 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: float getNonLabeledQueueCapacity(java.lang.String)> has 8 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> AT LINE 402 with ID [eabd1c46-a6ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSConf - getCapacity: queuePrefix=") AT LINE 402 with ID [eabd1c46-a6ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: java.lang.String getQueuePrefix(java.lang.String)>(queue) AT LINE 402 with ID [eabd1c46-a6ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) AT LINE 402 with ID [eabd1c46-a6ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", capacity=") AT LINE 402 with ID [eabd1c46-a6ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(capacity) AT LINE 402 with ID [eabd1c46-a6ce]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 402 with ID [eabd1c46-a6ce]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 402 with ID [eabd1c46-a6ce]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficControlBandwidthHandlerImpl: java.util.List reacquireContainer(org.apache.hadoop.yarn.api.records.ContainerId)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficControlBandwidthHandlerImpl: org.slf4j.Logger LOG> AT LINE 189 with ID [0e594da8-0f23]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting to reacquire classId for container: ") AT LINE 189 with ID [0e594da8-0f23]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerIdStr) AT LINE 189 with ID [0e594da8-0f23]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 189 with ID [0e594da8-0f23]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack27) AT LINE 189 with ID [0e594da8-0f23]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.server.LdapAuthenticationHandler: void authenticateWithoutTlsExtension(java.lang.String,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.security.authentication.server.LdapAuthenticationHandler: org.slf4j.Logger logger> AT LINE 304 with ID [a6c0cefa-87d0]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Authentication successful for {}", userDN) AT LINE 304 with ID [a6c0cefa-87d0]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack12 == 0 goto return null at line 43 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack29 == 0 goto (branch) at line 50 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack26 == 0 goto (branch) at line 46 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if service != null goto $stack6 = <org.apache.hadoop.yarn.security.client.ClientToAMTokenSelector: org.apache.commons.logging.Log LOG> at line 39 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.security.client.ClientToAMTokenSelector: org.apache.hadoop.security.token.Token selectToken(org.apache.hadoop.io.Text,java.util.Collection)> has 16 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.security.client.ClientToAMTokenSelector: org.apache.commons.logging.Log LOG> AT LINE 42 with ID [78d171ec-2f60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking for a token with service ") AT LINE 42 with ID [78d171ec-2f60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = virtualinvoke service.<org.apache.hadoop.io.Text: java.lang.String toString()>() AT LINE 42 with ID [78d171ec-2f60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 42 with ID [78d171ec-2f60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 42 with ID [78d171ec-2f60]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack10) AT LINE 42 with ID [78d171ec-2f60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.security.client.ClientToAMTokenSelector: org.apache.commons.logging.Log LOG> AT LINE 44 with ID [5bb867d5-7f76]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token kind is ") AT LINE 44 with ID [5bb867d5-7f76]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getKind()>() AT LINE 44 with ID [5bb867d5-7f76]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<org.apache.hadoop.io.Text: java.lang.String toString()>() AT LINE 44 with ID [5bb867d5-7f76]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 44 with ID [5bb867d5-7f76]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and the token\'s service name is ") AT LINE 44 with ID [5bb867d5-7f76]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 44 with ID [5bb867d5-7f76]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 44 with ID [5bb867d5-7f76]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 44 with ID [5bb867d5-7f76]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 44 with ID [5bb867d5-7f76]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack167 == 0 goto locatedblocks = virtualinvoke blockLocations.<org.apache.hadoop.hdfs.protocol.LocatedBlocks: java.util.List getLocatedBlocks()>() at line 1770 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if null != blockLocations goto $stack167 = virtualinvoke blockLocations.<org.apache.hadoop.hdfs.protocol.LocatedBlocks: boolean isUnderConstruction()>() at line 1767 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack51 != 0 goto return null at line 1903 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack55 <= 0 goto $stack42 = virtualinvoke md5out.<org.apache.hadoop.io.DataOutputBuffer: byte[] getData()>() at line 1903 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if done != 0 goto i = i + 1 at line 1884 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if j >= $stack75 goto (branch) at line 1885 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if bpc == bytesPerCRC goto cpb = virtualinvoke checksumData.<org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$OpBlockChecksumResponseProto: long getCrcPerBlock()>() at line 1820 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack37 == 0 goto locatedblocks = virtualinvoke blockLocations.<org.apache.hadoop.hdfs.protocol.LocatedBlocks: java.util.List getLocatedBlocks()>() at line 1747 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if null != blockLocations goto $stack37 = virtualinvoke blockLocations.<org.apache.hadoop.hdfs.protocol.LocatedBlocks: boolean isUnderConstruction()>() at line 1744 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSClient: org.apache.hadoop.fs.MD5MD5CRC32FileChecksum getFileChecksum(java.lang.String,long)> has 25 units and 4 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack88 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1800 with ID [5695b459-9e4b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85 = newarray (java.lang.Object)[3] AT LINE 1800 with ID [5695b459-9e4b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack86 = datanodes[j] AT LINE 1800 with ID [5695b459-9e4b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85[0] = $stack86 AT LINE 1800 with ID [5695b459-9e4b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack87 = <org.apache.hadoop.hdfs.protocol.datatransfer.Op: org.apache.hadoop.hdfs.protocol.datatransfer.Op BLOCK_CHECKSUM> AT LINE 1800 with ID [5695b459-9e4b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85[1] = $stack87 AT LINE 1800 with ID [5695b459-9e4b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85[2] = block AT LINE 1800 with ID [5695b459-9e4b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack88.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("write to {}: {}, block={}", $stack85) AT LINE 1800 with ID [5695b459-9e4b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack108 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1842 with ID [61f1db21-935a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack108.<org.slf4j.Logger: void debug(java.lang.String)>("Retrieving checksum from an earlier-version DataNode: inferring checksum by reading first byte") AT LINE 1842 with ID [61f1db21-935a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack126 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1859 with ID [ce887058-6e0a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack127 = virtualinvoke $stack125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set bytesPerCRC=") AT LINE 1859 with ID [ce887058-6e0a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack128 = virtualinvoke $stack127.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(bytesPerCRC) AT LINE 1859 with ID [ce887058-6e0a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack129 = virtualinvoke $stack128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", crcPerBlock=") AT LINE 1859 with ID [ce887058-6e0a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack130 = virtualinvoke $stack129.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(crcPerBlock) AT LINE 1859 with ID [ce887058-6e0a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack131 = virtualinvoke $stack130.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1859 with ID [ce887058-6e0a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack126.<org.slf4j.Logger: void debug(java.lang.String)>($stack131) AT LINE 1859 with ID [ce887058-6e0a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack116 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1862 with ID [eb728221-648d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack117 = virtualinvoke $stack115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("got reply from ") AT LINE 1862 with ID [eb728221-648d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack118 = datanodes[j] AT LINE 1862 with ID [eb728221-648d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack119 = virtualinvoke $stack117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack118) AT LINE 1862 with ID [eb728221-648d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack120 = virtualinvoke $stack119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": md5=") AT LINE 1862 with ID [eb728221-648d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack121 = virtualinvoke $stack120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(md5) AT LINE 1862 with ID [eb728221-648d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack122 = virtualinvoke $stack121.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1862 with ID [eb728221-648d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack116.<org.slf4j.Logger: void debug(java.lang.String)>($stack122) AT LINE 1862 with ID [eb728221-648d]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack4 == 0 goto return at line 3960 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber: void run()> has 5 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 3942 with ID [a75be6bf-5391]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = interfaceinvoke $stack7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 3942 with ID [a75be6bf-5391]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack8 == 0 goto (branch) AT LINE 3942 with ID [a75be6bf-5391]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 3943 with ID [a75be6bf-5391]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Namenode is in safemode, skipping scrubbing of corrupted lazy-persist files.") AT LINE 3943 with ID [a75be6bf-5391]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack7 == 0 goto return at line 258 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TestBadRecords$BadReducer: void reduce(org.apache.hadoop.io.LongWritable,java.util.Iterator,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = staticinvoke <org.apache.hadoop.mapred.TestBadRecords: org.apache.commons.logging.Log access$000()>() AT LINE 260 with ID [48c93247-6161]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("REDUCE key:") AT LINE 260 with ID [48c93247-6161]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(key) AT LINE 260 with ID [48c93247-6161]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  value:") AT LINE 260 with ID [48c93247-6161]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(value) AT LINE 260 with ID [48c93247-6161]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 260 with ID [48c93247-6161]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 260 with ID [48c93247-6161]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.Task: void initialize(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.mapred.JobID,org.apache.hadoop.mapred.Reporter,boolean)> has 5 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = <org.apache.hadoop.mapred.Task: org.apache.commons.logging.Log LOG> AT LINE 596 with ID [87f8c895-1878]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = interfaceinvoke $stack56.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 596 with ID [87f8c895-1878]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack57 == 0 goto $stack58 = this.<org.apache.hadoop.mapred.Task: org.apache.hadoop.mapred.TaskAttemptContext taskContext> AT LINE 596 with ID [87f8c895-1878]
2020-08-25 12:10:03 [INFO] - 	 -> $stack67 = <org.apache.hadoop.mapred.Task: org.apache.commons.logging.Log LOG> AT LINE 597 with ID [87f8c895-1878]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack67.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("using new api for output committer") AT LINE 597 with ID [87f8c895-1878]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack80 == 0 goto (branch) at line 1428 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack77 <= 0 goto (branch) at line 1445 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if tId#36 == null goto (branch) at line 1426 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack69 != 0 goto (branch) at line 1420 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack104 != 0 goto $stack68 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.hadoop.yarn.api.records.Priority PRIORITY_OPPORTUNISTIC_MAP> at line 1420 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack38 == 0 goto (branch) at line 1462 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack58 != 0 goto $stack24 = this.<org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator$ScheduledRequests: java.util.Map maps> at line 1462 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack20 == 0 goto return at line 1466 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack64 == 0 goto it = interfaceinvoke allocatedContainers.<java.util.List: java.util.Iterator iterator()>() at line 1449 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack94 == 0 goto (branch) at line 1438 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack126 == 0 goto (branch) at line 1394 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack121 <= 0 goto (branch) at line 1411 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if list == null goto (branch) at line 1389 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack115 != 0 goto (branch) at line 1384 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack159 != 0 goto $stack114 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.hadoop.yarn.api.records.Priority PRIORITY_OPPORTUNISTIC_MAP> at line 1384 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack110 == 0 goto it = interfaceinvoke allocatedContainers.<java.util.List: java.util.Iterator iterator()>() at line 1415 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack140 == 0 goto (branch) at line 1404 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator$ScheduledRequests: void assignMapsWithLocality(java.util.List)> has 20 units and 5 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack147 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 1391 with ID [aa8b2aa1-05ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack148 = virtualinvoke $stack146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host matched to the request list ") AT LINE 1391 with ID [aa8b2aa1-05ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack149 = virtualinvoke $stack148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(host) AT LINE 1391 with ID [aa8b2aa1-05ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack150 = virtualinvoke $stack149.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1391 with ID [aa8b2aa1-05ed]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack147.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack150) AT LINE 1391 with ID [aa8b2aa1-05ed]
2020-08-25 12:10:03 [INFO] - 	 -> $stack142 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 1405 with ID [35cbcac3-3f85]
2020-08-25 12:10:03 [INFO] - 	 -> $stack143 = virtualinvoke $stack141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigned based on host match ") AT LINE 1405 with ID [35cbcac3-3f85]
2020-08-25 12:10:03 [INFO] - 	 -> $stack144 = virtualinvoke $stack143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(host) AT LINE 1405 with ID [35cbcac3-3f85]
2020-08-25 12:10:03 [INFO] - 	 -> $stack145 = virtualinvoke $stack144.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1405 with ID [35cbcac3-3f85]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack142.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack145) AT LINE 1405 with ID [35cbcac3-3f85]
2020-08-25 12:10:03 [INFO] - 	 -> $stack96 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 1439 with ID [4b5bfa09-b43a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack97 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigned based on rack match ") AT LINE 1439 with ID [4b5bfa09-b43a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(list#35) AT LINE 1439 with ID [4b5bfa09-b43a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1439 with ID [4b5bfa09-b43a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack96.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack99) AT LINE 1439 with ID [4b5bfa09-b43a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 1462 with ID [4e3474cd-6f60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = interfaceinvoke $stack37.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 1462 with ID [4e3474cd-6f60]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack38 == 0 goto (branch) AT LINE 1462 with ID [4e3474cd-6f60]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 1463 with ID [4e3474cd-6f60]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Assigned based on * match") AT LINE 1463 with ID [4e3474cd-6f60]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.pipes.BinaryProtocol: void start()> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack1 = <org.apache.hadoop.mapred.pipes.BinaryProtocol: org.apache.commons.logging.Log LOG> AT LINE 280 with ID [fa873b24-2b59]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("starting downlink") AT LINE 280 with ID [fa873b24-2b59]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if mode != null goto this.<org.apache.hadoop.security.ssl.SSLFactory: org.apache.hadoop.security.ssl.SSLFactory$Mode mode> = mode at line 103 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.ssl.SSLFactory: void <init>(org.apache.hadoop.security.ssl.SSLFactory$Mode,org.apache.hadoop.conf.Configuration)> has 7 units and 2 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = <org.apache.hadoop.security.ssl.SSLFactory: org.slf4j.Logger LOG> AT LINE 120 with ID [09136a8e-e229]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = interfaceinvoke $stack14.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 120 with ID [09136a8e-e229]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack15 == 0 goto return AT LINE 120 with ID [09136a8e-e229]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = <org.apache.hadoop.security.ssl.SSLFactory: org.slf4j.Logger LOG> AT LINE 121 with ID [09136a8e-e229]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = this.<org.apache.hadoop.security.ssl.SSLFactory: java.util.List excludeCiphers> AT LINE 121 with ID [09136a8e-e229]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $stack16) AT LINE 121 with ID [09136a8e-e229]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("will exclude cipher suites: {}", $stack19) AT LINE 121 with ID [09136a8e-e229]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: void storeRMDTMasterKeyState(org.apache.hadoop.security.token.delegation.DelegationKey)> has 5 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 776 with ID [e892ce6c-fb34]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing token master key to ") AT LINE 776 with ID [e892ce6c-fb34]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dbKey) AT LINE 776 with ID [e892ce6c-fb34]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 776 with ID [e892ce6c-fb34]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 776 with ID [e892ce6c-fb34]
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: void createPersistentNode(java.lang.String)>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if token == null goto $stack17 = new java.io.IOException at line 1036 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.apache.hadoop.security.token.Token[] addDelegationTokens(java.lang.String,org.apache.hadoop.security.Credentials)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.slf4j.Logger LOG> AT LINE 1037 with ID [009b48ed-87d6]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("New token received: ({})", token) AT LINE 1037 with ID [009b48ed-87d6]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack5 == 0 goto $stack7 = <org.apache.hadoop.net.NetworkTopologyWithNodeGroup: org.slf4j.Logger LOG> at line 231 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if node != null goto $stack5 = node instanceof org.apache.hadoop.net.InnerNode at line 230 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.net.NetworkTopologyWithNodeGroup: void remove(org.apache.hadoop.net.Node)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = <org.apache.hadoop.net.NetworkTopologyWithNodeGroup: org.slf4j.Logger LOG> AT LINE 249 with ID [bc3558fe-7cf5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NetworkTopology became:\n") AT LINE 249 with ID [bc3558fe-7cf5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke this.<org.apache.hadoop.net.NetworkTopologyWithNodeGroup: java.lang.String toString()>() AT LINE 249 with ID [bc3558fe-7cf5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 249 with ID [bc3558fe-7cf5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 249 with ID [bc3558fe-7cf5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 249 with ID [bc3558fe-7cf5]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.oncrpc.security.CredentialsSys: void <clinit>()> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = <org.apache.hadoop.oncrpc.security.CredentialsSys: org.slf4j.Logger LOG> AT LINE 36 with ID [d5deacca-5730]
2020-08-25 12:10:03 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HOSTNAME = ") AT LINE 36 with ID [d5deacca-5730]
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.oncrpc.security.CredentialsSys: java.lang.String HOSTNAME> AT LINE 36 with ID [d5deacca-5730]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 36 with ID [d5deacca-5730]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 36 with ID [d5deacca-5730]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>($stack10) AT LINE 36 with ID [d5deacca-5730]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.api.records.Resource getComputedResourceLimitForActiveUsers(java.lang.String,org.apache.hadoop.yarn.api.records.Resource,java.lang.String,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode)> has 11 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.commons.logging.Log LOG> AT LINE 524 with ID [0a10c02d-6a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userLimit is fetched. userLimit=") AT LINE 524 with ID [0a10c02d-6a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(userLimitResource#3) AT LINE 524 with ID [0a10c02d-6a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userSpecificUserLimit=") AT LINE 524 with ID [0a10c02d-6a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(userSpecificUserLimit) AT LINE 524 with ID [0a10c02d-6a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", schedulingMode=") AT LINE 524 with ID [0a10c02d-6a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(schedulingMode) AT LINE 524 with ID [0a10c02d-6a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", partition=") AT LINE 524 with ID [0a10c02d-6a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodePartition) AT LINE 524 with ID [0a10c02d-6a7c]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 524 with ID [0a10c02d-6a7c]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 524 with ID [0a10c02d-6a7c]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = this.<org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.impl.MetricsSourceAdapter sysSource> at line 457 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void stopSources()> has 11 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.slf4j.Logger LOG> AT LINE 459 with ID [d6c19d3e-7391]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping metrics source ") AT LINE 459 with ID [d6c19d3e-7391]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 459 with ID [d6c19d3e-7391]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = (java.lang.String) $stack15 AT LINE 459 with ID [d6c19d3e-7391]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16) AT LINE 459 with ID [d6c19d3e-7391]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": class=") AT LINE 459 with ID [d6c19d3e-7391]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke sa.<org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.apache.hadoop.metrics2.MetricsSource source()>() AT LINE 459 with ID [d6c19d3e-7391]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.Object: java.lang.Class getClass()>() AT LINE 459 with ID [d6c19d3e-7391]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack20) AT LINE 459 with ID [d6c19d3e-7391]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 459 with ID [d6c19d3e-7391]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 459 with ID [d6c19d3e-7391]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack23 == 0 goto i$ = i$ + 1 at line 2204 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack11 = new org.apache.hadoop.hdfs.UnknownCryptoProtocolVersionException at line 2196 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.crypto.CryptoProtocolVersion chooseProtocolVersion(org.apache.hadoop.hdfs.protocol.EncryptionZone,org.apache.hadoop.crypto.CryptoProtocolVersion[])> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 2199 with ID [db6526d4-53c5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring unknown CryptoProtocolVersion provided by client: ") AT LINE 2199 with ID [db6526d4-53c5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke c.<org.apache.hadoop.crypto.CryptoProtocolVersion: int getUnknownValue()>() AT LINE 2199 with ID [db6526d4-53c5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31) AT LINE 2199 with ID [db6526d4-53c5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2199 with ID [db6526d4-53c5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack33) AT LINE 2199 with ID [db6526d4-53c5]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if numOfDatanodes > 0 goto (branch) at line 525 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack10 != 0 goto innerNode = (org.apache.hadoop.net.InnerNode) node at line 509 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack55 == 0 goto $stack56 = virtualinvoke excludedScope.<java.lang.String: boolean startsWith(java.lang.String)>(scope) at line 501 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.net.NetworkTopology: org.apache.hadoop.net.Node chooseRandom(java.lang.String,java.lang.String,java.util.Collection)> has 20 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = <org.apache.hadoop.net.NetworkTopology: org.slf4j.Logger LOG> AT LINE 526 with ID [068a66a8-fa9a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = newarray (java.lang.Object)[3] AT LINE 526 with ID [068a66a8-fa9a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47[0] = scope AT LINE 526 with ID [068a66a8-fa9a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47[1] = excludedScope AT LINE 526 with ID [068a66a8-fa9a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(numOfDatanodes) AT LINE 526 with ID [068a66a8-fa9a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47[2] = $stack51 AT LINE 526 with ID [068a66a8-fa9a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack48.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Failed to find datanode (scope=\"{}\" excludedScope=\"{}\"). numOfDatanodes={}", $stack47) AT LINE 526 with ID [068a66a8-fa9a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = <org.apache.hadoop.net.NetworkTopology: org.slf4j.Logger LOG> AT LINE 538 with ID [b5a45dde-d49a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = newarray (java.lang.Object)[6] AT LINE 538 with ID [b5a45dde-d49a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(availableNodes) AT LINE 538 with ID [b5a45dde-d49a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21[0] = $stack25 AT LINE 538 with ID [b5a45dde-d49a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21[1] = innerNode AT LINE 538 with ID [b5a45dde-d49a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21[2] = scope AT LINE 538 with ID [b5a45dde-d49a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21[3] = excludedScope AT LINE 538 with ID [b5a45dde-d49a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21[4] = excludedNodes AT LINE 538 with ID [b5a45dde-d49a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(numOfDatanodes) AT LINE 538 with ID [b5a45dde-d49a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21[5] = $stack27 AT LINE 538 with ID [b5a45dde-d49a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Choosing random from {} available nodes on node {}, scope={}, excludedScope={}, excludeNodes={}. numOfDatanodes={}.", $stack21) AT LINE 538 with ID [b5a45dde-d49a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = <org.apache.hadoop.net.NetworkTopology: org.slf4j.Logger LOG> AT LINE 547 with ID [802e21ea-7739]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("chooseRandom returning {}", ret) AT LINE 547 with ID [802e21ea-7739]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: void storeApplicationStateInternal(org.apache.hadoop.yarn.api.records.ApplicationId,org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationStateData)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 587 with ID [387c6d3a-eed6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing state for app ") AT LINE 587 with ID [387c6d3a-eed6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 587 with ID [387c6d3a-eed6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ") AT LINE 587 with ID [387c6d3a-eed6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 587 with ID [387c6d3a-eed6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 587 with ID [387c6d3a-eed6]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 587 with ID [387c6d3a-eed6]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack103 != 0 goto (branch) at line 356 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$#7 >= len$ goto (branch) at line 367 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack83 == 0 goto $stack84 = interfaceinvoke env.<java.util.Map$Entry: java.lang.Object getKey()>() at line 364 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack78 == 0 goto (branch) at line 363 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack72 == 0 goto $stack39 = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: org.apache.hadoop.conf.Configuration getConf()>() at line 362 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack99 == 0 goto (branch) at line 355 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: void writeLaunchEnv(java.io.OutputStream,java.util.Map,java.util.Map,java.util.List,org.apache.hadoop.fs.Path,java.lang.String)> has 6 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = <org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: org.slf4j.Logger LOG> AT LINE 400 with ID [1e6c7442-1d02]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Script: ") AT LINE 400 with ID [1e6c7442-1d02]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke i$#42.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("UTF-8") AT LINE 400 with ID [1e6c7442-1d02]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48) AT LINE 400 with ID [1e6c7442-1d02]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 400 with ID [1e6c7442-1d02]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String)>($stack50) AT LINE 400 with ID [1e6c7442-1d02]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: long loadEditRecords(org.apache.hadoop.hdfs.server.namenode.EditLogInputStream,boolean,long,org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption,org.apache.hadoop.hdfs.server.namenode.MetaRecoveryContext)> has 27 units and 7 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: org.apache.commons.logging.Log LOG> AT LINE 167 with ID [951d7e3e-be11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = interfaceinvoke $stack34.<org.apache.commons.logging.Log: boolean isTraceEnabled()>() AT LINE 167 with ID [951d7e3e-be11]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack35 == 0 goto $stack36 = this.<org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: org.apache.hadoop.hdfs.server.namenode.FSNamesystem fsNamesys> AT LINE 167 with ID [951d7e3e-be11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack148 = <org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: org.apache.commons.logging.Log LOG> AT LINE 168 with ID [951d7e3e-be11]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack148.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("Acquiring write lock to replay edit log") AT LINE 168 with ID [951d7e3e-be11]
2020-08-25 12:10:03 [INFO] - 	 -> $stack96 = <org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: org.apache.commons.logging.Log LOG> AT LINE 234 with ID [e09f777b-1797]
2020-08-25 12:10:03 [INFO] - 	 -> $stack97 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("op=") AT LINE 234 with ID [e09f777b-1797]
2020-08-25 12:10:03 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(op) AT LINE 234 with ID [e09f777b-1797]
2020-08-25 12:10:03 [INFO] - 	 -> $stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", startOpt=") AT LINE 234 with ID [e09f777b-1797]
2020-08-25 12:10:03 [INFO] - 	 -> $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(startOpt) AT LINE 234 with ID [e09f777b-1797]
2020-08-25 12:10:03 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", numEdits=") AT LINE 234 with ID [e09f777b-1797]
2020-08-25 12:10:03 [INFO] - 	 -> $stack102 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(numEdits) AT LINE 234 with ID [e09f777b-1797]
2020-08-25 12:10:03 [INFO] - 	 -> $stack103 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", totalEdits=") AT LINE 234 with ID [e09f777b-1797]
2020-08-25 12:10:03 [INFO] - 	 -> $stack104 = this.<org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: int totalEdits> AT LINE 234 with ID [e09f777b-1797]
2020-08-25 12:10:03 [INFO] - 	 -> $stack105 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack104) AT LINE 234 with ID [e09f777b-1797]
2020-08-25 12:10:03 [INFO] - 	 -> $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 234 with ID [e09f777b-1797]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack96.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack106) AT LINE 234 with ID [e09f777b-1797]
2020-08-25 12:10:03 [INFO] - 	 -> $stack139 = <org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: org.apache.commons.logging.Log LOG> AT LINE 293 with ID [c42ea94a-a6b5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack140 = interfaceinvoke $stack139.<org.apache.commons.logging.Log: boolean isTraceEnabled()>() AT LINE 293 with ID [c42ea94a-a6b5]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack140 == 0 goto $stack141 = <org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.commons.logging.Log LOG> AT LINE 293 with ID [c42ea94a-a6b5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack144 = <org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: org.apache.commons.logging.Log LOG> AT LINE 294 with ID [c42ea94a-a6b5]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack144.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("replaying edit log finished") AT LINE 294 with ID [c42ea94a-a6b5]
2020-08-25 12:10:03 [INFO] - 	 -> $stack141 = <org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.commons.logging.Log LOG> AT LINE 297 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> $stack142 = interfaceinvoke $stack141.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 297 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> if $stack142 == 0 goto return numEdits AT LINE 297 with ID []
2020-08-25 12:10:03 [INFO] - 	 -> staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: void dumpOpCounts(java.util.EnumMap)>(opCounts) AT LINE 298 with ID [f9d783ec-2809]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= return numEdits] AT LINE 298 with ID []
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: void startCacheCleanerThreadIfNeeded()> has 3 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 805 with ID [a0c8253e-3bd0]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(rateMs) AT LINE 805 with ID [a0c8253e-3bd0]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: starting cache cleaner thread which will run every {} ms", this, $stack15) AT LINE 805 with ID [a0c8253e-3bd0]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack39 != 0 goto $stack40 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> at line 892 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if preOpAttr != null goto $stack38 = <org.apache.hadoop.nfs.AccessPrivilege: org.apache.hadoop.nfs.AccessPrivilege READ_WRITE> at line 887 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack31 >= count goto handle = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.WRITE3Request: org.apache.hadoop.nfs.nfs3.FileHandle getHandle()>() at line 872 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.WRITE3Request: org.apache.hadoop.nfs.nfs3.request.WRITE3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 854 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.WRITE3Response write(org.apache.hadoop.oncrpc.XDR,org.jboss.netty.channel.Channel,int,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 26 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> e = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.WRITE3Request: long getOffset()>() AT LINE 868 with ID [1ffac23d-0c22, 4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack70 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack71 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS WRITE fileId: ") AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack72 = virtualinvoke handle.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack73 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack72) AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" offset: ") AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(e) AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length: ") AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stableHow: ") AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack79 = virtualinvoke stableHow.<org.apache.hadoop.nfs.nfs3.Nfs3Constant$WriteStableHow: int getValue()>() AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack79) AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" xid: ") AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(xid) AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack70.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack85) AT LINE 879 with ID [4124683f-9980]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 899 with ID [1ffac23d-0c22]
2020-08-25 12:10:03 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requested offset=") AT LINE 899 with ID [1ffac23d-0c22]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(e) AT LINE 899 with ID [1ffac23d-0c22]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and current filesize=") AT LINE 899 with ID [1ffac23d-0c22]
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = virtualinvoke preOpAttr.<org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes: long getSize()>() AT LINE 899 with ID [1ffac23d-0c22]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack48) AT LINE 899 with ID [1ffac23d-0c22]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 899 with ID [1ffac23d-0c22]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack44.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack50) AT LINE 899 with ID [1ffac23d-0c22]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack11 == 0 goto return results at line 207 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.registry.client.binding.RegistryUtils: java.util.Map statChildren(org.apache.hadoop.registry.client.api.RegistryOperations,java.lang.String)>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack28 != 0 goto $stack29 = new org.apache.hadoop.mapred.LocalContainerLauncher$RenamedMapOutputFile at line 579 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack27 != 0 goto $stack28 = virtualinvoke localFs.<org.apache.hadoop.fs.FileSystem: boolean rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>(mapOutIndex, reduceInIndex) at line 577 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack26 != 0 goto $stack27 = virtualinvoke localFs.<org.apache.hadoop.fs.FileSystem: boolean rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>(mapOut, reduceIn) at line 573 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapred.LocalContainerLauncher: org.apache.hadoop.mapred.MapOutputFile renameMapOutputForReduce(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId,org.apache.hadoop.mapred.MapOutputFile)> has 12 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack48 = <org.apache.hadoop.mapred.LocalContainerLauncher: org.apache.commons.logging.Log LOG> AT LINE 569 with ID [e2813d86-aba4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Renaming map output file for task attempt ") AT LINE 569 with ID [e2813d86-aba4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack50 = virtualinvoke mapId.<org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId: java.lang.String toString()>() AT LINE 569 with ID [e2813d86-aba4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack50) AT LINE 569 with ID [e2813d86-aba4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from original location ") AT LINE 569 with ID [e2813d86-aba4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = virtualinvoke mapOut.<org.apache.hadoop.fs.Path: java.lang.String toString()>() AT LINE 569 with ID [e2813d86-aba4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack53) AT LINE 569 with ID [e2813d86-aba4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to destination ") AT LINE 569 with ID [e2813d86-aba4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack56 = virtualinvoke reduceIn.<org.apache.hadoop.fs.Path: java.lang.String toString()>() AT LINE 569 with ID [e2813d86-aba4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack56) AT LINE 569 with ID [e2813d86-aba4]
2020-08-25 12:10:03 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 569 with ID [e2813d86-aba4]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack48.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack58) AT LINE 569 with ID [e2813d86-aba4]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.util.MD5FileUtils: void saveMD5File(java.io.File,java.lang.String)> has 7 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.util.MD5FileUtils: org.apache.commons.logging.Log LOG> AT LINE 162 with ID [d989b112-7f75]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved MD5 ") AT LINE 162 with ID [d989b112-7f75]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(digestString) AT LINE 162 with ID [d989b112-7f75]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 162 with ID [d989b112-7f75]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(md5File) AT LINE 162 with ID [d989b112-7f75]
2020-08-25 12:10:03 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 162 with ID [d989b112-7f75]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 162 with ID [d989b112-7f75]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 254 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - No overhead is found at method <org.apache.hadoop.io.IOUtils: void cleanup(org.apache.commons.logging.Log,java.io.Closeable[])>
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i$ >= len$ goto staticinvoke <org.apache.hadoop.service.launcher.ServiceLauncher: void serviceMain(java.lang.String[])>(args) at line 158 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.service.launcher.AbstractServiceLauncherTestBase: void assertLaunchOutcome(int,java.lang.String,java.lang.String[])> has 15 units and 5 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack8 = <org.apache.hadoop.service.launcher.AbstractServiceLauncherTestBase: org.slf4j.Logger LOG> AT LINE 156 with ID [UNKNOWN_ID, 15c9d05a-0920, 074f2aea-0867]
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = interfaceinvoke $stack8.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 156 with ID [UNKNOWN_ID, 15c9d05a-0920, 074f2aea-0867]
2020-08-25 12:10:03 [INFO] - 	 -> if $stack9 == 0 goto staticinvoke <org.apache.hadoop.service.launcher.ServiceLauncher: void serviceMain(java.lang.String[])>(args) AT LINE 156 with ID [UNKNOWN_ID, 15c9d05a-0920, 074f2aea-0867]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = <org.apache.hadoop.service.launcher.AbstractServiceLauncherTestBase: org.slf4j.Logger LOG> AT LINE 157 with ID [074f2aea-0867]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(expected) AT LINE 157 with ID [074f2aea-0867]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Launching service with expected outcome {}", $stack12) AT LINE 157 with ID [074f2aea-0867]
2020-08-25 12:10:03 [INFO] - 	 -> arr$ = args AT LINE 158 with ID [UNKNOWN_ID, 15c9d05a-0920]
2020-08-25 12:10:03 [INFO] - 	 -> len$ = lengthof arr$ AT LINE 158 with ID [UNKNOWN_ID, 15c9d05a-0920]
2020-08-25 12:10:03 [INFO] - 	 -> i$ = 0 AT LINE 158 with ID [UNKNOWN_ID, 15c9d05a-0920]
2020-08-25 12:10:03 [INFO] - 	 -> if i$ >= len$ goto staticinvoke <org.apache.hadoop.service.launcher.ServiceLauncher: void serviceMain(java.lang.String[])>(args) AT LINE 158 with ID [UNKNOWN_ID, 15c9d05a-0920]
2020-08-25 12:10:03 [INFO] - 	 -> arg = arr$[i$] AT LINE 165 with ID [15c9d05a-0920]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = <org.apache.hadoop.service.launcher.AbstractServiceLauncherTestBase: org.slf4j.Logger LOG> AT LINE 159 with ID [15c9d05a-0920]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>(arg) AT LINE 159 with ID [15c9d05a-0920]
2020-08-25 12:10:03 [INFO] - 	 -> i$ = i$ + 1 AT LINE 158 with ID [UNKNOWN_ID, 15c9d05a-0920]
2020-08-25 12:10:03 [INFO] - 	 -> goto [?= (branch)] AT LINE 158 with ID [UNKNOWN_ID, 15c9d05a-0920]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if null != $stack14 goto return at line 153 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if clientProtocol == null goto $stack26 = <org.apache.hadoop.mapreduce.Cluster: org.apache.commons.logging.Log LOG> at line 134 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.Cluster: void initialize(java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)> has 23 units and 3 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = <org.apache.hadoop.mapreduce.Cluster: org.apache.commons.logging.Log LOG> AT LINE 124 with ID [1f72cc1c-df95]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying ClientProtocolProvider : ") AT LINE 124 with ID [1f72cc1c-df95]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = virtualinvoke provider.<java.lang.Object: java.lang.Class getClass()>() AT LINE 124 with ID [1f72cc1c-df95]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.Class: java.lang.String getName()>() AT LINE 124 with ID [1f72cc1c-df95]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 124 with ID [1f72cc1c-df95]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 124 with ID [1f72cc1c-df95]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 124 with ID [1f72cc1c-df95]
2020-08-25 12:10:03 [INFO] - 	 -> $stack35 = <org.apache.hadoop.mapreduce.Cluster: org.apache.commons.logging.Log LOG> AT LINE 137 with ID [37abe65a-e8e3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Picked ") AT LINE 137 with ID [37abe65a-e8e3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke provider.<java.lang.Object: java.lang.Class getClass()>() AT LINE 137 with ID [37abe65a-e8e3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.Class: java.lang.String getName()>() AT LINE 137 with ID [37abe65a-e8e3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack39 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack38) AT LINE 137 with ID [37abe65a-e8e3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as the ClientProtocolProvider") AT LINE 137 with ID [37abe65a-e8e3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 137 with ID [37abe65a-e8e3]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack35.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack41) AT LINE 137 with ID [37abe65a-e8e3]
2020-08-25 12:10:03 [INFO] - 	 -> $stack26 = <org.apache.hadoop.mapreduce.Cluster: org.apache.commons.logging.Log LOG> AT LINE 141 with ID [d393b1fb-661d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot pick ") AT LINE 141 with ID [d393b1fb-661d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack28 = virtualinvoke provider.<java.lang.Object: java.lang.Class getClass()>() AT LINE 141 with ID [d393b1fb-661d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.Class: java.lang.String getName()>() AT LINE 141 with ID [d393b1fb-661d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack30 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 141 with ID [d393b1fb-661d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as the ClientProtocolProvider - returned null protocol") AT LINE 141 with ID [d393b1fb-661d]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 141 with ID [d393b1fb-661d]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 141 with ID [d393b1fb-661d]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocol.datatransfer.Sender: void send(java.io.DataOutputStream,org.apache.hadoop.hdfs.protocol.datatransfer.Op,com.google.protobuf.Message)> has 4 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack3 = <org.apache.hadoop.hdfs.protocol.datatransfer.Sender: org.slf4j.Logger LOG> AT LINE 75 with ID [3fcc2e9b-d5b6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack5 = virtualinvoke proto.<java.lang.Object: java.lang.Class getClass()>() AT LINE 75 with ID [3fcc2e9b-d5b6]
2020-08-25 12:10:03 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 75 with ID [3fcc2e9b-d5b6]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Sending DataTransferOp {}: {}", $stack6, proto) AT LINE 75 with ID [3fcc2e9b-d5b6]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.metrics.TimelineServiceV1Publisher: void putEntity(org.apache.hadoop.yarn.api.records.timeline.TimelineEntity)> has 9 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.metrics.TimelineServiceV1Publisher: org.apache.commons.logging.Log LOG> AT LINE 364 with ID [faeb559c-d584]
2020-08-25 12:10:03 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Publishing the entity ") AT LINE 364 with ID [faeb559c-d584]
2020-08-25 12:10:03 [INFO] - 	 -> $stack11 = virtualinvoke entity.<org.apache.hadoop.yarn.api.records.timeline.TimelineEntity: java.lang.String getEntityId()>() AT LINE 364 with ID [faeb559c-d584]
2020-08-25 12:10:03 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 364 with ID [faeb559c-d584]
2020-08-25 12:10:03 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", JSON-style content: ") AT LINE 364 with ID [faeb559c-d584]
2020-08-25 12:10:03 [INFO] - 	 -> $stack14 = staticinvoke <org.apache.hadoop.yarn.util.timeline.TimelineUtils: java.lang.String dumpTimelineRecordtoJSON(java.lang.Object)>(entity) AT LINE 364 with ID [faeb559c-d584]
2020-08-25 12:10:03 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 364 with ID [faeb559c-d584]
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 364 with ID [faeb559c-d584]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 364 with ID [faeb559c-d584]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if errorIfExists == 0 goto $stack61 = <org.apache.hadoop.hdfs.server.federation.store.driver.impl.StateStoreFileBaseImpl: org.slf4j.Logger LOG> at line 331 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if allowUpdate == 0 goto (branch) at line 326 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack58 == 0 goto interfaceinvoke toWrite.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(recordPath, record) at line 325 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack43 != 0 goto (branch) at line 369 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack26 == 0 goto record#39 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() at line 348 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack23 == 0 goto i$#7 = 1 at line 319 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack18 == 0 goto start = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() at line 310 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.store.driver.impl.StateStoreFileBaseImpl: boolean putAll(java.util.List,boolean,boolean)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack61 = <org.apache.hadoop.hdfs.server.federation.store.driver.impl.StateStoreFileBaseImpl: org.slf4j.Logger LOG> AT LINE 339 with ID [ace633d6-7ac2]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack61.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Not updating {}", record) AT LINE 339 with ID [ace633d6-7ac2]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl$NMDistributedNodeLabelsHandler: void verifyRMHeartbeatResponseForNodeLabels(org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatResponse)> has 8 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack16 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger access$1300()>() AT LINE 1213 with ID [444e46bf-5a3b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node Labels {") AT LINE 1213 with ID [444e46bf-5a3b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack19 = this.<org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl$NMDistributedNodeLabelsHandler: java.util.Set previousNodeLabels> AT LINE 1213 with ID [444e46bf-5a3b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack20 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $stack19) AT LINE 1213 with ID [444e46bf-5a3b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20) AT LINE 1213 with ID [444e46bf-5a3b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} were Accepted by RM ") AT LINE 1213 with ID [444e46bf-5a3b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1213 with ID [444e46bf-5a3b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack23) AT LINE 1213 with ID [444e46bf-5a3b]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if info == null goto (branch) at line 699 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack70 == 0 goto $stack71 = virtualinvoke datanode.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$CachedBlocksList getPendingUncached()>() at line 695 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if added != 0 goto (branch) at line 734 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack59 != 0 goto (branch) at line 733 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack31 == 0 goto $stack32 = interfaceinvoke i#12.<java.util.List: int size()>() at line 728 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if i >= numReplicas goto $stack26 = this.<org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager> at line 678 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack73 == 0 goto $stack74 = virtualinvoke datanode.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: long getCacheRemaining()>() at line 705 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if info == null goto (branch) at line 709 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack21 != 0 goto $stack22 = new java.util.LinkedList at line 666 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if blockInfo != null goto $stack21 = virtualinvoke blockInfo.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: boolean isComplete()>() at line 660 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: void addNewPendingCached(int,org.apache.hadoop.hdfs.server.namenode.CachedBlock,java.util.List,java.util.List)> has 52 units and 8 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack117 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 661 with ID [3a8542bb-4f45]
2020-08-25 12:10:03 [INFO] - 	 -> $stack119 = virtualinvoke cachedBlock.<org.apache.hadoop.hdfs.server.namenode.CachedBlock: long getBlockId()>() AT LINE 661 with ID [3a8542bb-4f45]
2020-08-25 12:10:03 [INFO] - 	 -> $stack120 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack119) AT LINE 661 with ID [3a8542bb-4f45]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack117.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Block {}: can\'t add new cached replicas, because there is no record of this block on the NameNode.", $stack120) AT LINE 661 with ID [3a8542bb-4f45]
2020-08-25 12:10:03 [INFO] - 	 -> $stack113 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 667 with ID [39e16c56-6e1b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack115 = virtualinvoke cachedBlock.<org.apache.hadoop.hdfs.server.namenode.CachedBlock: long getBlockId()>() AT LINE 667 with ID [39e16c56-6e1b]
2020-08-25 12:10:03 [INFO] - 	 -> $stack116 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack115) AT LINE 667 with ID [39e16c56-6e1b]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack113.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Block {}: can\'t cache this block, because it is not yet complete.", $stack116) AT LINE 667 with ID [39e16c56-6e1b]
2020-08-25 12:10:03 [INFO] - 	 -> outOfCapacity = 0 AT LINE 677 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack79 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78 = newarray (java.lang.Object)[6] AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack82 = virtualinvoke blockInfo.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getBlockId()>() AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack83 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack82) AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78[0] = $stack83 AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack85 = virtualinvoke datanode.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78[1] = $stack85 AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack87 = virtualinvoke blockInfo.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getNumBytes()>() AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack88 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack87) AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78[2] = $stack88 AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack90 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(cBlock#11) AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78[3] = $stack90 AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack92 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(pendingBytes) AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78[4] = $stack92 AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack94 = virtualinvoke datanode.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: long getCacheRemaining()>() AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack95 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack94) AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> $stack78[5] = $stack95 AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack79.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("Block {}: DataNode {} is not a valid possibility because the block has size {}, but the DataNode only has {} bytes of cache remaining ({} pending bytes, {} already cached.)", $stack78) AT LINE 715 with ID [b6f44009-3101]
2020-08-25 12:10:03 [INFO] - 	 -> outOfCapacity = outOfCapacity + 1 AT LINE 721 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack51 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 729 with ID [7763172d-c39a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack53 = virtualinvoke blockInfo.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getBlockId()>() AT LINE 729 with ID [7763172d-c39a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack54 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack53) AT LINE 729 with ID [7763172d-c39a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack55 = virtualinvoke pendingBytes#14.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 729 with ID [7763172d-c39a]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack51.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Block {}: added to PENDING_CACHED on DataNode {}", $stack54, $stack55) AT LINE 729 with ID [7763172d-c39a]
2020-08-25 12:10:03 [INFO] - 	 -> $stack32 = interfaceinvoke i#12.<java.util.List: int size()>() AT LINE 736 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> if neededCached <= $stack32 goto return AT LINE 736 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33 = newarray (java.lang.Object)[4] AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack37 = virtualinvoke blockInfo.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getBlockId()>() AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack37) AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33[0] = $stack38 AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack40 = virtualinvoke cachedBlock.<org.apache.hadoop.hdfs.server.namenode.CachedBlock: short getReplication()>() AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack41 = $stack40 - neededCached AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack42 = interfaceinvoke i#12.<java.util.List: int size()>() AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack43 = $stack41 + $stack42 AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack43) AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33[1] = $stack44 AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack46 = virtualinvoke cachedBlock.<org.apache.hadoop.hdfs.server.namenode.CachedBlock: short getReplication()>() AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack47 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($stack46) AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33[2] = $stack47 AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(outOfCapacity) AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> $stack33[3] = $stack49 AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Block {}: we only have {} of {} cached replicas. {} DataNodes have insufficient cache capacity.", $stack33) AT LINE 737 with ID [54cc8b79-6e18]
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.web.DelegationTokenManager: void cancelToken(org.apache.hadoop.security.token.Token,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack3 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenManager: org.slf4j.Logger LOG> AT LINE 202 with ID [3e2ffa01-27bd]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Cancelling token:{} with canceler:{}.", token, canceler) AT LINE 202 with ID [3e2ffa01-27bd]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack24 == 0 goto $stack25 = new java.io.IOException at line 1310 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack7 = interfaceinvoke ev.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>() at line 1308 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = new java.io.IOException at line 1318 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>("fileDiffEntry") at line 1316 don't merge! Need manual examination!
2020-08-25 12:10:03 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$SnapshotDiffSectionProcessor: void process()> has 2 units and 1 lines
2020-08-25 12:10:03 [INFO] - 	 -> $stack3 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.commons.logging.Log LOG> AT LINE 1305 with ID [547d943f-4440]
2020-08-25 12:10:03 [INFO] - 	 -> interfaceinvoke $stack3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Processing SnapshotDiffSection") AT LINE 1305 with ID [547d943f-4440]
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack128 != $stack129 goto $stack130 = new java.io.IOException at line 2468 don't merge! Need manual examination!
2020-08-25 12:10:03 [WARN] - Both branch of IfStmt if $stack121 == $stack122 goto (branch) at line 2467 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataNode$DataTransfer: void run()> has 13 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack225 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 2413 with ID [4247cba7-bc34]
2020-08-25 12:10:04 [INFO] - 	 -> $stack226 = virtualinvoke $stack224.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to datanode ") AT LINE 2413 with ID [4247cba7-bc34]
2020-08-25 12:10:04 [INFO] - 	 -> $stack227 = virtualinvoke $stack226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dnAddr) AT LINE 2413 with ID [4247cba7-bc34]
2020-08-25 12:10:04 [INFO] - 	 -> $stack228 = virtualinvoke $stack227.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2413 with ID [4247cba7-bc34]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack225.<org.slf4j.Logger: void debug(java.lang.String)>($stack228) AT LINE 2413 with ID [4247cba7-bc34]
2020-08-25 12:10:04 [INFO] - 	 -> $stack148 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 2465 with ID [0bdcd45a-53b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack149 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() AT LINE 2465 with ID [0bdcd45a-53b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack150 = virtualinvoke $stack149.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 2465 with ID [0bdcd45a-53b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack151 = virtualinvoke $stack147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack150) AT LINE 2465 with ID [0bdcd45a-53b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack152 = virtualinvoke $stack151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": close-ack=") AT LINE 2465 with ID [0bdcd45a-53b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack153 = virtualinvoke $stack152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(closeAck) AT LINE 2465 with ID [0bdcd45a-53b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack154 = virtualinvoke $stack153.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2465 with ID [0bdcd45a-53b3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack148.<org.slf4j.Logger: void debug(java.lang.String)>($stack154) AT LINE 2465 with ID [0bdcd45a-53b3]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.resolver.MultipleDestinationMountTableResolver: org.apache.hadoop.hdfs.server.federation.resolver.PathLocation getDestinationForPath(java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.server.federation.resolver.MultipleDestinationMountTableResolver: org.slf4j.Logger LOG> AT LINE 104 with ID [9bc6857d-0479]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Ordered locations following {} are {}", order, mountTableResult) AT LINE 104 with ID [9bc6857d-0479]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack2 != 0 goto $stack3 = this.<org.apache.hadoop.ipc.Client$Connection: org.apache.hadoop.ipc.Client this$0> at line 1234 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Client$Connection: void close()> has 17 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 1261 with ID [0666ed3e-365d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("closing ipc connection to ") AT LINE 1261 with ID [0666ed3e-365d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.ipc.Client$Connection: java.net.InetSocketAddress server> AT LINE 1261 with ID [0666ed3e-365d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack22) AT LINE 1261 with ID [0666ed3e-365d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 1261 with ID [0666ed3e-365d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = this.<org.apache.hadoop.ipc.Client$Connection: java.io.IOException closeException> AT LINE 1261 with ID [0666ed3e-365d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.io.IOException: java.lang.String getMessage()>() AT LINE 1261 with ID [0666ed3e-365d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 1261 with ID [0666ed3e-365d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1261 with ID [0666ed3e-365d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = this.<org.apache.hadoop.ipc.Client$Connection: java.io.IOException closeException> AT LINE 1261 with ID [0666ed3e-365d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($stack28, $stack29) AT LINE 1261 with ID [0666ed3e-365d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 1270 with ID [6303d703-3c98]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke this.<org.apache.hadoop.ipc.Client$Connection: java.lang.String getName()>() AT LINE 1270 with ID [6303d703-3c98]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 1270 with ID [6303d703-3c98]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": closed") AT LINE 1270 with ID [6303d703-3c98]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1270 with ID [6303d703-3c98]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 1270 with ID [6303d703-3c98]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.hadoop.oncrpc.XDR umntall(org.apache.hadoop.oncrpc.XDR,int,java.net.InetAddress)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.commons.logging.Log LOG> AT LINE 182 with ID [533da57c-8721]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MOUNT UMNTALL :  client: ") AT LINE 182 with ID [533da57c-8721]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(client) AT LINE 182 with ID [533da57c-8721]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 182 with ID [533da57c-8721]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 182 with ID [533da57c-8721]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack11 == 0 goto return clsName at line 215 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.String getClassName(java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.slf4j.Logger LOG> AT LINE 213 with ID [fb2c09b5-dcd4]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>(clsName) AT LINE 213 with ID [fb2c09b5-dcd4]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if idx < $stack7 goto $stack8 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: java.util.BitSet allocatedSlots> at line 537 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot allocAndRegisterSlot(org.apache.hadoop.hdfs.ExtendedBlockId)> has 14 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot[] slots> AT LINE 544 with ID []
2020-08-25 12:10:04 [INFO] - 	 -> $stack11[idx] = slot AT LINE 544 with ID []
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: org.slf4j.Logger LOG> AT LINE 546 with ID [69ca19e4-f003]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 546 with ID [69ca19e4-f003]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": allocAndRegisterSlot ") AT LINE 546 with ID [69ca19e4-f003]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(idx) AT LINE 546 with ID [69ca19e4-f003]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": allocatedSlots=") AT LINE 546 with ID [69ca19e4-f003]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: java.util.BitSet allocatedSlots> AT LINE 546 with ID [69ca19e4-f003]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack20) AT LINE 546 with ID [69ca19e4-f003]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 546 with ID [69ca19e4-f003]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String getStackTrace(java.lang.Thread)>($stack22) AT LINE 546 with ID [69ca19e4-f003]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 546 with ID [69ca19e4-f003]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 546 with ID [69ca19e4-f003]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void trace(java.lang.String)>($stack25) AT LINE 546 with ID [69ca19e4-f003]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if redirected_from_node == 0 goto $stack40 = new java.lang.StringBuilder at line 308 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack24 = new org.apache.hadoop.yarn.webapp.NotFoundException at line 273 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack21 == 0 goto $stack22 = virtualinvoke appInfo.<org.apache.hadoop.yarn.server.webapp.dao.AppInfo: org.apache.hadoop.yarn.api.records.YarnApplicationState getAppState()>() at line 269 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.server.applicationhistoryservice.webapp.AHSWebServices: javax.ws.rs.core.Response getContainerLogsInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,boolean)>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = new org.apache.hadoop.conf.Configuration at line 186 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto arr$#12 = virtualinvoke newProviderPath.<java.lang.StringBuffer: java.lang.String toString()>() at line 152 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if providerPath != null goto $stack13 = new java.lang.StringBuffer at line 146 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.ProviderUtils: org.apache.hadoop.conf.Configuration excludeIncompatibleCredentialProviders(org.apache.hadoop.conf.Configuration,java.lang.Class)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = <org.apache.hadoop.security.ProviderUtils: org.slf4j.Logger LOG> AT LINE 170 with ID [7d692409-5a34]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filesystem based provider excluded from provider path due to recursive dependency: ") AT LINE 170 with ID [7d692409-5a34]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(provider) AT LINE 170 with ID [7d692409-5a34]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 170 with ID [7d692409-5a34]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String)>($stack37) AT LINE 170 with ID [7d692409-5a34]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack35 >= 0 goto (branch) at line 93 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if idlest != null goto $stack31 = virtualinvoke ctx.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: long getLastAccessTime()>() at line 90 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack15 >= 0 goto return idlest at line 105 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if idlest != null goto $stack11 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() at line 99 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: java.util.Map$Entry getEntryToEvict()> has 16 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: org.apache.commons.logging.Log LOG> AT LINE 72 with ID [6bcafa45-1dda]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("openFileMap size:") AT LINE 72 with ID [6bcafa45-1dda]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: int size()>() AT LINE 72 with ID [6bcafa45-1dda]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack48) AT LINE 72 with ID [6bcafa45-1dda]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 72 with ID [6bcafa45-1dda]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack46.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack50) AT LINE 72 with ID [6bcafa45-1dda]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: org.apache.commons.logging.Log LOG> AT LINE 82 with ID [d244f53b-707f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got one inactive stream: ") AT LINE 82 with ID [d244f53b-707f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(ctx) AT LINE 82 with ID [d244f53b-707f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 82 with ID [d244f53b-707f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack43) AT LINE 82 with ID [d244f53b-707f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: org.apache.commons.logging.Log LOG> AT LINE 107 with ID [02646049-3ee9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("idlest stream\'s idle time:") AT LINE 107 with ID [02646049-3ee9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(pairs#9) AT LINE 107 with ID [02646049-3ee9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 107 with ID [02646049-3ee9]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 107 with ID [02646049-3ee9]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.federation.FederationStateStoreHeartbeat: void run()> has 3 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.federation.FederationStateStoreHeartbeat: org.slf4j.Logger LOG> AT LINE 103 with ID [82742ffa-d6c6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.yarn.server.resourcemanager.federation.FederationStateStoreHeartbeat: java.lang.String capability> AT LINE 103 with ID [82742ffa-d6c6]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Sending the heartbeat with capability: {}", $stack8) AT LINE 103 with ID [82742ffa-d6c6]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack12 = virtualinvoke line.<org.apache.commons.cli.CommandLine: boolean hasOption(java.lang.String)>("libjars") at line 307 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack11 = virtualinvoke line.<org.apache.commons.cli.CommandLine: boolean hasOption(char)>(68) at line 300 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.util.GenericOptionsParser: void processGeneralOptions(org.apache.commons.cli.CommandLine)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = <org.apache.hadoop.util.GenericOptionsParser: org.slf4j.Logger LOG> AT LINE 349 with ID [5aee0a9b-9cb6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting conf tokensFile: ") AT LINE 349 with ID [5aee0a9b-9cb6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(optionValue) AT LINE 349 with ID [5aee0a9b-9cb6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 349 with ID [5aee0a9b-9cb6]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String)>($stack35) AT LINE 349 with ID [5aee0a9b-9cb6]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack25 == 0 goto $stack26 = <org.apache.hadoop.http.HttpRequestLog: org.slf4j.Logger LOG> at line 85 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if appender != null goto $stack25 = appender instanceof org.apache.hadoop.http.HttpRequestLogAppender at line 80 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if isLog4JLogger == 0 goto $stack22 = <org.apache.hadoop.http.HttpRequestLog: org.slf4j.Logger LOG> at line 68 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.http.HttpRequestLog: org.mortbay.jetty.RequestLog getRequestLog(java.lang.String)>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 == 0 goto i = i + 1 at line 261 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i >= 5 goto return 0 at line 261 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack17 == 0 goto i = 0 at line 261 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.UnderReplicatedBlocks: boolean remove(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,int)> has 6 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger blockStateChangeLog> AT LINE 254 with ID [ff09aace-9814]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(priLevel) AT LINE 254 with ID [ff09aace-9814]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {} from priority queue {}", block, $stack20) AT LINE 254 with ID [ff09aace-9814]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger blockStateChangeLog> AT LINE 263 with ID [32bd00ac-1d2f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i) AT LINE 263 with ID [32bd00ac-1d2f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* NameSystem.UnderReplicationBlock.remove: Removing block {} from priority queue {}", block, $stack12) AT LINE 263 with ID [32bd00ac-1d2f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if deleted != null goto $stack52 = virtualinvoke deleted.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$Node: java.lang.String getVal()>() at line 1392 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if expectedCreatedListSize != null goto $stack49 = virtualinvoke expectedCreatedListSize.<java.lang.Integer: int intValue()>() at line 1384 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if childrenSize != null goto $stack42 = virtualinvoke e#3.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$Node: boolean removeChildBool(java.lang.String)>("isSnapshotRoot") at line 1366 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if actualDiffs >= $stack32 goto $stack33 = this.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$SnapshotDiffSectionProcessor: org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor this$0> at line 1348 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if deleted#6 == $stack80 goto virtualinvoke e#3.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$Node: void verifyNoRemainingKeys(java.lang.String)>("dirDiff") at line 1425 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if cleName != null goto virtualinvoke created.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$Node: void verifyNoRemainingKeys(java.lang.String)>("created") at line 1415 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if created != null goto cleName = virtualinvoke created.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$Node: java.lang.String removeChildStr(java.lang.String)>("name") at line 1411 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if deleted != null goto $stack59 = virtualinvoke deleted.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$Node: java.lang.String getVal()>() at line 1400 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if expectedDiffs != null goto $stack27 = virtualinvoke expectedDiffs.<java.lang.Integer: int intValue()>() at line 1342 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if inodeId != null goto $stack24 = virtualinvoke inodeId.<java.lang.Long: long longValue()>() at line 1336 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$SnapshotDiffSectionProcessor: void processDirDiffEntry()> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.commons.logging.Log LOG> AT LINE 1329 with ID [9f9e2ed4-13f3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Processing dirDiffEntry") AT LINE 1329 with ID [9f9e2ed4-13f3]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack115 != $stack116 goto $stack117 = virtualinvoke application.<org.apache.hadoop.yarn.api.records.ApplicationReport: org.apache.hadoop.yarn.api.records.YarnApplicationState getYarnApplicationState()>() at line 270 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack113 != $stack114 goto $stack115 = virtualinvoke application.<org.apache.hadoop.yarn.api.records.ApplicationReport: org.apache.hadoop.yarn.api.records.YarnApplicationState getYarnApplicationState()>() at line 265 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack111 != $stack112 goto $stack113 = virtualinvoke application.<org.apache.hadoop.yarn.api.records.ApplicationReport: org.apache.hadoop.yarn.api.records.YarnApplicationState getYarnApplicationState()>() at line 262 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if newUgi#17 != null goto $stack99 = virtualinvoke application.<org.apache.hadoop.yarn.api.records.ApplicationReport: org.apache.hadoop.yarn.api.records.YarnApplicationState getYarnApplicationState()>() at line 253 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack29 != 0 goto $stack30 = this.<org.apache.hadoop.mapred.ClientServiceDelegate: boolean amAclDisabledStatusLogged> at line 189 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack27 == 0 goto $stack28 = this.<org.apache.hadoop.mapred.ClientServiceDelegate: org.apache.hadoop.conf.Configuration conf> at line 181 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack24 == 0 goto $stack25 = "N/A" at line 165 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if application != null goto $stack10 = virtualinvoke application.<org.apache.hadoop.yarn.api.records.ApplicationReport: java.lang.String getHost()>() at line 168 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack96 != $stack97 goto newUgi#17 = virtualinvoke application.<org.apache.hadoop.yarn.api.records.ApplicationReport: java.lang.String getUser()>() at line 171 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack6 == null goto $stack8 = this.<org.apache.hadoop.mapred.ClientServiceDelegate: org.apache.hadoop.mapred.ResourceMgrDelegate rm> at line 147 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.ClientServiceDelegate: org.apache.hadoop.mapreduce.v2.api.MRClientProtocol getProxy()> has 13 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.mapred.ClientServiceDelegate: org.apache.commons.logging.Log LOG> AT LINE 175 with ID [d84ba16b-7950]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("AM not assigned to Job. Waiting to get the AM ...") AT LINE 175 with ID [d84ba16b-7950]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.mapred.ClientServiceDelegate: org.apache.commons.logging.Log LOG> AT LINE 178 with ID [bfa697c4-cf5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application state is ") AT LINE 178 with ID [bfa697c4-cf5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke application.<org.apache.hadoop.yarn.api.records.ApplicationReport: org.apache.hadoop.yarn.api.records.YarnApplicationState getYarnApplicationState()>() AT LINE 178 with ID [bfa697c4-cf5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack15) AT LINE 178 with ID [bfa697c4-cf5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 178 with ID [bfa697c4-cf5f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack17) AT LINE 178 with ID [bfa697c4-cf5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = <org.apache.hadoop.mapred.ClientServiceDelegate: org.apache.commons.logging.Log LOG> AT LINE 201 with ID [48bdd0e8-b550]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to ") AT LINE 201 with ID [48bdd0e8-b550]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e#5) AT LINE 201 with ID [48bdd0e8-b550]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 201 with ID [48bdd0e8-b550]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack50.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack53) AT LINE 201 with ID [48bdd0e8-b550]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.pipes.Application: void waitForAuthentication()> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack2 = <org.apache.hadoop.mapred.pipes.Application: org.apache.commons.logging.Log LOG> AT LINE 194 with ID [ec9a4825-3c84]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Waiting for authentication response") AT LINE 194 with ID [ec9a4825-3c84]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack36 != 200 goto interfaceinvoke e#2.<java.util.List: boolean add(java.lang.Object)>(subClusterId) at line 274 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i >= $stack17 goto i#9 = "Fail to create a new application." at line 274 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.router.webapp.FederationInterceptorREST: javax.ws.rs.core.Response createNewApplication(javax.servlet.http.HttpServletRequest)> has 3 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = <org.apache.hadoop.yarn.server.router.webapp.FederationInterceptorREST: org.slf4j.Logger LOG> AT LINE 285 with ID [f294388a-d784]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i) AT LINE 285 with ID [f294388a-d784]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("getNewApplication try #{} on SubCluster {}", $stack27, subClusterId) AT LINE 285 with ID [f294388a-d784]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack14 > 0 goto container = reservedContainer at line 449 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer allocate(org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType,org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode,org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.PendingAsk,org.apache.hadoop.yarn.api.records.Container)> has 16 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: applicationAttemptId=") AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke container.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.ContainerId getId()>() AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<org.apache.hadoop.yarn.api.records.ContainerId: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack49) AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" container=") AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke container.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.ContainerId getId()>() AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack52) AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" host=") AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke container.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.NodeId getNodeId()>() AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<org.apache.hadoop.yarn.api.records.NodeId: java.lang.String getHost()>() AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack56) AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type=") AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(type) AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack46.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack60) AT LINE 483 with ID [9cb0fe9d-2a03]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: java.lang.String[] getRunCommand(java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)> has 12 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> f = $stack7 AT LINE 576 with ID [9b30d977-79ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.commons.logging.Log LOG> AT LINE 577 with ID [9b30d977-79ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = interfaceinvoke $stack8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 577 with ID [9b30d977-79ee]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack9 == 0 goto $stack10 = newarray (java.lang.String)[7] AT LINE 577 with ID [9b30d977-79ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.commons.logging.Log LOG> AT LINE 578 with ID [9b30d977-79ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = newarray (java.lang.Object)[2] AT LINE 578 with ID [9b30d977-79ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20[0] = command AT LINE 578 with ID [9b30d977-79ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke f.<java.io.File: boolean exists()>() AT LINE 578 with ID [9b30d977-79ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack24) AT LINE 578 with ID [9b30d977-79ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20[1] = $stack25 AT LINE 578 with ID [9b30d977-79ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("getRunCommand: %s exists:%b", $stack20) AT LINE 578 with ID [9b30d977-79ee]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 578 with ID [9b30d977-79ee]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 33 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.util.IOUtilsClient: void cleanup(org.slf4j.Logger,java.io.Closeable[])>
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: boolean isValidUrl(java.lang.String)>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack6 == 0 goto return at line 3337 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void removeStaleReplicas(java.util.List,org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)> has 3 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger blockStateChangeLog> AT LINE 3340 with ID [e3445280-0d7d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = staticinvoke <org.apache.hadoop.hdfs.protocol.Block: java.lang.String toString(org.apache.hadoop.hdfs.protocol.Block)>(r) AT LINE 3340 with ID [e3445280-0d7d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* Removing stale replica {} of {}", r, $stack12) AT LINE 3340 with ID [e3445280-0d7d]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker.DockerCommandExecutor: org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker.DockerCommandExecutor$DockerContainerStatus getContainerStatus(java.lang.String,org.apache.hadoop.conf.Configuration,org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperationExecutor)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker.DockerCommandExecutor: org.slf4j.Logger LOG> AT LINE 154 with ID [ca773111-5b5d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container Status: ") AT LINE 154 with ID [ca773111-5b5d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke dockerContainerStatus.<org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker.DockerCommandExecutor$DockerContainerStatus: java.lang.String getName()>() AT LINE 154 with ID [ca773111-5b5d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35) AT LINE 154 with ID [ca773111-5b5d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ContainerId: ") AT LINE 154 with ID [ca773111-5b5d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerId) AT LINE 154 with ID [ca773111-5b5d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 154 with ID [ca773111-5b5d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String)>($stack39) AT LINE 154 with ID [ca773111-5b5d]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack11 != 0 goto $stack13 = <org.apache.hadoop.ha.ZKFailoverController: org.slf4j.Logger LOG> at line 833 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if changedState != $stack10 goto $stack11 = this.<org.apache.hadoop.ha.ZKFailoverController: int serviceStateMismatchCount> at line 829 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 != $stack8 goto $stack10 = this.<org.apache.hadoop.ha.ZKFailoverController: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState serviceState> at line 822 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ha.ZKFailoverController: void verifyChangedServiceState(org.apache.hadoop.ha.HAServiceProtocol$HAServiceState)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = <org.apache.hadoop.ha.ZKFailoverController: org.slf4j.Logger LOG> AT LINE 824 with ID [400b1e78-f78c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack41.<org.slf4j.Logger: void debug(java.lang.String)>("rechecking for electability from bad state") AT LINE 824 with ID [400b1e78-f78c]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack10 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> at line 286 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 != 0 goto $stack8 = e instanceof java.io.FileNotFoundException at line 275 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if e != null goto $stack6 = interfaceinvoke volume.<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi: org.apache.hadoop.hdfs.server.datanode.fsdataset.FsDatasetSpi getDataset()>() at line 270 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.VolumeScanner$ScanResultHandler: void handle(org.apache.hadoop.hdfs.protocol.ExtendedBlock,java.io.IOException)> has 6 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 271 with ID [9edc7208-4bad]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = interfaceinvoke volume.<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi: java.lang.String getBasePath()>() AT LINE 271 with ID [9edc7208-4bad]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Successfully scanned {} on {}", block, $stack27) AT LINE 271 with ID [9edc7208-4bad]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 276 with ID [49b98045-e2ad]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = interfaceinvoke volume.<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi: java.lang.String getBasePath()>() AT LINE 276 with ID [49b98045-e2ad]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Volume {}: block {} is no longer in the dataset.", $stack24, block) AT LINE 276 with ID [49b98045-e2ad]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack6 <= 0 goto $stack7 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.PlanQueue: java.util.List childQueues> at line 126 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.PlanQueue: void addChildQueue(org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSQueue)> has 10 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.PlanQueue: java.util.List childQueues> AT LINE 130 with ID [f3fa33d2-b523]
2020-08-25 12:10:04 [INFO] - 	 -> added = interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>(newQueue) AT LINE 130 with ID [f3fa33d2-b523]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.PlanQueue: org.slf4j.Logger LOG> AT LINE 132 with ID [f3fa33d2-b523]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateChildQueues (action: add queue): ") AT LINE 132 with ID [f3fa33d2-b523]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(added) AT LINE 132 with ID [f3fa33d2-b523]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 132 with ID [f3fa33d2-b523]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.PlanQueue: java.lang.String getChildQueuesToPrint()>() AT LINE 132 with ID [f3fa33d2-b523]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17) AT LINE 132 with ID [f3fa33d2-b523]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 132 with ID [f3fa33d2-b523]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 132 with ID [f3fa33d2-b523]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 != 0 goto cur = next at line 289 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if cur == $stack6 goto $stack7 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> at line 287 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: void pruneExpiredPending(long)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> AT LINE 294 with ID [455f9033-36da]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void trace(java.lang.String)>("No entries remaining in the pending list.") AT LINE 294 with ID [455f9033-36da]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack5 == 0 goto $stack7 = <org.apache.hadoop.ha.ShellCommandFencer: org.slf4j.Logger LOG> at line 159 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ha.ShellCommandFencer: java.lang.String tryGetPid(java.lang.Process)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = <org.apache.hadoop.ha.ShellCommandFencer: org.slf4j.Logger LOG> AT LINE 164 with ID [19b47a4b-18be]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to determine pid for ") AT LINE 164 with ID [19b47a4b-18be]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(p) AT LINE 164 with ID [19b47a4b-18be]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since it is not a UNIXProcess") AT LINE 164 with ID [19b47a4b-18be]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 164 with ID [19b47a4b-18be]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void trace(java.lang.String)>($stack11) AT LINE 164 with ID [19b47a4b-18be]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = interfaceinvoke job.<org.apache.hadoop.mapreduce.JobContext: org.apache.hadoop.security.Credentials getCredentials()>() at line 244 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: java.util.List listStatus(org.apache.hadoop.mapreduce.JobContext)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: org.apache.commons.logging.Log LOG> AT LINE 286 with ID [38a65c3d-4c5b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time taken to get FileStatuses: ") AT LINE 286 with ID [38a65c3d-4c5b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> AT LINE 286 with ID [38a65c3d-4c5b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke sw.<org.apache.hadoop.util.StopWatch: long now(java.util.concurrent.TimeUnit)>($stack42) AT LINE 286 with ID [38a65c3d-4c5b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack43) AT LINE 286 with ID [38a65c3d-4c5b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 286 with ID [38a65c3d-4c5b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack45) AT LINE 286 with ID [38a65c3d-4c5b]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.sink.StatsDSink$StatsD: void write(java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack3 = staticinvoke <org.apache.hadoop.metrics2.sink.StatsDSink: org.slf4j.Logger access$000()>() AT LINE 201 with ID [afa7919e-8c47]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Sending metric: {}", msg) AT LINE 201 with ID [afa7919e-8c47]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSParentQueue: org.apache.hadoop.yarn.api.records.Resource demand> at line 128 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack33 == 0 goto (branch) at line 132 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSParentQueue: void updateDemand()> has 26 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSParentQueue: org.apache.commons.logging.Log LOG> AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Counting resource from ") AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke childQueue.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: java.lang.String getName()>() AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack38) AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(toAdd) AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Total resource demand for ") AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSParentQueue: java.lang.String getName()>() AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack43) AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now ") AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSParentQueue: org.apache.hadoop.yarn.api.records.Resource demand> AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack46) AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack36.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack48) AT LINE 133 with ID [275b55c3-a920]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSParentQueue: org.apache.commons.logging.Log LOG> AT LINE 144 with ID [2730ce63-9b21]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The updated demand for ") AT LINE 144 with ID [2730ce63-9b21]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSParentQueue: java.lang.String getName()>() AT LINE 144 with ID [2730ce63-9b21]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19) AT LINE 144 with ID [2730ce63-9b21]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ") AT LINE 144 with ID [2730ce63-9b21]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSParentQueue: org.apache.hadoop.yarn.api.records.Resource demand> AT LINE 144 with ID [2730ce63-9b21]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack22) AT LINE 144 with ID [2730ce63-9b21]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; the max is ") AT LINE 144 with ID [2730ce63-9b21]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSParentQueue: org.apache.hadoop.yarn.api.records.Resource getMaxShare()>() AT LINE 144 with ID [2730ce63-9b21]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack25) AT LINE 144 with ID [2730ce63-9b21]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 144 with ID [2730ce63-9b21]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 144 with ID [2730ce63-9b21]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ipc.ClientCache: void stopClient(org.apache.hadoop.ipc.Client)> has 15 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 97 with ID [8088ac3c-270f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopping client from cache: ") AT LINE 97 with ID [8088ac3c-270f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(client) AT LINE 97 with ID [8088ac3c-270f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 97 with ID [8088ac3c-270f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String)>($stack34) AT LINE 97 with ID [8088ac3c-270f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 103 with ID [36f8490b-e1f1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removing client from cache: ") AT LINE 103 with ID [36f8490b-e1f1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(client) AT LINE 103 with ID [36f8490b-e1f1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 103 with ID [36f8490b-e1f1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack27) AT LINE 103 with ID [36f8490b-e1f1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 110 with ID [c114dad2-f238]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopping actual client because no more references remain: ") AT LINE 110 with ID [c114dad2-f238]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(client) AT LINE 110 with ID [c114dad2-f238]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 110 with ID [c114dad2-f238]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 110 with ID [c114dad2-f238]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 < 0 goto $stack14 = this.<org.apache.hadoop.jmx.JMXJsonServlet: javax.management.MBeanServer mBeanServer> at line 354 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = virtualinvoke attName.<java.lang.String: int indexOf(java.lang.String)>("=") at line 349 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 != 0 goto attName = virtualinvoke attr.<javax.management.MBeanAttributeInfo: java.lang.String getName()>() at line 345 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.jmx.JMXJsonServlet: void writeAttribute(org.codehaus.jackson.JsonGenerator,javax.management.ObjectName,javax.management.MBeanAttributeInfo)>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if attrs != null goto $stack24 = new org.apache.hadoop.nfs.nfs3.response.PATHCONF3Response at line 2031 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.PATHCONF3Request: org.apache.hadoop.nfs.nfs3.request.PATHCONF3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 2007 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache clientCache> at line 2001 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.PATHCONF3Response pathconf(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 2024 with ID [a40e2467-06c6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS PATHCONF fileId: ") AT LINE 2024 with ID [a40e2467-06c6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke e.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 2024 with ID [a40e2467-06c6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack35) AT LINE 2024 with ID [a40e2467-06c6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 2024 with ID [a40e2467-06c6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 2024 with ID [a40e2467-06c6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2024 with ID [a40e2467-06c6]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack39) AT LINE 2024 with ID [a40e2467-06c6]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler$MetaInfo: void writeEvent(org.apache.hadoop.mapreduce.jobhistory.HistoryEvent)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = staticinvoke <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.commons.logging.Log access$200()>() AT LINE 1562 with ID [8e33a148-9efd]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Writing event") AT LINE 1562 with ID [8e33a148-9efd]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = virtualinvoke fileInfo.<org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo: org.apache.hadoop.mapreduce.v2.app.job.Job loadJob()>() at line 177 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if fileInfo != null goto $stack7 = virtualinvoke fileInfo.<org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo: boolean isDeleted()>() at line 175 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.CachedHistoryStorage: org.apache.hadoop.mapreduce.v2.app.job.Job loadJob(org.apache.hadoop.mapreduce.v2.api.records.JobId)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.mapreduce.v2.hs.CachedHistoryStorage: org.apache.commons.logging.Log LOG> AT LINE 170 with ID [d6c2d6e2-da43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking for Job ") AT LINE 170 with ID [d6c2d6e2-da43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(jobId) AT LINE 170 with ID [d6c2d6e2-da43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 170 with ID [d6c2d6e2-da43]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 170 with ID [d6c2d6e2-da43]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataXceiver: void checkAccess(java.io.OutputStream,boolean,org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.security.token.Token,org.apache.hadoop.hdfs.protocol.datatransfer.Op,org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode)> has 9 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 1378 with ID [b4c1af42-e7af]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking block access token for block \'") AT LINE 1378 with ID [b4c1af42-e7af]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke blk.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getBlockId()>() AT LINE 1378 with ID [b4c1af42-e7af]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack20) AT LINE 1378 with ID [b4c1af42-e7af]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' with mode \'") AT LINE 1378 with ID [b4c1af42-e7af]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mode) AT LINE 1378 with ID [b4c1af42-e7af]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 1378 with ID [b4c1af42-e7af]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1378 with ID [b4c1af42-e7af]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 1378 with ID [b4c1af42-e7af]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack10 == 0 goto return in at line 168 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.CryptoUtils: java.io.InputStream wrapIfNecessary(org.apache.hadoop.conf.Configuration,java.io.InputStream,long)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = <org.apache.hadoop.mapreduce.CryptoUtils: org.apache.commons.logging.Log LOG> AT LINE 182 with ID [33d39ac5-25b2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IV read from [") AT LINE 182 with ID [33d39ac5-25b2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64URLSafeString(byte[])>(iv) AT LINE 182 with ID [33d39ac5-25b2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31) AT LINE 182 with ID [33d39ac5-25b2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") AT LINE 182 with ID [33d39ac5-25b2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 182 with ID [33d39ac5-25b2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 182 with ID [33d39ac5-25b2]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore: void handleStoreEvent(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStoreEvent)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore: org.apache.commons.logging.Log LOG> AT LINE 1107 with ID [3d80e01d-3208]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing event of type ") AT LINE 1107 with ID [3d80e01d-3208]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke event.<org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStoreEvent: java.lang.Enum getType()>() AT LINE 1107 with ID [3d80e01d-3208]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack25) AT LINE 1107 with ID [3d80e01d-3208]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1107 with ID [3d80e01d-3208]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 1107 with ID [3d80e01d-3208]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack42 == 0 goto $stack43 = new javax.security.auth.callback.UnsupportedCallbackException at line 669 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto (branch) at line 662 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslRpcClient$SaslClientCallbackHandler: void handle(javax.security.auth.callback.Callback[])> has 17 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 678 with ID [e20d3469-521a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SASL client callback: setting username: ") AT LINE 678 with ID [e20d3469-521a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = this.<org.apache.hadoop.security.SaslRpcClient$SaslClientCallbackHandler: java.lang.String userName> AT LINE 678 with ID [e20d3469-521a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 678 with ID [e20d3469-521a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 678 with ID [e20d3469-521a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String)>($stack36) AT LINE 678 with ID [e20d3469-521a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 682 with ID [15179634-fcc1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = interfaceinvoke $stack20.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 682 with ID [15179634-fcc1]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack21 == 0 goto $stack22 = this.<org.apache.hadoop.security.SaslRpcClient$SaslClientCallbackHandler: char[] userPassword> AT LINE 682 with ID [15179634-fcc1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 683 with ID [15179634-fcc1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>("SASL client callback: setting userPassword") AT LINE 683 with ID [15179634-fcc1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 688 with ID [c98164bc-6861]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SASL client callback: setting realm: ") AT LINE 688 with ID [c98164bc-6861]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke rc.<javax.security.sasl.RealmCallback: java.lang.String getDefaultText()>() AT LINE 688 with ID [c98164bc-6861]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 688 with ID [c98164bc-6861]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 688 with ID [c98164bc-6861]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 688 with ID [c98164bc-6861]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if queue != null goto $stack6 = interfaceinvoke queue.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSQueue: boolean hasAccess(org.apache.hadoop.yarn.api.records.QueueACL,org.apache.hadoop.security.UserGroupInformation)>(acl, callerUGI) at line 1872 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: boolean checkAccess(org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.yarn.api.records.QueueACL,java.lang.String)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1874 with ID [5e9de719-33f2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACL not found for queue access-type ") AT LINE 1874 with ID [5e9de719-33f2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(acl) AT LINE 1874 with ID [5e9de719-33f2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for queue ") AT LINE 1874 with ID [5e9de719-33f2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(queueName) AT LINE 1874 with ID [5e9de719-33f2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1874 with ID [5e9de719-33f2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 1874 with ID [5e9de719-33f2]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: void load()> has 16 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = newarray (java.lang.Object)[5] AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl this$0> AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: java.lang.String access$400(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl)>($stack7) AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6[0] = $stack11 AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.lang.String bpid> AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6[1] = $stack12 AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.lang.String name> AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6[2] = $stack13 AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke file.<java.io.File: java.io.File getAbsoluteFile()>() AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6[3] = $stack15 AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.codehaus.jackson.map.ObjectWriter access$1000()>() AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorState state> AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<org.codehaus.jackson.map.ObjectWriter: java.lang.String writeValueAsString(java.lang.Object)>($stack18) AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6[4] = $stack19 AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("load({}, {}): loaded iterator {} from {}: {}", $stack6) AT LINE 825 with ID [bfd122e4-002e]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack26 == 0 goto staticinvoke <org.junit.Assert: void assertTrue(boolean)>(exceptionThrown) at line 766 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testRURReplicas()> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 757 with ID [e352e88a-01e1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 757 with ID [e352e88a-01e1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 757 with ID [e352e88a-01e1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack36) AT LINE 757 with ID [e352e88a-01e1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 757 with ID [e352e88a-01e1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack38) AT LINE 757 with ID [e352e88a-01e1]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if attrs != null goto $stack32 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.conf.NfsConfiguration config> at line 1893 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.FSSTAT3Request: org.apache.hadoop.nfs.nfs3.request.FSSTAT3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 1867 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack18 != 0 goto $stack19 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache clientCache> at line 1861 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.FSSTAT3Response fsstat(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 1882 with ID [665eb72e-77fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS FSSTAT fileId: ") AT LINE 1882 with ID [665eb72e-77fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke e#2.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 1882 with ID [665eb72e-77fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack55) AT LINE 1882 with ID [665eb72e-77fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 1882 with ID [665eb72e-77fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 1882 with ID [665eb72e-77fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1882 with ID [665eb72e-77fa]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack53.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack59) AT LINE 1882 with ID [665eb72e-77fa]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 == 0 goto return 0 at line 121 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack10 = virtualinvoke this.<org.apache.hadoop.mapred.JobACLsManager: boolean isMRAdmin(org.apache.hadoop.security.UserGroupInformation)>(callerUGI) at line 113 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.JobACLsManager: boolean checkAccess(org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.mapreduce.JobACL,java.lang.String,org.apache.hadoop.security.authorize.AccessControlList)> has 11 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = <org.apache.hadoop.mapred.JobACLsManager: org.apache.commons.logging.Log LOG> AT LINE 109 with ID [32522a74-c7fd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkAccess job acls, jobOwner: ") AT LINE 109 with ID [32522a74-c7fd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(jobOwner) AT LINE 109 with ID [32522a74-c7fd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" jobacl: ") AT LINE 109 with ID [32522a74-c7fd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke jobOperation.<org.apache.hadoop.mapreduce.JobACL: java.lang.String toString()>() AT LINE 109 with ID [32522a74-c7fd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19) AT LINE 109 with ID [32522a74-c7fd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" user: ") AT LINE 109 with ID [32522a74-c7fd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke callerUGI.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getShortUserName()>() AT LINE 109 with ID [32522a74-c7fd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) AT LINE 109 with ID [32522a74-c7fd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 109 with ID [32522a74-c7fd]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 109 with ID [32522a74-c7fd]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack30 != 0 goto $stack12 = this.<org.apache.hadoop.net.NetworkTopology: org.apache.hadoop.net.InnerNode clusterMap> at line 149 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack40 == newDepth goto rack = virtualinvoke this.<org.apache.hadoop.net.NetworkTopology: org.apache.hadoop.net.Node getNodeForNetworkLocation(org.apache.hadoop.net.Node)>(node) at line 140 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = this.<org.apache.hadoop.net.NetworkTopology: int depthOfAllLeaves> at line 127 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if node != null goto $stack5 = interfaceinvoke node.<org.apache.hadoop.net.Node: java.lang.String getNetworkLocation()>() at line 123 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.net.NetworkTopology: void add(org.apache.hadoop.net.Node)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.net.NetworkTopology: org.slf4j.Logger LOG> AT LINE 155 with ID [17b5ab5c-d9ca]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("NetworkTopology became:\n{}", this) AT LINE 155 with ID [17b5ab5c-d9ca]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack40 == 0 goto (branch) at line 460 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if groupDNAttr != null goto $stack38 = new java.util.ArrayList at line 453 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack16 != 0 goto $stack17 = interfaceinvoke results.<javax.naming.NamingEnumeration: java.lang.Object nextElement()>() at line 435 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.LdapGroupsMapping: java.util.List doGetGroups(java.lang.String,int)> has 14 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = <org.apache.hadoop.security.LdapGroupsMapping: org.slf4j.Logger LOG> AT LINE 437 with ID [d73f54a9-d164]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doGetGroups(") AT LINE 437 with ID [d73f54a9-d164]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 437 with ID [d73f54a9-d164]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") returned no groups because the ") AT LINE 437 with ID [d73f54a9-d164]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user is not found.") AT LINE 437 with ID [d73f54a9-d164]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 437 with ID [d73f54a9-d164]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack61.<org.slf4j.Logger: void debug(java.lang.String)>($stack66) AT LINE 437 with ID [d73f54a9-d164]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.security.LdapGroupsMapping: org.slf4j.Logger LOG> AT LINE 474 with ID [06982d23-c7d8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doGetGroups(") AT LINE 474 with ID [06982d23-c7d8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 474 with ID [06982d23-c7d8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") returned ") AT LINE 474 with ID [06982d23-c7d8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(groups) AT LINE 474 with ID [06982d23-c7d8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 474 with ID [06982d23-c7d8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack28) AT LINE 474 with ID [06982d23-c7d8]
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.datanode.DataXceiver: void readBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.security.token.Token,java.lang.String,long,long,boolean,org.apache.hadoop.hdfs.server.datanode.CachingStrategy)>
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.TestMetricsConfig: void testInstances(org.apache.hadoop.metrics2.impl.MetricsConfig)> has 17 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = <org.apache.hadoop.metrics2.impl.TestMetricsConfig: org.slf4j.Logger LOG> AT LINE 83 with ID [eb6903ad-000e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- t1 instance i1:") AT LINE 83 with ID [eb6903ad-000e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(t1i1) AT LINE 83 with ID [eb6903ad-000e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 83 with ID [eb6903ad-000e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void debug(java.lang.String)>($stack33) AT LINE 83 with ID [eb6903ad-000e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = <org.apache.hadoop.metrics2.impl.TestMetricsConfig: org.slf4j.Logger LOG> AT LINE 84 with ID [bb859f38-3cb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- t1 instance 42:") AT LINE 84 with ID [bb859f38-3cb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(t1i42) AT LINE 84 with ID [bb859f38-3cb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 84 with ID [bb859f38-3cb1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String)>($stack38) AT LINE 84 with ID [bb859f38-3cb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = <org.apache.hadoop.metrics2.impl.TestMetricsConfig: org.slf4j.Logger LOG> AT LINE 85 with ID [94e8c49a-db00]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- t2 instance i1:") AT LINE 85 with ID [94e8c49a-db00]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(t2i1) AT LINE 85 with ID [94e8c49a-db00]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 85 with ID [94e8c49a-db00]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack40.<org.slf4j.Logger: void debug(java.lang.String)>($stack43) AT LINE 85 with ID [94e8c49a-db00]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = <org.apache.hadoop.metrics2.impl.TestMetricsConfig: org.slf4j.Logger LOG> AT LINE 98 with ID [2805e893-5b24]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack50.<org.slf4j.Logger: void debug(java.lang.String)>("asserting foo == default foo") AT LINE 98 with ID [2805e893-5b24]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: org.apache.hadoop.hdfs.protocol.BlockLocalPathInfo getBlockPathInfo(org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.protocol.DatanodeInfo,org.apache.hadoop.conf.Configuration,int,org.apache.hadoop.security.token.Token,boolean,org.apache.hadoop.fs.StorageType)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: org.slf4j.Logger LOG> AT LINE 298 with ID [0d6328b6-d264]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Cached location of block {} as {}", blk, pathinfo) AT LINE 298 with ID [0d6328b6-d264]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if reqMap != null goto $stack10 = interfaceinvoke reqMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(capability) at line 487 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: void decResourceRequest(org.apache.hadoop.yarn.api.records.Priority,java.lang.String,org.apache.hadoop.yarn.api.records.Resource)> has 44 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: org.apache.commons.logging.Log LOG> AT LINE 492 with ID [4f103a9c-5169]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not decrementing resource as ") AT LINE 492 with ID [4f103a9c-5169]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourceName) AT LINE 492 with ID [4f103a9c-5169]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not present in request table") AT LINE 492 with ID [4f103a9c-5169]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 492 with ID [4f103a9c-5169]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack71.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack75) AT LINE 492 with ID [4f103a9c-5169]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: org.apache.commons.logging.Log LOG> AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BEFORE decResourceRequest: applicationId=") AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = this.<org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: org.apache.hadoop.yarn.api.records.ApplicationId applicationId> AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<org.apache.hadoop.yarn.api.records.ApplicationId: int getId()>() AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack52) AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" priority=") AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke priority.<org.apache.hadoop.yarn.api.records.Priority: int getPriority()>() AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack55) AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resourceName=") AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourceName) AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numContainers=") AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke remoteRequest.<org.apache.hadoop.yarn.api.records.ResourceRequest: int getNumContainers()>() AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack60) AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #asks=") AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = this.<org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: java.util.Set ask> AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = interfaceinvoke $stack63.<java.util.Set: int size()>() AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack64) AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack49.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack66) AT LINE 500 with ID [084a85f5-b279]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: org.apache.commons.logging.Log LOG> AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AFTER decResourceRequest: applicationId=") AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = this.<org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: org.apache.hadoop.yarn.api.records.ApplicationId applicationId> AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<org.apache.hadoop.yarn.api.records.ApplicationId: int getId()>() AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack21) AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" priority=") AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke priority.<org.apache.hadoop.yarn.api.records.Priority: int getPriority()>() AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24) AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resourceName=") AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourceName) AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numContainers=") AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke remoteRequest.<org.apache.hadoop.yarn.api.records.ResourceRequest: int getNumContainers()>() AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack29) AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #asks=") AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = this.<org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: java.util.Set ask> AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = interfaceinvoke $stack32.<java.util.Set: int size()>() AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack33) AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 527 with ID [d596e8c6-b726]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack38 >= 18 goto $stack5 = this.<org.apache.hadoop.mapred.BackupStore$MemoryCache: org.apache.hadoop.io.DataOutputBuffer dataOut> at line 514 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack3 != 0 goto $stack4 = <org.apache.hadoop.mapred.BackupStore$MemoryCache: boolean $assertionsDisabled> at line 490 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.BackupStore$MemoryCache: void createInMemorySegment()> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = staticinvoke <org.apache.hadoop.mapred.BackupStore: org.apache.commons.logging.Log access$400()>() AT LINE 512 with ID [798e578b-0f0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added Memory Segment to List. List Size is ") AT LINE 512 with ID [798e578b-0f0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.mapred.BackupStore$MemoryCache: org.apache.hadoop.mapred.BackupStore this$0> AT LINE 512 with ID [798e578b-0f0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = $stack31.<org.apache.hadoop.mapred.BackupStore: java.util.List segmentList> AT LINE 512 with ID [798e578b-0f0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = interfaceinvoke $stack32.<java.util.List: int size()>() AT LINE 512 with ID [798e578b-0f0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack33) AT LINE 512 with ID [798e578b-0f0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 512 with ID [798e578b-0f0e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 512 with ID [798e578b-0f0e]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = virtualinvoke b.<org.apache.hadoop.hdfs.server.blockmanagement.BlockToMarkCorrupt: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getCorrupted()>() at line 1430 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void markBlockAsCorrupt(org.apache.hadoop.hdfs.server.blockmanagement.BlockToMarkCorrupt,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1431 with ID [2dc4ad43-c239]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack53.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("BLOCK markBlockAsCorrupt: {} cannot be marked as corrupt as it does not belong to any file", b) AT LINE 1431 with ID [2dc4ad43-c239]
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.server.timeline.LogInfo: long parsePath(org.apache.hadoop.yarn.server.timeline.TimelineDataManager,org.apache.hadoop.fs.Path,boolean,org.codehaus.jackson.JsonFactory,org.codehaus.jackson.map.ObjectMapper,org.apache.hadoop.fs.FileSystem)>
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: void copyFile(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.String)> has 12 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.commons.logging.Log LOG> AT LINE 594 with ID [d734f787-42b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = interfaceinvoke $stack4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 594 with ID [d734f787-42b3]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack5 == 0 goto staticinvoke <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$Native$Elevated: void copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,boolean)>(src, dst, 1) AT LINE 594 with ID [d734f787-42b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.commons.logging.Log LOG> AT LINE 595 with ID [d734f787-42b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = newarray (java.lang.Object)[3] AT LINE 595 with ID [d734f787-42b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke src.<org.apache.hadoop.fs.Path: java.lang.String toString()>() AT LINE 595 with ID [d734f787-42b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7[0] = $stack11 AT LINE 595 with ID [d734f787-42b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke dst.<org.apache.hadoop.fs.Path: java.lang.String toString()>() AT LINE 595 with ID [d734f787-42b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7[1] = $stack13 AT LINE 595 with ID [d734f787-42b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7[2] = owner AT LINE 595 with ID [d734f787-42b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("copyFile: %s -> %s owner:%s", $stack7) AT LINE 595 with ID [d734f787-42b3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 595 with ID [d734f787-42b3]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack33 != null goto $stack32 = onRetryBlock[0] at line 2566 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if r != null goto $stack25 = this.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager> at line 2563 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.LocatedBlock getAdditionalBlock(java.lang.String,long,java.lang.String,org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.protocol.DatanodeInfo[],java.lang.String[],java.util.EnumSet)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 2547 with ID [ea32f7a5-cdc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = newarray (java.lang.Object)[3] AT LINE 2547 with ID [ea32f7a5-cdc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16[0] = src AT LINE 2547 with ID [ea32f7a5-cdc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(fileId) AT LINE 2547 with ID [ea32f7a5-cdc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16[1] = $stack20 AT LINE 2547 with ID [ea32f7a5-cdc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16[2] = clientName AT LINE 2547 with ID [ea32f7a5-cdc7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* getAdditionalBlock: {} inodeId {} for {}", $stack16) AT LINE 2547 with ID [ea32f7a5-cdc7]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto return allProcs at line 124 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.util.Map createProcessInfo(java.lang.String)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = <org.apache.hadoop.yarn.util.WindowsBasedProcessTree: org.apache.commons.logging.Log LOG> AT LINE 139 with ID [b6a4bc20-61f7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected split length of proc info to be 4. Got ") AT LINE 139 with ID [b6a4bc20-61f7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = lengthof procInfo AT LINE 139 with ID [b6a4bc20-61f7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack20) AT LINE 139 with ID [b6a4bc20-61f7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 139 with ID [b6a4bc20-61f7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 139 with ID [b6a4bc20-61f7]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 == 0 goto specialinvoke this.<org.apache.hadoop.service.AbstractService: void serviceInit(org.apache.hadoop.conf.Configuration)>(conf) at line 107 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.service.CompositeService: void serviceInit(org.apache.hadoop.conf.Configuration)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.service.CompositeService: org.slf4j.Logger LOG> AT LINE 105 with ID [69b9d48a-5605]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke this.<org.apache.hadoop.service.CompositeService: java.lang.String getName()>() AT LINE 105 with ID [69b9d48a-5605]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 105 with ID [69b9d48a-5605]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": initing services, size=") AT LINE 105 with ID [69b9d48a-5605]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = interfaceinvoke services.<java.util.List: int size()>() AT LINE 105 with ID [69b9d48a-5605]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack17) AT LINE 105 with ID [69b9d48a-5605]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 105 with ID [69b9d48a-5605]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 105 with ID [69b9d48a-5605]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack20 == 0 goto return 0 at line 169 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack16 != 0 goto (branch) at line 163 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 != 0 goto owner = virtualinvoke domain.<org.apache.hadoop.yarn.api.records.timeline.TimelineDomain: java.lang.String getOwner()>() at line 157 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.security.TimelineACLsManager: boolean checkAccess(org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.yarn.api.records.timeline.TimelineDomain)> has 11 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = <org.apache.hadoop.yarn.server.timeline.security.TimelineACLsManager: org.slf4j.Logger LOG> AT LINE 152 with ID [d8412530-d2c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Verifying the access of ") AT LINE 152 with ID [d8412530-d2c0]
2020-08-25 12:10:04 [INFO] - 	 -> if callerUGI != null goto $stack29 = virtualinvoke callerUGI.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getShortUserName()>() AT LINE 152 with ID [d8412530-d2c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = null AT LINE 157 with ID [d8412530-d2c0]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29)] AT LINE 157 with ID [d8412530-d2c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke callerUGI.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getShortUserName()>() AT LINE 152 with ID [d8412530-d2c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 152 with ID [d8412530-d2c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on the timeline domain ") AT LINE 152 with ID [d8412530-d2c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(domain) AT LINE 152 with ID [d8412530-d2c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 152 with ID [d8412530-d2c0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String)>($stack33) AT LINE 152 with ID [d8412530-d2c0]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void storeContainerUpdateToken(org.apache.hadoop.yarn.api.records.ContainerId,org.apache.hadoop.yarn.security.ContainerTokenIdentifier)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 459 with ID [ac7e6828-98df]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storeContainerUpdateToken: containerId=") AT LINE 459 with ID [ac7e6828-98df]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 459 with ID [ac7e6828-98df]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 459 with ID [ac7e6828-98df]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String)>($stack37) AT LINE 459 with ID [ac7e6828-98df]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: void activate(org.apache.hadoop.conf.Configuration)> has 11 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger LOG> AT LINE 192 with ID [f75f7b8b-8613]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = newarray (java.lang.Object)[4] AT LINE 192 with ID [f75f7b8b-8613]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(intervalSecs) AT LINE 192 with ID [f75f7b8b-8613]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19[0] = $stack23 AT LINE 192 with ID [f75f7b8b-8613]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(blocksPerInterval) AT LINE 192 with ID [f75f7b8b-8613]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19[1] = $stack25 AT LINE 192 with ID [f75f7b8b-8613]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(nodesPerInterval) AT LINE 192 with ID [f75f7b8b-8613]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19[2] = $stack27 AT LINE 192 with ID [f75f7b8b-8613]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(maxConcurrentTrackedNodes) AT LINE 192 with ID [f75f7b8b-8613]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19[3] = $stack29 AT LINE 192 with ID [f75f7b8b-8613]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Activating DatanodeAdminManager with interval {} seconds, {} max blocks per interval, {} max concurrently tracked nodes.", $stack19) AT LINE 192 with ID [f75f7b8b-8613]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if connection != null goto return connection at line 257 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.RouterRpcClient: org.apache.hadoop.hdfs.server.federation.router.ConnectionContext getConnection(org.apache.hadoop.security.UserGroupInformation,java.lang.String,java.lang.String,java.lang.Class)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.server.federation.router.RouterRpcClient: org.slf4j.Logger LOG> AT LINE 251 with ID [5026d4e0-e7e6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = newarray (java.lang.Object)[3] AT LINE 251 with ID [5026d4e0-e7e6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke ugi.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getUserName()>() AT LINE 251 with ID [5026d4e0-e7e6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9[0] = $stack13 AT LINE 251 with ID [5026d4e0-e7e6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9[1] = rpcAddress AT LINE 251 with ID [5026d4e0-e7e6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9[2] = connection AT LINE 251 with ID [5026d4e0-e7e6]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("User {} NN {} is using connection {}", $stack9) AT LINE 251 with ID [5026d4e0-e7e6]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack26 != 0 goto $stack6 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> at line 2611 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void queueReportedBlock(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState,java.lang.String)> has 13 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Queueing reported block ") AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in state ") AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(reportedState) AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from datanode ") AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke storageInfo.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor getDatanodeDescriptor()>() AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack16) AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for later processing because ") AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reason) AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 2605 with ID [04d3446f-1f82]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 <= 1023 goto (branch) at line 200 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack8 = <org.apache.hadoop.oncrpc.RpcProgram: org.slf4j.Logger LOG> at line 198 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.oncrpc.RpcProgram: boolean doPortMonitoring(java.net.SocketAddress)> has 5 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = <org.apache.hadoop.oncrpc.RpcProgram: org.slf4j.Logger LOG> AT LINE 193 with ID [70f2467d-cbe8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = interfaceinvoke $stack4.<org.slf4j.Logger: boolean isTraceEnabled()>() AT LINE 193 with ID [70f2467d-cbe8]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack5 == 0 goto $stack6 = remoteAddress instanceof java.net.InetSocketAddress AT LINE 193 with ID [70f2467d-cbe8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.oncrpc.RpcProgram: org.slf4j.Logger LOG> AT LINE 194 with ID [70f2467d-cbe8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void trace(java.lang.String)>("Will not allow connections from unprivileged ports. Checking for valid client port...") AT LINE 194 with ID [70f2467d-cbe8]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 != 0 goto $stack8 = interfaceinvoke LOG.<org.apache.commons.logging.Log: boolean isTraceEnabled()>() at line 399 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.RMServerUtils: org.apache.hadoop.security.UserGroupInformation verifyAdminAccess(org.apache.hadoop.yarn.security.YarnAuthorizationProvider,java.lang.String,java.lang.String,org.apache.commons.logging.Log)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(method) AT LINE 411 with ID [20e16ad3-c118]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invoked by user ") AT LINE 411 with ID [20e16ad3-c118]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke user.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getShortUserName()>() AT LINE 411 with ID [20e16ad3-c118]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 411 with ID [20e16ad3-c118]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 411 with ID [20e16ad3-c118]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke LOG.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack14) AT LINE 411 with ID [20e16ad3-c118]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack40 != $stack41 goto $stack42 = this.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeImpl: java.util.Set launchedContainers> at line 1391 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack27 == 0 goto (branch) at line 1417 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack16 = interfaceinvoke newlyLaunchedContainers.<java.util.List: int size()>() at line 1415 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack53 != 0 goto (branch) at line 1393 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeImpl: void handleContainerStatus(java.util.List)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = <org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeImpl: org.apache.commons.logging.Log LOG> AT LINE 1383 with ID [28032f0d-1c54]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container ") AT LINE 1383 with ID [28032f0d-1c54]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 1383 with ID [28032f0d-1c54]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is the first container get launched for application ") AT LINE 1383 with ID [28032f0d-1c54]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerAppId) AT LINE 1383 with ID [28032f0d-1c54]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1383 with ID [28032f0d-1c54]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack65.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack70) AT LINE 1383 with ID [28032f0d-1c54]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = interfaceinvoke ask.<java.util.List: boolean isEmpty()>() at line 981 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack14 != 0 goto virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: void handleContainerUpdates(org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ContainerUpdates)>(application, updateRequests) at line 958 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if application != null goto $stack13 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() at line 947 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.hadoop.yarn.server.resourcemanager.scheduler.Allocation allocate(org.apache.hadoop.yarn.api.records.ApplicationAttemptId,java.util.List,java.util.List,java.util.List,java.util.List,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ContainerUpdates)> has 10 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 988 with ID [79fd1ae7-e030]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: pre-update ") AT LINE 988 with ID [79fd1ae7-e030]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationAttemptId) AT LINE 988 with ID [79fd1ae7-e030]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ask size =") AT LINE 988 with ID [79fd1ae7-e030]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = interfaceinvoke ask.<java.util.List: int size()>() AT LINE 988 with ID [79fd1ae7-e030]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack46) AT LINE 988 with ID [79fd1ae7-e030]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 988 with ID [79fd1ae7-e030]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack48) AT LINE 988 with ID [79fd1ae7-e030]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1000 with ID [db6cbe50-7317]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack39.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("allocate: post-update") AT LINE 1000 with ID [db6cbe50-7317]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetAsyncDiskService$ReplicaFileDeleteTask: boolean moveFiles()> has 12 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetAsyncDiskService: org.apache.commons.logging.Log LOG> AT LINE 286 with ID [0e3e39d0-abbc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Moving files ") AT LINE 286 with ID [0e3e39d0-abbc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetAsyncDiskService$ReplicaFileDeleteTask: java.io.File blockFile> AT LINE 286 with ID [0e3e39d0-abbc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.io.File: java.lang.String getName()>() AT LINE 286 with ID [0e3e39d0-abbc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 286 with ID [0e3e39d0-abbc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") AT LINE 286 with ID [0e3e39d0-abbc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetAsyncDiskService$ReplicaFileDeleteTask: java.io.File metaFile> AT LINE 286 with ID [0e3e39d0-abbc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.io.File: java.lang.String getName()>() AT LINE 286 with ID [0e3e39d0-abbc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33) AT LINE 286 with ID [0e3e39d0-abbc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to trash.") AT LINE 286 with ID [0e3e39d0-abbc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 286 with ID [0e3e39d0-abbc]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack36) AT LINE 286 with ID [0e3e39d0-abbc]
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.util.concurrent.AsyncGetFuture: void callAsyncGet(long,java.util.concurrent.TimeUnit)>
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS handleSpecialWait(boolean,long,org.jboss.netty.channel.Channel,int,org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes)> has 5 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 872 with ID [87a9352c-fb03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = interfaceinvoke $stack8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 872 with ID [87a9352c-fb03]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack9 == 0 goto $stack10 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS COMMIT_SPECIAL_WAIT> AT LINE 872 with ID [87a9352c-fb03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 873 with ID [87a9352c-fb03]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("return COMMIT_SPECIAL_WAIT") AT LINE 873 with ID [87a9352c-fb03]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FileJournalManager: void selectInputStreams(java.util.Collection,long,boolean)> has 15 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.server.namenode.FileJournalManager: org.apache.commons.logging.Log LOG> AT LINE 343 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 343 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": selecting input streams starting at ") AT LINE 343 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fromTxId) AT LINE 343 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> if inProgressOk == 0 goto $stack28 = " (excluding inProgress) " AT LINE 343 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = " (inProgress ok) " AT LINE 349 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28)] AT LINE 349 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = " (excluding inProgress) " AT LINE 349 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28) AT LINE 343 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from among ") AT LINE 343 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = interfaceinvoke elfs.<java.util.List: int size()>() AT LINE 343 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack19) AT LINE 343 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" candidate file(s)") AT LINE 343 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 343 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 343 with ID [e4369113-8c33]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficController: int getClassIdFromFileContents(java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficController: org.slf4j.Logger LOG> AT LINE 471 with ID [4d7404a1-2281]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClassId hex string : ") AT LINE 471 with ID [4d7404a1-2281]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(classIdStr) AT LINE 471 with ID [4d7404a1-2281]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 471 with ID [4d7404a1-2281]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 471 with ID [4d7404a1-2281]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void updateApplicationStateInternal(org.apache.hadoop.yarn.api.records.ApplicationId,org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationStateData)> has 16 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 869 with ID [e7a24082-d6f4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing final state info for app: ") AT LINE 869 with ID [e7a24082-d6f4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 869 with ID [e7a24082-d6f4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at: ") AT LINE 869 with ID [e7a24082-d6f4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodeUpdatePath) AT LINE 869 with ID [e7a24082-d6f4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 869 with ID [e7a24082-d6f4]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack39) AT LINE 869 with ID [e7a24082-d6f4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 882 with ID [63d4d9e3-60e7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Path ") AT LINE 882 with ID [63d4d9e3-60e7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodeUpdatePath) AT LINE 882 with ID [63d4d9e3-60e7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 882 with ID [63d4d9e3-60e7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 882 with ID [63d4d9e3-60e7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" didn\'t ") AT LINE 882 with ID [63d4d9e3-60e7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exist. Creating a new znode to update the application state.") AT LINE 882 with ID [63d4d9e3-60e7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 882 with ID [63d4d9e3-60e7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 882 with ID [63d4d9e3-60e7]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack39 != 0 goto $stack40 = newarray (org.apache.hadoop.hdfs.server.protocol.DatanodeCommand)[0] at line 1643 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack71 == 0 goto $stack38 = this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.blockmanagement.SlowDiskTracker slowDiskTracker> at line 1627 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if e#2 == null goto $stack30 = new java.util.ArrayList at line 1590 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack28 == 0 goto e#2 = specialinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.protocol.BlockRecoveryCommand getBlockRecoveryCommand(java.lang.String,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)>(blockPoolId, nodeinfo) at line 1583 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack25 != 0 goto $stack26 = this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.blockmanagement.HeartbeatManager heartbeatManager> at line 1576 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack108 == 0 goto (branch) at line 1576 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand[] handleHeartbeat(org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration,org.apache.hadoop.hdfs.server.protocol.StorageReport[],java.lang.String,long,long,int,int,int,org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary,org.apache.hadoop.hdfs.server.protocol.SlowPeerReports,org.apache.hadoop.hdfs.server.protocol.SlowDiskReports)> has 15 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack77 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.commons.logging.Log LOG> AT LINE 1624 with ID [6b7979f7-a912]
2020-08-25 12:10:04 [INFO] - 	 -> $stack78 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DataNode ") AT LINE 1624 with ID [6b7979f7-a912]
2020-08-25 12:10:04 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nodeReg) AT LINE 1624 with ID [6b7979f7-a912]
2020-08-25 12:10:04 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reported slow peers: ") AT LINE 1624 with ID [6b7979f7-a912]
2020-08-25 12:10:04 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(slowPeersMap) AT LINE 1624 with ID [6b7979f7-a912]
2020-08-25 12:10:04 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1624 with ID [6b7979f7-a912]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack77.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack82) AT LINE 1624 with ID [6b7979f7-a912]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.commons.logging.Log LOG> AT LINE 1636 with ID [62914811-b568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DataNode ") AT LINE 1636 with ID [62914811-b568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nodeReg) AT LINE 1636 with ID [62914811-b568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reported slow disks: ") AT LINE 1636 with ID [62914811-b568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke slowDisks.<org.apache.hadoop.hdfs.server.protocol.SlowDiskReports: java.util.Map getSlowDisks()>() AT LINE 1636 with ID [62914811-b568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack57) AT LINE 1636 with ID [62914811-b568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1636 with ID [62914811-b568]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack53.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack59) AT LINE 1636 with ID [62914811-b568]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack10 <= 0 goto virtualinvoke this.<org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall: void processRetryInfo()>() at line 270 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall: org.apache.hadoop.io.retry.CallReturn processWaitTimeAndRetryInfo()> has 4 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = <org.apache.hadoop.io.retry.AsyncCallHandler: org.slf4j.Logger LOG> AT LINE 265 with ID [a2258756-66ad]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = virtualinvoke this.<org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall: int getCallId()>() AT LINE 265 with ID [a2258756-66ad]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack6) AT LINE 265 with ID [a2258756-66ad]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("#{} processRetryInfo: waitTime={}", $stack7, waitTime) AT LINE 265 with ID [a2258756-66ad]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack19 != 0 goto $stack5 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: java.util.Map excessReplicateMap> at line 3257 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void addToExcessReplicate(org.apache.hadoop.hdfs.protocol.DatanodeInfo,org.apache.hadoop.hdfs.protocol.Block)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 3259 with ID [fc3ac010-c07a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* addToExcessReplicate: ({}, {}) is added to excessReplicateMap", dn, block) AT LINE 3259 with ID [fc3ac010-c07a]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.webapp.Dispatcher: void removeCookie(javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = <org.apache.hadoop.yarn.webapp.Dispatcher: org.slf4j.Logger LOG> AT LINE 209 with ID [453382c0-2f1c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("removing cookie {} on {}", name, path) AT LINE 209 with ID [453382c0-2f1c]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if nodeLabelsMappingProvider != null goto $stack5 = <org.apache.hadoop.yarn.server.resourcemanager.nodelabels.RMDelegatedNodeLabelsUpdater: org.apache.commons.logging.Log LOG> at line 189 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.nodelabels.RMDelegatedNodeLabelsUpdater: org.apache.hadoop.yarn.server.resourcemanager.nodelabels.RMNodeLabelsMappingProvider createRMNodeLabelsMappingProvider(org.apache.hadoop.conf.Configuration)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.resourcemanager.nodelabels.RMDelegatedNodeLabelsUpdater: org.apache.commons.logging.Log LOG> AT LINE 195 with ID [a4b1b4a6-e87b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RM Node labels mapping provider class is : ") AT LINE 195 with ID [a4b1b4a6-e87b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke nodeLabelsMappingProvider.<java.lang.Object: java.lang.Class getClass()>() AT LINE 195 with ID [a4b1b4a6-e87b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.Class: java.lang.String toString()>() AT LINE 195 with ID [a4b1b4a6-e87b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 195 with ID [a4b1b4a6-e87b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 195 with ID [a4b1b4a6-e87b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 195 with ID [a4b1b4a6-e87b]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack24 == 0 goto $stack25 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState FINALIZED> at line 2579 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if c == null goto $stack24 = specialinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean isBlockUnderConstruction(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState,org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState)>(storedBlock, ucState, reportedState) at line 2563 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack22 == 0 goto c = specialinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockToMarkCorrupt checkReplicaCorrupt(org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState,org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)>(block, reportedState, storedBlock, ucState, dn) at line 2557 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if storedBlock != null goto ucState = virtualinvoke storedBlock.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState getBlockUCState()>() at line 2543 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack49 == 0 goto $stack16 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.BlocksMap blocksMap> at line 2547 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo processReportedBlock(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection)> has 17 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 2530 with ID [20f7ac32-1a57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reported block ") AT LINE 2530 with ID [20f7ac32-1a57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 2530 with ID [20f7ac32-1a57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ") AT LINE 2530 with ID [20f7ac32-1a57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dn) AT LINE 2530 with ID [20f7ac32-1a57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size ") AT LINE 2530 with ID [20f7ac32-1a57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke block.<org.apache.hadoop.hdfs.protocol.Block: long getNumBytes()>() AT LINE 2530 with ID [20f7ac32-1a57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack60) AT LINE 2530 with ID [20f7ac32-1a57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" replicaState = ") AT LINE 2530 with ID [20f7ac32-1a57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(reportedState) AT LINE 2530 with ID [20f7ac32-1a57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2530 with ID [20f7ac32-1a57]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack54.<org.slf4j.Logger: void debug(java.lang.String)>($stack64) AT LINE 2530 with ID [20f7ac32-1a57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 2553 with ID [3f704b46-ffd8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("In memory blockUCState = ") AT LINE 2553 with ID [3f704b46-ffd8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(ucState) AT LINE 2553 with ID [3f704b46-ffd8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2553 with ID [3f704b46-ffd8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack40.<org.slf4j.Logger: void debug(java.lang.String)>($stack43) AT LINE 2553 with ID [3f704b46-ffd8]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.util.concurrent.HadoopScheduledThreadPoolExecutor: void beforeExecute(java.lang.Thread,java.lang.Runnable)> has 11 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = <org.apache.hadoop.util.concurrent.HadoopScheduledThreadPoolExecutor: org.slf4j.Logger LOG> AT LINE 61 with ID [7076e4e6-d5e4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("beforeExecute in thread: ") AT LINE 61 with ID [7076e4e6-d5e4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 61 with ID [7076e4e6-d5e4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.Thread: java.lang.String getName()>() AT LINE 61 with ID [7076e4e6-d5e4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9) AT LINE 61 with ID [7076e4e6-d5e4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", runnable type: ") AT LINE 61 with ID [7076e4e6-d5e4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke r.<java.lang.Object: java.lang.Class getClass()>() AT LINE 61 with ID [7076e4e6-d5e4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.Class: java.lang.String getName()>() AT LINE 61 with ID [7076e4e6-d5e4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13) AT LINE 61 with ID [7076e4e6-d5e4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 61 with ID [7076e4e6-d5e4]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 61 with ID [7076e4e6-d5e4]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if atEof != 0 goto return segments at line 2950 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i >= $stack30 goto (branch) at line 2946 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if atEof == 0 goto $stack17 = new org.apache.hadoop.io.SequenceFile$Reader at line 2937 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.io.SequenceFile$Sorter$SortPass: int run(boolean)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = staticinvoke <org.apache.hadoop.io.SequenceFile: org.slf4j.Logger access$500()>() AT LINE 2996 with ID [a99d2b5c-3ad3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flushing segment ") AT LINE 2996 with ID [a99d2b5c-3ad3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(segments) AT LINE 2996 with ID [a99d2b5c-3ad3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2996 with ID [a99d2b5c-3ad3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 2996 with ID [a99d2b5c-3ad3]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if maxAllocationVcoresPerQueue <= $stack35 goto return result at line 833 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.hadoop.yarn.api.records.Resource getMaximumAllocationPerQueue(java.lang.String)> has 14 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> AT LINE 815 with ID [8bc43f57-17e3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("max alloc mb per queue for ") AT LINE 815 with ID [8bc43f57-17e3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(queue) AT LINE 815 with ID [8bc43f57-17e3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ") AT LINE 815 with ID [8bc43f57-17e3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(maxAllocationMbPerQueue) AT LINE 815 with ID [8bc43f57-17e3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 815 with ID [8bc43f57-17e3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack63.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack68) AT LINE 815 with ID [8bc43f57-17e3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> AT LINE 817 with ID [a9ca9d78-ee61]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("max alloc vcores per queue for ") AT LINE 817 with ID [a9ca9d78-ee61]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(queue) AT LINE 817 with ID [a9ca9d78-ee61]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ") AT LINE 817 with ID [a9ca9d78-ee61]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(maxAllocationVcoresPerQueue) AT LINE 817 with ID [a9ca9d78-ee61]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 817 with ID [a9ca9d78-ee61]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack70.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack75) AT LINE 817 with ID [a9ca9d78-ee61]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack21 != $stack24 goto $stack16 = new org.apache.hadoop.security.token.SecretManager$InvalidToken at line 269 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack11 != $stack14 goto $stack15 = this.<org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyTokenSecretManager: org.apache.hadoop.yarn.server.security.MasterKeyData nextMasterKey> at line 259 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack10 != 0 goto $stack11 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: int getKeyId()>() at line 255 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyTokenSecretManager: byte[] retrievePassword(org.apache.hadoop.yarn.security.AMRMTokenIdentifier)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyTokenSecretManager: org.slf4j.Logger LOG> AT LINE 252 with ID [5d778ac1-bf96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to retrieve password for ") AT LINE 252 with ID [5d778ac1-bf96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationAttemptId) AT LINE 252 with ID [5d778ac1-bf96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 252 with ID [5d778ac1-bf96]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void debug(java.lang.String)>($stack46) AT LINE 252 with ID [5d778ac1-bf96]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if update != 0 goto $stack11 = <org.apache.hadoop.yarn.server.federation.utils.FederationRegistryClient: org.slf4j.Logger LOG> at line 128 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.federation.utils.FederationRegistryClient: boolean writeAMRMTokenForUAM(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,org.apache.hadoop.security.token.Token)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.federation.utils.FederationRegistryClient: org.slf4j.Logger LOG> AT LINE 129 with ID [51355309-f3db]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Same amrmToken received from {}, skip writing registry for {}", subClusterId, appId) AT LINE 129 with ID [51355309-f3db]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: int read(byte[],int,int)> has 34 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.slf4j.Logger LOG> AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = newarray (java.lang.Object)[6] AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = lengthof arr AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack11) AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10[0] = $stack15 AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(off) AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10[1] = $stack17 AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(len) AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10[2] = $stack19 AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: java.lang.String filename> AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10[3] = $stack20 AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10[4] = $stack21 AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(canSkipChecksum) AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10[5] = $stack23 AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("read(arr.length={}, off={}, len={}, filename={}, block={}, canSkipChecksum={}): starting", $stack10) AT LINE 552 with ID [fc2e223a-824e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.slf4j.Logger LOG> AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = newarray (java.lang.Object)[7] AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = lengthof arr AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack26) AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25[0] = $stack30 AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(off) AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25[1] = $stack32 AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(len) AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25[2] = $stack34 AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: java.lang.String filename> AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25[3] = $stack35 AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25[4] = $stack36 AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(canSkipChecksum) AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25[5] = $stack38 AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(nRead) AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25[6] = $stack40 AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("read(arr.length={}, off={}, len={}, filename={}, block={}, canSkipChecksum={}): returning {}", $stack25) AT LINE 565 with ID [b0a97e48-b072]
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: java.util.ArrayList writeFile(java.lang.String,long,org.apache.hadoop.fs.Path)>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack48 != 0 goto $stack49 = virtualinvoke setAttr3.<org.apache.hadoop.nfs.nfs3.request.SetAttr3: java.util.EnumSet getUpdateFields()>() at line 1119 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack35 != 0 goto $stack36 = new java.lang.StringBuilder at line 1108 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if preOpDirAttr != null goto $stack34 = <org.apache.hadoop.nfs.AccessPrivilege: org.apache.hadoop.nfs.AccessPrivilege READ_WRITE> at line 1103 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack30 == 0 goto dirFileIdPath = staticinvoke <org.apache.hadoop.hdfs.nfs.nfs3.Nfs3Utils: java.lang.String getFileIdPath(org.apache.hadoop.nfs.nfs3.FileHandle)>(e#2) at line 1090 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.MKDIR3Request: org.apache.hadoop.nfs.nfs3.request.MKDIR3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 1070 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.MKDIR3Response mkdir(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 10 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack115 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 1086 with ID [f04a5f30-e720]
2020-08-25 12:10:04 [INFO] - 	 -> $stack116 = virtualinvoke $stack114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS MKDIR dirId: ") AT LINE 1086 with ID [f04a5f30-e720]
2020-08-25 12:10:04 [INFO] - 	 -> $stack117 = virtualinvoke e#2.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 1086 with ID [f04a5f30-e720]
2020-08-25 12:10:04 [INFO] - 	 -> $stack118 = virtualinvoke $stack116.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack117) AT LINE 1086 with ID [f04a5f30-e720]
2020-08-25 12:10:04 [INFO] - 	 -> $stack119 = virtualinvoke $stack118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" filename: ") AT LINE 1086 with ID [f04a5f30-e720]
2020-08-25 12:10:04 [INFO] - 	 -> $stack120 = virtualinvoke $stack119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) AT LINE 1086 with ID [f04a5f30-e720]
2020-08-25 12:10:04 [INFO] - 	 -> $stack121 = virtualinvoke $stack120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 1086 with ID [f04a5f30-e720]
2020-08-25 12:10:04 [INFO] - 	 -> $stack122 = virtualinvoke $stack121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 1086 with ID [f04a5f30-e720]
2020-08-25 12:10:04 [INFO] - 	 -> $stack123 = virtualinvoke $stack122.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1086 with ID [f04a5f30-e720]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack115.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack123) AT LINE 1086 with ID [f04a5f30-e720]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperationExecutor: java.lang.String[] getPrivilegedOperationExecutionCommand(java.util.List,org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperation)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperationExecutor: org.slf4j.Logger LOG> AT LINE 119 with ID [8e27e869-400f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Privileged Execution Command Array: ") AT LINE 119 with ID [8e27e869-400f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(fullCommandArray) AT LINE 119 with ID [8e27e869-400f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) AT LINE 119 with ID [8e27e869-400f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 119 with ID [8e27e869-400f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack24) AT LINE 119 with ID [8e27e869-400f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack6 == 0 goto return at line 700 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSInputStream: void checkInterrupted(java.io.IOException)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 699 with ID [087261b5-8084]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("The reading thread has been interrupted.", e) AT LINE 699 with ID [087261b5-8084]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if magicNumber == -559038737 goto remoteResponse = staticinvoke <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataTransferSaslUtil: byte[] readSaslMessage(java.io.InputStream)>(in) at line 362 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair doSaslHandshake(org.apache.hadoop.hdfs.net.Peer,java.io.OutputStream,java.io.InputStream,java.util.Map,javax.security.auth.callback.CallbackHandler)> has 17 units and 8 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.slf4j.Logger LOG> AT LINE 386 with ID [739529f2-80fe, 12dac4cc-f3b9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = interfaceinvoke $stack34.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 386 with ID [739529f2-80fe, 12dac4cc-f3b9]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack35 == 0 goto $stack26 = staticinvoke <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataTransferSaslUtil: org.apache.hadoop.crypto.CipherOption wrap(org.apache.hadoop.crypto.CipherOption,org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslParticipant)>(cipherOption, sasl) AT LINE 386 with ID [739529f2-80fe, 12dac4cc-f3b9]
2020-08-25 12:10:04 [INFO] - 	 -> if cipherOption != null goto $stack41 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.slf4j.Logger LOG> AT LINE 387 with ID [12dac4cc-f3b9, 739529f2-80fe]
2020-08-25 12:10:04 [INFO] - 	 -> cipherSuites = virtualinvoke conf.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("dfs.encrypt.data.transfer.cipher.suites") AT LINE 389 with ID [12dac4cc-f3b9]
2020-08-25 12:10:04 [INFO] - 	 -> if cipherSuites == null goto (branch) AT LINE 391 with ID [12dac4cc-f3b9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke cipherSuites.<java.lang.String: boolean isEmpty()>() AT LINE 411 with ID [12dac4cc-f3b9]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack47 != 0 goto (branch) AT LINE 411 with ID [12dac4cc-f3b9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.slf4j.Logger LOG> AT LINE 393 with ID [12dac4cc-f3b9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = interfaceinvoke peer.<org.apache.hadoop.hdfs.net.Peer: java.lang.String getRemoteAddressString()>() AT LINE 393 with ID [12dac4cc-f3b9]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack48.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Server accepts cipher suites {}, but client {} does not accept any of them", cipherSuites, $stack50) AT LINE 393 with ID [12dac4cc-f3b9]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= $stack26 = staticinvoke <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataTransferSaslUtil: org.apache.hadoop.crypto.CipherOption wrap(org.apache.hadoop.crypto.CipherOption,org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslParticipant)>(cipherOption, sasl)] AT LINE 397 with ID [12dac4cc-f3b9, 739529f2-80fe]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.slf4j.Logger LOG> AT LINE 398 with ID [739529f2-80fe]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke cipherOption.<org.apache.hadoop.crypto.CipherOption: org.apache.hadoop.crypto.CipherSuite getCipherSuite()>() AT LINE 398 with ID [739529f2-80fe]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<org.apache.hadoop.crypto.CipherSuite: java.lang.String getName()>() AT LINE 398 with ID [739529f2-80fe]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = interfaceinvoke peer.<org.apache.hadoop.hdfs.net.Peer: java.lang.String getRemoteAddressString()>() AT LINE 398 with ID [739529f2-80fe]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack41.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Server using cipher suite {} with client {}", $stack44, $stack45) AT LINE 398 with ID [739529f2-80fe]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.util.ApplicationClassLoader: java.net.URL getResource(java.lang.String)> has 12 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.util.ApplicationClassLoader: org.slf4j.Logger LOG> AT LINE 136 with ID [0392ef9c-03c2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remove leading / off ") AT LINE 136 with ID [0392ef9c-03c2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 136 with ID [0392ef9c-03c2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 136 with ID [0392ef9c-03c2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String)>($stack29) AT LINE 136 with ID [0392ef9c-03c2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = <org.apache.hadoop.util.ApplicationClassLoader: org.slf4j.Logger LOG> AT LINE 148 with ID [4b1e8d89-01eb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getResource(") AT LINE 148 with ID [4b1e8d89-01eb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 148 with ID [4b1e8d89-01eb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")=") AT LINE 148 with ID [4b1e8d89-01eb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(url) AT LINE 148 with ID [4b1e8d89-01eb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 148 with ID [4b1e8d89-01eb]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 148 with ID [4b1e8d89-01eb]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack74 == 0 goto task = virtualinvoke myTask.<org.apache.hadoop.mapred.JvmTask: org.apache.hadoop.mapred.Task getTask()>() at line 141 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if null != myTask goto $stack74 = virtualinvoke myTask.<org.apache.hadoop.mapred.JvmTask: boolean shouldDie()>() at line 134 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack57 == 0 goto $stack58 = virtualinvoke firstTaskid.<org.apache.hadoop.mapred.TaskAttemptID: org.apache.hadoop.mapred.JobID getJobID()>() at line 104 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.YarnChild: void main(java.lang.String[])> has 10 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = <org.apache.hadoop.mapred.YarnChild: org.apache.commons.logging.Log LOG> AT LINE 75 with ID [2998b2ea-6081]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Child starting") AT LINE 75 with ID [2998b2ea-6081]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = <org.apache.hadoop.mapred.YarnChild: org.apache.commons.logging.Log LOG> AT LINE 125 with ID [aaa314bb-d00a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PID: ") AT LINE 125 with ID [aaa314bb-d00a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = staticinvoke <java.lang.System: java.util.Map getenv()>() AT LINE 125 with ID [aaa314bb-d00a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = interfaceinvoke $stack69.<java.util.Map: java.lang.Object get(java.lang.Object)>("JVM_PID") AT LINE 125 with ID [aaa314bb-d00a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = (java.lang.String) $stack70 AT LINE 125 with ID [aaa314bb-d00a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack71) AT LINE 125 with ID [aaa314bb-d00a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 125 with ID [aaa314bb-d00a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack67.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack73) AT LINE 125 with ID [aaa314bb-d00a]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if capabilityMap != null goto $stack13 = virtualinvoke capabilityMap.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>(capability) at line 188 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if execTypeMap != null goto $stack12 = interfaceinvoke execTypeMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(execType) at line 180 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if locationMap != null goto $stack11 = interfaceinvoke locationMap.<java.util.Map: java.lang.Object get(java.lang.Object)>(resourceName) at line 172 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable: org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl$ResourceRequestInfo remove(org.apache.hadoop.yarn.api.records.Priority,java.lang.String,org.apache.hadoop.yarn.api.records.ExecutionType,org.apache.hadoop.yarn.api.records.Resource)> has 15 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = <org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable: org.apache.commons.logging.Log LOG> AT LINE 174 with ID [8b0578cc-ffb8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such priority=") AT LINE 174 with ID [8b0578cc-ffb8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(priority) AT LINE 174 with ID [8b0578cc-ffb8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 174 with ID [8b0578cc-ffb8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack41.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack44) AT LINE 174 with ID [8b0578cc-ffb8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = <org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable: org.apache.commons.logging.Log LOG> AT LINE 182 with ID [c7bf3c10-1799]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such resourceName=") AT LINE 182 with ID [c7bf3c10-1799]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourceName) AT LINE 182 with ID [c7bf3c10-1799]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 182 with ID [c7bf3c10-1799]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack36) AT LINE 182 with ID [c7bf3c10-1799]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = <org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable: org.apache.commons.logging.Log LOG> AT LINE 190 with ID [c37b6363-3eee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such Execution Type=") AT LINE 190 with ID [c37b6363-3eee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(execType) AT LINE 190 with ID [c37b6363-3eee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 190 with ID [c37b6363-3eee]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 190 with ID [c37b6363-3eee]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack32 != $stack33 goto interfaceinvoke containerStatuses.<java.util.List: boolean add(java.lang.Object)>(containerStatus) at line 547 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = this.<org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: java.util.Map pendingCompletedContainers> at line 541 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: java.util.List getContainerStatuses()> has 16 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger LOG> AT LINE 550 with ID [475acf92-90ef]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationId) AT LINE 550 with ID [475acf92-90ef]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is completing, ") AT LINE 550 with ID [475acf92-90ef]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remove ") AT LINE 550 with ID [475acf92-90ef]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 550 with ID [475acf92-90ef]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from NM context.") AT LINE 550 with ID [475acf92-90ef]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 550 with ID [475acf92-90ef]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack50.<org.slf4j.Logger: void debug(java.lang.String)>($stack56) AT LINE 550 with ID [475acf92-90ef]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger LOG> AT LINE 572 with ID [3b4ac3bf-3807]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending out ") AT LINE 572 with ID [3b4ac3bf-3807]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = interfaceinvoke containerStatuses.<java.util.List: int size()>() AT LINE 572 with ID [3b4ac3bf-3807]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack21) AT LINE 572 with ID [3b4ac3bf-3807]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" container statuses: ") AT LINE 572 with ID [3b4ac3bf-3807]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerStatuses) AT LINE 572 with ID [3b4ac3bf-3807]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 572 with ID [3b4ac3bf-3807]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 572 with ID [3b4ac3bf-3807]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.util.MRAsyncDiskService$DeleteTask: void run()> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.mapreduce.util.MRAsyncDiskService: org.apache.commons.logging.Log LOG> AT LINE 221 with ID [f1fbea48-73f2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Successfully did ") AT LINE 221 with ID [f1fbea48-73f2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke this.<org.apache.hadoop.mapreduce.util.MRAsyncDiskService$DeleteTask: java.lang.String toString()>() AT LINE 221 with ID [f1fbea48-73f2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13) AT LINE 221 with ID [f1fbea48-73f2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 221 with ID [f1fbea48-73f2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 221 with ID [f1fbea48-73f2]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack19 == 0 goto (branch) at line 584 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if file#3 == 0 goto $stack19 = virtualinvoke pw.<java.io.PrintWriter: boolean checkError()>() at line 579 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandlerImpl: void updateCGroupParam(org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandler$CGroupController,java.lang.String,java.lang.String,java.lang.String)> has 9 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandlerImpl: org.slf4j.Logger LOG> AT LINE 560 with ID [5e734fa6-7870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = interfaceinvoke $stack12.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 560 with ID [5e734fa6-7870]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack13 == 0 goto $stack14 = new java.io.File AT LINE 560 with ID [5e734fa6-7870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandlerImpl: org.slf4j.Logger LOG> AT LINE 561 with ID [5e734fa6-7870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = newarray (java.lang.Object)[2] AT LINE 561 with ID [5e734fa6-7870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26[0] = cGroupParamPath AT LINE 561 with ID [5e734fa6-7870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26[1] = value AT LINE 561 with ID [5e734fa6-7870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("updateCGroupParam for path: %s with value %s", $stack26) AT LINE 561 with ID [5e734fa6-7870]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String)>($stack28) AT LINE 561 with ID [5e734fa6-7870]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack19 == 0 goto return at line 180 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: void scan(long)> has 15 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: org.apache.commons.logging.Log LOG> AT LINE 152 with ID [c5a077cf-2ffb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("openFileMap size:") AT LINE 152 with ID [c5a077cf-2ffb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: int size()>() AT LINE 152 with ID [c5a077cf-2ffb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack53) AT LINE 152 with ID [c5a077cf-2ffb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 152 with ID [c5a077cf-2ffb]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack51.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack55) AT LINE 152 with ID [c5a077cf-2ffb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: org.apache.commons.logging.Log LOG> AT LINE 170 with ID [23e39afd-6c1b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("After remove stream ") AT LINE 170 with ID [23e39afd-6c1b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke handle.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 170 with ID [23e39afd-6c1b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack42) AT LINE 170 with ID [23e39afd-6c1b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", the stream number:") AT LINE 170 with ID [23e39afd-6c1b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: int size()>() AT LINE 170 with ID [23e39afd-6c1b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack45) AT LINE 170 with ID [23e39afd-6c1b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 170 with ID [23e39afd-6c1b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack47) AT LINE 170 with ID [23e39afd-6c1b]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack6 != 0 goto isFenced = 0 at line 315 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$StoreAppAttemptTransition: org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMStateStoreState transition(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore,org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStoreEvent)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore: org.apache.commons.logging.Log LOG> AT LINE 325 with ID [d650f06a-22ae]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing info for attempt: ") AT LINE 325 with ID [d650f06a-22ae]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke attemptState.<org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationAttemptStateData: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getAttemptId()>() AT LINE 325 with ID [d650f06a-22ae]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 325 with ID [d650f06a-22ae]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 325 with ID [d650f06a-22ae]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 325 with ID [d650f06a-22ae]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack7 = this.<org.apache.hadoop.yarn.webapp.GenericExceptionHandler: javax.servlet.http.HttpServletResponse response> at line 61 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.webapp.GenericExceptionHandler: javax.ws.rs.core.Response toResponse(java.lang.Exception)> has 5 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = <org.apache.hadoop.yarn.webapp.GenericExceptionHandler: org.apache.commons.logging.Log LOG> AT LINE 55 with ID [251f2a73-ff4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = interfaceinvoke $stack4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>() AT LINE 55 with ID [251f2a73-ff4a]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack5 == 0 goto $stack6 = e instanceof com.sun.jersey.api.NotFoundException AT LINE 55 with ID [251f2a73-ff4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = <org.apache.hadoop.yarn.webapp.GenericExceptionHandler: org.apache.commons.logging.Log LOG> AT LINE 56 with ID [251f2a73-ff4a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack45.<org.apache.commons.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>("GOT EXCEPITION", e) AT LINE 56 with ID [251f2a73-ff4a]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSClient: org.apache.hadoop.hdfs.DFSOutputStream create(java.lang.String,org.apache.hadoop.fs.permission.FsPermission,java.util.EnumSet,boolean,short,long,org.apache.hadoop.util.Progressable,int,org.apache.hadoop.fs.Options$ChecksumOpt,java.net.InetSocketAddress[])> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1205 with ID [8cbea35e-2fba]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: masked={}", src, masked) AT LINE 1205 with ID [8cbea35e-2fba]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack36 == $stack37 goto $stack39 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> at line 203 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache$SlotReleaser: void run()> has 7 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 190 with ID [81e855a9-1862]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache$SlotReleaser: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache this$0> AT LINE 190 with ID [81e855a9-1862]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache$SlotReleaser: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot slot> AT LINE 190 with ID [81e855a9-1862]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: about to release {}", $stack18, $stack17) AT LINE 190 with ID [81e855a9-1862]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 207 with ID [26f0db08-4cd5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache$SlotReleaser: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot slot> AT LINE 207 with ID [26f0db08-4cd5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: released {}", this, $stack38) AT LINE 207 with ID [26f0db08-4cd5]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if channel != null goto $stack4 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> at line 125 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.Nfs3Utils: void writeChannel(org.jboss.netty.channel.Channel,org.apache.hadoop.oncrpc.XDR,int)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 132 with ID [0308bece-72ad]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WRITE_RPC_CALL_END______") AT LINE 132 with ID [0308bece-72ad]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(xid) AT LINE 132 with ID [0308bece-72ad]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 132 with ID [0308bece-72ad]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack12) AT LINE 132 with ID [0308bece-72ad]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack29 == 0 goto (branch) at line 244 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if file#5 == 0 goto $stack29 = virtualinvoke pw.<java.io.PrintWriter: boolean checkError()>() at line 240 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.util.CgroupsLCEResourcesHandler: void updateCgroup(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> has 9 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = <org.apache.hadoop.yarn.server.nodemanager.util.CgroupsLCEResourcesHandler: org.slf4j.Logger LOG> AT LINE 224 with ID [81767c8d-4d79]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateCgroup: ") AT LINE 224 with ID [81767c8d-4d79]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 224 with ID [81767c8d-4d79]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 224 with ID [81767c8d-4d79]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(param#2) AT LINE 224 with ID [81767c8d-4d79]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=") AT LINE 224 with ID [81767c8d-4d79]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value) AT LINE 224 with ID [81767c8d-4d79]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 224 with ID [81767c8d-4d79]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String)>($stack52) AT LINE 224 with ID [81767c8d-4d79]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack4 == 0 goto $stack5 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> at line 260 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.nfs.NfsExports$CIDRMatch: boolean isIncluded(java.lang.String,java.lang.String)> has 32 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CIDRNMatcher low = ") AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = this.<org.apache.hadoop.nfs.NfsExports$CIDRMatch: org.apache.commons.net.util.SubnetUtils$SubnetInfo subnetInfo> AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<org.apache.commons.net.util.SubnetUtils$SubnetInfo: java.lang.String getLowAddress()>() AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30) AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", high = ") AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = this.<org.apache.hadoop.nfs.NfsExports$CIDRMatch: org.apache.commons.net.util.SubnetUtils$SubnetInfo subnetInfo> AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<org.apache.commons.net.util.SubnetUtils$SubnetInfo: java.lang.String getHighAddress()>() AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", allowing client \'") AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(address) AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'") AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(hostname) AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String)>($stack41) AT LINE 262 with ID [49957e0a-d95c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CIDRNMatcher low = ") AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = this.<org.apache.hadoop.nfs.NfsExports$CIDRMatch: org.apache.commons.net.util.SubnetUtils$SubnetInfo subnetInfo> AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<org.apache.commons.net.util.SubnetUtils$SubnetInfo: java.lang.String getLowAddress()>() AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", high = ") AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.nfs.NfsExports$CIDRMatch: org.apache.commons.net.util.SubnetUtils$SubnetInfo subnetInfo> AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<org.apache.commons.net.util.SubnetUtils$SubnetInfo: java.lang.String getHighAddress()>() AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", denying client \'") AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(address) AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'") AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(hostname) AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 269 with ID [85f791a1-4568]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficController: java.util.Map readStats()> has 10 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficController: org.slf4j.Logger LOG> AT LINE 336 with ID [5ef70825-1134]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TC stats output:") AT LINE 336 with ID [5ef70825-1134]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(output) AT LINE 336 with ID [5ef70825-1134]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 336 with ID [5ef70825-1134]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack26) AT LINE 336 with ID [5ef70825-1134]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficController: org.slf4j.Logger LOG> AT LINE 342 with ID [41df454a-7123]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("classId -> bytes sent %n") AT LINE 342 with ID [41df454a-7123]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(classIdBytesStats) AT LINE 342 with ID [41df454a-7123]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 342 with ID [41df454a-7123]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 342 with ID [41df454a-7123]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.web.resources.NamenodeWebHdfsMethods: void init(org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.hdfs.web.resources.DelegationParam,org.apache.hadoop.hdfs.web.resources.UserParam,org.apache.hadoop.hdfs.web.resources.DoAsParam,org.apache.hadoop.hdfs.web.resources.UriFsPathParam,org.apache.hadoop.hdfs.web.resources.HttpOpParam,org.apache.hadoop.hdfs.web.resources.Param[])> has 21 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.server.namenode.web.resources.NamenodeWebHdfsMethods: org.apache.commons.logging.Log LOG> AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP ") AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke op.<org.apache.hadoop.hdfs.web.resources.HttpOpParam: java.lang.Object getValue()>() AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = (java.lang.Enum) $stack16 AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = (org.apache.hadoop.hdfs.web.resources.HttpOpParam$Op) $stack17 AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = interfaceinvoke $stack18.<org.apache.hadoop.hdfs.web.resources.HttpOpParam$Op: org.apache.hadoop.hdfs.web.resources.HttpOpParam$Type getType()>() AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(op) AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(path) AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ugi=") AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(ugi) AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(username) AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(doAsUser) AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = staticinvoke <org.apache.hadoop.hdfs.web.resources.Param: java.lang.String toSortedString(java.lang.String,org.apache.hadoop.hdfs.web.resources.Param[])>(", ", parameters) AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31) AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack33) AT LINE 155 with ID [deb4c236-81d2]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack28 != 0 goto $stack29 = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.COMMIT3Request: int getCount()>() at line 2089 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if preOpAttr != null goto $stack27 = <org.apache.hadoop.nfs.AccessPrivilege: org.apache.hadoop.nfs.AccessPrivilege READ_WRITE> at line 2084 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.COMMIT3Request: org.apache.hadoop.nfs.nfs3.request.COMMIT3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 2059 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.COMMIT3Response commit(org.apache.hadoop.oncrpc.XDR,org.jboss.netty.channel.Channel,int,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 14 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS COMMIT fileId: ") AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke e.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack58) AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" offset=") AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.COMMIT3Request: long getOffset()>() AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack61) AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=") AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.COMMIT3Request: int getCount()>() AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack64) AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack56.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack68) AT LINE 2075 with ID [62df68c8-99e2]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack29 == 0 goto $stack30 = virtualinvoke writeCtx.<org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx$DataState getDataState()>() at line 1213 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: void doSingleWrite(org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx)> has 26 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> handle = virtualinvoke writeCtx.<org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: org.apache.hadoop.nfs.nfs3.FileHandle getHandle()>() AT LINE 1200 with ID [238290e4-6aea, 2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack130 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack131 = virtualinvoke $stack129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("do write, fileId: ") AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack132 = virtualinvoke handle.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack133 = virtualinvoke $stack131.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack132) AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack134 = virtualinvoke $stack133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" offset: ") AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack135 = virtualinvoke $stack134.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(offset) AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack136 = virtualinvoke $stack135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length: ") AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack137 = virtualinvoke $stack136.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack138 = virtualinvoke $stack137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stableHow: ") AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack139 = virtualinvoke stableHow.<org.apache.hadoop.nfs.nfs3.Nfs3Constant$WriteStableHow: java.lang.String name()>() AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack140 = virtualinvoke $stack138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack139) AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack141 = virtualinvoke $stack140.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack130.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack141) AT LINE 1202 with ID [2d554615-8122]
2020-08-25 12:10:04 [INFO] - 	 -> $stack109 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1227 with ID [238290e4-6aea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack110 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("After writing ") AT LINE 1227 with ID [238290e4-6aea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack111 = virtualinvoke handle.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 1227 with ID [238290e4-6aea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack112 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack111) AT LINE 1227 with ID [238290e4-6aea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack113 = virtualinvoke $stack112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at offset ") AT LINE 1227 with ID [238290e4-6aea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack114 = virtualinvoke $stack113.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(offset) AT LINE 1227 with ID [238290e4-6aea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack115 = virtualinvoke $stack114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", updated the memory count, new value: ") AT LINE 1227 with ID [238290e4-6aea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack116 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nonSequentialWriteInMemory> AT LINE 1227 with ID [238290e4-6aea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack117 = virtualinvoke $stack116.<java.util.concurrent.atomic.AtomicLong: long get()>() AT LINE 1227 with ID [238290e4-6aea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack118 = virtualinvoke $stack115.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack117) AT LINE 1227 with ID [238290e4-6aea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack119 = virtualinvoke $stack118.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1227 with ID [238290e4-6aea]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack109.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack119) AT LINE 1227 with ID [238290e4-6aea]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FileJournalManager: void addStreamsToCollectionFromFiles(java.util.Collection,java.util.Collection,long,long,boolean)> has 23 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = <org.apache.hadoop.hdfs.server.namenode.FileJournalManager: org.apache.commons.logging.Log LOG> AT LINE 358 with ID [26775999-4d29]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("passing over ") AT LINE 358 with ID [26775999-4d29]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(elf) AT LINE 358 with ID [26775999-4d29]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it is in progress ") AT LINE 358 with ID [26775999-4d29]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("and we are ignoring in-progress logs.") AT LINE 358 with ID [26775999-4d29]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 358 with ID [26775999-4d29]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack50.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack55) AT LINE 358 with ID [26775999-4d29]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = <org.apache.hadoop.hdfs.server.namenode.FileJournalManager: org.apache.commons.logging.Log LOG> AT LINE 374 with ID [10d131df-d475]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("passing over ") AT LINE 374 with ID [10d131df-d475]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(elf) AT LINE 374 with ID [10d131df-d475]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it ends at ") AT LINE 374 with ID [10d131df-d475]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FileJournalManager$EditLogFile: long access$100(org.apache.hadoop.hdfs.server.namenode.FileJournalManager$EditLogFile)>(elf) AT LINE 374 with ID [10d131df-d475]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack36) AT LINE 374 with ID [10d131df-d475]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but we only care about transactions ") AT LINE 374 with ID [10d131df-d475]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("as new as ") AT LINE 374 with ID [10d131df-d475]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fromTxId) AT LINE 374 with ID [10d131df-d475]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 374 with ID [10d131df-d475]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack41) AT LINE 374 with ID [10d131df-d475]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.server.namenode.FileJournalManager: org.apache.commons.logging.Log LOG> AT LINE 382 with ID [420ebb1f-3734]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("selecting edit log stream ") AT LINE 382 with ID [420ebb1f-3734]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(elf) AT LINE 382 with ID [420ebb1f-3734]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 382 with ID [420ebb1f-3734]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack25) AT LINE 382 with ID [420ebb1f-3734]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack87 == 0 goto $stack88 = new java.io.IOException at line 1670 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if sectionProcessor != null goto virtualinvoke unprocessedSections.<java.util.HashSet: boolean remove(java.lang.Object)>(sectionName) at line 1688 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack56 != 0 goto $stack57 = this.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: java.util.HashMap sections> at line 1683 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack52 == 1 goto $stack53 = interfaceinvoke ev.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>() at line 1678 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack51 != 2 goto $stack52 = interfaceinvoke ev.<javax.xml.stream.events.XMLEvent: int getEventType()>() at line 1669 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack17 != 0 goto specialinvoke this.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: void writeStringTableSection()>() at line 1667 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: void processXml()> has 9 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.commons.logging.Log LOG> AT LINE 1657 with ID [5207cad8-9cca]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Loading <fsimage>.") AT LINE 1657 with ID [5207cad8-9cca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.commons.logging.Log LOG> AT LINE 1707 with ID [a0f40407-5914]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing FileSummary: {") AT LINE 1707 with ID [a0f40407-5914]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = staticinvoke <com.google.protobuf.TextFormat: java.lang.String printToString(com.google.protobuf.MessageOrBuilder)>(sectionProcessor#4) AT LINE 1707 with ID [a0f40407-5914]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack36) AT LINE 1707 with ID [a0f40407-5914]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") AT LINE 1707 with ID [a0f40407-5914]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1707 with ID [a0f40407-5914]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack39) AT LINE 1707 with ID [a0f40407-5914]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 != 0 goto specialinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: void remove(org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData)>(node) at line 342 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if node != null goto id = node.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData: long leaseId> at line 336 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: long removeLease(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 16 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> AT LINE 343 with ID [d2ba0725-e8cc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 343 with ID [d2ba0725-e8cc]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("DN {} has no lease to remove.", $stack25) AT LINE 343 with ID [d2ba0725-e8cc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> AT LINE 348 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = interfaceinvoke $stack10.<org.slf4j.Logger: boolean isTraceEnabled()>() AT LINE 348 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack11 == 0 goto return id AT LINE 348 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> AT LINE 349 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = newarray (java.lang.Object)[3] AT LINE 349 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(id) AT LINE 349 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[0] = $stack16 AT LINE 349 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 349 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[1] = $stack18 AT LINE 349 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: int numPending> AT LINE 349 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack19) AT LINE 349 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[2] = $stack21 AT LINE 349 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("Removed BR lease 0x{} for DN {}.  numPending = {}", $stack12) AT LINE 349 with ID [20f7b5d7-29ec]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if cur != null goto virtualinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: void adjustSetsWithChosenReplica(java.util.Map,java.util.List,java.util.List,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo)>(rackMap, moreThanOne, exactlyOne, cur) at line 1123 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: java.util.List chooseReplicasToDelete(java.util.Collection,int,java.util.List,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 10 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: org.slf4j.Logger LOG> AT LINE 1124 with ID [102b304f-27ff]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = interfaceinvoke $stack28.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 1124 with ID [102b304f-27ff]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack29 == 0 goto return excessReplicas AT LINE 1124 with ID [102b304f-27ff]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: org.slf4j.Logger LOG> AT LINE 1125 with ID [102b304f-27ff]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = newarray (java.lang.Object)[3] AT LINE 1125 with ID [102b304f-27ff]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31[0] = excessTypes AT LINE 1125 with ID [102b304f-27ff]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31[1] = moreThanOne AT LINE 1125 with ID [102b304f-27ff]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31[2] = exactlyOne AT LINE 1125 with ID [102b304f-27ff]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("No excess replica can be found. excessTypes: {}. moreThanOne: {}. exactlyOne: {}.", $stack31) AT LINE 1125 with ID [102b304f-27ff]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= return excessReplicas] AT LINE 1125 with ID [102b304f-27ff]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.ShuffleHandler$Shuffle$3: void onRemoval(com.google.common.cache.RemovalNotification)> has 9 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() AT LINE 856 with ID [dc5f4bd9-d043]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PathCache Eviction: ") AT LINE 856 with ID [dc5f4bd9-d043]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke notification.<com.google.common.cache.RemovalNotification: java.lang.Object getKey()>() AT LINE 856 with ID [dc5f4bd9-d043]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack7) AT LINE 856 with ID [dc5f4bd9-d043]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Reason=") AT LINE 856 with ID [dc5f4bd9-d043]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke notification.<com.google.common.cache.RemovalNotification: com.google.common.cache.RemovalCause getCause()>() AT LINE 856 with ID [dc5f4bd9-d043]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10) AT LINE 856 with ID [dc5f4bd9-d043]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 856 with ID [dc5f4bd9-d043]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack12) AT LINE 856 with ID [dc5f4bd9-d043]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.JHSDelegationTokenSecretManager: void removeStoredToken(org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = <org.apache.hadoop.mapreduce.v2.hs.JHSDelegationTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 116 with ID [fcfbb3b0-cd46]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing token ") AT LINE 116 with ID [fcfbb3b0-cd46]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke tokenId.<org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 116 with ID [fcfbb3b0-cd46]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack9) AT LINE 116 with ID [fcfbb3b0-cd46]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 116 with ID [fcfbb3b0-cd46]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 116 with ID [fcfbb3b0-cd46]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack7 = specialinvoke this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver$PacketResponder: boolean isRunning()>() at line 1329 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReceiver$PacketResponder: org.apache.hadoop.hdfs.server.datanode.BlockReceiver$Packet waitForAckHead(long)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 1324 with ID [abf82c48-ae85]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver$PacketResponder: java.lang.String myString> AT LINE 1324 with ID [abf82c48-ae85]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 1324 with ID [abf82c48-ae85]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": seqno=") AT LINE 1324 with ID [abf82c48-ae85]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(seqno) AT LINE 1324 with ID [abf82c48-ae85]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" waiting for local datanode to finish write.") AT LINE 1324 with ID [abf82c48-ae85]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1324 with ID [abf82c48-ae85]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack26) AT LINE 1324 with ID [abf82c48-ae85]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if f#8 >= $stack26 goto v = v + 1 at line 109 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if v >= $stack19 goto return at line 98 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if v >= $stack17 goto v = 0 at line 88 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if v >= $stack13 goto $stack14 = new org.apache.hadoop.util.AsyncDiskService at line 79 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.util.MRAsyncDiskService: void <init>(org.apache.hadoop.fs.FileSystem,java.lang.String[])> has 14 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = this.<org.apache.hadoop.mapreduce.util.MRAsyncDiskService: java.lang.String[] volumes> AT LINE 80 with ID []
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = nonCanonicalVols[v] AT LINE 80 with ID []
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = specialinvoke this.<org.apache.hadoop.mapreduce.util.MRAsyncDiskService: java.lang.String normalizePath(java.lang.String)>($stack59) AT LINE 80 with ID []
2020-08-25 12:10:04 [INFO] - 	 -> $stack60[v] = $stack61 AT LINE 80 with ID []
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = <org.apache.hadoop.mapreduce.util.MRAsyncDiskService: org.apache.commons.logging.Log LOG> AT LINE 81 with ID [d688d402-cb38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Normalized volume: ") AT LINE 81 with ID [d688d402-cb38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = nonCanonicalVols[v] AT LINE 81 with ID [d688d402-cb38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack65) AT LINE 81 with ID [d688d402-cb38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ") AT LINE 81 with ID [d688d402-cb38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = this.<org.apache.hadoop.mapreduce.util.MRAsyncDiskService: java.lang.String[] volumes> AT LINE 81 with ID [d688d402-cb38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = $stack68[v] AT LINE 81 with ID [d688d402-cb38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack69) AT LINE 81 with ID [d688d402-cb38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 81 with ID [d688d402-cb38]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack63.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack71) AT LINE 81 with ID [d688d402-cb38]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack49 == 0 goto (branch) at line 503 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if demandingQueueSatisfied != 0 goto (branch) at line 495 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if canPreempt == 0 goto (branch) at line 464 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack58 == 0 goto (branch) at line 477 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack112 == 0 goto (branch) at line 418 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if null == reservedContainer goto (branch) at line 415 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack28 == 0 goto $stack30 = this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.QueuePriorityContainerCandidateSelector: java.util.List reservedContainers> at line 413 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack19 == 0 goto this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.QueuePriorityContainerCandidateSelector: java.util.Map selectedCandidates> = selectedCandidates at line 392 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.QueuePriorityContainerCandidateSelector: java.util.Map selectCandidates(java.util.Map,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.api.records.Resource)> has 19 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack90 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.QueuePriorityContainerCandidateSelector: org.apache.commons.logging.Log LOG> AT LINE 468 with ID [38ca8063-6f36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack91 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to preempt following containers to make reserved container=") AT LINE 468 with ID [38ca8063-6f36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack92 = interfaceinvoke reservedContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 468 with ID [38ca8063-6f36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack93 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack92) AT LINE 468 with ID [38ca8063-6f36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack94 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on node=") AT LINE 468 with ID [38ca8063-6f36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack95 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.api.records.NodeId getNodeID()>() AT LINE 468 with ID [38ca8063-6f36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack96 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack95) AT LINE 468 with ID [38ca8063-6f36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can be allocated:") AT LINE 468 with ID [38ca8063-6f36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 468 with ID [38ca8063-6f36]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack90.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack98) AT LINE 468 with ID [38ca8063-6f36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.QueuePriorityContainerCandidateSelector: org.apache.commons.logging.Log LOG> AT LINE 479 with ID [dfd3d527-12a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --container=") AT LINE 479 with ID [dfd3d527-12a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack78 = interfaceinvoke c.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 479 with ID [dfd3d527-12a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack79 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack78) AT LINE 479 with ID [dfd3d527-12a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resource=") AT LINE 479 with ID [dfd3d527-12a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack81 = interfaceinvoke c.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.Resource getReservedResource()>() AT LINE 479 with ID [dfd3d527-12a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack82 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack81) AT LINE 479 with ID [dfd3d527-12a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 479 with ID [dfd3d527-12a5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack76.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack83) AT LINE 479 with ID [dfd3d527-12a5]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.io.SequenceFile$Sorter: int sortPass(boolean)> has 5 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = staticinvoke <org.apache.hadoop.io.SequenceFile: org.slf4j.Logger access$500()>() AT LINE 2895 with ID [c3b7becb-2e49]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = interfaceinvoke $stack5.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 2895 with ID [c3b7becb-2e49]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack6 == 0 goto $stack7 = new org.apache.hadoop.io.SequenceFile$Sorter$SortPass AT LINE 2895 with ID [c3b7becb-2e49]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = staticinvoke <org.apache.hadoop.io.SequenceFile: org.slf4j.Logger access$500()>() AT LINE 2896 with ID [c3b7becb-2e49]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>("running sort pass") AT LINE 2896 with ID [c3b7becb-2e49]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack3 == 0 goto $stack4 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> at line 270 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.net.unix.DomainSocketWatcher: void close()> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> AT LINE 272 with ID [09e4cdeb-554e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 272 with ID [09e4cdeb-554e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": closing") AT LINE 272 with ID [09e4cdeb-554e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 272 with ID [09e4cdeb-554e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 272 with ID [09e4cdeb-554e]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 != 0 goto flag = 0 at line 996 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: boolean streamCleanup(long,long)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1004 with ID [e1f827fd-c3ed]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stream can be closed for fileId: ") AT LINE 1004 with ID [e1f827fd-c3ed]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileId) AT LINE 1004 with ID [e1f827fd-c3ed]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1004 with ID [e1f827fd-c3ed]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 1004 with ID [e1f827fd-c3ed]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack30 == 0 goto $stack31 = specialinvoke this.<org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker: com.google.protobuf.Message getReturnMessage(java.lang.reflect.Method,org.apache.hadoop.ipc.RpcWritable$Buffer)>(method, val) at line 251 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack16 != null goto tracer = staticinvoke <org.apache.htrace.core.Tracer: org.apache.htrace.core.Tracer curThreadTracer()>() at line 201 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack15 == 2 goto $stack16 = args[1] at line 196 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker: com.google.protobuf.Message invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])> has 34 units and 6 lines
2020-08-25 12:10:04 [INFO] - 	 -> startTime = 0L AT LINE 191 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.ipc.ProtobufRpcEngine: org.slf4j.Logger LOG> AT LINE 192 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = interfaceinvoke $stack13.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 192 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack14 == 0 goto $stack15 = lengthof args AT LINE 192 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> startTime = staticinvoke <org.apache.hadoop.util.Time: long now()>() AT LINE 193 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = <org.apache.hadoop.ipc.ProtobufRpcEngine: org.slf4j.Logger LOG> AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.Thread: long getId()>() AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack48) AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Call -> ") AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = this.<org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker: org.apache.hadoop.ipc.Client$ConnectionId remoteId> AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack51) AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>() AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack54) AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {") AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = args[1] AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = (com.google.protobuf.Message) $stack57 AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = staticinvoke <com.google.protobuf.TextFormat: java.lang.String shortDebugString(com.google.protobuf.MessageOrBuilder)>($stack58) AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack59) AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void trace(java.lang.String)>($stack62) AT LINE 218 with ID [09c62754-a65d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = staticinvoke <org.apache.hadoop.util.Time: long now()>() AT LINE 247 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> e#5 = $stack35 - startTime AT LINE 247 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = <org.apache.hadoop.ipc.ProtobufRpcEngine: org.slf4j.Logger LOG> AT LINE 248 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call: ") AT LINE 248 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>() AT LINE 248 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39) AT LINE 248 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took ") AT LINE 248 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(e#5) AT LINE 248 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms") AT LINE 248 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 248 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack37.<org.slf4j.Logger: void debug(java.lang.String)>($stack44) AT LINE 248 with ID [fd5e0ee4-c103]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack56 != 0 goto interfaceinvoke writeBatch.<org.iq80.leveldb.WriteBatch: org.iq80.leveldb.WriteBatch delete(byte[])>(key) at line 1440 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack30 != 0 goto $stack31 = new org.apache.hadoop.yarn.server.timeline.util.LeveldbUtils$KeyParser at line 1414 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack26 != 0 goto $stack27 = virtualinvoke iterator.<org.apache.hadoop.yarn.server.utils.LeveldbIterator: java.util.Map$Entry peekNext()>() at line 1410 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore: boolean deleteNextEntity(java.lang.String,byte[],org.apache.hadoop.yarn.server.utils.LeveldbIterator,org.apache.hadoop.yarn.server.utils.LeveldbIterator,boolean)> has 41 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack172 = <org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore: org.slf4j.Logger LOG> AT LINE 1428 with ID [ab6984ff-8e9f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack173 = virtualinvoke $stack171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting entity type:") AT LINE 1428 with ID [ab6984ff-8e9f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack174 = virtualinvoke $stack173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityType) AT LINE 1428 with ID [ab6984ff-8e9f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack175 = virtualinvoke $stack174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id:") AT LINE 1428 with ID [ab6984ff-8e9f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack176 = virtualinvoke $stack175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityId) AT LINE 1428 with ID [ab6984ff-8e9f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack177 = virtualinvoke $stack176.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1428 with ID [ab6984ff-8e9f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack172.<org.slf4j.Logger: void debug(java.lang.String)>($stack177) AT LINE 1428 with ID [ab6984ff-8e9f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack151 = <org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore: org.slf4j.Logger LOG> AT LINE 1456 with ID [f0065ebf-0fe4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack152 = virtualinvoke $stack150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting entity type:") AT LINE 1456 with ID [f0065ebf-0fe4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack153 = virtualinvoke $stack152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityType) AT LINE 1456 with ID [f0065ebf-0fe4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack154 = virtualinvoke $stack153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id:") AT LINE 1456 with ID [f0065ebf-0fe4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack155 = virtualinvoke $stack154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityId) AT LINE 1456 with ID [f0065ebf-0fe4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack156 = virtualinvoke $stack155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" primary filter entry ") AT LINE 1456 with ID [f0065ebf-0fe4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack157 = virtualinvoke $stack156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 1456 with ID [f0065ebf-0fe4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack158 = virtualinvoke $stack157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 1456 with ID [f0065ebf-0fe4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack159 = virtualinvoke $stack158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(value) AT LINE 1456 with ID [f0065ebf-0fe4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack160 = virtualinvoke $stack159.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1456 with ID [f0065ebf-0fe4]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack151.<org.slf4j.Logger: void debug(java.lang.String)>($stack160) AT LINE 1456 with ID [f0065ebf-0fe4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack117 = <org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore: org.slf4j.Logger LOG> AT LINE 1475 with ID [3ba07e24-e22b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack118 = virtualinvoke $stack116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting entity type:") AT LINE 1475 with ID [3ba07e24-e22b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack119 = virtualinvoke $stack118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityType) AT LINE 1475 with ID [3ba07e24-e22b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack120 = virtualinvoke $stack119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id:") AT LINE 1475 with ID [3ba07e24-e22b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack121 = virtualinvoke $stack120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityId) AT LINE 1475 with ID [3ba07e24-e22b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack122 = virtualinvoke $stack121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from invisible reverse related entity ") AT LINE 1475 with ID [3ba07e24-e22b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack123 = virtualinvoke $stack122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("entry of type:") AT LINE 1475 with ID [3ba07e24-e22b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack124 = virtualinvoke $stack123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 1475 with ID [3ba07e24-e22b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack125 = virtualinvoke $stack124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id:") AT LINE 1475 with ID [3ba07e24-e22b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack126 = virtualinvoke $stack125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value#17) AT LINE 1475 with ID [3ba07e24-e22b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack127 = virtualinvoke $stack126.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1475 with ID [3ba07e24-e22b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack117.<org.slf4j.Logger: void debug(java.lang.String)>($stack127) AT LINE 1475 with ID [3ba07e24-e22b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack83 = <org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore: org.slf4j.Logger LOG> AT LINE 1495 with ID [a4e4645d-664e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack84 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting entity type:") AT LINE 1495 with ID [a4e4645d-664e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack85 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityType) AT LINE 1495 with ID [a4e4645d-664e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id:") AT LINE 1495 with ID [a4e4645d-664e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entityId) AT LINE 1495 with ID [a4e4645d-664e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from related entity entry of type:") AT LINE 1495 with ID [a4e4645d-664e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 1495 with ID [a4e4645d-664e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id:") AT LINE 1495 with ID [a4e4645d-664e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack91 = virtualinvoke $stack90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value#17) AT LINE 1495 with ID [a4e4645d-664e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack92 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1495 with ID [a4e4645d-664e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack83.<org.slf4j.Logger: void debug(java.lang.String)>($stack92) AT LINE 1495 with ID [a4e4645d-664e]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.BackupStore$MemoryCache: void write(org.apache.hadoop.io.DataInputBuffer,org.apache.hadoop.io.DataInputBuffer)> has 9 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = staticinvoke <org.apache.hadoop.mapred.BackupStore: org.apache.commons.logging.Log access$400()>() AT LINE 479 with ID [d96997cd-4258]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ID: ") AT LINE 479 with ID [d96997cd-4258]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = this.<org.apache.hadoop.mapred.BackupStore$MemoryCache: org.apache.hadoop.mapred.BackupStore this$0> AT LINE 479 with ID [d96997cd-4258]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = $stack29.<org.apache.hadoop.mapred.BackupStore: java.util.List segmentList> AT LINE 479 with ID [d96997cd-4258]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = interfaceinvoke $stack30.<java.util.List: int size()>() AT LINE 479 with ID [d96997cd-4258]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31) AT LINE 479 with ID [d96997cd-4258]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WRITE TO MEM") AT LINE 479 with ID [d96997cd-4258]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 479 with ID [d96997cd-4258]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 479 with ID [d96997cd-4258]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.fs.contract.AbstractContractSeekTest: void testSeekReadClosedFile()> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = staticinvoke <org.apache.hadoop.fs.contract.AbstractContractSeekTest: org.slf4j.Logger getLog()>() AT LINE 135 with ID [3bd709ec-bcb0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stream is of type ") AT LINE 135 with ID [3bd709ec-bcb0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.fs.contract.AbstractContractSeekTest: org.apache.hadoop.fs.FSDataInputStream instream> AT LINE 135 with ID [3bd709ec-bcb0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.Object: java.lang.Class getClass()>() AT LINE 135 with ID [3bd709ec-bcb0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.Class: java.lang.String getCanonicalName()>() AT LINE 135 with ID [3bd709ec-bcb0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 135 with ID [3bd709ec-bcb0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 135 with ID [3bd709ec-bcb0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>($stack13) AT LINE 135 with ID [3bd709ec-bcb0]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.job.impl.JobImpl$InitTransition: void setup(org.apache.hadoop.mapreduce.v2.app.job.impl.JobImpl)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = staticinvoke <org.apache.hadoop.mapreduce.v2.app.job.impl.JobImpl: org.apache.commons.logging.Log access$4500()>() AT LINE 1534 with ID [f1a07636-fb2f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startJobs: parent=") AT LINE 1534 with ID [f1a07636-fb2f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(path) AT LINE 1534 with ID [f1a07636-fb2f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" child=") AT LINE 1534 with ID [f1a07636-fb2f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(oldJobIDString) AT LINE 1534 with ID [f1a07636-fb2f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1534 with ID [f1a07636-fb2f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack48) AT LINE 1534 with ID [f1a07636-fb2f]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.SharedCacheClientImpl: void serviceStart()> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = <org.apache.hadoop.yarn.client.api.impl.SharedCacheClientImpl: org.apache.commons.logging.Log LOG> AT LINE 88 with ID [2bed3633-6047]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to Shared Cache Manager at ") AT LINE 88 with ID [2bed3633-6047]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = this.<org.apache.hadoop.yarn.client.api.impl.SharedCacheClientImpl: java.net.InetSocketAddress scmAddress> AT LINE 88 with ID [2bed3633-6047]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack7) AT LINE 88 with ID [2bed3633-6047]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 88 with ID [2bed3633-6047]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack9) AT LINE 88 with ID [2bed3633-6047]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack17 != 0 goto (branch) at line 347 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 != 0 goto $stack9 = specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: java.util.TreeSet fetchAppsWithDemand(boolean)>(1) at line 338 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: org.apache.hadoop.yarn.api.records.Resource assignContainer(org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode)> has 21 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: org.apache.commons.logging.Log LOG> AT LINE 334 with ID [e97af303-1189]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node ") AT LINE 334 with ID [e97af303-1189]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode: java.lang.String getNodeName()>() AT LINE 334 with ID [e97af303-1189]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 334 with ID [e97af303-1189]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" offered to queue: ") AT LINE 334 with ID [e97af303-1189]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: java.lang.String getName()>() AT LINE 334 with ID [e97af303-1189]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37) AT LINE 334 with ID [e97af303-1189]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fairShare: ") AT LINE 334 with ID [e97af303-1189]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: org.apache.hadoop.yarn.api.records.Resource getFairShare()>() AT LINE 334 with ID [e97af303-1189]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack40) AT LINE 334 with ID [e97af303-1189]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 334 with ID [e97af303-1189]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack42) AT LINE 334 with ID [e97af303-1189]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: org.apache.commons.logging.Log LOG> AT LINE 349 with ID [f80990fc-f256]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigned container in queue:") AT LINE 349 with ID [f80990fc-f256]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: java.lang.String getName()>() AT LINE 349 with ID [f80990fc-f256]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 349 with ID [f80990fc-f256]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 349 with ID [f80990fc-f256]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("container:") AT LINE 349 with ID [f80990fc-f256]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(assigned) AT LINE 349 with ID [f80990fc-f256]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 349 with ID [f80990fc-f256]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack30) AT LINE 349 with ID [f80990fc-f256]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if localResponse == null goto staticinvoke <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataTransferSaslUtil: void checkSaslComplete(org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslParticipant,java.util.Map)>(sasl, saslProps) at line 504 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack61 != 0 goto $stack62 = new org.apache.hadoop.crypto.CipherOption at line 461 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair doSaslHandshake(java.net.InetAddress,java.io.OutputStream,java.io.InputStream,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)> has 16 units and 6 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> AT LINE 486 with ID [79bb12e5-ceda, 96aa6d14-11f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = interfaceinvoke $stack35.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 486 with ID [79bb12e5-ceda, 96aa6d14-11f5]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack36 == 0 goto (branch) AT LINE 486 with ID [79bb12e5-ceda, 96aa6d14-11f5]
2020-08-25 12:10:04 [INFO] - 	 -> if cipherOption != null goto $stack38 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> AT LINE 487 with ID [79bb12e5-ceda, 96aa6d14-11f5]
2020-08-25 12:10:04 [INFO] - 	 -> if cipherSuites == null goto (branch) AT LINE 489 with ID [96aa6d14-11f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke cipherSuites.<java.lang.String: boolean isEmpty()>() AT LINE 504 with ID [96aa6d14-11f5]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack43 != 0 goto (branch) AT LINE 504 with ID [96aa6d14-11f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> AT LINE 491 with ID [96aa6d14-11f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke addr.<java.net.InetAddress: java.lang.String toString()>() AT LINE 491 with ID [96aa6d14-11f5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Client accepts cipher suites {}, but server {} does not accept any of them", cipherSuites, $stack46) AT LINE 491 with ID [96aa6d14-11f5]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= (branch)] AT LINE 491 with ID [96aa6d14-11f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> AT LINE 496 with ID [79bb12e5-ceda]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke cipherOption.<org.apache.hadoop.crypto.CipherOption: org.apache.hadoop.crypto.CipherSuite getCipherSuite()>() AT LINE 496 with ID [79bb12e5-ceda]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<org.apache.hadoop.crypto.CipherSuite: java.lang.String getName()>() AT LINE 496 with ID [79bb12e5-ceda]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke addr.<java.net.InetAddress: java.lang.String toString()>() AT LINE 496 with ID [79bb12e5-ceda]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack38.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Client using cipher suite {} with server {}", $stack41, $stack42) AT LINE 496 with ID [79bb12e5-ceda]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.fs.contract.AbstractFSContractTestBase: void teardown()> has 4 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack1 = <org.apache.hadoop.fs.contract.AbstractFSContractTestBase: org.slf4j.Logger LOG> AT LINE 203 with ID [fd3a1d67-0f47]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack1.<org.slf4j.Logger: void debug(java.lang.String)>("== Teardown ==") AT LINE 203 with ID [fd3a1d67-0f47]
2020-08-25 12:10:04 [INFO] - 	 -> $stack2 = <org.apache.hadoop.fs.contract.AbstractFSContractTestBase: org.slf4j.Logger LOG> AT LINE 205 with ID [98ad8616-dca0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String)>("== Teardown complete ==") AT LINE 205 with ID [98ad8616-dca0]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if srcs != null goto $stack11 = <org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.slf4j.Logger LOG> at line 61 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirConcatOp: org.apache.hadoop.fs.FileStatus concat(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,java.lang.String[],boolean)> has 14 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.slf4j.Logger LOG> AT LINE 55 with ID [0765dd48-e4ae]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = interfaceinvoke $stack11.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 55 with ID [0765dd48-e4ae]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack12 == 0 goto pc = virtualinvoke fsd.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>() AT LINE 55 with ID [0765dd48-e4ae]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.slf4j.Logger LOG> AT LINE 56 with ID [0765dd48-e4ae]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(srcs) AT LINE 56 with ID [0765dd48-e4ae]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("concat {} to {}", $stack47, target) AT LINE 56 with ID [0765dd48-e4ae]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 71 with ID [b13da93c-6973]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.concat: ") AT LINE 71 with ID [b13da93c-6973]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(srcs) AT LINE 71 with ID [b13da93c-6973]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 71 with ID [b13da93c-6973]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 71 with ID [b13da93c-6973]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(target) AT LINE 71 with ID [b13da93c-6973]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 71 with ID [b13da93c-6973]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack30) AT LINE 71 with ID [b13da93c-6973]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack2 == null goto $stack3 = new java.util.concurrent.ThreadPoolExecutor at line 2906 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSClient: void initThreadsNumForHedgedReads(int)> has 3 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 2929 with ID [1e92b36a-cad3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(num) AT LINE 2929 with ID [1e92b36a-cad3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Using hedged reads; pool threads={}", $stack13) AT LINE 2929 with ID [1e92b36a-cad3]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityCacheItem: org.apache.hadoop.yarn.server.timeline.TimelineStore refreshCache(org.apache.hadoop.yarn.server.timeline.security.TimelineACLsManager,org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStoreMetrics)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.timeline.EntityCacheItem: org.slf4j.Logger LOG> AT LINE 122 with ID [c6a271e2-febb]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>("Cache new enough, skip refreshing") AT LINE 122 with ID [c6a271e2-febb]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: void close()> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: org.apache.commons.logging.Log LOG> AT LINE 272 with ID [cd579919-502d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Closing cache") AT LINE 272 with ID [cd579919-502d]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testFinalizedRbwReplicas()> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 348 with ID [6df4f0f1-e2f6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 348 with ID [6df4f0f1-e2f6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 348 with ID [6df4f0f1-e2f6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39) AT LINE 348 with ID [6df4f0f1-e2f6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 348 with ID [6df4f0f1-e2f6]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack41) AT LINE 348 with ID [6df4f0f1-e2f6]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 == 0 goto (branch) at line 135 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 != 0 goto $stack8 = <org.apache.hadoop.mapred.CleanupQueue: org.apache.commons.logging.Log LOG> at line 132 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.CleanupQueue$PathCleanupThread: void run()> has 12 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.mapred.CleanupQueue: org.apache.commons.logging.Log LOG> AT LINE 125 with ID [7e730495-802e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke this.<org.apache.hadoop.mapred.CleanupQueue$PathCleanupThread: java.lang.String getName()>() AT LINE 125 with ID [7e730495-802e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27) AT LINE 125 with ID [7e730495-802e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" started.") AT LINE 125 with ID [7e730495-802e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 125 with ID [7e730495-802e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack30) AT LINE 125 with ID [7e730495-802e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.mapred.CleanupQueue: org.apache.commons.logging.Log LOG> AT LINE 136 with ID [347c1f1a-ea91]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DELETED ") AT LINE 136 with ID [347c1f1a-ea91]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = context.<org.apache.hadoop.mapred.CleanupQueue$PathDeletionContext: java.lang.String fullPath> AT LINE 136 with ID [347c1f1a-ea91]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16) AT LINE 136 with ID [347c1f1a-ea91]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 136 with ID [347c1f1a-ea91]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 136 with ID [347c1f1a-ea91]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.InvalidateBlocks: void add(org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.protocol.DatanodeInfo,boolean)> has 9 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> if log == 0 goto return AT LINE 116 with ID [6c93121f-1e33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger blockStateChangeLog> AT LINE 117 with ID [6c93121f-1e33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = newarray (java.lang.Object)[3] AT LINE 117 with ID [6c93121f-1e33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() AT LINE 117 with ID [6c93121f-1e33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 117 with ID [6c93121f-1e33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10[0] = $stack15 AT LINE 117 with ID [6c93121f-1e33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10[1] = block AT LINE 117 with ID [6c93121f-1e33]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10[2] = datanode AT LINE 117 with ID [6c93121f-1e33]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* {}: add {} to {}", $stack10) AT LINE 117 with ID [6c93121f-1e33]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack26 != 0 goto $stack27 = new java.lang.StringBuilder at line 1684 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack10 == 0 goto done = 0 at line 1670 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 >= 0 goto $stack9 = this.<org.apache.hadoop.hdfs.DFSInputStream: java.util.concurrent.atomic.AtomicBoolean closed> at line 1667 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 <= 0 goto $stack8 = targetPos cmp 0L at line 1664 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.DFSInputStream: void seek(long)>
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager$Monitor: boolean exceededNumBlocksPerCheck()> has 4 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack1 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger access$100()>() AT LINE 485 with ID [a227a9e2-4ae1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack2 = this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager$Monitor: int numBlocksChecked> AT LINE 485 with ID [a227a9e2-4ae1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack2) AT LINE 485 with ID [a227a9e2-4ae1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack1.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Processed {} blocks so far this tick", $stack4) AT LINE 485 with ID [a227a9e2-4ae1]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Client$Connection: void setupConnection(org.apache.hadoop.security.UserGroupInformation)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 683 with ID [f3745e41-2dec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding ") AT LINE 683 with ID [f3745e41-2dec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(principal) AT LINE 683 with ID [f3745e41-2dec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 683 with ID [f3745e41-2dec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(localAddr) AT LINE 683 with ID [f3745e41-2dec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 683 with ID [f3745e41-2dec]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack40.<org.slf4j.Logger: void debug(java.lang.String)>($stack45) AT LINE 683 with ID [f3745e41-2dec]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack34 != 0 goto writer = virtualinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: org.apache.hadoop.net.Node chooseTargetInOrder(int,org.apache.hadoop.net.Node,java.util.Set,long,int,java.util.List,boolean,boolean,java.util.EnumMap)>(numOfReplicas#35, writer, excludedNodes, blocksize, maxNodesPerRack, results, avoidStaleNodes, newBlock, storageTypes) at line 412 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack25 != 0 goto numOfResults = interfaceinvoke results.<java.util.List: int size()>() at line 389 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: org.apache.hadoop.net.Node chooseTarget(int,org.apache.hadoop.net.Node,java.util.Set,long,int,java.util.List,boolean,org.apache.hadoop.hdfs.protocol.BlockStoragePolicy,java.util.EnumSet,boolean)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: org.slf4j.Logger LOG> AT LINE 408 with ID [86e7ae60-2bd0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storageTypes=") AT LINE 408 with ID [86e7ae60-2bd0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(storageTypes) AT LINE 408 with ID [86e7ae60-2bd0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 408 with ID [86e7ae60-2bd0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void trace(java.lang.String)>($stack47) AT LINE 408 with ID [86e7ae60-2bd0]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: void startLocalizer(org.apache.hadoop.yarn.server.nodemanager.executor.LocalizerStartContext)> has 8 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.commons.logging.Log LOG> AT LINE 672 with ID [6a705803-ee64]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = interfaceinvoke $stack44.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 672 with ID [6a705803-ee64]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack45 == 0 goto $stack46 = new java.util.ArrayList AT LINE 672 with ID [6a705803-ee64]
2020-08-25 12:10:04 [INFO] - 	 -> $stack109 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: org.apache.commons.logging.Log LOG> AT LINE 673 with ID [6a705803-ee64]
2020-08-25 12:10:04 [INFO] - 	 -> $stack108 = newarray (java.lang.Object)[1] AT LINE 673 with ID [6a705803-ee64]
2020-08-25 12:10:04 [INFO] - 	 -> $stack108[0] = cwdApp AT LINE 673 with ID [6a705803-ee64]
2020-08-25 12:10:04 [INFO] - 	 -> $stack110 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("cwdApp: %s", $stack108) AT LINE 673 with ID [6a705803-ee64]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack109.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack110) AT LINE 673 with ID [6a705803-ee64]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack32 == 0 goto $stack33 = <org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore: org.slf4j.Logger LOG> at line 1506 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore: long evictOldStartTimes(long)> has 26 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack108 = <org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore: org.slf4j.Logger LOG> AT LINE 1519 with ID [6420235c-3540]
2020-08-25 12:10:04 [INFO] - 	 -> $stack109 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preparing to delete a batch of ") AT LINE 1519 with ID [6420235c-3540]
2020-08-25 12:10:04 [INFO] - 	 -> $stack110 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(batchSize) AT LINE 1519 with ID [6420235c-3540]
2020-08-25 12:10:04 [INFO] - 	 -> $stack111 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" old start times") AT LINE 1519 with ID [6420235c-3540]
2020-08-25 12:10:04 [INFO] - 	 -> $stack112 = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1519 with ID [6420235c-3540]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack108.<org.slf4j.Logger: void debug(java.lang.String)>($stack112) AT LINE 1519 with ID [6420235c-3540]
2020-08-25 12:10:04 [INFO] - 	 -> $stack96 = <org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore: org.slf4j.Logger LOG> AT LINE 1524 with ID [c7a893d5-f619]
2020-08-25 12:10:04 [INFO] - 	 -> $stack97 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted batch of ") AT LINE 1524 with ID [c7a893d5-f619]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(batchSize) AT LINE 1524 with ID [c7a893d5-f619]
2020-08-25 12:10:04 [INFO] - 	 -> $stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Total start times deleted so far this cycle: ") AT LINE 1524 with ID [c7a893d5-f619]
2020-08-25 12:10:04 [INFO] - 	 -> $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(startTimesCount) AT LINE 1524 with ID [c7a893d5-f619]
2020-08-25 12:10:04 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1524 with ID [c7a893d5-f619]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack96.<org.slf4j.Logger: void debug(java.lang.String)>($stack101) AT LINE 1524 with ID [c7a893d5-f619]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = <org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore: org.slf4j.Logger LOG> AT LINE 1536 with ID [20666b80-2410]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preparing to delete a batch of ") AT LINE 1536 with ID [20666b80-2410]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(batchSize) AT LINE 1536 with ID [20666b80-2410]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" old start times") AT LINE 1536 with ID [20666b80-2410]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1536 with ID [20666b80-2410]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack67.<org.slf4j.Logger: void debug(java.lang.String)>($stack71) AT LINE 1536 with ID [20666b80-2410]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = <org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore: org.slf4j.Logger LOG> AT LINE 1541 with ID [471686eb-309b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted batch of ") AT LINE 1541 with ID [471686eb-309b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(batchSize) AT LINE 1541 with ID [471686eb-309b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Total start times deleted so far this cycle: ") AT LINE 1541 with ID [471686eb-309b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(startTimesCount) AT LINE 1541 with ID [471686eb-309b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1541 with ID [471686eb-309b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack53.<org.slf4j.Logger: void debug(java.lang.String)>($stack58) AT LINE 1541 with ID [471686eb-309b]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler: org.apache.hadoop.security.authentication.server.AuthenticationToken authenticate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> has 6 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 362 with ID [08888afc-a0f5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Authenticating with dt param: {}", delegationParam) AT LINE 362 with ID [08888afc-a0f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 380 with ID [21d3c668-c94d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler: org.apache.hadoop.security.authentication.server.AuthenticationHandler authHandler> AT LINE 380 with ID [21d3c668-c94d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack9.<java.lang.Object: java.lang.Class getClass()>() AT LINE 380 with ID [21d3c668-c94d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Falling back to {} (req={})", $stack12, request) AT LINE 380 with ID [21d3c668-c94d]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack36 != null goto $stack37 = new org.apache.hadoop.hdfs.shortcircuit.DfsClientShm at line 176 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack35 >= 0 goto $stack36 = fis[0] at line 172 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager$EndpointShmManager: org.apache.hadoop.hdfs.shortcircuit.DfsClientShm requestNewShm(java.lang.String,org.apache.hadoop.hdfs.net.DomainPeer)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = staticinvoke <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: org.slf4j.Logger access$000()>() AT LINE 184 with ID [1232db6e-7bfc]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack41.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: createNewShm: created {}", this, shm) AT LINE 184 with ID [1232db6e-7bfc]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.GetGroups: void setConf(org.apache.hadoop.conf.Configuration)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.tools.GetGroups: org.apache.commons.logging.Log LOG> AT LINE 76 with ID [46861fac-f199]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using NN principal: ") AT LINE 76 with ID [46861fac-f199]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nameNodePrincipal) AT LINE 76 with ID [46861fac-f199]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 76 with ID [46861fac-f199]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 76 with ID [46861fac-f199]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.job.impl.JobImpl: void handle(org.apache.hadoop.mapreduce.v2.app.job.event.JobEvent)> has 9 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.mapreduce.v2.app.job.impl.JobImpl: org.apache.commons.logging.Log LOG> AT LINE 1003 with ID [bbff6add-acca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ") AT LINE 1003 with ID [bbff6add-acca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke event.<org.apache.hadoop.mapreduce.v2.app.job.event.JobEvent: org.apache.hadoop.mapreduce.v2.api.records.JobId getJobId()>() AT LINE 1003 with ID [bbff6add-acca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack28) AT LINE 1003 with ID [bbff6add-acca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ") AT LINE 1003 with ID [bbff6add-acca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke event.<org.apache.hadoop.mapreduce.v2.app.job.event.JobEvent: java.lang.Enum getType()>() AT LINE 1003 with ID [bbff6add-acca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31) AT LINE 1003 with ID [bbff6add-acca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1003 with ID [bbff6add-acca]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack33) AT LINE 1003 with ID [bbff6add-acca]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if block != null goto $stack49 = this.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$SnapshotDiffSectionProcessor: org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor this$0> at line 1489 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if actualDiffs >= $stack30 goto $stack31 = this.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$SnapshotDiffSectionProcessor: org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor this$0> at line 1455 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if expectedDiffs != null goto $stack25 = virtualinvoke expectedDiffs.<java.lang.Integer: int intValue()>() at line 1449 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if inodeId != null goto $stack22 = virtualinvoke inodeId.<java.lang.Long: long longValue()>() at line 1443 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$SnapshotDiffSectionProcessor: void processFileDiffEntry()> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.commons.logging.Log LOG> AT LINE 1436 with ID [1de25c5e-508b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Processing fileDiffEntry") AT LINE 1436 with ID [1de25c5e-508b]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack12 != null goto $stack13 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: java.util.List newlyAllocatedContainers> at line 146 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: void containerCompleted(org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer,org.apache.hadoop.yarn.api.records.ContainerStatus,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerEventType)> has 11 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 159 with ID [b23e0958-90d3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Completed container: ") AT LINE 159 with ID [b23e0958-90d3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = interfaceinvoke rmContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 159 with ID [b23e0958-90d3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack55) AT LINE 159 with ID [b23e0958-90d3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in state: ") AT LINE 159 with ID [b23e0958-90d3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = interfaceinvoke rmContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerState getState()>() AT LINE 159 with ID [b23e0958-90d3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack58) AT LINE 159 with ID [b23e0958-90d3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" event:") AT LINE 159 with ID [b23e0958-90d3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(event) AT LINE 159 with ID [b23e0958-90d3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 159 with ID [b23e0958-90d3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack53.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack62) AT LINE 159 with ID [b23e0958-90d3]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: org.apache.hadoop.mapreduce.v2.app.job.impl.TaskAttemptImpl addAttempt(org.apache.hadoop.mapreduce.v2.api.records.Avataar)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: org.apache.commons.logging.Log LOG> AT LINE 622 with ID [f23abd86-f0c2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created attempt ") AT LINE 622 with ID [f23abd86-f0c2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke attempt.<org.apache.hadoop.mapreduce.v2.app.job.impl.TaskAttemptImpl: org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId getID()>() AT LINE 622 with ID [f23abd86-f0c2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack28) AT LINE 622 with ID [f23abd86-f0c2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 622 with ID [f23abd86-f0c2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack30) AT LINE 622 with ID [f23abd86-f0c2]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack39 == 0 goto (branch) at line 723 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if splitIndex != 0 goto parentNodePath = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: java.lang.String getNodePath(java.lang.String,java.lang.String)>(appRoot, childNodeName) at line 716 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack27 != 0 goto (branch) at line 729 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack26 == 0 goto $stack27 = virtualinvoke childNodeName.<java.lang.String: boolean equals(java.lang.Object)>("HIERARCHIES") at line 714 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if splitIndex > 4 goto return at line 706 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack18 == 0 goto $stack19 = this.<org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: int appIdNodeSplitIndex> at line 713 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void loadRMAppState(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 730 with ID [2182a5ff-6f8a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown child node with name ") AT LINE 730 with ID [2182a5ff-6f8a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(childNodeName) AT LINE 730 with ID [2182a5ff-6f8a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" under") AT LINE 730 with ID [2182a5ff-6f8a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(appRoot) AT LINE 730 with ID [2182a5ff-6f8a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 730 with ID [2182a5ff-6f8a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 730 with ID [2182a5ff-6f8a]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$#7 >= $stack23 goto $stack17 = new org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor$Registrations at line 1118 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack22 == 0 goto i$#7 = 0 at line 1081 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack16 = interfaceinvoke newSubClusters.<java.util.List: int size()>() at line 1067 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack87 != 0 goto (branch) at line 1072 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack83 != 0 goto (branch) at line 1068 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor$Registrations registerWithNewSubClusters(java.util.Set)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.slf4j.Logger LOG> AT LINE 1124 with ID [cec4b98e-a780]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received register application response from RM: ") AT LINE 1124 with ID [cec4b98e-a780]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = virtualinvoke uamResponse.<org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor$RegisterApplicationMasterResponseInfo: org.apache.hadoop.yarn.server.federation.store.records.SubClusterId getSubClusterId()>() AT LINE 1124 with ID [cec4b98e-a780]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack73) AT LINE 1124 with ID [cec4b98e-a780]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1124 with ID [cec4b98e-a780]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack71.<org.slf4j.Logger: void debug(java.lang.String)>($stack75) AT LINE 1124 with ID [cec4b98e-a780]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if prevConnectionState#2 == null goto specialinvoke this.<org.apache.hadoop.ha.ActiveStandbyElector: void fatalError(java.lang.String)>("Unexpected watch error from Zookeeper") at line 649 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if eventType != $stack9 goto prevConnectionState#2 = virtualinvoke event.<org.apache.zookeeper.WatchedEvent: java.lang.String getPath()>() at line 604 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack7 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> at line 596 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector: void processWatchEvent(org.apache.zookeeper.ZooKeeper,org.apache.zookeeper.WatchedEvent)> has 23 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Watcher event type: ") AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(eventType) AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with state:") AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke event.<org.apache.zookeeper.WatchedEvent: org.apache.zookeeper.Watcher$Event$KeeperState getState()>() AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack49) AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for path:") AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke event.<org.apache.zookeeper.WatchedEvent: java.lang.String getPath()>() AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack52) AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" connectionState: ") AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = this.<org.apache.hadoop.ha.ActiveStandbyElector: org.apache.hadoop.ha.ActiveStandbyElector$ConnectionState zkConnectionState> AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack55) AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String)>($stack59) AT LINE 598 with ID [70a2e78e-fccd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 662 with ID [b0b72003-ff0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected node event: ") AT LINE 662 with ID [b0b72003-ff0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(eventType) AT LINE 662 with ID [b0b72003-ff0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for path: ") AT LINE 662 with ID [b0b72003-ff0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prevConnectionState#2) AT LINE 662 with ID [b0b72003-ff0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 662 with ID [b0b72003-ff0d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 662 with ID [b0b72003-ff0d]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack22 != 0 goto $stack24 = this.<org.apache.hadoop.security.authentication.server.KerberosAuthenticationHandler: javax.security.auth.Subject serverSubject> at line 286 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.server.KerberosAuthenticationHandler: org.apache.hadoop.security.authentication.server.AuthenticationToken authenticate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> has 3 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.security.authentication.server.KerberosAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 272 with ID [3c62b1b7-6416]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>() AT LINE 272 with ID [3c62b1b7-6416]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("SPNEGO starting for url: {}", $stack12) AT LINE 272 with ID [3c62b1b7-6416]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if saslServer != null goto $stack20 = <org.apache.hadoop.security.SaslRpcServer: org.slf4j.Logger LOG> at line 170 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = new org.apache.hadoop.security.SaslRpcServer$SaslGssCallbackHandler at line 142 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslRpcServer: javax.security.sasl.SaslServer create(org.apache.hadoop.ipc.Server$Connection,java.util.Map,org.apache.hadoop.security.token.SecretManager)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.security.SaslRpcServer: org.slf4j.Logger LOG> AT LINE 175 with ID [6cabc3de-f460]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created SASL server with mechanism = ") AT LINE 175 with ID [6cabc3de-f460]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = this.<org.apache.hadoop.security.SaslRpcServer: java.lang.String mechanism> AT LINE 175 with ID [6cabc3de-f460]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 175 with ID [6cabc3de-f460]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 175 with ID [6cabc3de-f460]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack27) AT LINE 175 with ID [6cabc3de-f460]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack5 != 0 goto $stack6 = virtualinvoke ugi.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getUserName()>() at line 942 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.apache.zookeeper.data.ACL createACLForUser(org.apache.hadoop.security.UserGroupInformation,int)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 940 with ID [9adf2b85-c293]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating ACL For ", $stack9) AT LINE 940 with ID [9adf2b85-c293]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if checkParentQueue == 0 goto return 1 at line 988 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack33 != 0 goto $stack34 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock> at line 965 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: boolean accept(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ResourceCommitRequest)> has 9 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.commons.logging.Log LOG> AT LINE 969 with ID [a7e7d9e4-f76f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Used resource=") AT LINE 969 with ID [a7e7d9e4-f76f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage queueUsage> AT LINE 969 with ID [a7e7d9e4-f76f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getUsed(java.lang.String)>(partition) AT LINE 969 with ID [a7e7d9e4-f76f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack43) AT LINE 969 with ID [a7e7d9e4-f76f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeded maxResourceLimit of the queue =") AT LINE 969 with ID [a7e7d9e4-f76f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(maxResourceLimit) AT LINE 969 with ID [a7e7d9e4-f76f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 969 with ID [a7e7d9e4-f76f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack47) AT LINE 969 with ID [a7e7d9e4-f76f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if queueUser != null goto (branch) at line 1420 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.api.records.Resource computeUserLimitAndSetHeadroom(org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp,org.apache.hadoop.yarn.api.records.Resource,java.lang.String,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode,org.apache.hadoop.yarn.api.records.Resource)> has 23 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 1422 with ID [66603465-c3c7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ") AT LINE 1422 with ID [66603465-c3c7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 1422 with ID [66603465-c3c7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has been removed!") AT LINE 1422 with ID [66603465-c3c7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1422 with ID [66603465-c3c7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack61.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack65) AT LINE 1422 with ID [66603465-c3c7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Headroom calculation for user ") AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" userLimit=") AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(userLimit) AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" queueMaxAvailRes=") AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits cachedResourceLimitsForHeadroom> AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits: org.apache.hadoop.yarn.api.records.Resource getLimit()>() AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31) AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" consumed=") AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke queueUser.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager$User: org.apache.hadoop.yarn.api.records.Resource getUsed()>() AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack34) AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" partition=") AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodePartition) AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack38) AT LINE 1441 with ID [0218b02b-8678]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if storeForId == null goto (branch) at line 945 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = interfaceinvoke stores.<java.util.List: int size()>() at line 943 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: java.util.List getTimelineStoresFromCacheIds(java.util.Set,java.lang.String,java.util.List)> has 5 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 946 with ID [19b5624f-cc96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = interfaceinvoke storeForId.<org.apache.hadoop.yarn.server.timeline.TimelineStore: java.lang.String getName()>() AT LINE 946 with ID [19b5624f-cc96]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Adding {} as a store for the query", $stack22) AT LINE 946 with ID [19b5624f-cc96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 952 with ID [ec31cafd-7d21]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Using summary store for {}", entityType) AT LINE 952 with ID [ec31cafd-7d21]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack23 == 0 goto success = 0 at line 1030 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack11 = this.<org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.apache.hadoop.hdfs.server.namenode.FSNamesystem namesystem> at line 1015 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: void rename2(java.lang.String,java.lang.String,org.apache.hadoop.fs.Options$Rename[])> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.slf4j.Logger stateChangeLog> AT LINE 1013 with ID [7fdc2b1e-327e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*DIR* NameNode.rename: ") AT LINE 1013 with ID [7fdc2b1e-327e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 1013 with ID [7fdc2b1e-327e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 1013 with ID [7fdc2b1e-327e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dst) AT LINE 1013 with ID [7fdc2b1e-327e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1013 with ID [7fdc2b1e-327e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String)>($stack34) AT LINE 1013 with ID [7fdc2b1e-327e]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack30 >= 0 goto $stack31 = new java.io.File at line 1236 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.apache.hadoop.hdfs.server.datanode.ReplicaBeingWritten append(java.lang.String,org.apache.hadoop.hdfs.server.datanode.FinalizedReplica,long,long)> has 17 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 1254 with ID [0ca0b938-681a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Renaming ") AT LINE 1254 with ID [0ca0b938-681a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(oldmeta) AT LINE 1254 with ID [0ca0b938-681a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 1254 with ID [0ca0b938-681a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(newmeta) AT LINE 1254 with ID [0ca0b938-681a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1254 with ID [0ca0b938-681a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack71.<org.slf4j.Logger: void debug(java.lang.String)>($stack76) AT LINE 1254 with ID [0ca0b938-681a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 1267 with ID [8c61bd12-c1c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Renaming ") AT LINE 1267 with ID [8c61bd12-c1c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(blkfile) AT LINE 1267 with ID [8c61bd12-c1c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 1267 with ID [8c61bd12-c1c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(newBlkFile) AT LINE 1267 with ID [8c61bd12-c1c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", file length=") AT LINE 1267 with ID [8c61bd12-c1c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = virtualinvoke blkfile.<java.io.File: long length()>() AT LINE 1267 with ID [8c61bd12-c1c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack63) AT LINE 1267 with ID [8c61bd12-c1c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1267 with ID [8c61bd12-c1c5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack57.<org.slf4j.Logger: void debug(java.lang.String)>($stack65) AT LINE 1267 with ID [8c61bd12-c1c5]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i >= $stack14 goto staticinvoke <org.apache.hadoop.mapreduce.security.TokenCache: void obtainTokensForNamenodes(org.apache.hadoop.security.Credentials,org.apache.hadoop.fs.Path[],org.apache.hadoop.conf.Configuration)>(credentials, ps, conf) at line 437 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.JobSubmitter: void populateTokenCache(org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.Credentials)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.mapreduce.JobSubmitter: org.apache.commons.logging.Log LOG> AT LINE 433 with ID [8120ef2d-0368]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adding the following namenodes\' delegation tokens:") AT LINE 433 with ID [8120ef2d-0368]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(nameNodes) AT LINE 433 with ID [8120ef2d-0368]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10) AT LINE 433 with ID [8120ef2d-0368]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 433 with ID [8120ef2d-0368]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack12) AT LINE 433 with ID [8120ef2d-0368]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack17 <= 0 goto $stack18 = specialinvoke this.<org.apache.hadoop.hdfs.util.LightWeightHashSet: int computeCapacity(int)>(initCapacity) at line 117 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack10 <= 0 goto $stack11 = minLoadFactor cmpg 0.0F at line 113 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.util.LightWeightHashSet: void <init>(int,float,float)> has 10 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hdfs.util.LightWeightHashSet: org.apache.commons.logging.Log LOG> AT LINE 131 with ID [946e003d-16bd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initial capacity=") AT LINE 131 with ID [946e003d-16bd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = this.<org.apache.hadoop.hdfs.util.LightWeightHashSet: int initialCapacity> AT LINE 131 with ID [946e003d-16bd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack37) AT LINE 131 with ID [946e003d-16bd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max load factor= ") AT LINE 131 with ID [946e003d-16bd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(maxLoadFactor) AT LINE 131 with ID [946e003d-16bd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", min load factor= ") AT LINE 131 with ID [946e003d-16bd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(minLoadFactor) AT LINE 131 with ID [946e003d-16bd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 131 with ID [946e003d-16bd]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack35.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack43) AT LINE 131 with ID [946e003d-16bd]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 == 0 goto (branch) at line 113 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack15 == 0 goto virtualinvoke newDestinations.<java.util.LinkedList: boolean add(java.lang.Object)>(dest) at line 114 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack6 > 1 goto $stack7 = new java.util.LinkedList at line 107 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.resolver.PathLocation: java.util.List orderedNamespaces(java.util.List,java.lang.String)> has 5 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> found = 0 AT LINE 112 with ID [42699f4a-f0ae]
2020-08-25 12:10:04 [INFO] - 	 -> found = 1 AT LINE 115 with ID [42699f4a-f0ae]
2020-08-25 12:10:04 [INFO] - 	 -> if found != 0 goto $stack10 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(newDestinations) AT LINE 122 with ID [42699f4a-f0ae]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.server.federation.resolver.PathLocation: org.slf4j.Logger LOG> AT LINE 123 with ID [42699f4a-f0ae]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Cannot find location with namespace {} in {}", nsId, original) AT LINE 123 with ID [42699f4a-f0ae]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if 0 != $stack86 goto $stack87 = new org.apache.hadoop.mapred.Merger$Segment at line 820 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$#60 >= len$ goto $stack53 = <org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: org.apache.commons.logging.Log LOG> at line 779 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if null == null goto $stack204 = <org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: org.apache.commons.logging.Log LOG> at line 757 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: org.apache.hadoop.mapred.RawKeyValueIterator finalMerge(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.fs.FileSystem,java.util.List,java.util.List)> has 8 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack149 = rIter#26 AT LINE 779 with ID [UNKNOWN_ID]
2020-08-25 12:10:04 [INFO] - 	 -> $stack125 = <org.apache.hadoop.mapreduce.task.reduce.MergeManagerImpl: org.apache.commons.logging.Log LOG> AT LINE 784 with ID [49b39ac4-bf35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack126 = virtualinvoke $stack124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disk file: ") AT LINE 784 with ID [49b39ac4-bf35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack127 = virtualinvoke $stack126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(file) AT LINE 784 with ID [49b39ac4-bf35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack128 = virtualinvoke $stack127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Length is ") AT LINE 784 with ID [49b39ac4-bf35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack129 = virtualinvoke $stack128.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileLength) AT LINE 784 with ID [49b39ac4-bf35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack130 = virtualinvoke $stack129.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 784 with ID [49b39ac4-bf35]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack125.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack130) AT LINE 784 with ID [49b39ac4-bf35]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.fs.FsUrlConnection: void connect()> has 3 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = <org.apache.hadoop.fs.FsUrlConnection: org.slf4j.Logger LOG> AT LINE 58 with ID [fcdbc08e-2f43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack3 = this.<org.apache.hadoop.fs.FsUrlConnection: java.net.URL url> AT LINE 58 with ID [fcdbc08e-2f43]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Connecting to {}", $stack3) AT LINE 58 with ID [fcdbc08e-2f43]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if buf#13 != null goto $stack58 = new org.apache.hadoop.oncrpc.security.VerifierNone at line 2267 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack171 == 0 goto $stack173 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> at line 2170 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if reply#11 == null goto reply#12 = staticinvoke <java.lang.System: long nanoTime()>() at line 2169 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack187 == $stack188 goto $stack30 = virtualinvoke this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: boolean isIdempotent(org.apache.hadoop.oncrpc.RpcCall)>(rpcCall) at line 2166 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: void handleInternal(org.jboss.netty.channel.ChannelHandlerContext,org.apache.hadoop.oncrpc.RpcInfo)> has 21 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack144 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 2207 with ID [ce04a897-2db7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack145 = virtualinvoke $stack143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("READ_RPC_CALL_START____") AT LINE 2207 with ID [ce04a897-2db7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack146 = virtualinvoke $stack145.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(xid) AT LINE 2207 with ID [ce04a897-2db7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack147 = virtualinvoke $stack146.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2207 with ID [ce04a897-2db7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack144.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack147) AT LINE 2207 with ID [ce04a897-2db7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack139 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 2211 with ID [ea08eeb9-cbc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack140 = virtualinvoke $stack138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("READ_RPC_CALL_END______") AT LINE 2211 with ID [ea08eeb9-cbc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack141 = virtualinvoke $stack140.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(xid) AT LINE 2211 with ID [ea08eeb9-cbc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack142 = virtualinvoke $stack141.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2211 with ID [ea08eeb9-cbc8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack139.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack142) AT LINE 2211 with ID [ea08eeb9-cbc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack122 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 2216 with ID [9fd6d524-5e82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack123 = virtualinvoke $stack121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WRITE_RPC_CALL_START____") AT LINE 2216 with ID [9fd6d524-5e82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack124 = virtualinvoke $stack123.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(xid) AT LINE 2216 with ID [9fd6d524-5e82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack125 = virtualinvoke $stack124.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2216 with ID [9fd6d524-5e82]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack122.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack125) AT LINE 2216 with ID [9fd6d524-5e82]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 2269 with ID [0bb5d9c5-9e22]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No sync response, expect an async response for request XID=") AT LINE 2269 with ID [0bb5d9c5-9e22]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = virtualinvoke rpcCall.<org.apache.hadoop.oncrpc.RpcCall: int getXid()>() AT LINE 2269 with ID [0bb5d9c5-9e22]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack74) AT LINE 2269 with ID [0bb5d9c5-9e22]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2269 with ID [0bb5d9c5-9e22]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack72.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack76) AT LINE 2269 with ID [0bb5d9c5-9e22]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void checkIfClusterIsNowMultiRack(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 5 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message) AT LINE 1316 with ID [bb0a625f-6a45]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not checking for mis-replicated blocks because this NN is not yet processing repl queues.") AT LINE 1316 with ID [bb0a625f-6a45]
2020-08-25 12:10:04 [INFO] - 	 -> message = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1316 with ID [bb0a625f-6a45]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.commons.logging.Log LOG> AT LINE 1318 with ID [bb0a625f-6a45]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(message) AT LINE 1318 with ID [bb0a625f-6a45]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack8 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(";") at line 130 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.qjournal.MiniJournalCluster: java.net.URI getQuorumJournalURI(java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.qjournal.MiniJournalCluster: org.apache.commons.logging.Log LOG> AT LINE 134 with ID [d5028fca-7d01]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting logger addresses to: ") AT LINE 134 with ID [d5028fca-7d01]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(arr$#4) AT LINE 134 with ID [d5028fca-7d01]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 134 with ID [d5028fca-7d01]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 134 with ID [d5028fca-7d01]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: void alterWriteRequest(org.apache.hadoop.nfs.nfs3.request.WRITE3Request,long)> has 25 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 494 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = interfaceinvoke $stack13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 494 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack14 == 0 goto data = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.WRITE3Request: java.nio.ByteBuffer getData()>() AT LINE 494 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = newarray (java.lang.Object)[7] AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(offset) AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40[0] = $stack44 AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = (long) count AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = offset + $stack45 AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack46) AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40[1] = $stack48 AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(cachedOffset) AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40[2] = $stack50 AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(offset) AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40[3] = $stack52 AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(cachedOffset) AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40[4] = $stack54 AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(cachedOffset) AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40[5] = $stack56 AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = (long) count AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = offset + $stack57 AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack58) AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40[6] = $stack60 AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Got overwrite with appended data [%d-%d), current offset %d, drop the overlapped section [%d-%d) and append new data [%d-%d).", $stack40) AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack41.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack61) AT LINE 495 with ID [e1040770-8d31]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack16 == 0 goto (branch) at line 153 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 == 0 goto (branch) at line 151 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.PlanQueue: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock> at line 149 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 <= 0 goto $stack8 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.PlanQueue: java.util.List childQueues> at line 144 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.PlanQueue: void removeChildQueue(org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSQueue)> has 6 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.PlanQueue: org.slf4j.Logger LOG> AT LINE 153 with ID [c72df1d8-ed68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = interfaceinvoke $stack15.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 153 with ID [c72df1d8-ed68]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack16 == 0 goto (branch) AT LINE 153 with ID [c72df1d8-ed68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.PlanQueue: org.slf4j.Logger LOG> AT LINE 154 with ID [c72df1d8-ed68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = interfaceinvoke cs.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSQueue: java.lang.String getQueueName()>() AT LINE 154 with ID [c72df1d8-ed68]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Removed child queue: {}", $stack19) AT LINE 154 with ID [c72df1d8-ed68]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if node == row goto row = row.<org.apache.hadoop.examples.dancing.DancingLinks$Node: org.apache.hadoop.examples.dancing.DancingLinks$Node down> at line 228 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if row == col goto return at line 226 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.examples.dancing.DancingLinks: void coverColumn(org.apache.hadoop.examples.dancing.DancingLinks$ColumnHeader)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = <org.apache.hadoop.examples.dancing.DancingLinks: org.slf4j.Logger LOG> AT LINE 221 with ID [cf0896d3-efd2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cover ") AT LINE 221 with ID [cf0896d3-efd2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = col.<org.apache.hadoop.examples.dancing.DancingLinks$ColumnHeader: org.apache.hadoop.examples.dancing.DancingLinks$ColumnHeader head> AT LINE 221 with ID [cf0896d3-efd2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = $stack7.<org.apache.hadoop.examples.dancing.DancingLinks$ColumnHeader: java.lang.Object name> AT LINE 221 with ID [cf0896d3-efd2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8) AT LINE 221 with ID [cf0896d3-efd2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 221 with ID [cf0896d3-efd2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>($stack10) AT LINE 221 with ID [cf0896d3-efd2]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if resourceRequestInfo != null goto $stack9 = <org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable: org.apache.commons.logging.Log LOG> at line 299 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable: org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl$ResourceRequestInfo decResourceRequest(org.apache.hadoop.yarn.api.records.Priority,java.lang.String,org.apache.hadoop.yarn.api.records.ExecutionTypeRequest,org.apache.hadoop.yarn.api.records.Resource,java.lang.Object)> has 27 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = <org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable: org.apache.commons.logging.Log LOG> AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not decrementing resource as ResourceRequestInfo withpriority=") AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(priority) AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resourceName=") AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourceName) AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("executionType=") AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(execTypeReq) AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("capability=") AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(capability) AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not present in request table") AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack55) AT LINE 301 with ID [1b2e16f0-5b8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable: org.apache.commons.logging.Log LOG> AT LINE 311 with ID [50caa02f-8c96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BEFORE decResourceRequest: applicationId= priority=") AT LINE 311 with ID [50caa02f-8c96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke priority.<org.apache.hadoop.yarn.api.records.Priority: int getPriority()>() AT LINE 311 with ID [50caa02f-8c96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24) AT LINE 311 with ID [50caa02f-8c96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resourceName=") AT LINE 311 with ID [50caa02f-8c96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourceName) AT LINE 311 with ID [50caa02f-8c96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numContainers=") AT LINE 311 with ID [50caa02f-8c96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = resourceRequestInfo.<org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl$ResourceRequestInfo: org.apache.hadoop.yarn.api.records.ResourceRequest remoteRequest> AT LINE 311 with ID [50caa02f-8c96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<org.apache.hadoop.yarn.api.records.ResourceRequest: int getNumContainers()>() AT LINE 311 with ID [50caa02f-8c96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack30) AT LINE 311 with ID [50caa02f-8c96]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 311 with ID [50caa02f-8c96]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 311 with ID [50caa02f-8c96]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.UserGroupInformation$HadoopLoginModule: boolean logout()> has 5 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack1 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 253 with ID [8ded65e9-13ce]
2020-08-25 12:10:04 [INFO] - 	 -> $stack2 = interfaceinvoke $stack1.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 253 with ID [8ded65e9-13ce]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack2 == 0 goto return 1 AT LINE 253 with ID [8ded65e9-13ce]
2020-08-25 12:10:04 [INFO] - 	 -> $stack3 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 254 with ID [8ded65e9-13ce]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("hadoop logout") AT LINE 254 with ID [8ded65e9-13ce]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.apache.curator.framework.CuratorFramework createCurator()> has 6 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 243 with ID [ec13f729-bb26]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = interfaceinvoke $stack17.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 243 with ID [ec13f729-bb26]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack18 == 0 goto l8 = class "Lorg/apache/hadoop/registry/client/impl/zk/CuratorService;" AT LINE 243 with ID [ec13f729-bb26]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 244 with ID [ec13f729-bb26]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.registry.client.impl.zk.CuratorService: java.lang.String connectionDescription> AT LINE 244 with ID [ec13f729-bb26]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating CuratorService with connection {}", $stack30) AT LINE 244 with ID [ec13f729-bb26]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.security.AMRMTokenSecretManager: void addPersistedPassword(org.apache.hadoop.security.token.Token)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.server.resourcemanager.security.AMRMTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 228 with ID [32b10684-d24a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding password for ") AT LINE 228 with ID [32b10684-d24a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 228 with ID [32b10684-d24a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack9) AT LINE 228 with ID [32b10684-d24a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 228 with ID [32b10684-d24a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 228 with ID [32b10684-d24a]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack16 = <org.apache.hadoop.hdfs.net.DFSNetworkTopology: org.slf4j.Logger LOG> at line 127 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if n != null goto $stack14 = n instanceof org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor at line 117 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.net.DFSNetworkTopology: org.apache.hadoop.net.Node chooseRandomWithStorageTypeTwoTrial(java.lang.String,java.util.Collection,org.apache.hadoop.fs.StorageType)> has 7 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.net.DFSNetworkTopology: org.slf4j.Logger LOG> AT LINE 118 with ID [f4352424-5f4b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = interfaceinvoke $stack22.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 118 with ID [f4352424-5f4b]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack23 == 0 goto $stack24 = this.<org.apache.hadoop.hdfs.net.DFSNetworkTopology: java.util.concurrent.locks.ReadWriteLock netlock> AT LINE 118 with ID [f4352424-5f4b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hdfs.net.DFSNetworkTopology: org.slf4j.Logger LOG> AT LINE 119 with ID [f4352424-5f4b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String)>("No node to choose.") AT LINE 119 with ID [f4352424-5f4b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.net.DFSNetworkTopology: org.slf4j.Logger LOG> AT LINE 132 with ID [9c1c2572-a710]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("First trial failed, node has no type {}, making second trial carrying this type", type) AT LINE 132 with ID [9c1c2572-a710]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if length != 0 goto l6 = this at line 67 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.fs.FSInputStream: int read(long,byte[],int,int)>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if conf != null goto $stack4 = staticinvoke <org.apache.hadoop.io.compress.zlib.ZlibFactory: org.apache.hadoop.io.compress.zlib.ZlibCompressor$CompressionLevel getCompressionLevel(org.apache.hadoop.conf.Configuration)>(conf) at line 68 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.io.compress.zlib.BuiltInZlibDeflater: void reinit(org.apache.hadoop.conf.Configuration)> has 5 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.io.compress.zlib.BuiltInZlibDeflater: org.slf4j.Logger LOG> AT LINE 80 with ID [8d0923ec-6e9c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = interfaceinvoke $stack8.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 80 with ID [8d0923ec-6e9c]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack9 == 0 goto return AT LINE 80 with ID [8d0923ec-6e9c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.io.compress.zlib.BuiltInZlibDeflater: org.slf4j.Logger LOG> AT LINE 81 with ID [8d0923ec-6e9c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>("Reinit compressor with new compression configuration") AT LINE 81 with ID [8d0923ec-6e9c]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack43 != 0 goto return needToSave at line 220 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack27 != 0 goto return needToSave at line 235 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSImagePreTransactionalStorageInspector: boolean doRecovery()> has 9 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hdfs.server.namenode.FSImagePreTransactionalStorageInspector: org.apache.commons.logging.Log LOG> AT LINE 198 with ID [3ec7ff13-44c1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Performing recovery in ") AT LINE 198 with ID [3ec7ff13-44c1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = this.<org.apache.hadoop.hdfs.server.namenode.FSImagePreTransactionalStorageInspector: org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory latestNameSD> AT LINE 198 with ID [3ec7ff13-44c1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack7) AT LINE 198 with ID [3ec7ff13-44c1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") AT LINE 198 with ID [3ec7ff13-44c1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = this.<org.apache.hadoop.hdfs.server.namenode.FSImagePreTransactionalStorageInspector: org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory latestEditsSD> AT LINE 198 with ID [3ec7ff13-44c1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10) AT LINE 198 with ID [3ec7ff13-44c1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 198 with ID [3ec7ff13-44c1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack12) AT LINE 198 with ID [3ec7ff13-44c1]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: long skip(long)> has 14 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> discardedFromBuf = 0 AT LINE 602 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.slf4j.Logger LOG> AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = newarray (java.lang.Object)[5] AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(n) AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7[0] = $stack11 AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7[1] = $stack12 AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: java.lang.String filename> AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7[2] = $stack13 AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(discardedFromBuf) AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7[3] = $stack15 AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(remaining) AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7[4] = $stack17 AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("skip(n={}, block={}, filename={}): discarded {} bytes from dataBuf and advanced dataPos by {}", $stack7) AT LINE 609 with ID [6b81cced-a72a]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.CorruptReplicasMap: void addToCorruptReplicasMap(org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,java.lang.String,org.apache.hadoop.hdfs.server.blockmanagement.CorruptReplicasMap$Reason)> has 24 units and 5 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because ") AT LINE 79 with ID [cb5274fd-09aa, aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reason) AT LINE 79 with ID [cb5274fd-09aa, aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> reasonText = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 79 with ID [cb5274fd-09aa, aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> reasonText = "" AT LINE 81 with ID [cb5274fd-09aa, aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = interfaceinvoke nodes.<java.util.Map: java.util.Set keySet()>() AT LINE 84 with ID [cb5274fd-09aa, aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = interfaceinvoke $stack9.<java.util.Set: boolean contains(java.lang.Object)>(dn) AT LINE 84 with ID [cb5274fd-09aa, aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack10 != 0 goto $stack12 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger blockStateChangeLog> AT LINE 84 with ID [cb5274fd-09aa, aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger blockStateChangeLog> AT LINE 85 with ID [cb5274fd-09aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = newarray (java.lang.Object)[4] AT LINE 85 with ID [cb5274fd-09aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17[0] = blk AT LINE 85 with ID [cb5274fd-09aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17[1] = dn AT LINE 85 with ID [cb5274fd-09aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = staticinvoke <org.apache.hadoop.ipc.Server: java.net.InetAddress getRemoteIp()>() AT LINE 85 with ID [cb5274fd-09aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17[2] = $stack21 AT LINE 85 with ID [cb5274fd-09aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17[3] = reasonText AT LINE 85 with ID [cb5274fd-09aa]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK NameSystem.addToCorruptReplicasMap: {} added as corrupt on {} by {} {}", $stack17) AT LINE 85 with ID [cb5274fd-09aa]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= interfaceinvoke nodes.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(dn, reasonCode)] AT LINE 85 with ID [cb5274fd-09aa, aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger blockStateChangeLog> AT LINE 90 with ID [aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = newarray (java.lang.Object)[4] AT LINE 90 with ID [aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11[0] = blk AT LINE 90 with ID [aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11[1] = dn AT LINE 90 with ID [aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = staticinvoke <org.apache.hadoop.ipc.Server: java.net.InetAddress getRemoteIp()>() AT LINE 90 with ID [aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11[2] = $stack15 AT LINE 90 with ID [aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11[3] = reasonText AT LINE 90 with ID [aade32bf-b15f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK NameSystem.addToCorruptReplicasMap: duplicate requested for {} to add as corrupt on {} by {} {}", $stack11) AT LINE 90 with ID [aade32bf-b15f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if noStaleStorages == 0 goto return null at line 1479 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if r >= $stack14 goto virtualinvoke bm.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void removeBRLeaseIfNeeded(org.apache.hadoop.hdfs.protocol.DatanodeID,org.apache.hadoop.hdfs.server.protocol.BlockReportContext)>(nodeReg, context) at line 1450 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand blockReport(org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration,java.lang.String,org.apache.hadoop.hdfs.server.protocol.StorageBlockReport[],org.apache.hadoop.hdfs.server.protocol.BlockReportContext)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.slf4j.Logger blockStateChangeLog> AT LINE 1445 with ID [b3814003-ba6d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*BLOCK* NameNode.blockReport: from ") AT LINE 1445 with ID [b3814003-ba6d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nodeReg) AT LINE 1445 with ID [b3814003-ba6d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reports.length=") AT LINE 1445 with ID [b3814003-ba6d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = lengthof reports AT LINE 1445 with ID [b3814003-ba6d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack39) AT LINE 1445 with ID [b3814003-ba6d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1445 with ID [b3814003-ba6d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String)>($stack41) AT LINE 1445 with ID [b3814003-ba6d]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack10 != 0 goto staticinvoke <java.util.Collections: void sort(java.util.List)>(children) at line 645 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.lang.String getNextSubDir(java.lang.String,java.io.File)> has 33 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 646 with ID [c5092003-5640]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = newarray (java.lang.Object)[3] AT LINE 646 with ID [c5092003-5640]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl this$0> AT LINE 646 with ID [c5092003-5640]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: java.lang.String access$400(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl)>($stack32) AT LINE 646 with ID [c5092003-5640]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31[0] = $stack36 AT LINE 646 with ID [c5092003-5640]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.lang.String bpid> AT LINE 646 with ID [c5092003-5640]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31[1] = $stack37 AT LINE 646 with ID [c5092003-5640]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke dir.<java.io.File: java.lang.String getAbsolutePath()>() AT LINE 646 with ID [c5092003-5640]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31[2] = $stack39 AT LINE 646 with ID [c5092003-5640]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("getNextSubDir({}, {}): no subdirectories found in {}", $stack31) AT LINE 646 with ID [c5092003-5640]
2020-08-25 12:10:04 [INFO] - 	 -> if nextSubDir != null goto $stack14 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 652 with ID [4bb06b6f-cdb7, aca180ca-1f68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 653 with ID [4bb06b6f-cdb7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = newarray (java.lang.Object)[3] AT LINE 653 with ID [4bb06b6f-cdb7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl this$0> AT LINE 653 with ID [4bb06b6f-cdb7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: java.lang.String access$400(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl)>($stack22) AT LINE 653 with ID [4bb06b6f-cdb7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21[0] = $stack26 AT LINE 653 with ID [4bb06b6f-cdb7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.lang.String bpid> AT LINE 653 with ID [4bb06b6f-cdb7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21[1] = $stack27 AT LINE 653 with ID [4bb06b6f-cdb7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke dir.<java.io.File: java.lang.String getAbsolutePath()>() AT LINE 653 with ID [4bb06b6f-cdb7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21[2] = $stack29 AT LINE 653 with ID [4bb06b6f-cdb7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("getNextSubDir({}, {}): no more subdirectories found in {}", $stack21) AT LINE 653 with ID [4bb06b6f-cdb7]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= return nextSubDir] AT LINE 653 with ID [4bb06b6f-cdb7, aca180ca-1f68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 656 with ID [aca180ca-1f68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = newarray (java.lang.Object)[4] AT LINE 656 with ID [aca180ca-1f68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl this$0> AT LINE 656 with ID [aca180ca-1f68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: java.lang.String access$400(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl)>($stack13) AT LINE 656 with ID [aca180ca-1f68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[0] = $stack17 AT LINE 656 with ID [aca180ca-1f68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.lang.String bpid> AT LINE 656 with ID [aca180ca-1f68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[1] = $stack18 AT LINE 656 with ID [aca180ca-1f68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[2] = nextSubDir AT LINE 656 with ID [aca180ca-1f68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke dir.<java.io.File: java.lang.String getAbsolutePath()>() AT LINE 656 with ID [aca180ca-1f68]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[3] = $stack20 AT LINE 656 with ID [aca180ca-1f68]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("getNextSubDir({}, {}): picking next subdirectory {} within {}", $stack12) AT LINE 656 with ID [aca180ca-1f68]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if isDone != 0 goto $stack38 = new org.apache.hadoop.io.retry.CallReturn at line 281 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 == null goto $stack10 = <org.apache.hadoop.io.retry.AsyncCallHandler: org.slf4j.Logger LOG> at line 276 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall: org.apache.hadoop.io.retry.CallReturn invoke()> has 17 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = <org.apache.hadoop.io.retry.AsyncCallHandler: org.slf4j.Logger LOG> AT LINE 275 with ID [85a988f9-6075]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() AT LINE 275 with ID [85a988f9-6075]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 275 with ID [85a988f9-6075]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}.invoke {}", $stack8, this) AT LINE 275 with ID [85a988f9-6075]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = <org.apache.hadoop.io.retry.AsyncCallHandler: org.slf4j.Logger LOG> AT LINE 279 with ID [58ebd3ba-8d52]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke this.<org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall: int getCallId()>() AT LINE 279 with ID [58ebd3ba-8d52]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack35) AT LINE 279 with ID [58ebd3ba-8d52]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(isDone) AT LINE 279 with ID [58ebd3ba-8d52]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("#{} invoke: lowerLayerAsyncGet.isDone()? {}", $stack36, $stack37) AT LINE 279 with ID [58ebd3ba-8d52]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.io.retry.AsyncCallHandler: org.slf4j.Logger LOG> AT LINE 292 with ID [d5037c28-bf8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke this.<org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall: int getCallId()>() AT LINE 292 with ID [d5037c28-bf8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack12) AT LINE 292 with ID [d5037c28-bf8c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("#{} invoke: ASYNC_INVOKED", $stack13) AT LINE 292 with ID [d5037c28-bf8c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = <org.apache.hadoop.io.retry.AsyncCallHandler: org.slf4j.Logger LOG> AT LINE 303 with ID [2a2d94ea-eb5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke this.<org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall: int getCallId()>() AT LINE 303 with ID [2a2d94ea-eb5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack21) AT LINE 303 with ID [2a2d94ea-eb5f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("#{} invoke: initAsyncCall", $stack22) AT LINE 303 with ID [2a2d94ea-eb5f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if e == null goto (branch) at line 1066 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> at line 1061 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.apache.hadoop.yarn.api.records.timeline.TimelineEntity getEntity(java.lang.String,java.lang.String,java.util.EnumSet)> has 8 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 1057 with ID [63350979-bf0c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("getEntity type={} id={}", entityType, entityId) AT LINE 1057 with ID [63350979-bf0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 1062 with ID [3f9f2c10-96d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = interfaceinvoke store.<org.apache.hadoop.yarn.server.timeline.TimelineStore: java.lang.String getName()>() AT LINE 1062 with ID [3f9f2c10-96d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke store.<java.lang.Object: java.lang.String toString()>() AT LINE 1062 with ID [3f9f2c10-96d7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Try timeline store {}:{} for the request", $stack18, $stack19) AT LINE 1062 with ID [3f9f2c10-96d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 1070 with ID [ca943b87-092d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>("getEntity: Found nothing") AT LINE 1070 with ID [ca943b87-092d]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack31 == 0 goto i$#11 = ts at line 90 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.security.token.delegation.DelegationUtilsClient: org.apache.hadoop.security.Credentials getDTfromRemote(org.apache.hadoop.hdfs.web.URLConnectionFactory,java.net.URI,java.lang.String,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.security.token.delegation.DelegationUtilsClient: org.slf4j.Logger LOG> AT LINE 83 with ID [0f924ad9-e26d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Retrieving token from: {}", buf) AT LINE 83 with ID [0f924ad9-e26d]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack16 == 0 goto return credentials at line 155 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.utils.YarnServerSecurityUtils: org.apache.hadoop.security.Credentials parseCredentials(org.apache.hadoop.yarn.api.records.ContainerLaunchContext)> has 10 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 161 with ID [60ee54e1-7b84]
2020-08-25 12:10:04 [INFO] - 	 -> tk = (org.apache.hadoop.security.token.Token) $stack17 AT LINE 161 with ID [60ee54e1-7b84]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.utils.YarnServerSecurityUtils: org.slf4j.Logger LOG> AT LINE 156 with ID [60ee54e1-7b84]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke tk.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 156 with ID [60ee54e1-7b84]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack20) AT LINE 156 with ID [60ee54e1-7b84]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ") AT LINE 156 with ID [60ee54e1-7b84]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke tk.<org.apache.hadoop.security.token.Token: java.lang.String toString()>() AT LINE 156 with ID [60ee54e1-7b84]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 156 with ID [60ee54e1-7b84]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 156 with ID [60ee54e1-7b84]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 156 with ID [60ee54e1-7b84]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.api.records.Resource computeUserLimit(java.lang.String,org.apache.hadoop.yarn.api.records.Resource,java.lang.String,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode,boolean)> has 51 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.commons.logging.Log LOG> AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User limit computation for ") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(userName) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  in queue: ") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue lQueue> AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: java.lang.String getQueueName()>() AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack67) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  userLimitPercent=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue lQueue> AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: int getUserLimit()>() AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack71) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  userLimitFactor=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue lQueue> AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: float getUserLimitFactor()>() AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack75) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  required=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(required) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  consumed=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(consumed) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  user-limit-resource=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(userLimitResource) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  queueCapacity=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(queueCapacity) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack85 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  qconsumed=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack86 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue lQueue> AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage getQueueResourceUsage()>() AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getUsed()>() AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack89 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack88) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  currentCapacity=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack91 = virtualinvoke $stack90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(currentCapacity) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack92 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  activeUsers=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack93 = virtualinvoke $stack92.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(usersSummedByWeight) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack94 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  clusterCapacity=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack95 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clusterResource) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack96 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  resourceByLabel=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(partitionResource) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  usageratio=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack99 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: float getUsageRatio(java.lang.String)>(nodePartition) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack100 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack99) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  Partition=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack102 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodePartition) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack103 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  resourceUsed=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack104 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(resourceUsed) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack105 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  maxUserLimit=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(maxUserLimit) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",  userWeight=") AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack108 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager$User getUser(java.lang.String)>(userName) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack109 = virtualinvoke $stack108.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager$User: float getWeight()>() AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack110 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack109) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> $stack111 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack62.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack111) AT LINE 797 with ID [cf7e9a55-1465]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.ipc.YarnRPC: org.apache.hadoop.yarn.ipc.YarnRPC create(org.apache.hadoop.conf.Configuration)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = <org.apache.hadoop.yarn.ipc.YarnRPC: org.apache.commons.logging.Log LOG> AT LINE 59 with ID [f29d25bc-f402]
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating YarnRPC for ") AT LINE 59 with ID [f29d25bc-f402]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = virtualinvoke conf.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("yarn.ipc.rpc.class") AT LINE 59 with ID [f29d25bc-f402]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6) AT LINE 59 with ID [f29d25bc-f402]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 59 with ID [f29d25bc-f402]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack8) AT LINE 59 with ID [f29d25bc-f402]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.security.TimelineV1DelegationTokenSecretManagerService$TimelineV1DelegationTokenSecretManager: void removeStoredMasterKey(org.apache.hadoop.security.token.delegation.DelegationKey)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.timeline.security.TimelineV1DelegationTokenSecretManagerService$TimelineV1DelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 157 with ID [0e305599-df5c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing master key ") AT LINE 157 with ID [0e305599-df5c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke key.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 157 with ID [0e305599-df5c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack10) AT LINE 157 with ID [0e305599-df5c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 157 with ID [0e305599-df5c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 157 with ID [0e305599-df5c]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack40 == 0 goto $stack42 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> at line 563 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack27 == 0 goto $stack28 = new java.io.IOException at line 562 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack69 == 0 goto $stack27 = staticinvoke <org.apache.hadoop.hdfs.protocol.Block: boolean matchingIdAndGenStamp(org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.protocol.Block)>(penultimateBlock, previousBlock) at line 562 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack82 != 0 goto src = virtualinvoke iip.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>() at line 588 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp$FileState analyzeFileState(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.INodesInPath,long,java.lang.String,org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.protocol.LocatedBlock[])> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 557 with ID [9346c939-010f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BLOCK* NameSystem.allocateBlock: handling block allocation writing to a file with a complete previous block: src=") AT LINE 557 with ID [9346c939-010f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 557 with ID [9346c939-010f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastBlock=") AT LINE 557 with ID [9346c939-010f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(lastBlockInFile) AT LINE 557 with ID [9346c939-010f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 557 with ID [9346c939-010f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack76.<org.slf4j.Logger: void debug(java.lang.String)>($stack81) AT LINE 557 with ID [9346c939-010f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if shm != null goto $stack12 = virtualinvoke slotId.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$SlotId: int getSlotIdx()>() at line 349 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 != 0 goto shmId = virtualinvoke slotId.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$SlotId: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$ShmId getShmId()>() at line 340 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: void registerSlot(org.apache.hadoop.hdfs.ExtendedBlockId,org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$SlotId,boolean)> has 17 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: org.apache.commons.logging.Log LOG> AT LINE 342 with ID [e937d43a-8701]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 342 with ID [e937d43a-8701]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can\'t register a slot because the ") AT LINE 342 with ID [e937d43a-8701]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ShortCircuitRegistry is not enabled.") AT LINE 342 with ID [e937d43a-8701]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 342 with ID [e937d43a-8701]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack46) AT LINE 342 with ID [e937d43a-8701]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: org.apache.commons.logging.Log LOG> AT LINE 362 with ID [6f274a69-67b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 362 with ID [6f274a69-67b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": registered ") AT LINE 362 with ID [6f274a69-67b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(blockId) AT LINE 362 with ID [6f274a69-67b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with slot ") AT LINE 362 with ID [6f274a69-67b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(slotId) AT LINE 362 with ID [6f274a69-67b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (isCached=") AT LINE 362 with ID [6f274a69-67b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(isCached) AT LINE 362 with ID [6f274a69-67b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 362 with ID [6f274a69-67b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 362 with ID [6f274a69-67b3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack28) AT LINE 362 with ID [6f274a69-67b3]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DockerLinuxContainerRuntime: org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperation buildLaunchOp(org.apache.hadoop.yarn.server.nodemanager.containermanager.runtime.ContainerRuntimeContext,java.lang.String,org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker.DockerRunCommand)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DockerLinuxContainerRuntime: org.slf4j.Logger LOG> AT LINE 789 with ID [298ad263-7b97]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Launching container with cmd: ") AT LINE 789 with ID [298ad263-7b97]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(runCommand) AT LINE 789 with ID [298ad263-7b97]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 789 with ID [298ad263-7b97]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack68.<org.slf4j.Logger: void debug(java.lang.String)>($stack71) AT LINE 789 with ID [298ad263-7b97]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack31 = newarray (java.lang.String)[0] at line 749 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: java.lang.String[] getQueues(java.lang.String)> has 18 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> AT LINE 745 with ID [76989f53-c37e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSConf - getQueues called for: queuePrefix=") AT LINE 745 with ID [76989f53-c37e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: java.lang.String getQueuePrefix(java.lang.String)>(queue) AT LINE 745 with ID [76989f53-c37e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 745 with ID [76989f53-c37e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 745 with ID [76989f53-c37e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 745 with ID [76989f53-c37e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> AT LINE 755 with ID [959dd516-8712]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSConf - getQueues: queuePrefix=") AT LINE 755 with ID [959dd516-8712]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: java.lang.String getQueuePrefix(java.lang.String)>(queue) AT LINE 755 with ID [959dd516-8712]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) AT LINE 755 with ID [959dd516-8712]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", queues=") AT LINE 755 with ID [959dd516-8712]
2020-08-25 12:10:04 [INFO] - 	 -> if queues != null goto $stack27 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String arrayToString(java.lang.String[])>(queues) AT LINE 755 with ID [959dd516-8712]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = "" AT LINE 757 with ID [959dd516-8712]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27)] AT LINE 757 with ID [959dd516-8712]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String arrayToString(java.lang.String[])>(queues) AT LINE 755 with ID [959dd516-8712]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27) AT LINE 755 with ID [959dd516-8712]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 755 with ID [959dd516-8712]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 755 with ID [959dd516-8712]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack116 == 0 goto (branch) at line 237 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack113 <= 0 goto $stack114 = virtualinvoke manifest.<org.apache.hadoop.hdfs.server.protocol.RemoteEditLogManifest: java.util.List getLogs()>() at line 232 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.Checkpointer: void doCheckpoint()> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.server.namenode.Checkpointer: org.apache.commons.logging.Log LOG> AT LINE 211 with ID [c48d5acd-97e8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Doing checkpoint. Last applied: ") AT LINE 211 with ID [c48d5acd-97e8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(lastApplied) AT LINE 211 with ID [c48d5acd-97e8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 211 with ID [c48d5acd-97e8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack31) AT LINE 211 with ID [c48d5acd-97e8]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: void initialize(java.net.URI,org.apache.hadoop.conf.Configuration)> has 4 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack78 = <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: org.slf4j.Logger LOG> AT LINE 224 with ID [2eac820b-d426]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack78.<org.slf4j.Logger: void debug(java.lang.String)>("Enabling OAuth2 in WebHDFS") AT LINE 224 with ID [2eac820b-d426]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: org.slf4j.Logger LOG> AT LINE 228 with ID [84d994b8-0cf5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>("Not enabling OAuth2 in WebHDFS") AT LINE 228 with ID [84d994b8-0cf5]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void wipeDatanode(org.apache.hadoop.hdfs.protocol.DatanodeID)> has 11 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.commons.logging.Log LOG> AT LINE 720 with ID [c31373f4-5dc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() AT LINE 720 with ID [c31373f4-5dc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 720 with ID [c31373f4-5dc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 720 with ID [c31373f4-5dc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".wipeDatanode(") AT LINE 720 with ID [c31373f4-5dc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(node) AT LINE 720 with ID [c31373f4-5dc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): storage ") AT LINE 720 with ID [c31373f4-5dc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 720 with ID [c31373f4-5dc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is removed from datanodeMap.") AT LINE 720 with ID [c31373f4-5dc7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 720 with ID [c31373f4-5dc7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack25) AT LINE 720 with ID [c31373f4-5dc7]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack102 == 0 goto $stack44 = (long) processed at line 3087 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack49 != 0 goto $stack50 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.namenode.Namesystem namesystem> at line 3069 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void processMisReplicatesAsync()> has 10 units and 5 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack122 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 3036 with ID [8b06e832-9f75]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack122.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("under replicated block {}: {}", block, res) AT LINE 3036 with ID [8b06e832-9f75]
2020-08-25 12:10:04 [INFO] - 	 -> $stack121 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 3040 with ID [3cb947e6-17b3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack121.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("over replicated block {}: {}", block, res) AT LINE 3040 with ID [3cb947e6-17b3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack120 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 3044 with ID [45f7de9e-425c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack120.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("invalid block {}: {}", block, res) AT LINE 3044 with ID [45f7de9e-425c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack119 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 3048 with ID [209b5d3a-e34f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack119.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("postpone block {}: {}", block, res) AT LINE 3048 with ID [209b5d3a-e34f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack118 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 3053 with ID [e8210652-09ab]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack118.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("under construction block {}: {}", block, res) AT LINE 3053 with ID [e8210652-09ab]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if key == null goto virtualinvoke reader#13.<java.io.BufferedReader: void close()>() at line 188 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack80 = interfaceinvoke mapSkipped.<java.util.List: boolean containsAll(java.util.Collection)>(mapperBadRecords) at line 150 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if key == null goto virtualinvoke reader.<org.apache.hadoop.io.SequenceFile$Reader: void close()>() at line 159 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TestBadRecords: void validateOutput(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.mapred.RunningJob,java.util.List,java.util.List)> has 28 units and 5 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack142 = <org.apache.hadoop.mapred.TestBadRecords: org.apache.commons.logging.Log LOG> AT LINE 161 with ID [2bf91667-1786]
2020-08-25 12:10:04 [INFO] - 	 -> $stack143 = virtualinvoke $stack141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key:") AT LINE 161 with ID [2bf91667-1786]
2020-08-25 12:10:04 [INFO] - 	 -> $stack144 = virtualinvoke $stack143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(key) AT LINE 161 with ID [2bf91667-1786]
2020-08-25 12:10:04 [INFO] - 	 -> $stack145 = virtualinvoke $stack144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value:") AT LINE 161 with ID [2bf91667-1786]
2020-08-25 12:10:04 [INFO] - 	 -> $stack146 = virtualinvoke value.<java.lang.Object: java.lang.String toString()>() AT LINE 161 with ID [2bf91667-1786]
2020-08-25 12:10:04 [INFO] - 	 -> $stack147 = virtualinvoke $stack145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack146) AT LINE 161 with ID [2bf91667-1786]
2020-08-25 12:10:04 [INFO] - 	 -> $stack148 = virtualinvoke $stack147.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 161 with ID [2bf91667-1786]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack142.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack148) AT LINE 161 with ID [2bf91667-1786]
2020-08-25 12:10:04 [INFO] - 	 -> $stack90 = <org.apache.hadoop.mapred.TestBadRecords: org.apache.commons.logging.Log LOG> AT LINE 179 with ID [7c0e25f3-961c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack91 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mapperOutput ") AT LINE 179 with ID [7c0e25f3-961c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack92 = interfaceinvoke len$#10.<java.util.List: int size()>() AT LINE 179 with ID [7c0e25f3-961c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack93 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack92) AT LINE 179 with ID [7c0e25f3-961c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack94 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 179 with ID [7c0e25f3-961c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack90.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack94) AT LINE 179 with ID [7c0e25f3-961c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack97 = <org.apache.hadoop.mapred.TestBadRecords: org.apache.commons.logging.Log LOG> AT LINE 181 with ID [c1b2ee6a-1369]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reducerOutput ") AT LINE 181 with ID [c1b2ee6a-1369]
2020-08-25 12:10:04 [INFO] - 	 -> $stack99 = interfaceinvoke i$#11.<java.util.List: int size()>() AT LINE 181 with ID [c1b2ee6a-1369]
2020-08-25 12:10:04 [INFO] - 	 -> $stack100 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack99) AT LINE 181 with ID [c1b2ee6a-1369]
2020-08-25 12:10:04 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 181 with ID [c1b2ee6a-1369]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack97.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack101) AT LINE 181 with ID [c1b2ee6a-1369]
2020-08-25 12:10:04 [INFO] - 	 -> key = virtualinvoke tokeniz.<java.util.StringTokenizer: java.lang.String nextToken()>() AT LINE 191 with ID [f42b255c-6d38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack116 = <org.apache.hadoop.mapred.TestBadRecords: org.apache.commons.logging.Log LOG> AT LINE 193 with ID [f42b255c-6d38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack117 = virtualinvoke $stack115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Output: key:") AT LINE 193 with ID [f42b255c-6d38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack118 = virtualinvoke $stack117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 193 with ID [f42b255c-6d38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack119 = virtualinvoke $stack118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  value:") AT LINE 193 with ID [f42b255c-6d38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack120 = virtualinvoke $stack119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value) AT LINE 193 with ID [f42b255c-6d38]
2020-08-25 12:10:04 [INFO] - 	 -> $stack121 = virtualinvoke $stack120.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 193 with ID [f42b255c-6d38]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack116.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack121) AT LINE 193 with ID [f42b255c-6d38]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL: java.net.HttpURLConnection openConnection(java.net.URL,org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL$Token,java.lang.String)> has 14 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL: org.slf4j.Logger LOG> AT LINE 291 with ID [33ba1e5a-e7d6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = newarray (java.lang.Object)[3] AT LINE 291 with ID [33ba1e5a-e7d6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[0] = url AT LINE 291 with ID [33ba1e5a-e7d6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[1] = token AT LINE 291 with ID [33ba1e5a-e7d6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[2] = doAs AT LINE 291 with ID [33ba1e5a-e7d6]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Connecting to url {} with token {} as {}", $stack12) AT LINE 291 with ID [33ba1e5a-e7d6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL: org.slf4j.Logger LOG> AT LINE 298 with ID [053637e8-e104]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = interfaceinvoke $stack34.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 298 with ID [053637e8-e104]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack35 == 0 goto $stack36 = virtualinvoke creds.<org.apache.hadoop.security.Credentials: java.util.Collection getAllTokens()>() AT LINE 298 with ID [053637e8-e104]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL: org.slf4j.Logger LOG> AT LINE 299 with ID [053637e8-e104]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke creds.<org.apache.hadoop.security.Credentials: java.util.Collection getAllTokens()>() AT LINE 299 with ID [053637e8-e104]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack50.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Token not set, looking for delegation token. Creds:{}", $stack52) AT LINE 299 with ID [053637e8-e104]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL: org.slf4j.Logger LOG> AT LINE 307 with ID [9c5999ef-56fc]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Using delegation token {} from service:{}", dToken, service) AT LINE 307 with ID [9c5999ef-56fc]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if app != null goto userId = interfaceinvoke app.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp: java.lang.String getUser()>() at line 54 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.timelineservice.RMTimelineCollectorManager: void doPostPut(org.apache.hadoop.yarn.api.records.ApplicationId,org.apache.hadoop.yarn.server.timelineservice.collector.TimelineCollector)> has 18 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = <org.apache.hadoop.yarn.server.resourcemanager.timelineservice.RMTimelineCollectorManager: org.apache.commons.logging.Log LOG> AT LINE 83 with ID [72675795-8154]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the flow name: ") AT LINE 83 with ID [72675795-8154]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = parts[1] AT LINE 83 with ID [72675795-8154]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack64) AT LINE 83 with ID [72675795-8154]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 83 with ID [72675795-8154]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack62.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack66) AT LINE 83 with ID [72675795-8154]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = <org.apache.hadoop.yarn.server.resourcemanager.timelineservice.RMTimelineCollectorManager: org.apache.commons.logging.Log LOG> AT LINE 89 with ID [d2b8b26b-a4aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the flow version: ") AT LINE 89 with ID [d2b8b26b-a4aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = parts[1] AT LINE 89 with ID [d2b8b26b-a4aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack52) AT LINE 89 with ID [d2b8b26b-a4aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 89 with ID [d2b8b26b-a4aa]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack50.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack54) AT LINE 89 with ID [d2b8b26b-a4aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = <org.apache.hadoop.yarn.server.resourcemanager.timelineservice.RMTimelineCollectorManager: org.apache.commons.logging.Log LOG> AT LINE 95 with ID [7fc3c433-66e7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the flow run id: ") AT LINE 95 with ID [7fc3c433-66e7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = parts[1] AT LINE 95 with ID [7fc3c433-66e7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack40) AT LINE 95 with ID [7fc3c433-66e7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 95 with ID [7fc3c433-66e7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack42) AT LINE 95 with ID [7fc3c433-66e7]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.task.reduce.ShuffleSchedulerImpl: void copySucceeded(org.apache.hadoop.mapreduce.TaskAttemptID,org.apache.hadoop.mapreduce.task.reduce.MapHost,long,long,long,org.apache.hadoop.mapreduce.task.reduce.MapOutput)> has 9 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = <org.apache.hadoop.mapreduce.task.reduce.ShuffleSchedulerImpl: org.apache.commons.logging.Log LOG> AT LINE 219 with ID [0dfa84e4-5c0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("map ") AT LINE 219 with ID [0dfa84e4-5c0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mapId) AT LINE 219 with ID [0dfa84e4-5c0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" done ") AT LINE 219 with ID [0dfa84e4-5c0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = this.<org.apache.hadoop.mapreduce.task.reduce.ShuffleSchedulerImpl: org.apache.hadoop.mapred.TaskStatus status> AT LINE 219 with ID [0dfa84e4-5c0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<org.apache.hadoop.mapred.TaskStatus: java.lang.String getStateString()>() AT LINE 219 with ID [0dfa84e4-5c0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack59) AT LINE 219 with ID [0dfa84e4-5c0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 219 with ID [0dfa84e4-5c0c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack54.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack61) AT LINE 219 with ID [0dfa84e4-5c0c]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 946 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack11 != 0 goto i$ = i$ + 1 at line 949 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if filenames != null goto arr$ = filenames at line 943 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.service.launcher.ServiceLauncher: void verifyConfigurationFilesExist(java.lang.String[])> has 3 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 948 with ID [766eb204-79f6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke file.<java.io.File: java.lang.String getAbsolutePath()>() AT LINE 948 with ID [766eb204-79f6]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Conf file {}", $stack10) AT LINE 948 with ID [766eb204-79f6]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if requestUgi != null goto renewer = staticinvoke <org.apache.hadoop.security.token.delegation.web.ServletUtils: java.lang.String getParameter(javax.servlet.http.HttpServletRequest,java.lang.String)>(request, "renewer") at line 240 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if requestUgi != null goto dToken#28 = staticinvoke <org.apache.hadoop.security.token.delegation.web.ServletUtils: java.lang.String getParameter(javax.servlet.http.HttpServletRequest,java.lang.String)>(request, "token") at line 256 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler: boolean managementOperation(org.apache.hadoop.security.authentication.server.AuthenticationToken,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> has 4 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 197 with ID [d1aa27d8-d84f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Processing operation for req=({}), token: {}", request, token) AT LINE 197 with ID [d1aa27d8-d84f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack82 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 210 with ID [5daa813e-f03a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack82.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Got token: {}.", token) AT LINE 210 with ID [5daa813e-f03a]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.store.StateStoreConnectionMonitorService: void periodicInvoke()> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack1 = <org.apache.hadoop.hdfs.server.federation.store.StateStoreConnectionMonitorService: org.slf4j.Logger LOG> AT LINE 61 with ID [63b9c2de-b64c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack1.<org.slf4j.Logger: void debug(java.lang.String)>("Checking state store connection") AT LINE 61 with ID [63b9c2de-b64c]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if exception != null goto l2 = this at line 264 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.service.AbstractService: void noteFailure(java.lang.Exception)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.service.AbstractService: org.slf4j.Logger LOG> AT LINE 262 with ID [534598ff-f5be]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("noteFailure ") AT LINE 262 with ID [534598ff-f5be]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(exception) AT LINE 262 with ID [534598ff-f5be]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 262 with ID [534598ff-f5be]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = (java.lang.Throwable) null AT LINE 262 with ID [534598ff-f5be]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($stack25, $stack26) AT LINE 262 with ID [534598ff-f5be]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if queue != null goto l5 = virtualinvoke queue.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: boolean hasAccess(org.apache.hadoop.yarn.api.records.QueueACL,org.apache.hadoop.security.UserGroupInformation)>(acl, callerUGI) at line 1457 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: boolean checkAccess(org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.yarn.api.records.QueueACL,java.lang.String)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.commons.logging.Log LOG> AT LINE 1459 with ID [03fb0108-7fb6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACL not found for queue access-type ") AT LINE 1459 with ID [03fb0108-7fb6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(acl) AT LINE 1459 with ID [03fb0108-7fb6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for queue ") AT LINE 1459 with ID [03fb0108-7fb6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(queueName) AT LINE 1459 with ID [03fb0108-7fb6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1459 with ID [03fb0108-7fb6]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 1459 with ID [03fb0108-7fb6]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.ReplicaOutputStreams: void <init>(java.io.OutputStream,java.io.OutputStream,org.apache.hadoop.util.DataChecksum,org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi,org.apache.hadoop.hdfs.server.datanode.FileIoProvider)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.ReplicaOutputStreams: org.slf4j.Logger LOG> AT LINE 67 with ID [b2fed9b7-630e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get file descriptor for outputstream of class ") AT LINE 67 with ID [b2fed9b7-630e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.ReplicaOutputStreams: java.io.OutputStream dataOut> AT LINE 67 with ID [b2fed9b7-630e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.Object: java.lang.Class getClass()>() AT LINE 67 with ID [b2fed9b7-630e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack13) AT LINE 67 with ID [b2fed9b7-630e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 67 with ID [b2fed9b7-630e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 67 with ID [b2fed9b7-630e]
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.web.TestWebHdfsTimeouts: void tearDown()>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if e#3 != 0 goto $stack22 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.slf4j.Logger LOG> at line 648 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: void cleanupContainer()> has 61 units and 8 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack110 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.slf4j.Logger LOG> AT LINE 654 with ID [ee2a409d-e8b5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack111 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Marking container ") AT LINE 654 with ID [ee2a409d-e8b5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack112 = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerIdStr) AT LINE 654 with ID [ee2a409d-e8b5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack113 = virtualinvoke $stack112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as inactive") AT LINE 654 with ID [ee2a409d-e8b5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack114 = virtualinvoke $stack113.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 654 with ID [ee2a409d-e8b5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack110.<org.slf4j.Logger: void debug(java.lang.String)>($stack114) AT LINE 654 with ID [ee2a409d-e8b5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack97 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.slf4j.Logger LOG> AT LINE 661 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting pid for container ") AT LINE 661 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> $stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerIdStr) AT LINE 661 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to kill") AT LINE 661 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid file ") AT LINE 661 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> $stack102 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.apache.hadoop.fs.Path pidFilePath> AT LINE 661 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack102 == null goto $stack108 = "null" AT LINE 661 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> $stack107 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.apache.hadoop.fs.Path pidFilePath> AT LINE 672 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> $stack108 = virtualinvoke $stack107.<org.apache.hadoop.fs.Path: java.lang.String toString()>() AT LINE 672 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= $stack103 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack108)] AT LINE 672 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> $stack108 = "null" AT LINE 672 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> $stack103 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack108) AT LINE 661 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> $stack104 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 661 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack97.<org.slf4j.Logger: void debug(java.lang.String)>($stack104) AT LINE 661 with ID [cc0dd5d9-f063]
2020-08-25 12:10:04 [INFO] - 	 -> $stack83 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.slf4j.Logger LOG> AT LINE 680 with ID [59f1c29c-b079]
2020-08-25 12:10:04 [INFO] - 	 -> $stack84 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending signal to pid ") AT LINE 680 with ID [59f1c29c-b079]
2020-08-25 12:10:04 [INFO] - 	 -> $stack85 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(processId) AT LINE 680 with ID [59f1c29c-b079]
2020-08-25 12:10:04 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as user ") AT LINE 680 with ID [59f1c29c-b079]
2020-08-25 12:10:04 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 680 with ID [59f1c29c-b079]
2020-08-25 12:10:04 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for container ") AT LINE 680 with ID [59f1c29c-b079]
2020-08-25 12:10:04 [INFO] - 	 -> $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerIdStr) AT LINE 680 with ID [59f1c29c-b079]
2020-08-25 12:10:04 [INFO] - 	 -> $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 680 with ID [59f1c29c-b079]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack83.<org.slf4j.Logger: void debug(java.lang.String)>($stack90) AT LINE 680 with ID [59f1c29c-b079]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: long sleepDelayBeforeSigKill> AT LINE 683 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = $stack39 cmp 0L AT LINE 683 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack40 <= 0 goto $stack76 = <org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal: org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal KILL> AT LINE 683 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = <org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal: org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal TERM> AT LINE 699 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= signal = $stack76] AT LINE 699 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = <org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal: org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal KILL> AT LINE 699 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> signal = $stack76 AT LINE 683 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor exec> AT LINE 687 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.apache.hadoop.yarn.server.nodemanager.containermanager.container.Container container> AT LINE 687 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack41.<org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext$Builder: org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext$Builder setContainer(org.apache.hadoop.yarn.server.nodemanager.containermanager.container.Container)>($stack43) AT LINE 687 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext$Builder: org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext$Builder setUser(java.lang.String)>(user) AT LINE 687 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext$Builder: org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext$Builder setPid(java.lang.String)>(processId) AT LINE 687 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext$Builder: org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext$Builder setSignal(org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal)>(signal) AT LINE 687 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext$Builder: org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext build()>() AT LINE 687 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> result = virtualinvoke $stack42.<org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor: boolean signalContainer(org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext)>($stack48) AT LINE 687 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.slf4j.Logger LOG> AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sent signal ") AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(signal) AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to pid ") AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(processId) AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as user ") AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for container ") AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerIdStr) AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", result=") AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> if result == 0 goto $stack75 = "failed" AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = "success" AT LINE 699 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack75)] AT LINE 699 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = "failed" AT LINE 699 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack75) AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack61.<org.slf4j.Logger: void debug(java.lang.String)>($stack72) AT LINE 695 with ID [dd280a69-05de]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = new org.apache.hadoop.yarn.exceptions.YarnException at line 312 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.server.uam.UnmanagedApplicationManager: void allocateAsync(org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest,org.apache.hadoop.yarn.util.AsyncCallback)>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 <= 0 goto return input at line 130 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i > $stack12 goto $stack9 = virtualinvoke sb.<java.lang.StringBuilder: int length()>() at line 123 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.resolver.order.HashResolver: java.lang.String extractTempFileName(java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.server.federation.resolver.order.HashResolver: org.slf4j.Logger LOG> AT LINE 132 with ID [53086daa-288e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Extracted {} from {}", i#2, input) AT LINE 132 with ID [53086daa-288e]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirectory: byte[][] constructRemainingPath(byte[][],byte[][],int)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger LOG> AT LINE 1587 with ID [1d2cd209-88b7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resolved path is ") AT LINE 1587 with ID [1d2cd209-88b7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: java.lang.String byteArray2PathString(byte[][])>(components) AT LINE 1587 with ID [1d2cd209-88b7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 1587 with ID [1d2cd209-88b7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1587 with ID [1d2cd209-88b7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>($stack13) AT LINE 1587 with ID [1d2cd209-88b7]
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.security.KDiag: void loginFromKeytab()>
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: void dumpSchedulerState()> has 25 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack3 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.QueueManager queueMgr> AT LINE 310 with ID [5bd287cc-0ee7, 102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> rootQueue = virtualinvoke $stack3.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.QueueManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSParentQueue getRootQueue()>() AT LINE 310 with ID [5bd287cc-0ee7, 102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> clusterResource = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.hadoop.yarn.api.records.Resource getClusterResource()>() AT LINE 311 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.commons.logging.Log LOG> AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FairScheduler state: Cluster Capacity: ") AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clusterResource) AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Allocations: ") AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueueMetrics rootMetrics> AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueueMetrics: org.apache.hadoop.yarn.api.records.Resource getAllocatedResources()>() AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack12) AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Availability: ") AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueueMetrics rootMetrics> AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueueMetrics: long getAvailableMB()>() AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueueMetrics rootMetrics> AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueueMetrics: int getAvailableVirtualCores()>() AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = staticinvoke <org.apache.hadoop.yarn.api.records.Resource: org.apache.hadoop.yarn.api.records.Resource newInstance(long,int)>($stack16, $stack18) AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Demand: ") AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke rootQueue.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: org.apache.hadoop.yarn.api.records.Resource getDemand()>() AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack22) AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 312 with ID [102289d4-ca7e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.commons.logging.Log STATE_DUMP_LOG> AT LINE 318 with ID [5bd287cc-0ee7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke rootQueue.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: java.lang.String dumpState()>() AT LINE 318 with ID [5bd287cc-0ee7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 318 with ID [5bd287cc-0ee7]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if attributeinfo != null goto (branch) at line 340 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack21 == 0 goto virtualinvoke jg.<org.codehaus.jackson.JsonGenerator: void writeEndArray()>() at line 258 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if e#23 >= $stack31 goto virtualinvoke jg.<org.codehaus.jackson.JsonGenerator: void writeEndObject()>() at line 335 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.jmx.JMXJsonServlet: void listBeans(org.codehaus.jackson.JsonGenerator,javax.management.ObjectName,java.lang.String,javax.servlet.http.HttpServletResponse)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.jmx.JMXJsonServlet: org.slf4j.Logger LOG> AT LINE 252 with ID [3443a48a-14a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Listing beans for ") AT LINE 252 with ID [3443a48a-14a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(qry) AT LINE 252 with ID [3443a48a-14a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 252 with ID [3443a48a-14a5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 252 with ID [3443a48a-14a5]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if filename != null goto out#2 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>("Range") at line 70 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.namenode.StreamFile: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack3 == 0 goto $stack4 = new org.apache.hadoop.ipc.Server$Connection at line 3344 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$ConnectionManager: org.apache.hadoop.ipc.Server$Connection register(java.nio.channels.SocketChannel)> has 13 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server connection from ") AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(connection) AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; # active connections: ") AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke this.<org.apache.hadoop.ipc.Server$ConnectionManager: int size()>() AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15) AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; # queued calls: ") AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.ipc.Server$ConnectionManager: org.apache.hadoop.ipc.Server this$0> AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = staticinvoke <org.apache.hadoop.ipc.Server: org.apache.hadoop.ipc.CallQueueManager access$3100(org.apache.hadoop.ipc.Server)>($stack18) AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<org.apache.hadoop.ipc.CallQueueManager: int size()>() AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack20) AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 3350 with ID [d71b9852-ae35]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if index != 0 goto index = index + -1 at line 611 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack30 != 0 goto ret = null at line 600 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack21 == 0 goto $stack22 = <org.apache.hadoop.net.NetworkTopology: java.util.Random r> at line 574 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.net.NetworkTopology: org.apache.hadoop.net.Node chooseRandom(org.apache.hadoop.net.InnerNode,org.apache.hadoop.net.Node,java.util.Collection,int,int)> has 7 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = <org.apache.hadoop.net.NetworkTopology: org.slf4j.Logger LOG> AT LINE 597 with ID [24cdbd58-0a23]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(index) AT LINE 597 with ID [24cdbd58-0a23]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("nthValidToReturn is {}", $stack26) AT LINE 597 with ID [24cdbd58-0a23]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = <org.apache.hadoop.net.NetworkTopology: org.slf4j.Logger LOG> AT LINE 602 with ID [a86fd6ee-f5f7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Chosen node {} from first random", ret) AT LINE 602 with ID [a86fd6ee-f5f7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = <org.apache.hadoop.net.NetworkTopology: org.slf4j.Logger LOG> AT LINE 617 with ID [573a0de3-f919]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Node {} is excluded, continuing.", ret) AT LINE 617 with ID [573a0de3-f919]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker.DockerCommandExecutor: java.lang.String executeDockerCommand(org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker.DockerCommand,java.lang.String,java.util.Map,org.apache.hadoop.conf.Configuration,org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperationExecutor,boolean)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.docker.DockerCommandExecutor: org.slf4j.Logger LOG> AT LINE 91 with ID [87651b83-a4a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running docker command: ") AT LINE 91 with ID [87651b83-a4a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dockerCommand) AT LINE 91 with ID [87651b83-a4a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 91 with ID [87651b83-a4a8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 91 with ID [87651b83-a4a8]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i >= 3 goto return at line 89 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack64 == 0 goto virtualinvoke reader.<org.apache.hadoop.mapreduce.RecordReader: void close()>() at line 116 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.input.TestCombineSequenceFileInputFormat: void testFormat()> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = <org.apache.hadoop.mapreduce.lib.input.TestCombineSequenceFileInputFormat: org.apache.commons.logging.Log LOG> AT LINE 121 with ID [99912b83-9f86]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read ") AT LINE 121 with ID [99912b83-9f86]
2020-08-25 12:10:04 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(k) AT LINE 121 with ID [99912b83-9f86]
2020-08-25 12:10:04 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 121 with ID [99912b83-9f86]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack75.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack78) AT LINE 121 with ID [99912b83-9f86]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if mbeanName != null goto interfaceinvoke mbs.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(mbeanName) at line 105 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.util.MBeans: void unregister(javax.management.ObjectName)> has 7 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = <org.apache.hadoop.metrics2.util.MBeans: org.slf4j.Logger LOG> AT LINE 103 with ID [269c89f4-4e54]
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unregistering ") AT LINE 103 with ID [269c89f4-4e54]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mbeanName) AT LINE 103 with ID [269c89f4-4e54]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 103 with ID [269c89f4-4e54]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String)>($stack7) AT LINE 103 with ID [269c89f4-4e54]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.metrics2.util.MBeans: org.slf4j.Logger LOG> AT LINE 106 with ID [b67275a1-8192]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("Stacktrace: ", $stack9) AT LINE 106 with ID [b67275a1-8192]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack104 <= 0 goto $stack105 = this.<org.apache.hadoop.hdfs.server.datanode.BlockSender: int chunkSize> at line 384 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if metaIn#51 != null goto $stack59 = this.<org.apache.hadoop.hdfs.server.datanode.BlockSender: org.apache.hadoop.hdfs.server.datanode.Replica replica> at line 312 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack48 >= 0 goto $stack49 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> at line 281 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack43 >= 0 goto $stack44 = this.<org.apache.hadoop.hdfs.server.datanode.BlockSender: org.apache.hadoop.hdfs.server.datanode.Replica replica> at line 270 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockSender: void <init>(org.apache.hadoop.hdfs.protocol.ExtendedBlock,long,long,boolean,boolean,boolean,org.apache.hadoop.hdfs.server.datanode.DataNode,java.lang.String,org.apache.hadoop.hdfs.server.datanode.CachingStrategy)> has 23 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack242 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 275 with ID [9dc6fb15-460e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack243 = virtualinvoke $stack241.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bumping up the client provided block\'s genstamp to latest ") AT LINE 275 with ID [9dc6fb15-460e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack244 = this.<org.apache.hadoop.hdfs.server.datanode.BlockSender: org.apache.hadoop.hdfs.server.datanode.Replica replica> AT LINE 275 with ID [9dc6fb15-460e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack245 = interfaceinvoke $stack244.<org.apache.hadoop.hdfs.server.datanode.Replica: long getGenerationStamp()>() AT LINE 275 with ID [9dc6fb15-460e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack246 = virtualinvoke $stack243.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack245) AT LINE 275 with ID [9dc6fb15-460e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack247 = virtualinvoke $stack246.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for block ") AT LINE 275 with ID [9dc6fb15-460e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack248 = virtualinvoke $stack247.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 275 with ID [9dc6fb15-460e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack249 = virtualinvoke $stack248.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 275 with ID [9dc6fb15-460e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack242.<org.slf4j.Logger: void debug(java.lang.String)>($stack249) AT LINE 275 with ID [9dc6fb15-460e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack219 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 286 with ID [526c63fd-59d1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack220 = virtualinvoke $stack218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("block=") AT LINE 286 with ID [526c63fd-59d1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack221 = virtualinvoke $stack220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 286 with ID [526c63fd-59d1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack222 = virtualinvoke $stack221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", replica=") AT LINE 286 with ID [526c63fd-59d1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack223 = this.<org.apache.hadoop.hdfs.server.datanode.BlockSender: org.apache.hadoop.hdfs.server.datanode.Replica replica> AT LINE 286 with ID [526c63fd-59d1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack224 = virtualinvoke $stack222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack223) AT LINE 286 with ID [526c63fd-59d1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack225 = virtualinvoke $stack224.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 286 with ID [526c63fd-59d1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack219.<org.slf4j.Logger: void debug(java.lang.String)>($stack225) AT LINE 286 with ID [526c63fd-59d1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack120 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 417 with ID [0845571d-2a9d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack121 = virtualinvoke $stack119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("replica=") AT LINE 417 with ID [0845571d-2a9d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack122 = this.<org.apache.hadoop.hdfs.server.datanode.BlockSender: org.apache.hadoop.hdfs.server.datanode.Replica replica> AT LINE 417 with ID [0845571d-2a9d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack123 = virtualinvoke $stack121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack122) AT LINE 417 with ID [0845571d-2a9d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack124 = virtualinvoke $stack123.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 417 with ID [0845571d-2a9d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack120.<org.slf4j.Logger: void debug(java.lang.String)>($stack124) AT LINE 417 with ID [0845571d-2a9d]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: void setUserLimit(java.lang.String,int)> has 9 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> AT LINE 489 with ID [d44c0e70-cfe6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("here setUserLimit: queuePrefix=") AT LINE 489 with ID [d44c0e70-cfe6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: java.lang.String getQueuePrefix(java.lang.String)>(queue) AT LINE 489 with ID [d44c0e70-cfe6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 489 with ID [d44c0e70-cfe6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userLimit=") AT LINE 489 with ID [d44c0e70-cfe6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: int getUserLimit(java.lang.String)>(queue) AT LINE 489 with ID [d44c0e70-cfe6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack14) AT LINE 489 with ID [d44c0e70-cfe6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 489 with ID [d44c0e70-cfe6]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 489 with ID [d44c0e70-cfe6]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService: void removeToken(org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = <org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService: org.apache.commons.logging.Log LOG> AT LINE 171 with ID [3d9c9e18-227b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing token ") AT LINE 171 with ID [3d9c9e18-227b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke tokenId.<org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 171 with ID [3d9c9e18-227b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack8) AT LINE 171 with ID [3d9c9e18-227b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 171 with ID [3d9c9e18-227b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack10) AT LINE 171 with ID [3d9c9e18-227b]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if replicaNotFoundCount != 0 goto $stack27 = new java.io.IOException at line 448 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack39 < 0 goto (branch) at line 392 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack46 <= 0 goto (branch) at line 382 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack41 == 0 goto (branch) at line 439 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if locatedblock != null goto $stack17 = virtualinvoke locatedblock.<org.apache.hadoop.hdfs.protocol.LocatedBlock: org.apache.hadoop.hdfs.protocol.DatanodeInfo[] getLocations()>() at line 413 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.DFSInputStream: long readBlockLength(org.apache.hadoop.hdfs.protocol.LocatedBlock)>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack26 <= 0 goto $stack27 = <org.apache.hadoop.hdfs.server.namenode.EditLogFileOutputStream: org.apache.commons.logging.Log LOG> at line 229 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack23 > 0 goto oldSize = size at line 223 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.EditLogFileOutputStream: void preallocate()> has 12 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> oldSize = size AT LINE 226 with ID [bb69a3e9-d2cb]
2020-08-25 12:10:04 [INFO] - 	 -> total = 0L AT LINE 227 with ID [bb69a3e9-d2cb]
2020-08-25 12:10:04 [INFO] - 	 -> total = total + fillCapacity AT LINE 234 with ID [bb69a3e9-d2cb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hdfs.server.namenode.EditLogFileOutputStream: org.apache.commons.logging.Log LOG> AT LINE 237 with ID [bb69a3e9-d2cb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preallocated ") AT LINE 237 with ID [bb69a3e9-d2cb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(total) AT LINE 237 with ID [bb69a3e9-d2cb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes at the end of ") AT LINE 237 with ID [bb69a3e9-d2cb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the edit log (offset ") AT LINE 237 with ID [bb69a3e9-d2cb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(oldSize) AT LINE 237 with ID [bb69a3e9-d2cb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 237 with ID [bb69a3e9-d2cb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 237 with ID [bb69a3e9-d2cb]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 237 with ID [bb69a3e9-d2cb]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack25 != 0 goto (branch) at line 1285 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSImage: void renameImageFileInDir(org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory,org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile,org.apache.hadoop.hdfs.server.namenode.NNStorage$NameNodeFile,long,boolean)> has 9 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = <org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.commons.logging.Log LOG> AT LINE 1280 with ID [68759191-0510]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("renaming  ") AT LINE 1280 with ID [68759191-0510]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke fromFile.<java.io.File: java.lang.String getAbsolutePath()>() AT LINE 1280 with ID [68759191-0510]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35) AT LINE 1280 with ID [68759191-0510]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 1280 with ID [68759191-0510]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke toFile.<java.io.File: java.lang.String getAbsolutePath()>() AT LINE 1280 with ID [68759191-0510]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack38) AT LINE 1280 with ID [68759191-0510]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1280 with ID [68759191-0510]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack40) AT LINE 1280 with ID [68759191-0510]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 == 47 goto return 1 at line 214 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 != 0 goto $stack9 = dest.<org.apache.hadoop.yarn.webapp.Router$Dest: java.lang.String prefix> at line 205 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.webapp.Router: boolean prefixMatches(org.apache.hadoop.yarn.webapp.Router$Dest,java.lang.String)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.webapp.Router: org.slf4j.Logger LOG> AT LINE 203 with ID [4cf3ab06-e2e1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack3 = newarray (java.lang.Object)[3] AT LINE 203 with ID [4cf3ab06-e2e1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = dest.<org.apache.hadoop.yarn.webapp.Router$Dest: java.lang.String prefix> AT LINE 203 with ID [4cf3ab06-e2e1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack3[0] = $stack4 AT LINE 203 with ID [4cf3ab06-e2e1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = dest.<org.apache.hadoop.yarn.webapp.Router$Dest: com.google.common.collect.ImmutableList pathParams> AT LINE 203 with ID [4cf3ab06-e2e1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack3[1] = $stack5 AT LINE 203 with ID [4cf3ab06-e2e1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack3[2] = path AT LINE 203 with ID [4cf3ab06-e2e1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("checking prefix {}{} for path: {}", $stack3) AT LINE 203 with ID [4cf3ab06-e2e1]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector: void becomeStandby()> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 999 with ID [74c4ed7d-e29f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Becoming standby for ") AT LINE 999 with ID [74c4ed7d-e29f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 999 with ID [74c4ed7d-e29f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 999 with ID [74c4ed7d-e29f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack11) AT LINE 999 with ID [74c4ed7d-e29f]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: boolean fillDataBuf(boolean)> has 12 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> oldDataPos = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: long dataPos> AT LINE 465 with ID [c55b083b-814c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.slf4j.Logger LOG> AT LINE 477 with ID [c55b083b-814c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = newarray (java.lang.Object)[3] AT LINE 477 with ID [c55b083b-814c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: java.nio.ByteBuffer dataBuf> AT LINE 477 with ID [c55b083b-814c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack29.<java.nio.ByteBuffer: int remaining()>() AT LINE 477 with ID [c55b083b-814c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack33) AT LINE 477 with ID [c55b083b-814c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28[0] = $stack34 AT LINE 477 with ID [c55b083b-814c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(oldDataPos) AT LINE 477 with ID [c55b083b-814c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28[1] = $stack36 AT LINE 477 with ID [c55b083b-814c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 477 with ID [c55b083b-814c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28[2] = $stack37 AT LINE 477 with ID [c55b083b-814c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("loaded {} bytes into bounce buffer from offset {} of {}", $stack28) AT LINE 477 with ID [c55b083b-814c]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if rmContainer != null goto $stack6 = interfaceinvoke rmContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.ExecutionType getExecutionType()>() at line 648 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: void completedContainer(org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer,org.apache.hadoop.yarn.api.records.ContainerStatus,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerEventType)> has 11 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: org.apache.commons.logging.Log LOG> AT LINE 670 with ID [78b1c5cc-7306]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Completed container: ") AT LINE 670 with ID [78b1c5cc-7306]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = interfaceinvoke rmContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 670 with ID [78b1c5cc-7306]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 670 with ID [78b1c5cc-7306]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in state: ") AT LINE 670 with ID [78b1c5cc-7306]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = interfaceinvoke rmContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerState getState()>() AT LINE 670 with ID [78b1c5cc-7306]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack22) AT LINE 670 with ID [78b1c5cc-7306]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" event:") AT LINE 670 with ID [78b1c5cc-7306]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(event) AT LINE 670 with ID [78b1c5cc-7306]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 670 with ID [78b1c5cc-7306]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 670 with ID [78b1c5cc-7306]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: void tryCommit(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ResourceCommitRequest)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 2553 with ID [fb7546f5-c970]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try to commit allocation proposal=") AT LINE 2553 with ID [fb7546f5-c970]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(request) AT LINE 2553 with ID [fb7546f5-c970]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2553 with ID [fb7546f5-c970]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack25) AT LINE 2553 with ID [fb7546f5-c970]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack22 == 0 goto $stack23 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> at line 396 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.net.unix.DomainSocketWatcher: boolean sendCallback(java.lang.String,java.util.TreeMap,org.apache.hadoop.net.unix.DomainSocketWatcher$FdSet,int)> has 35 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> AT LINE 389 with ID [f47e9997-4f78]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 389 with ID [f47e9997-4f78]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 389 with ID [f47e9997-4f78]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(caller) AT LINE 389 with ID [f47e9997-4f78]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" starting sendCallback for fd ") AT LINE 389 with ID [f47e9997-4f78]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(fd) AT LINE 389 with ID [f47e9997-4f78]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 389 with ID [f47e9997-4f78]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack67.<org.slf4j.Logger: void trace(java.lang.String)>($stack73) AT LINE 389 with ID [f47e9997-4f78]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> AT LINE 398 with ID [75f98c99-8d5c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 398 with ID [75f98c99-8d5c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 398 with ID [75f98c99-8d5c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(caller) AT LINE 398 with ID [75f98c99-8d5c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": closing fd ") AT LINE 398 with ID [75f98c99-8d5c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(fd) AT LINE 398 with ID [75f98c99-8d5c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at the request of the handler.") AT LINE 398 with ID [75f98c99-8d5c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 398 with ID [75f98c99-8d5c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack56.<org.slf4j.Logger: void trace(java.lang.String)>($stack63) AT LINE 398 with ID [75f98c99-8d5c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> AT LINE 403 with ID [9c035fd1-9304]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 403 with ID [9c035fd1-9304]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 403 with ID [9c035fd1-9304]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(caller) AT LINE 403 with ID [9c035fd1-9304]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : sendCallback processed fd ") AT LINE 403 with ID [9c035fd1-9304]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(fd) AT LINE 403 with ID [9c035fd1-9304]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in toRemove.") AT LINE 403 with ID [9c035fd1-9304]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 403 with ID [9c035fd1-9304]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void trace(java.lang.String)>($stack54) AT LINE 403 with ID [9c035fd1-9304]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> AT LINE 419 with ID [81c35c18-f343]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 419 with ID [81c35c18-f343]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 419 with ID [81c35c18-f343]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(caller) AT LINE 419 with ID [81c35c18-f343]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": sendCallback not ") AT LINE 419 with ID [81c35c18-f343]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("closing fd ") AT LINE 419 with ID [81c35c18-f343]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(fd) AT LINE 419 with ID [81c35c18-f343]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 419 with ID [81c35c18-f343]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void trace(java.lang.String)>($stack33) AT LINE 419 with ID [81c35c18-f343]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if uc != null goto $stack7 = virtualinvoke uc.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature getUnderConstructionFeature()>() at line 75 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: boolean unprotectedRemoveBlock(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.hdfs.server.namenode.INodeFile,org.apache.hadoop.hdfs.protocol.Block)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 85 with ID [c19c9a75-a567]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* FSDirectory.removeBlock: ") AT LINE 85 with ID [c19c9a75-a567]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 85 with ID [c19c9a75-a567]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ") AT LINE 85 with ID [c19c9a75-a567]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 85 with ID [c19c9a75-a567]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" block is removed from the file system") AT LINE 85 with ID [c19c9a75-a567]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 85 with ID [c19c9a75-a567]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 85 with ID [c19c9a75-a567]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: void setattrInternal(org.apache.hadoop.hdfs.DFSClient,java.lang.String,org.apache.hadoop.nfs.nfs3.request.SetAttr3,boolean)> has 13 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 380 with ID [0c50e0b0-37e3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set new mode: ") AT LINE 380 with ID [0c50e0b0-37e3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke newAttr.<org.apache.hadoop.nfs.nfs3.request.SetAttr3: int getMode()>() AT LINE 380 with ID [0c50e0b0-37e3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack69) AT LINE 380 with ID [0c50e0b0-37e3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 380 with ID [0c50e0b0-37e3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack67.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack71) AT LINE 380 with ID [0c50e0b0-37e3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 400 with ID [f2c72aa1-35d8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set atime: ") AT LINE 400 with ID [f2c72aa1-35d8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(uname#20) AT LINE 400 with ID [f2c72aa1-35d8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mtime: ") AT LINE 400 with ID [f2c72aa1-35d8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(mtime) AT LINE 400 with ID [f2c72aa1-35d8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 400 with ID [f2c72aa1-35d8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack30) AT LINE 400 with ID [f2c72aa1-35d8]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if fileXAttr != null goto $stack24 = virtualinvoke fileXAttr.<org.apache.hadoop.fs.XAttr: byte[] getValue()>() at line 286 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if encryptionZone != null goto $stack17 = virtualinvoke encryptionZone.<org.apache.hadoop.hdfs.protocol.EncryptionZone: java.lang.String getPath()>() at line 269 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack15 != 0 goto virtualinvoke fsd.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: void readLock()>() at line 264 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp: org.apache.hadoop.fs.FileEncryptionInfo getFileEncryptionInfo(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger LOG> AT LINE 275 with ID [6b98a03a-0000]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encryption zone ") AT LINE 275 with ID [6b98a03a-0000]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke encryptionZone.<org.apache.hadoop.hdfs.protocol.EncryptionZone: java.lang.String getPath()>() AT LINE 275 with ID [6b98a03a-0000]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39) AT LINE 275 with ID [6b98a03a-0000]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a valid path.") AT LINE 275 with ID [6b98a03a-0000]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 275 with ID [6b98a03a-0000]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack37.<org.slf4j.Logger: void debug(java.lang.String)>($stack42) AT LINE 275 with ID [6b98a03a-0000]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.impl.MetricsSystemImpl$InitMode initMode()> has 12 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.slf4j.Logger LOG> AT LINE 623 with ID [a5d30d06-b977]
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from system property: ") AT LINE 623 with ID [a5d30d06-b977]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("hadoop.metrics.init.mode") AT LINE 623 with ID [a5d30d06-b977]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6) AT LINE 623 with ID [a5d30d06-b977]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 623 with ID [a5d30d06-b977]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String)>($stack8) AT LINE 623 with ID [a5d30d06-b977]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.slf4j.Logger LOG> AT LINE 624 with ID [67da0161-e5a2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from environment variable: ") AT LINE 624 with ID [67da0161-e5a2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("hadoop.metrics.init.mode") AT LINE 624 with ID [67da0161-e5a2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 624 with ID [67da0161-e5a2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 624 with ID [67da0161-e5a2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 624 with ID [67da0161-e5a2]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.ActiveUsersManager: void deactivateApplication(java.lang.String,org.apache.hadoop.yarn.api.records.ApplicationId)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.ActiveUsersManager: org.apache.commons.logging.Log LOG> AT LINE 99 with ID [bd5c9a15-278f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ") AT LINE 99 with ID [bd5c9a15-278f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 99 with ID [bd5c9a15-278f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" removed from activeUsers, currently: ") AT LINE 99 with ID [bd5c9a15-278f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ActiveUsersManager: int activeUsers> AT LINE 99 with ID [bd5c9a15-278f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack20) AT LINE 99 with ID [bd5c9a15-278f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 99 with ID [bd5c9a15-278f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 99 with ID [bd5c9a15-278f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if jobJarViz#8 >= fccc#7 goto return localResources at line 425 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.YARNRunner: java.util.Map setupLocalResources(org.apache.hadoop.conf.Configuration,java.lang.String)> has 11 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = this.<org.apache.hadoop.mapred.YARNRunner: org.apache.hadoop.fs.FileContext defaultFileContext> AT LINE 387 with ID [ee2d8fe2-3a56]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<org.apache.hadoop.fs.FileContext: org.apache.hadoop.fs.AbstractFileSystem getDefaultFileSystem()>() AT LINE 387 with ID [ee2d8fe2-3a56]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = this.<org.apache.hadoop.mapred.YARNRunner: org.apache.hadoop.fs.FileContext defaultFileContext> AT LINE 387 with ID [ee2d8fe2-3a56]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<org.apache.hadoop.fs.FileContext: org.apache.hadoop.fs.Path makeQualified(org.apache.hadoop.fs.Path)>($stack15) AT LINE 387 with ID [ee2d8fe2-3a56]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack14.<org.apache.hadoop.fs.AbstractFileSystem: org.apache.hadoop.fs.Path resolvePath(org.apache.hadoop.fs.Path)>($stack17) AT LINE 387 with ID [ee2d8fe2-3a56]
2020-08-25 12:10:04 [INFO] - 	 -> yarnUrlForJobSubmitDir = staticinvoke <org.apache.hadoop.yarn.api.records.URL: org.apache.hadoop.yarn.api.records.URL fromPath(org.apache.hadoop.fs.Path)>($stack18) AT LINE 387 with ID [ee2d8fe2-3a56]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = <org.apache.hadoop.mapred.YARNRunner: org.apache.commons.logging.Log LOG> AT LINE 390 with ID [ee2d8fe2-3a56]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating setup context, jobSubmitDir url is ") AT LINE 390 with ID [ee2d8fe2-3a56]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(yarnUrlForJobSubmitDir) AT LINE 390 with ID [ee2d8fe2-3a56]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 390 with ID [ee2d8fe2-3a56]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 390 with ID [ee2d8fe2-3a56]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack39 == 0 goto (branch) at line 177 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack61 == 0 goto (branch) at line 164 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack59 == 0 goto (branch) at line 163 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack65 == 0 goto (branch) at line 166 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack99 == 0 goto return null at line 143 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack83 == 0 goto (branch) at line 156 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack78 == 0 goto (branch) at line 154 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack76 == 0 goto (branch) at line 153 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$#17 >= len$ goto return null at line 186 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = this.<org.apache.hadoop.hdfs.tools.DelegationTokenFetcher$1: boolean val$renew> at line 140 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.DelegationTokenFetcher$1: java.lang.Object run()> has 14 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack84 = staticinvoke <org.apache.hadoop.hdfs.tools.DelegationTokenFetcher: org.apache.commons.logging.Log access$100()>() AT LINE 157 with ID [f7dfbe08-a9b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Renewed token for ") AT LINE 157 with ID [f7dfbe08-a9b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack87 = virtualinvoke i$#6.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 157 with ID [f7dfbe08-a9b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack88 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack87) AT LINE 157 with ID [f7dfbe08-a9b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" until: ") AT LINE 157 with ID [f7dfbe08-a9b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack91 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack90) AT LINE 157 with ID [f7dfbe08-a9b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack92 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 157 with ID [f7dfbe08-a9b4]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack84.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack92) AT LINE 157 with ID [f7dfbe08-a9b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = staticinvoke <org.apache.hadoop.hdfs.tools.DelegationTokenFetcher: org.apache.commons.logging.Log access$100()>() AT LINE 167 with ID [2859b70f-5964]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cancelled token for ") AT LINE 167 with ID [2859b70f-5964]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke i$#6.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 167 with ID [2859b70f-5964]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack69) AT LINE 167 with ID [2859b70f-5964]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 167 with ID [2859b70f-5964]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack66.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack71) AT LINE 167 with ID [2859b70f-5964]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.applications.distributedshell.ApplicationMaster$NMCallbackHandler: void onContainerStarted(org.apache.hadoop.yarn.api.records.ContainerId,java.util.Map)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = staticinvoke <org.apache.hadoop.yarn.applications.distributedshell.ApplicationMaster: org.apache.commons.logging.Log access$200()>() AT LINE 1010 with ID [13effadf-3d11]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Succeeded to start Container ") AT LINE 1010 with ID [13effadf-3d11]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 1010 with ID [13effadf-3d11]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1010 with ID [13effadf-3d11]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack36) AT LINE 1010 with ID [13effadf-3d11]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: void resetKeyStoreState(org.apache.hadoop.fs.Path)> has 4 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack3 = <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 586 with ID [ce443dee-a380]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("Could not flush Keystore..attempting to reset to previous state !!") AT LINE 586 with ID [ce443dee-a380]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 593 with ID [653e455a-1da4]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>("KeyStore resetting to previously flushed state !!") AT LINE 593 with ID [653e455a-1da4]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack78 <= 0 goto checkedMeta#7 = 1 at line 280 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack46 == $stack47 goto bytesPerChunk = virtualinvoke checksum.<org.apache.hadoop.util.DataChecksum: int getBytesPerChecksum()>() at line 265 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.ReplicaInPipeline: org.apache.hadoop.hdfs.server.datanode.fsdataset.ReplicaOutputStreams createStreams(boolean,org.apache.hadoop.util.DataChecksum)> has 16 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack92 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 242 with ID [9d1bcda2-701e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack93 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeTo blockfile is ") AT LINE 242 with ID [9d1bcda2-701e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack94 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(blockFile) AT LINE 242 with ID [9d1bcda2-701e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack95 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of size ") AT LINE 242 with ID [9d1bcda2-701e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack96 = virtualinvoke blockFile.<java.io.File: long length()>() AT LINE 242 with ID [9d1bcda2-701e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack97 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack96) AT LINE 242 with ID [9d1bcda2-701e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 242 with ID [9d1bcda2-701e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack92.<org.slf4j.Logger: void debug(java.lang.String)>($stack98) AT LINE 242 with ID [9d1bcda2-701e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack100 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 244 with ID [3b9a5c1b-2414]
2020-08-25 12:10:04 [INFO] - 	 -> $stack101 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeTo metafile is ") AT LINE 244 with ID [3b9a5c1b-2414]
2020-08-25 12:10:04 [INFO] - 	 -> $stack102 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(metaFile) AT LINE 244 with ID [3b9a5c1b-2414]
2020-08-25 12:10:04 [INFO] - 	 -> $stack103 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of size ") AT LINE 244 with ID [3b9a5c1b-2414]
2020-08-25 12:10:04 [INFO] - 	 -> $stack104 = virtualinvoke metaFile.<java.io.File: long length()>() AT LINE 244 with ID [3b9a5c1b-2414]
2020-08-25 12:10:04 [INFO] - 	 -> $stack105 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack104) AT LINE 244 with ID [3b9a5c1b-2414]
2020-08-25 12:10:04 [INFO] - 	 -> $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 244 with ID [3b9a5c1b-2414]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack100.<org.slf4j.Logger: void debug(java.lang.String)>($stack106) AT LINE 244 with ID [3b9a5c1b-2414]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = virtualinvoke job.<org.apache.hadoop.mapred.JobConf: org.apache.hadoop.security.Credentials getCredentials()>() at line 208 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.FileInputFormat: org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.mapred.JobConf)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = <org.apache.hadoop.mapred.FileInputFormat: org.apache.commons.logging.Log LOG> AT LINE 253 with ID [613f0d21-1c81]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time taken to get FileStatuses: ") AT LINE 253 with ID [613f0d21-1c81]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> AT LINE 253 with ID [613f0d21-1c81]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke sw.<org.apache.hadoop.util.StopWatch: long now(java.util.concurrent.TimeUnit)>($stack39) AT LINE 253 with ID [613f0d21-1c81]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack40) AT LINE 253 with ID [613f0d21-1c81]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 253 with ID [613f0d21-1c81]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack42) AT LINE 253 with ID [613f0d21-1c81]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ipc.ClientCache: org.apache.hadoop.ipc.Client getClient(org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,java.lang.Class)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 63 with ID [fd4d9607-a44b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getting client out of cache: ") AT LINE 63 with ID [fd4d9607-a44b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(client) AT LINE 63 with ID [fd4d9607-a44b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 63 with ID [fd4d9607-a44b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack13) AT LINE 63 with ID [fd4d9607-a44b]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack22 != 0 goto (branch) at line 2243 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack20 <= 0 goto $stack21 = this.<org.apache.hadoop.ipc.Server$Connection: java.nio.ByteBuffer unwrappedData> at line 2241 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack41 <= 0 goto $stack15 = this.<org.apache.hadoop.ipc.Server$Connection: java.nio.ByteBuffer unwrappedData> at line 2230 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack12 != 0 goto return at line 2225 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$Connection: void unwrapPacketAndProcessRpcs(byte[])> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 2218 with ID [5aa9eea2-5a20]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Have read input token of size ") AT LINE 2218 with ID [5aa9eea2-5a20]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = lengthof inBuf AT LINE 2218 with ID [5aa9eea2-5a20]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack46) AT LINE 2218 with ID [5aa9eea2-5a20]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for processing by saslServer.unwrap()") AT LINE 2218 with ID [5aa9eea2-5a20]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2218 with ID [5aa9eea2-5a20]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String)>($stack49) AT LINE 2218 with ID [5aa9eea2-5a20]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack70 != 0 goto currentUser = staticinvoke <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getCurrentUser()>() at line 258 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack52 == 0 goto virtualinvoke this.<org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.lang.String digest(java.lang.String,java.lang.String)>(id, pass) at line 276 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: void initSecurity()> has 25 units and 8 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 266 with ID [969e6c0d-2198]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = interfaceinvoke $stack74.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 266 with ID [969e6c0d-2198]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack75 == 0 goto $stack44 = this.<org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.util.List systemACLs> AT LINE 266 with ID [969e6c0d-2198]
2020-08-25 12:10:04 [INFO] - 	 -> $stack78 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 267 with ID [969e6c0d-2198]
2020-08-25 12:10:04 [INFO] - 	 -> $stack77 = this.<org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.lang.String jaasClientIdentity> AT LINE 267 with ID [969e6c0d-2198]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = this.<org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.lang.String jaasClientContext> AT LINE 267 with ID [969e6c0d-2198]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack78.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Auth is SASL user=\"{}\" JAAS context=\"{}\"", $stack77, $stack76) AT LINE 267 with ID [969e6c0d-2198]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= $stack44 = this.<org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.util.List systemACLs>] AT LINE 267 with ID [969e6c0d-2198]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 287 with ID [fb12634f-b329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = interfaceinvoke $stack64.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 287 with ID [fb12634f-b329]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack65 == 0 goto $stack44 = this.<org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.util.List systemACLs> AT LINE 287 with ID [fb12634f-b329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 288 with ID [fb12634f-b329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = staticinvoke <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.lang.String aclToString(org.apache.zookeeper.data.ACL)>(acl) AT LINE 288 with ID [fb12634f-b329]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack66.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Auth is Digest ACL: {}", $stack68) AT LINE 288 with ID [fb12634f-b329]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= $stack44 = this.<org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.util.List systemACLs>] AT LINE 288 with ID [fb12634f-b329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 294 with ID [ef148df1-50d6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = interfaceinvoke $stack41.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 294 with ID [ef148df1-50d6]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack42 == 0 goto $stack43 = new java.util.ArrayList AT LINE 294 with ID [ef148df1-50d6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 295 with ID [ef148df1-50d6]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String)>("Auth is anonymous") AT LINE 295 with ID [ef148df1-50d6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 303 with ID [ef7739c0-cd03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = interfaceinvoke $stack14.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 303 with ID [ef7739c0-cd03]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack15 == 0 goto $stack17 = this.<org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.util.List systemACLs> AT LINE 303 with ID [ef7739c0-cd03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 304 with ID [ef7739c0-cd03]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>("Registry has no security") AT LINE 304 with ID [ef7739c0-cd03]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack37 == 0 goto (branch) at line 282 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if ret == 0 goto (branch) at line 277 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack29 == 0 goto $stack31 = this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.IntraQueueCandidatesSelector: org.apache.hadoop.yarn.util.resource.ResourceCalculator rc> at line 257 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.IntraQueueCandidatesSelector: void preemptFromLeastStarvedApp(org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp,java.util.Map,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.api.records.Resource,java.util.Map,java.util.Map)> has 20 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.IntraQueueCandidatesSelector: org.apache.commons.logging.Log LOG> AT LINE 224 with ID [a96b7f4d-eca3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("totalPreemptedResourceAllowed for preemption at this round is :") AT LINE 224 with ID [a96b7f4d-eca3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(totalPreemptedResourceAllowed) AT LINE 224 with ID [a96b7f4d-eca3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 224 with ID [a96b7f4d-eca3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack63.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack66) AT LINE 224 with ID [a96b7f4d-eca3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.IntraQueueCandidatesSelector: org.apache.commons.logging.Log LOG> AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping container: ") AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = interfaceinvoke c.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack45) AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with resource:") AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = interfaceinvoke c.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.Resource getAllocatedResource()>() AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack48) AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as UserLimit for user:") AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke app.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: java.lang.String getUser()>() AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack51) AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with resource usage: ") AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(rollingUsedResourcePerUser) AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is going under UL") AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack43.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack56) AT LINE 260 with ID [dd7ec59d-2fc8]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack70 != 0 goto specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: boolean commonCheckContainerAllocation(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ContainerAllocationProposal,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer)>(cluster, allocation#4, schedulerContainer) at line 411 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack43 == $stack46 goto reReservation = 1 at line 436 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack26 == null goto $stack12 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock> at line 453 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = virtualinvoke request.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ResourceCommitRequest: boolean anythingAllocatedOrReserved()>() at line 386 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: boolean accept(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ResourceCommitRequest)> has 35 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No pending resource for: nodeType=") AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack78 = virtualinvoke allocation#4.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ContainerAllocationProposal: org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType getAllocationLocalityType()>() AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack79 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack78) AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", node=") AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack81 = virtualinvoke schedulerContainer.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer: org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode getSchedulerNode()>() AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack82 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack81) AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", requestKey=") AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack84 = virtualinvoke schedulerContainer.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer: org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey getSchedulerRequestKey()>() AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack84) AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", application=") AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack87 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack88 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack87) AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack76.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack89) AT LINE 415 with ID [435ad4d4-2098]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 439 with ID [dbdad559-146a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try to re-reserve a container, but node ") AT LINE 439 with ID [dbdad559-146a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke schedulerContainer.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer: org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode getSchedulerNode()>() AT LINE 439 with ID [dbdad559-146a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack53) AT LINE 439 with ID [dbdad559-146a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already reserved by another container=") AT LINE 439 with ID [dbdad559-146a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke schedulerContainer.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer: org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode getSchedulerNode()>() AT LINE 439 with ID [dbdad559-146a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = (org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode) $stack56 AT LINE 439 with ID [dbdad559-146a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer getReservedContainer()>() AT LINE 439 with ID [dbdad559-146a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack58) AT LINE 439 with ID [dbdad559-146a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 439 with ID [dbdad559-146a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack51.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack60) AT LINE 439 with ID [dbdad559-146a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 456 with ID [4b5afdf6-8484]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try to reserve a container, but the node is already reserved by another container=") AT LINE 456 with ID [4b5afdf6-8484]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke schedulerContainer.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer: org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode getSchedulerNode()>() AT LINE 456 with ID [4b5afdf6-8484]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = (org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode) $stack34 AT LINE 456 with ID [4b5afdf6-8484]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer getReservedContainer()>() AT LINE 456 with ID [4b5afdf6-8484]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = interfaceinvoke $stack36.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 456 with ID [4b5afdf6-8484]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack37) AT LINE 456 with ID [4b5afdf6-8484]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 456 with ID [4b5afdf6-8484]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack39) AT LINE 456 with ID [4b5afdf6-8484]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack22 == 0 goto return result at line 123 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if codecString != null goto $stack17 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>(44) at line 118 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.crypto.CryptoCodec: java.util.List getCodecClasses(org.apache.hadoop.conf.Configuration,org.apache.hadoop.crypto.CipherSuite)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = <org.apache.hadoop.util.PerformanceAdvisory: org.slf4j.Logger LOG> AT LINE 119 with ID [64db785a-ebc1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String)>("No crypto codec classes with cipher suite configured.") AT LINE 119 with ID [64db785a-ebc1]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if allocatedContainer != null goto (branch) at line 858 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack33 == 0 goto specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: void updateAMDiagnosticMsg(org.apache.hadoop.yarn.api.records.Resource,java.lang.String)>(capability, " exceeds the available resources of the node and the request cannot be reserved)") at line 906 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> at line 853 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.Resource assignContainer(org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.PendingAsk,org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType,boolean,org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey)> has 22 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 887 with ID [f1e51a0c-588c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource request: ") AT LINE 887 with ID [f1e51a0c-588c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(capability) AT LINE 887 with ID [f1e51a0c-588c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeds the available") AT LINE 887 with ID [f1e51a0c-588c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resources of the node.") AT LINE 887 with ID [f1e51a0c-588c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 887 with ID [f1e51a0c-588c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack44.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack49) AT LINE 887 with ID [f1e51a0c-588c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 900 with ID [785c8b05-97c8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: java.lang.String getName()>() AT LINE 900 with ID [785c8b05-97c8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39) AT LINE 900 with ID [785c8b05-97c8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'s resource request is reserved.") AT LINE 900 with ID [785c8b05-97c8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 900 with ID [785c8b05-97c8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack42) AT LINE 900 with ID [785c8b05-97c8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 907 with ID [efd95ec9-a110]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t create reservation for app:  ") AT LINE 907 with ID [efd95ec9-a110]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: java.lang.String getName()>() AT LINE 907 with ID [efd95ec9-a110]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) AT LINE 907 with ID [efd95ec9-a110]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", at priority ") AT LINE 907 with ID [efd95ec9-a110]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 907 with ID [efd95ec9-a110]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack25) AT LINE 907 with ID [efd95ec9-a110]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 907 with ID [efd95ec9-a110]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 907 with ID [efd95ec9-a110]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack56 != 0 goto $stack57 = <org.apache.hadoop.hdfs.nfs.nfs3.WriteManager: org.apache.commons.logging.Log LOG> at line 186 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack20 >= count goto response#2 = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.WRITE3Request: org.apache.hadoop.nfs.nfs3.FileHandle getHandle()>() at line 126 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.WriteManager: void handleWrite(org.apache.hadoop.hdfs.DFSClient,org.apache.hadoop.nfs.nfs3.request.WRITE3Request,org.jboss.netty.channel.Channel,int,org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes)> has 11 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack84 = <org.apache.hadoop.hdfs.nfs.nfs3.WriteManager: org.apache.commons.logging.Log LOG> AT LINE 135 with ID [79bc4d0f-9a61]
2020-08-25 12:10:04 [INFO] - 	 -> $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleWrite ") AT LINE 135 with ID [79bc4d0f-9a61]
2020-08-25 12:10:04 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(request) AT LINE 135 with ID [79bc4d0f-9a61]
2020-08-25 12:10:04 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 135 with ID [79bc4d0f-9a61]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack84.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack87) AT LINE 135 with ID [79bc4d0f-9a61]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = <org.apache.hadoop.hdfs.nfs.nfs3.WriteManager: org.apache.commons.logging.Log LOG> AT LINE 204 with ID [2c1dfd9f-5b1e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opened stream for appending file: ") AT LINE 204 with ID [2c1dfd9f-5b1e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke fileHandle.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 204 with ID [2c1dfd9f-5b1e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack69) AT LINE 204 with ID [2c1dfd9f-5b1e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 204 with ID [2c1dfd9f-5b1e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack67.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack71) AT LINE 204 with ID [2c1dfd9f-5b1e]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack43 != 0 goto (branch) at line 684 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack51 == 0 goto committedParent = virtualinvoke committedTaskPath.<org.apache.hadoop.fs.Path: org.apache.hadoop.fs.Path getParent()>() at line 685 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if previousAttempt >= 0 goto previousCommittedTaskPath = virtualinvoke this.<org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter: org.apache.hadoop.fs.Path getCommittedTaskPath(int,org.apache.hadoop.mapreduce.TaskAttemptContext)>(previousAttempt, context) at line 664 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter: void recoverTask(org.apache.hadoop.mapreduce.TaskAttemptContext)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = <org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter: org.apache.commons.logging.Log LOG> AT LINE 672 with ID [bfff0e13-d519]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to recover task from ") AT LINE 672 with ID [bfff0e13-d519]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(previousCommittedTaskPath) AT LINE 672 with ID [bfff0e13-d519]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 672 with ID [bfff0e13-d519]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack64.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack67) AT LINE 672 with ID [bfff0e13-d519]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack30 != 0 goto $stack31 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderRemote2: java.nio.ByteBuffer curDataSlice> at line 150 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote2: int read(byte[],int,int)> has 18 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote2: org.slf4j.Logger LOG> AT LINE 136 with ID [e681dabd-fd9c, b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = interfaceinvoke $stack10.<org.slf4j.Logger: boolean isTraceEnabled()>() AT LINE 136 with ID [e681dabd-fd9c, b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack11 == 0 goto $stack50 = null AT LINE 136 with ID [e681dabd-fd9c, b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>() AT LINE 145 with ID [e681dabd-fd9c, b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= randomId = $stack50] AT LINE 145 with ID [e681dabd-fd9c, b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = null AT LINE 145 with ID [e681dabd-fd9c, b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> randomId = $stack50 AT LINE 136 with ID [e681dabd-fd9c, b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote2: org.slf4j.Logger LOG> AT LINE 137 with ID [b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = newarray (java.lang.Object)[3] AT LINE 137 with ID [b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[0] = randomId AT LINE 137 with ID [b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderRemote2: java.lang.String filename> AT LINE 137 with ID [b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[1] = $stack13 AT LINE 137 with ID [b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderRemote2: org.apache.hadoop.hdfs.protocol.DatanodeID datanodeID> AT LINE 137 with ID [b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack14.<org.apache.hadoop.hdfs.protocol.DatanodeID: java.lang.String getHostName()>() AT LINE 137 with ID [b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[2] = $stack18 AT LINE 137 with ID [b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("Starting read #{} file {} from datanode {}", $stack12) AT LINE 137 with ID [b57d32f8-77f0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote2: org.slf4j.Logger LOG> AT LINE 148 with ID [e681dabd-fd9c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Finishing read #{}", randomId) AT LINE 148 with ID [e681dabd-fd9c]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: int assignContainersOnNode(org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode,org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoAppAttempt,org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey)> has 18 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.commons.logging.Log LOG> AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("assignContainersOnNode: node=") AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode getRMNode()>() AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = interfaceinvoke $stack13.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: java.lang.String getNodeAddress()>() AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" application=") AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<org.apache.hadoop.yarn.api.records.ApplicationId: int getId()>() AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack18) AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" priority=") AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #assigned=") AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = nodeLocalContainers + rackLocalContainers AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = $stack24 + offSwitchContainers AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack25) AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 609 with ID [635b2ff8-c5f5]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery$9: void run()> has 14 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack2 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log access$300()>() AT LINE 958 with ID [88657cfe-9afc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initiating ") AT LINE 958 with ID [88657cfe-9afc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = this.<org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery$9: org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery$TestStopWorkerRunnable val$tswr> AT LINE 958 with ID [88657cfe-9afc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = interfaceinvoke $stack5.<org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery$TestStopWorkerRunnable: java.lang.String opName()>() AT LINE 958 with ID [88657cfe-9afc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6) AT LINE 958 with ID [88657cfe-9afc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 958 with ID [88657cfe-9afc]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack8) AT LINE 958 with ID [88657cfe-9afc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log access$300()>() AT LINE 960 with ID [27573392-d27c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finished ") AT LINE 960 with ID [27573392-d27c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery$9: org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery$TestStopWorkerRunnable val$tswr> AT LINE 960 with ID [27573392-d27c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = interfaceinvoke $stack14.<org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery$TestStopWorkerRunnable: java.lang.String opName()>() AT LINE 960 with ID [27573392-d27c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 960 with ID [27573392-d27c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 960 with ID [27573392-d27c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack17) AT LINE 960 with ID [27573392-d27c]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.io.retry.RetryInvocationHandler$Call: org.apache.hadoop.io.retry.CallReturn processWaitTimeAndRetryInfo()> has 9 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.io.retry.RetryInvocationHandler: org.slf4j.Logger LOG> AT LINE 126 with ID [5c0d3323-6d88]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = newarray (java.lang.Object)[3] AT LINE 126 with ID [5c0d3323-6d88]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = this.<org.apache.hadoop.io.retry.RetryInvocationHandler$Call: int callId> AT LINE 126 with ID [5c0d3323-6d88]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack7) AT LINE 126 with ID [5c0d3323-6d88]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6[0] = $stack11 AT LINE 126 with ID [5c0d3323-6d88]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.io.retry.RetryInvocationHandler$Call: org.apache.hadoop.io.retry.RetryInvocationHandler$RetryInfo retryInfo> AT LINE 126 with ID [5c0d3323-6d88]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6[1] = $stack12 AT LINE 126 with ID [5c0d3323-6d88]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6[2] = waitTime AT LINE 126 with ID [5c0d3323-6d88]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("#{} processRetryInfo: retryInfo={}, waitTime={}", $stack6) AT LINE 126 with ID [5c0d3323-6d88]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack21 = this.<org.apache.hadoop.mapred.Merger$MergeQueue: java.util.List segments> at line 459 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.Merger$MergeQueue: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path[],boolean,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.io.RawComparator,org.apache.hadoop.util.Progressable,org.apache.hadoop.mapred.Counters$Counter,org.apache.hadoop.mapreduce.TaskType)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = staticinvoke <org.apache.hadoop.mapred.Merger: org.apache.commons.logging.Log access$000()>() AT LINE 460 with ID [82ba1805-346d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MergeQ: adding: ") AT LINE 460 with ID [82ba1805-346d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(file) AT LINE 460 with ID [82ba1805-346d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 460 with ID [82ba1805-346d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 460 with ID [82ba1805-346d]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficController: java.lang.String readState()> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficController: org.slf4j.Logger LOG> AT LINE 262 with ID [b8b90d32-6c5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TC state: %n") AT LINE 262 with ID [b8b90d32-6c5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(output) AT LINE 262 with ID [b8b90d32-6c5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 262 with ID [b8b90d32-6c5f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 262 with ID [b8b90d32-6c5f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto (branch) at line 287 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack49 == 0 goto $stack50 = new javax.security.auth.callback.UnsupportedCallbackException at line 294 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslRpcServer$SaslDigestCallbackHandler: void handle(javax.security.auth.callback.Callback[])> has 19 units and 5 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = <org.apache.hadoop.security.SaslRpcServer: org.slf4j.Logger LOG> AT LINE 310 with ID [1b616b22-3fe2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SASL server DIGEST-MD5 callback: setting password for client: ") AT LINE 310 with ID [1b616b22-3fe2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke arr$#8.<org.apache.hadoop.security.token.TokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>() AT LINE 310 with ID [1b616b22-3fe2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack41) AT LINE 310 with ID [1b616b22-3fe2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 310 with ID [1b616b22-3fe2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void debug(java.lang.String)>($stack43) AT LINE 310 with ID [1b616b22-3fe2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = this.<org.apache.hadoop.security.SaslRpcServer$SaslDigestCallbackHandler: org.apache.hadoop.security.token.SecretManager secretManager> AT LINE 325 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = staticinvoke <org.apache.hadoop.security.SaslRpcServer: org.apache.hadoop.security.token.TokenIdentifier getIdentifier(java.lang.String,org.apache.hadoop.security.token.SecretManager)>(len$#15, $stack15) AT LINE 325 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [INFO] - 	 -> i$#11 = virtualinvoke $stack16.<org.apache.hadoop.security.token.TokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>() AT LINE 325 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [INFO] - 	 -> if i$#11 != null goto $stack18 = virtualinvoke i$#11.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getUserName()>() AT LINE 327 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = null AT LINE 334 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= callback#18 = $stack18] AT LINE 334 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke i$#11.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getUserName()>() AT LINE 327 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [INFO] - 	 -> callback#18 = $stack18 AT LINE 327 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.security.SaslRpcServer: org.slf4j.Logger LOG> AT LINE 328 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SASL server DIGEST-MD5 callback: setting canonicalized client ID: ") AT LINE 328 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(callback#18) AT LINE 328 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 328 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack23) AT LINE 328 with ID [e2b3c47c-5c36]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack24 == 0 goto waitTime#4 = currentTimeMs at line 382 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack20 != 0 goto $stack21 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: java.util.Map allowedLocalityLevel> at line 366 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack17 >= 0 goto $stack18 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock> at line 359 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType getAllowedLocalityLevelByTime(org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,long,long,long)> has 38 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack112 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 371 with ID [e6b4cbcc-5bf2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack113 = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Init the lastScheduledContainer time, priority: ") AT LINE 371 with ID [e6b4cbcc-5bf2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack114 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 371 with ID [e6b4cbcc-5bf2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack115 = virtualinvoke $stack113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack114) AT LINE 371 with ID [e6b4cbcc-5bf2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack116 = virtualinvoke $stack115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", time: ") AT LINE 371 with ID [e6b4cbcc-5bf2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack117 = virtualinvoke $stack116.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(currentTimeMs) AT LINE 371 with ID [e6b4cbcc-5bf2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack118 = virtualinvoke $stack117.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 371 with ID [e6b4cbcc-5bf2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack112.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack118) AT LINE 371 with ID [e6b4cbcc-5bf2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting time: ") AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(waitTime#4) AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms, nodeLocalityDelay time: ") AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(nodeLocalityDelayMs) AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms") AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", change allowedLocality from NODE_LOCAL to RACK_LOCAL") AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", priority: ") AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack82 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack83 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack82) AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", app attempt id: ") AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack85 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId attemptId> AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack86 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack85) AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack74.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack87) AT LINE 401 with ID [bdcc6a35-c4d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting time: ") AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(waitTime#4) AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms, nodeLocalityDelay time: ") AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(nodeLocalityDelayMs) AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms") AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", change allowedLocality from RACK_LOCAL to OFF_SWITCH") AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", priority: ") AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack57) AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", app attempt id: ") AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId attemptId> AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack60) AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack49.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack62) AT LINE 411 with ID [a656a450-2a5e]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack16 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoIntraQueuePreemptionPlugin: org.apache.commons.logging.Log LOG> at line 107 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoIntraQueuePreemptionPlugin: java.util.Map getResourceDemandFromAppsPerQueue(java.lang.String,java.lang.String)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoIntraQueuePreemptionPlugin: org.apache.commons.logging.Log LOG> AT LINE 112 with ID [1c0c07ae-92d0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selected to preempt ") AT LINE 112 with ID [1c0c07ae-92d0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(actualPreemptNeeded) AT LINE 112 with ID [1c0c07ae-92d0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resource from partition:") AT LINE 112 with ID [1c0c07ae-92d0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(partition) AT LINE 112 with ID [1c0c07ae-92d0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 112 with ID [1c0c07ae-92d0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 112 with ID [1c0c07ae-92d0]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: void markContainerForKillable(org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1806 with ID [c431adbc-b5fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEventType: org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEventType MARK_CONTAINER_FOR_KILLABLE> AT LINE 1806 with ID [c431adbc-b5fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack27) AT LINE 1806 with ID [c431adbc-b5fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": container") AT LINE 1806 with ID [c431adbc-b5fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke killableContainer.<java.lang.Object: java.lang.String toString()>() AT LINE 1806 with ID [c431adbc-b5fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30) AT LINE 1806 with ID [c431adbc-b5fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1806 with ID [c431adbc-b5fa]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 1806 with ID [c431adbc-b5fa]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if lval == null goto virtualinvoke node.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$Node: void verifyNoRemainingKeys(java.lang.String)>("NameSection") at line 479 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if namespaceId != null goto $stack11 = virtualinvoke namespaceId.<java.lang.Integer: int intValue()>() at line 448 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$NameSectionProcessor: void process()> has 10 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.commons.logging.Log LOG> AT LINE 486 with ID [ef2a6919-ed0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hdfs.server.namenode.FSImageFormatProtobuf$SectionName: org.apache.hadoop.hdfs.server.namenode.FSImageFormatProtobuf$SectionName NS_INFO> AT LINE 486 with ID [ef2a6919-ed0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<org.apache.hadoop.hdfs.server.namenode.FSImageFormatProtobuf$SectionName: java.lang.String name()>() AT LINE 486 with ID [ef2a6919-ed0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31) AT LINE 486 with ID [ef2a6919-ed0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" writing header: {") AT LINE 486 with ID [ef2a6919-ed0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = staticinvoke <com.google.protobuf.TextFormat: java.lang.String printToString(com.google.protobuf.MessageOrBuilder)>(s) AT LINE 486 with ID [ef2a6919-ed0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 486 with ID [ef2a6919-ed0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") AT LINE 486 with ID [ef2a6919-ed0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 486 with ID [ef2a6919-ed0c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 486 with ID [ef2a6919-ed0c]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack4 <= $stack6 goto return 0 at line 180 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$1: boolean removeEldestEntry(java.util.Map$Entry)> has 4 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 182 with ID [c4114a6a-4950]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Evicting {} due to space limitations", groupId) AT LINE 182 with ID [c4114a6a-4950]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 184 with ID [a9bce253-9661]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Force release cache {}.", groupId) AT LINE 184 with ID [a9bce253-9661]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = this.<org.apache.hadoop.service.AbstractService: java.lang.Object stateChangeLock> at line 216 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.service.AbstractService: void stop()> has 5 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.service.AbstractService: org.slf4j.Logger LOG> AT LINE 238 with ID [03905196-598b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = interfaceinvoke $stack14.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 238 with ID [03905196-598b]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack15 == 0 goto exitmonitor l1 AT LINE 238 with ID [03905196-598b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.service.AbstractService: org.slf4j.Logger LOG> AT LINE 239 with ID [03905196-598b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>("Ignoring re-entrant call to stop()") AT LINE 239 with ID [03905196-598b]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf: void <init>(org.apache.hadoop.conf.Configuration)> has 19 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf: org.slf4j.Logger LOG> AT LINE 646 with ID [7ce15bfb-6edf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = this.<org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf: boolean useLegacyBlockReaderLocal> AT LINE 646 with ID [7ce15bfb-6edf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack10) AT LINE 646 with ID [7ce15bfb-6edf]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("dfs.client.use.legacy.blockreader.local = {}", $stack13) AT LINE 646 with ID [7ce15bfb-6edf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf: org.slf4j.Logger LOG> AT LINE 648 with ID [c0187147-7f59]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.client.HdfsClientConfigKeys$Read$ShortCircuit: java.lang.String KEY> AT LINE 648 with ID [c0187147-7f59]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16) AT LINE 648 with ID [c0187147-7f59]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = {}") AT LINE 648 with ID [c0187147-7f59]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 648 with ID [c0187147-7f59]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = this.<org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf: boolean shortCircuitLocalReads> AT LINE 648 with ID [c0187147-7f59]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack20) AT LINE 648 with ID [c0187147-7f59]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>($stack19, $stack21) AT LINE 648 with ID [c0187147-7f59]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf: org.slf4j.Logger LOG> AT LINE 650 with ID [d526d7b7-59bc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf: boolean domainSocketDataTraffic> AT LINE 650 with ID [d526d7b7-59bc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack22) AT LINE 650 with ID [d526d7b7-59bc]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("dfs.client.domain.socket.data.traffic = {}", $stack25) AT LINE 650 with ID [d526d7b7-59bc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf: org.slf4j.Logger LOG> AT LINE 652 with ID [0d395d0e-8e7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = this.<org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf: java.lang.String domainSocketPath> AT LINE 652 with ID [0d395d0e-8e7b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("dfs.domain.socket.path = {}", $stack26) AT LINE 652 with ID [0d395d0e-8e7b]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.lang.String,boolean)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.commons.logging.Log LOG> AT LINE 404 with ID [3c9c5fd7-7ac0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationId) AT LINE 404 with ID [3c9c5fd7-7ac0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is recovering. Skip notifying APP_ACCEPTED") AT LINE 404 with ID [3c9c5fd7-7ac0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 404 with ID [3c9c5fd7-7ac0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack33) AT LINE 404 with ID [3c9c5fd7-7ac0]
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter$LogFDsCache$FlushTimerTask: void run()>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack12 != 0 goto return at line 410 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack40 == 0 goto $stack41 = specialinvoke this.<org.apache.hadoop.hdfs.client.impl.LeaseRenewer: boolean clientsRunning()>() at line 455 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: void run(int)> has 27 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: org.slf4j.Logger LOG> AT LINE 417 with ID [dee41ec0-837f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lease renewer daemon for ") AT LINE 417 with ID [dee41ec0-837f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = specialinvoke this.<org.apache.hadoop.hdfs.client.impl.LeaseRenewer: java.lang.String clientsString()>() AT LINE 417 with ID [dee41ec0-837f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack55) AT LINE 417 with ID [dee41ec0-837f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with renew id ") AT LINE 417 with ID [dee41ec0-837f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(id) AT LINE 417 with ID [dee41ec0-837f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" executed") AT LINE 417 with ID [dee41ec0-837f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 417 with ID [dee41ec0-837f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack53.<org.slf4j.Logger: void debug(java.lang.String)>($stack60) AT LINE 417 with ID [dee41ec0-837f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: org.slf4j.Logger LOG> AT LINE 447 with ID [6030ead4-bc44]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lease renewer daemon for ") AT LINE 447 with ID [6030ead4-bc44]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = specialinvoke this.<org.apache.hadoop.hdfs.client.impl.LeaseRenewer: java.lang.String clientsString()>() AT LINE 447 with ID [6030ead4-bc44]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 447 with ID [6030ead4-bc44]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with renew id ") AT LINE 447 with ID [6030ead4-bc44]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(id) AT LINE 447 with ID [6030ead4-bc44]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not current") AT LINE 447 with ID [6030ead4-bc44]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 447 with ID [6030ead4-bc44]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String)>($stack39) AT LINE 447 with ID [6030ead4-bc44]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: org.slf4j.Logger LOG> AT LINE 450 with ID [b43a4efc-d345]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lease renewer daemon for ") AT LINE 450 with ID [b43a4efc-d345]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = specialinvoke this.<org.apache.hadoop.hdfs.client.impl.LeaseRenewer: java.lang.String clientsString()>() AT LINE 450 with ID [b43a4efc-d345]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 450 with ID [b43a4efc-d345]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with renew id ") AT LINE 450 with ID [b43a4efc-d345]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(id) AT LINE 450 with ID [b43a4efc-d345]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expired") AT LINE 450 with ID [b43a4efc-d345]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 450 with ID [b43a4efc-d345]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack30) AT LINE 450 with ID [b43a4efc-d345]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.TestNameNodeRecovery: void testNameNodeRecoveryImpl(org.apache.hadoop.hdfs.server.namenode.TestNameNodeRecovery$Corruptor,boolean)> has 13 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.server.namenode.TestNameNodeRecovery: org.apache.commons.logging.Log LOG> AT LINE 591 with ID [96b547e3-0be0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack45.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("trying to start normally (this should fail)...") AT LINE 591 with ID [96b547e3-0be0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = <org.apache.hadoop.hdfs.server.namenode.TestNameNodeRecovery: org.apache.commons.logging.Log LOG> AT LINE 616 with ID [6ee167ff-ea67]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack51.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("running recovery...") AT LINE 616 with ID [6ee167ff-ea67]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = <org.apache.hadoop.hdfs.server.namenode.TestNameNodeRecovery: org.apache.commons.logging.Log LOG> AT LINE 633 with ID [40d6fe2e-3e35]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack59.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("starting cluster normally after recovery...") AT LINE 633 with ID [40d6fe2e-3e35]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = <org.apache.hadoop.hdfs.server.namenode.TestNameNodeRecovery: org.apache.commons.logging.Log LOG> AT LINE 636 with ID [49957a62-f4bf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("successfully recovered the ") AT LINE 636 with ID [49957a62-f4bf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = interfaceinvoke corruptor.<org.apache.hadoop.hdfs.server.namenode.TestNameNodeRecovery$Corruptor: java.lang.String getName()>() AT LINE 636 with ID [49957a62-f4bf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack68) AT LINE 636 with ID [49957a62-f4bf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" corrupted edit log") AT LINE 636 with ID [49957a62-f4bf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 636 with ID [49957a62-f4bf]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack66.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack71) AT LINE 636 with ID [49957a62-f4bf]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 != 0 goto $stack9 = this.<org.apache.hadoop.hdfs.server.namenode.SecondaryNameNode: org.apache.hadoop.conf.Configuration conf> at line 455 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.SecondaryNameNode: java.net.URL getInfoServer()> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.server.namenode.SecondaryNameNode: org.apache.commons.logging.Log LOG> AT LINE 462 with ID [744eef78-3b6a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Will connect to NameNode at ") AT LINE 462 with ID [744eef78-3b6a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(address) AT LINE 462 with ID [744eef78-3b6a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 462 with ID [744eef78-3b6a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 462 with ID [744eef78-3b6a]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl$NMDistributedNodeLabelsHandler: java.util.Set getNodeLabelsForHeartbeat()> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger access$1300()>() AT LINE 1153 with ID [b97cad80-e79f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Labels from provider: ") AT LINE 1153 with ID [b97cad80-e79f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = this.<org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl$NMDistributedNodeLabelsHandler: java.util.Set previousNodeLabels> AT LINE 1153 with ID [b97cad80-e79f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $stack16) AT LINE 1153 with ID [b97cad80-e79f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17) AT LINE 1153 with ID [b97cad80-e79f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1153 with ID [b97cad80-e79f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 1153 with ID [b97cad80-e79f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack67 == null goto $stack68 = new org.apache.hadoop.util.DiskChecker$DiskErrorException at line 887 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if publicDirDestPath != null goto $stack52 = virtualinvoke publicDirDestPath.<org.apache.hadoop.fs.Path: org.apache.hadoop.fs.Path getParent()>() at line 883 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$PublicLocalizer: void addResource(org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.event.LocalizerResourceRequestEvent)> has 16 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: org.slf4j.Logger access$300()>() AT LINE 925 with ID [ca20f994-6870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip downloading resource: ") AT LINE 925 with ID [ca20f994-6870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(key) AT LINE 925 with ID [ca20f994-6870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since it\'s in") AT LINE 925 with ID [ca20f994-6870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state: ") AT LINE 925 with ID [ca20f994-6870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke rsrc.<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalizedResource: org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceState getState()>() AT LINE 925 with ID [ca20f994-6870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack36) AT LINE 925 with ID [ca20f994-6870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 925 with ID [ca20f994-6870]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void debug(java.lang.String)>($stack38) AT LINE 925 with ID [ca20f994-6870]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: org.slf4j.Logger access$300()>() AT LINE 932 with ID [c171797f-0a3f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip downloading resource: ") AT LINE 932 with ID [c171797f-0a3f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(key) AT LINE 932 with ID [c171797f-0a3f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since it is locked") AT LINE 932 with ID [c171797f-0a3f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by other threads") AT LINE 932 with ID [c171797f-0a3f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 932 with ID [c171797f-0a3f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 932 with ID [c171797f-0a3f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack18 == 0 goto virtualinvoke shm.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: void free()>() at line 123 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: void removeShm(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: org.apache.commons.logging.Log LOG> AT LINE 116 with ID [0075f7f5-45fc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removing shm ") AT LINE 116 with ID [0075f7f5-45fc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(shm) AT LINE 116 with ID [0075f7f5-45fc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 116 with ID [0075f7f5-45fc]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 116 with ID [0075f7f5-45fc]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if timestampPart != null goto (branch) at line 817 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: void addDirectoryToSerialNumberIndex(org.apache.hadoop.fs.Path)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log LOG> AT LINE 812 with ID [55b91c7d-dc50]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding ") AT LINE 812 with ID [55b91c7d-dc50]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(serialDirPath) AT LINE 812 with ID [55b91c7d-dc50]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to serial index") AT LINE 812 with ID [55b91c7d-dc50]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 812 with ID [55b91c7d-dc50]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 812 with ID [55b91c7d-dc50]
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.client.api.async.impl.AMRMClientAsyncImpl$CallbackHandlerThread: void run()>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack1 == null goto $stack3 = this.<org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: java.lang.String prefix> at line 218 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: void startMBeans()> has 9 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.slf4j.Logger LOG> AT LINE 220 with ID [b35d82d6-27a5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("Stacktrace: ", $stack19) AT LINE 220 with ID [b35d82d6-27a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.slf4j.Logger LOG> AT LINE 224 with ID [90667bd8-7ae7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MBean for source ") AT LINE 224 with ID [90667bd8-7ae7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: java.lang.String name> AT LINE 224 with ID [90667bd8-7ae7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 224 with ID [90667bd8-7ae7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" registered.") AT LINE 224 with ID [90667bd8-7ae7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 224 with ID [90667bd8-7ae7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>($stack11) AT LINE 224 with ID [90667bd8-7ae7]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if ver <= $stack22 goto virtualinvoke this.<org.apache.hadoop.oncrpc.RpcProgram: void handleInternal(org.jboss.netty.channel.ChannelHandlerContext,org.apache.hadoop.oncrpc.RpcInfo)>(ctx, info) at line 185 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack12 == $stack13 goto ver = virtualinvoke call.<org.apache.hadoop.oncrpc.RpcCall: int getVersion()>() at line 175 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.oncrpc.RpcProgram: void messageReceived(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = <org.apache.hadoop.oncrpc.RpcProgram: org.slf4j.Logger LOG> AT LINE 172 with ID [f756f780-dcd4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = this.<org.apache.hadoop.oncrpc.RpcProgram: java.lang.String program> AT LINE 172 with ID [f756f780-dcd4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack38) AT LINE 172 with ID [f756f780-dcd4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" procedure #") AT LINE 172 with ID [f756f780-dcd4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke call.<org.apache.hadoop.oncrpc.RpcCall: int getProcedure()>() AT LINE 172 with ID [f756f780-dcd4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack41) AT LINE 172 with ID [f756f780-dcd4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 172 with ID [f756f780-dcd4]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack37.<org.slf4j.Logger: void trace(java.lang.String)>($stack43) AT LINE 172 with ID [f756f780-dcd4]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack4 == 0 goto return 0 at line 1528 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSInputStream: boolean tokenRefetchNeeded(java.io.IOException,java.net.InetSocketAddress)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack3 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1525 with ID [ec582867-3ab1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Access token was invalid when connecting to {}: {}", targetAddr, ex) AT LINE 1525 with ID [ec582867-3ab1]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack4 == 0 goto virtualinvoke this.<org.apache.hadoop.hdfs.DFSOutputStream: void flushBuffer()>() at line 830 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSOutputStream: void closeImpl()> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.DFSOutputStream: org.slf4j.Logger LOG> AT LINE 831 with ID [9f0b18f0-f6f8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.hdfs.DFSOutputStream: boolean closed> AT LINE 831 with ID [9f0b18f0-f6f8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack12) AT LINE 831 with ID [9f0b18f0-f6f8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke this.<org.apache.hadoop.hdfs.DFSOutputStream: org.apache.hadoop.hdfs.DataStreamer getStreamer()>() AT LINE 831 with ID [9f0b18f0-f6f8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<org.apache.hadoop.hdfs.DataStreamer: boolean streamerClosed()>() AT LINE 831 with ID [9f0b18f0-f6f8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack17) AT LINE 831 with ID [9f0b18f0-f6f8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Closing an already closed stream. [Stream:{}, streamer:{}]", $stack15, $stack18) AT LINE 831 with ID [9f0b18f0-f6f8]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack19 = this.<org.apache.hadoop.hdfs.server.namenode.FSImageTransactionalStorageInspector: boolean isUpgradeFinalized> at line 109 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = this.<org.apache.hadoop.hdfs.server.namenode.FSImageTransactionalStorageInspector: long maxSeenTxId> at line 84 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSImageTransactionalStorageInspector: void inspectDirectory(org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.namenode.FSImageTransactionalStorageInspector: org.apache.commons.logging.Log LOG> AT LINE 110 with ID [59dbe698-c298]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking file ") AT LINE 110 with ID [59dbe698-c298]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f) AT LINE 110 with ID [59dbe698-c298]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 110 with ID [59dbe698-c298]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 110 with ID [59dbe698-c298]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if cur == $stack39 goto $stack41 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> at line 250 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack15 < $stack14 goto $stack16 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: int numPending> at line 246 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: long requestLease(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 44 units and 11 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = node.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData: long leaseId> AT LINE 235 with ID [6ac8cf2d-feb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = $stack11 cmp 0L AT LINE 235 with ID [6ac8cf2d-feb1]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack12 == 0 goto specialinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: void remove(org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData)>(node) AT LINE 235 with ID [6ac8cf2d-feb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> AT LINE 239 with ID [6ac8cf2d-feb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = node.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData: long leaseId> AT LINE 239 with ID [6ac8cf2d-feb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($stack56) AT LINE 239 with ID [6ac8cf2d-feb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 239 with ID [6ac8cf2d-feb1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack57.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Removing existing BR lease 0x{} for DN {} in order to issue a new one.", $stack59, $stack60) AT LINE 239 with ID [6ac8cf2d-feb1]
2020-08-25 12:10:04 [INFO] - 	 -> allLeases = $stack37 AT LINE 248 with ID [cff05332-f1ca]
2020-08-25 12:10:04 [INFO] - 	 -> prefix = "" AT LINE 249 with ID []
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData pendingHead> AT LINE 250 with ID [UNKNOWN_ID]
2020-08-25 12:10:04 [INFO] - 	 -> cur = $stack38.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData: org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData next> AT LINE 250 with ID [UNKNOWN_ID]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData pendingHead> AT LINE 250 with ID [UNKNOWN_ID]
2020-08-25 12:10:04 [INFO] - 	 -> if cur == $stack39 goto $stack41 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> AT LINE 250 with ID [UNKNOWN_ID]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke allLeases.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix) AT LINE 252 with ID []
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = cur.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData: java.lang.String datanodeUuid> AT LINE 252 with ID []
2020-08-25 12:10:04 [INFO] - 	 -> virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack52) AT LINE 252 with ID []
2020-08-25 12:10:04 [INFO] - 	 -> prefix = ", " AT LINE 253 with ID []
2020-08-25 12:10:04 [INFO] - 	 -> cur = cur.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData: org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData next> AT LINE 251 with ID [UNKNOWN_ID]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= $stack39 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData pendingHead>] AT LINE 251 with ID [UNKNOWN_ID]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> AT LINE 255 with ID [cff05332-f1ca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = newarray (java.lang.Object)[3] AT LINE 255 with ID [cff05332-f1ca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 255 with ID [cff05332-f1ca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40[0] = $stack44 AT LINE 255 with ID [cff05332-f1ca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: int numPending> AT LINE 255 with ID [cff05332-f1ca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack45) AT LINE 255 with ID [cff05332-f1ca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40[1] = $stack47 AT LINE 255 with ID [cff05332-f1ca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke allLeases.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 255 with ID [cff05332-f1ca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40[2] = $stack49 AT LINE 255 with ID [cff05332-f1ca]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack41.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Can\'t create a new BR lease for DN {}, because numPending equals maxPending at {}.  Current leases: {}", $stack40) AT LINE 255 with ID [cff05332-f1ca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> AT LINE 265 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = interfaceinvoke $stack20.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 265 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack21 == 0 goto $stack22 = node.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData: long leaseId> AT LINE 265 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> AT LINE 266 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = newarray (java.lang.Object)[3] AT LINE 266 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = node.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData: long leaseId> AT LINE 266 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($stack24) AT LINE 266 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23[0] = $stack28 AT LINE 266 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 266 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23[1] = $stack30 AT LINE 266 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: int numPending> AT LINE 266 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack31) AT LINE 266 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23[2] = $stack33 AT LINE 266 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Created a new BR lease 0x{} for DN {}.  numPending = {}", $stack23) AT LINE 266 with ID [36b39bca-70d7]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.store.StateStoreCacheUpdateService: void periodicInvoke()> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack1 = <org.apache.hadoop.hdfs.server.federation.store.StateStoreCacheUpdateService: org.slf4j.Logger LOG> AT LINE 67 with ID [b546bcfc-ef59]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack1.<org.slf4j.Logger: void debug(java.lang.String)>("Updating State Store cache") AT LINE 67 with ID [b546bcfc-ef59]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: void handle(org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptEvent)> has 23 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.commons.logging.Log LOG> AT LINE 903 with ID [c8215901-4776]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing event for ") AT LINE 903 with ID [c8215901-4776]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appAttemptID) AT LINE 903 with ID [c8215901-4776]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ") AT LINE 903 with ID [c8215901-4776]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke event.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptEvent: java.lang.Enum getType()>() AT LINE 903 with ID [c8215901-4776]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack13) AT LINE 903 with ID [c8215901-4776]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 903 with ID [c8215901-4776]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 903 with ID [c8215901-4776]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptState getAppAttemptState()>() AT LINE 922 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> if oldState == $stack21 goto $stack22 = this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock> AT LINE 922 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.commons.logging.Log LOG> AT LINE 929 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = interfaceinvoke $stack23.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 929 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack24 == 0 goto $stack22 = this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock> AT LINE 929 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.commons.logging.Log LOG> AT LINE 923 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = newarray (java.lang.Object)[4] AT LINE 923 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26[0] = appAttemptID AT LINE 923 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26[1] = oldState AT LINE 923 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptState getAppAttemptState()>() AT LINE 923 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26[2] = $stack30 AT LINE 923 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke event.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptEvent: java.lang.Enum getType()>() AT LINE 923 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26[3] = $stack32 AT LINE 923 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s State change from %s to %s on event = %s", $stack26) AT LINE 923 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack33) AT LINE 923 with ID [72f0f837-8a16]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if secretManager != null goto $stack8 = virtualinvoke confAuthenticationMethod.<org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod: org.apache.hadoop.security.SaslRpcServer$AuthMethod getAuthMethod()>() at line 2795 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server: java.util.List getAuthMethods(org.apache.hadoop.security.token.SecretManager,org.apache.hadoop.conf.Configuration)> has 11 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 2800 with ID [9ad5528f-9bf5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod: org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod TOKEN> AT LINE 2800 with ID [9ad5528f-9bf5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack17) AT LINE 2800 with ID [9ad5528f-9bf5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication enabled for secret manager") AT LINE 2800 with ID [9ad5528f-9bf5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2800 with ID [9ad5528f-9bf5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 2800 with ID [9ad5528f-9bf5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 2807 with ID [f8062c4d-2f43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server accepts auth methods:") AT LINE 2807 with ID [f8062c4d-2f43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(authMethods) AT LINE 2807 with ID [f8062c4d-2f43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2807 with ID [f8062c4d-2f43]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 2807 with ID [f8062c4d-2f43]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ipc.WritableRpcEngine$Invoker: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])> has 15 units and 5 lines
2020-08-25 12:10:04 [INFO] - 	 -> startTime = 0L AT LINE 234 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = staticinvoke <org.apache.hadoop.ipc.WritableRpcEngine: org.slf4j.Logger access$100()>() AT LINE 235 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = interfaceinvoke $stack11.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 235 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack12 == 0 goto tracer = staticinvoke <org.apache.htrace.core.Tracer: org.apache.htrace.core.Tracer curThreadTracer()>() AT LINE 235 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> startTime = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() AT LINE 236 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() AT LINE 256 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> callTime#4 = $stack23 - startTime AT LINE 256 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = staticinvoke <org.apache.hadoop.ipc.WritableRpcEngine: org.slf4j.Logger access$100()>() AT LINE 257 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call: ") AT LINE 257 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>() AT LINE 257 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27) AT LINE 257 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 257 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(callTime#4) AT LINE 257 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 257 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack31) AT LINE 257 with ID [5085b5b4-92a7]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.JHSDelegationTokenSecretManager: void storeNewToken(org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier,long)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.mapreduce.v2.hs.JHSDelegationTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 103 with ID [e5053129-3b47]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing token ") AT LINE 103 with ID [e5053129-3b47]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke tokenId.<org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 103 with ID [e5053129-3b47]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack12) AT LINE 103 with ID [e5053129-3b47]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 103 with ID [e5053129-3b47]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 103 with ID [e5053129-3b47]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i >= $stack14 goto $stack16 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> at line 342 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector: void ensureParentZNode()> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 345 with ID [ebb58e35-9e57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ensuring existence of ") AT LINE 345 with ID [ebb58e35-9e57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefixPath) AT LINE 345 with ID [ebb58e35-9e57]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 345 with ID [ebb58e35-9e57]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String)>($stack30) AT LINE 345 with ID [ebb58e35-9e57]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack3 == 0 goto $stack4 = new java.lang.StringBuilder at line 408 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: void setCapacity(java.lang.String,float)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> AT LINE 413 with ID [8b6435ce-0adc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSConf - setCapacity: queuePrefix=") AT LINE 413 with ID [8b6435ce-0adc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: java.lang.String getQueuePrefix(java.lang.String)>(queue) AT LINE 413 with ID [8b6435ce-0adc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 413 with ID [8b6435ce-0adc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", capacity=") AT LINE 413 with ID [8b6435ce-0adc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(capacity) AT LINE 413 with ID [8b6435ce-0adc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 413 with ID [8b6435ce-0adc]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 413 with ID [8b6435ce-0adc]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack22 == 0 goto ret = 0 at line 983 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 != 0 goto $stack10 = this.<org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.apache.hadoop.hdfs.server.namenode.FSNamesystem namesystem> at line 968 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: boolean rename(java.lang.String,java.lang.String)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.slf4j.Logger stateChangeLog> AT LINE 966 with ID [264d102a-5130]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*DIR* NameNode.rename: ") AT LINE 966 with ID [264d102a-5130]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 966 with ID [264d102a-5130]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 966 with ID [264d102a-5130]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dst) AT LINE 966 with ID [264d102a-5130]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 966 with ID [264d102a-5130]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String)>($stack33) AT LINE 966 with ID [264d102a-5130]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack26 == null goto $stack27 = <org.apache.hadoop.util.FileBasedIPList: org.slf4j.Logger LOG> at line 97 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack17 = <org.apache.hadoop.util.FileBasedIPList: org.slf4j.Logger LOG> at line 90 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.util.FileBasedIPList: java.lang.String[] readLines(java.lang.String)> has 13 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = <org.apache.hadoop.util.FileBasedIPList: org.slf4j.Logger LOG> AT LINE 101 with ID [ec282f10-f74d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded IP list of size = ") AT LINE 101 with ID [ec282f10-f74d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = interfaceinvoke lines.<java.util.List: int size()>() AT LINE 101 with ID [ec282f10-f74d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack37) AT LINE 101 with ID [ec282f10-f74d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from file = ") AT LINE 101 with ID [ec282f10-f74d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) AT LINE 101 with ID [ec282f10-f74d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 101 with ID [ec282f10-f74d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String)>($stack41) AT LINE 101 with ID [ec282f10-f74d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.util.FileBasedIPList: org.slf4j.Logger LOG> AT LINE 107 with ID [8e50a586-861b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing ip list file : ") AT LINE 107 with ID [8e50a586-861b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) AT LINE 107 with ID [8e50a586-861b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 107 with ID [8e50a586-861b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 107 with ID [8e50a586-861b]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if retryCount >= $stack10 goto $stack11 = <org.apache.hadoop.io.retry.LossyRetryInvocationHandler: org.slf4j.Logger LOG> at line 52 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.io.retry.LossyRetryInvocationHandler: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object[])> has 11 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.io.retry.LossyRetryInvocationHandler: org.slf4j.Logger LOG> AT LINE 55 with ID [bc4bf59c-8a70]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Drop the response. Current retryCount == ") AT LINE 55 with ID [bc4bf59c-8a70]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(retryCount) AT LINE 55 with ID [bc4bf59c-8a70]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 55 with ID [bc4bf59c-8a70]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String)>($stack29) AT LINE 55 with ID [bc4bf59c-8a70]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.io.retry.LossyRetryInvocationHandler: org.slf4j.Logger LOG> AT LINE 60 with ID [9649b896-62fc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("retryCount == ") AT LINE 60 with ID [9649b896-62fc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(retryCount) AT LINE 60 with ID [9649b896-62fc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". It\'s time to normally process the response") AT LINE 60 with ID [9649b896-62fc]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 60 with ID [9649b896-62fc]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 60 with ID [9649b896-62fc]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.web.SimpleHttpProxyHandler: void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.server.datanode.web.SimpleHttpProxyHandler: org.apache.commons.logging.Log LOG> AT LINE 148 with ID [25817d68-5d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy for ") AT LINE 148 with ID [25817d68-5d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = this.<org.apache.hadoop.hdfs.server.datanode.web.SimpleHttpProxyHandler: java.lang.String uri> AT LINE 148 with ID [25817d68-5d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13) AT LINE 148 with ID [25817d68-5d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed. cause: ") AT LINE 148 with ID [25817d68-5d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 148 with ID [25817d68-5d4a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($stack16, cause) AT LINE 148 with ID [25817d68-5d4a]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if e#11 < 0 goto running = 0 at line 142 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.test.LambdaTestUtils: int await(int,java.util.concurrent.Callable,java.util.concurrent.Callable,org.apache.hadoop.test.LambdaTestUtils$TimeoutHandler)>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 != null goto exitmonitor l3 at line 110 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.ResourceHandlerModule: org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsCpuResourceHandlerImpl getCGroupsCpuResourceHandler(org.apache.hadoop.conf.Configuration)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.ResourceHandlerModule: org.slf4j.Logger LOG> AT LINE 111 with ID [75bc7c76-5a39]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>("Creating new cgroups cpu handler") AT LINE 111 with ID [75bc7c76-5a39]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto (branch) at line 2949 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if nodes != null goto $stack12 = newarray (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)[0] at line 2944 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void invalidateCorruptReplicas(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$UserLogDir: void scanIfNeeded(org.apache.hadoop.fs.FileStatus)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = staticinvoke <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log access$000()>() AT LINE 341 with ID [528730ed-5fb8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scan not needed of ") AT LINE 341 with ID [528730ed-5fb8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke fs.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() AT LINE 341 with ID [528730ed-5fb8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack35) AT LINE 341 with ID [528730ed-5fb8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 341 with ID [528730ed-5fb8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 341 with ID [528730ed-5fb8]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if backoff#2 != null goto $stack21 = <org.apache.hadoop.mapreduce.task.reduce.Fetcher: org.apache.commons.logging.Log LOG> at line 463 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack17 != 0 goto $stack18 = this.<org.apache.hadoop.mapreduce.task.reduce.Fetcher: java.net.HttpURLConnection connection> at line 459 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if rc == 200 goto $stack10 = "mapreduce" at line 449 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if rc != 429 goto (branch) at line 438 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.task.reduce.Fetcher: void verifyConnection(java.net.URL,java.lang.String,java.lang.String)> has 15 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = <org.apache.hadoop.mapreduce.task.reduce.Fetcher: org.apache.commons.logging.Log LOG> AT LINE 466 with ID [7ddd13dc-14e8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url=") AT LINE 466 with ID [7ddd13dc-14e8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msgToEncode) AT LINE 466 with ID [7ddd13dc-14e8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";encHash=") AT LINE 466 with ID [7ddd13dc-14e8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(encHash) AT LINE 466 with ID [7ddd13dc-14e8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";replyHash=") AT LINE 466 with ID [7ddd13dc-14e8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(backoff#2) AT LINE 466 with ID [7ddd13dc-14e8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 466 with ID [7ddd13dc-14e8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 466 with ID [7ddd13dc-14e8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = <org.apache.hadoop.mapreduce.task.reduce.Fetcher: org.apache.commons.logging.Log LOG> AT LINE 469 with ID [8cc3ba06-744f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for url=") AT LINE 469 with ID [8cc3ba06-744f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msgToEncode) AT LINE 469 with ID [8cc3ba06-744f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sent hash and received reply") AT LINE 469 with ID [8cc3ba06-744f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 469 with ID [8cc3ba06-744f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 469 with ID [8cc3ba06-744f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack21 = new org.apache.hadoop.yarn.exceptions.YarnRuntimeException at line 1366 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 == 0 goto return at line 1361 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: void cacheAllocatedContainers(java.util.List,org.apache.hadoop.yarn.server.federation.store.records.SubClusterId)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.slf4j.Logger LOG> AT LINE 1362 with ID [cd7db443-afdd]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Adding container {}", container) AT LINE 1362 with ID [cd7db443-afdd]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack116 == 0 goto (branch) at line 278 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack101 == 0 goto $stack102 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.slf4j.Logger LOG> at line 317 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack39 == 0 goto $stack40 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.slf4j.Logger LOG> at line 344 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack29 == 0 goto $stack30 = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyApplicationContext getApplicationContext()>() at line 295 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack21 == 0 goto $stack22 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.slf4j.Logger LOG> at line 277 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if recoveredDataMap != null goto $stack13 = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyApplicationContext getApplicationContext()>() at line 244 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: void recover(java.util.Map)> has 15 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack129 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.slf4j.Logger LOG> AT LINE 286 with ID [f3431fb6-30ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack130 = virtualinvoke $stack128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recovered UAM in ") AT LINE 286 with ID [f3431fb6-30ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack131 = virtualinvoke $stack130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(scId) AT LINE 286 with ID [f3431fb6-30ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack132 = virtualinvoke $stack131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from NMSS") AT LINE 286 with ID [f3431fb6-30ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack133 = virtualinvoke $stack132.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 286 with ID [f3431fb6-30ee]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack129.<org.slf4j.Logger: void debug(java.lang.String)>($stack133) AT LINE 286 with ID [f3431fb6-30ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.slf4j.Logger LOG> AT LINE 348 with ID [8bfdd88f-3cbb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  From home RM ") AT LINE 348 with ID [8bfdd88f-3cbb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = this.<org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.apache.hadoop.yarn.server.federation.store.records.SubClusterId homeSubClusterId> AT LINE 348 with ID [8bfdd88f-3cbb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack70) AT LINE 348 with ID [8bfdd88f-3cbb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" running container ") AT LINE 348 with ID [8bfdd88f-3cbb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = virtualinvoke response#23.<org.apache.hadoop.yarn.api.records.ContainerReport: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 348 with ID [8bfdd88f-3cbb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack73) AT LINE 348 with ID [8bfdd88f-3cbb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 348 with ID [8bfdd88f-3cbb]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack68.<org.slf4j.Logger: void debug(java.lang.String)>($stack75) AT LINE 348 with ID [8bfdd88f-3cbb]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack20 != null goto virtualinvoke this.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void waitForSyncToFinish()>() at line 397 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 != $stack6 goto $stack9 = this.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: org.apache.hadoop.hdfs.server.namenode.FSEditLog$State state> at line 385 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSEditLog: void close()> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.namenode.FSEditLog: org.apache.commons.logging.Log LOG> AT LINE 386 with ID [2ebd4045-7fb3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Closing log when already closed") AT LINE 386 with ID [2ebd4045-7fb3]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack3 != 0 goto $stack4 = virtualinvoke saslMessage.<org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto: com.google.protobuf.ByteString getToken()>() at line 1905 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$Connection: org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto processSaslToken(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 1910 with ID [6ddb9e4f-1180]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Have read input token of size ") AT LINE 1910 with ID [6ddb9e4f-1180]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = lengthof saslToken AT LINE 1910 with ID [6ddb9e4f-1180]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack19) AT LINE 1910 with ID [6ddb9e4f-1180]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for processing by saslServer.evaluateResponse()") AT LINE 1910 with ID [6ddb9e4f-1180]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1910 with ID [6ddb9e4f-1180]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 1910 with ID [6ddb9e4f-1180]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.kms.KMSClientProvider$4: org.apache.hadoop.security.token.Token run()> has 4 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack1 = staticinvoke <org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.slf4j.Logger access$800()>() AT LINE 1031 with ID [1d4ed654-147d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack3 = this.<org.apache.hadoop.crypto.key.kms.KMSClientProvider$4: java.net.URL val$url> AT LINE 1031 with ID [1d4ed654-147d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack2 = this.<org.apache.hadoop.crypto.key.kms.KMSClientProvider$4: java.lang.String val$renewer> AT LINE 1031 with ID [1d4ed654-147d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack1.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Getting new token from {}, renewer:{}", $stack3, $stack2) AT LINE 1031 with ID [1d4ed654-147d]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslRpcClient: void sendSaslMessage(java.io.OutputStream,org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 451 with ID [6c1b7b88-a655]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending sasl message ") AT LINE 451 with ID [6c1b7b88-a655]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(message) AT LINE 451 with ID [6c1b7b88-a655]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 451 with ID [6c1b7b88-a655]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 451 with ID [6c1b7b88-a655]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack46 != 0 goto fileReplication = virtualinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: short getExpectedReplicaNum(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(storedBlock) at line 2899 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack45 != 0 goto $stack46 = virtualinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean isPopulatingReplQueues()>() at line 2894 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack25 == 0 goto result = virtualinvoke storageInfo.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo$AddBlockResult addBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(storedBlock) at line 2845 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack114 != 0 goto node = virtualinvoke storageInfo.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor getDatanodeDescriptor()>() at line 2838 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.protocol.Block addStoredBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,boolean)> has 26 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 2840 with ID [ef3a285e-0c76]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = newarray (java.lang.Object)[3] AT LINE 2840 with ID [ef3a285e-0c76]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19[0] = block AT LINE 2840 with ID [ef3a285e-0c76]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19[1] = node AT LINE 2840 with ID [ef3a285e-0c76]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke block.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getNumBytes()>() AT LINE 2840 with ID [ef3a285e-0c76]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack23) AT LINE 2840 with ID [ef3a285e-0c76]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19[2] = $stack24 AT LINE 2840 with ID [ef3a285e-0c76]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* addStoredBlock: {} on {} size {} but it does not belong to any file", $stack19) AT LINE 2840 with ID [ef3a285e-0c76]
2020-08-25 12:10:04 [INFO] - 	 -> if logEveryBlock == 0 goto num = virtualinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.NumberReplicas countNodes(org.apache.hadoop.hdfs.protocol.Block)>(storedBlock) AT LINE 2854 with ID [f789ec2b-e7bb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack95 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 2855 with ID [f789ec2b-e7bb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack94 = newarray (java.lang.Object)[3] AT LINE 2855 with ID [f789ec2b-e7bb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack94[0] = node AT LINE 2855 with ID [f789ec2b-e7bb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack94[1] = storedBlock AT LINE 2855 with ID [f789ec2b-e7bb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98 = virtualinvoke storedBlock.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getNumBytes()>() AT LINE 2855 with ID [f789ec2b-e7bb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack99 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack98) AT LINE 2855 with ID [f789ec2b-e7bb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack94[2] = $stack99 AT LINE 2855 with ID [f789ec2b-e7bb]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack95.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* addStoredBlock: {} is added to {} (size={})", $stack94) AT LINE 2855 with ID [f789ec2b-e7bb]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= num = virtualinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.NumberReplicas countNodes(org.apache.hadoop.hdfs.protocol.Block)>(storedBlock)] AT LINE 2855 with ID [f789ec2b-e7bb]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 2869 with ID [c5032147-368e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = newarray (java.lang.Object)[3] AT LINE 2869 with ID [c5032147-368e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32[0] = storedBlock AT LINE 2869 with ID [c5032147-368e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32[1] = node AT LINE 2869 with ID [c5032147-368e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke storedBlock.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getNumBytes()>() AT LINE 2869 with ID [c5032147-368e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack36) AT LINE 2869 with ID [c5032147-368e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32[2] = $stack37 AT LINE 2869 with ID [c5032147-368e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* addStoredBlock: Redundant addStoredBlock request received for {} on node {} size {}", $stack32) AT LINE 2869 with ID [c5032147-368e]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if token != null goto $stack61 = new org.apache.hadoop.security.SaslRpcClient$SaslClientCallbackHandler at line 220 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if token#3 != null goto $stack25 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> at line 232 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack22 == $stack23 goto token#3 = virtualinvoke this.<org.apache.hadoop.security.SaslRpcClient: java.lang.String getServerPrincipal(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth)>(authType) at line 227 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslRpcClient: javax.security.sasl.SaslClient createSaslClient(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth)> has 19 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 236 with ID [c089965a-9e0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RPC Server\'s Kerberos principal name for protocol=") AT LINE 236 with ID [c089965a-9e0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = this.<org.apache.hadoop.security.SaslRpcClient: java.lang.Class protocol> AT LINE 236 with ID [c089965a-9e0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.Class: java.lang.String getCanonicalName()>() AT LINE 236 with ID [c089965a-9e0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack54) AT LINE 236 with ID [c089965a-9e0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ") AT LINE 236 with ID [c089965a-9e0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(token#3) AT LINE 236 with ID [c089965a-9e0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 236 with ID [c089965a-9e0d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack51.<org.slf4j.Logger: void debug(java.lang.String)>($stack58) AT LINE 236 with ID [c089965a-9e0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 247 with ID [b179baf0-3aec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating SASL ") AT LINE 247 with ID [b179baf0-3aec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(token#3) AT LINE 247 with ID [b179baf0-3aec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") AT LINE 247 with ID [b179baf0-3aec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(method) AT LINE 247 with ID [b179baf0-3aec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ") AT LINE 247 with ID [b179baf0-3aec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client to authenticate to service at ") AT LINE 247 with ID [b179baf0-3aec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(saslServerName) AT LINE 247 with ID [b179baf0-3aec]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 247 with ID [b179baf0-3aec]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String)>($stack41) AT LINE 247 with ID [b179baf0-3aec]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack26 != 0 goto $stack4 = this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.blockmanagement.HeartbeatManager heartbeatManager> at line 644 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void removeDatanode(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,boolean)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.commons.logging.Log LOG> AT LINE 645 with ID [9954c8f0-7800]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove datanode ") AT LINE 645 with ID [9954c8f0-7800]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nodeInfo) AT LINE 645 with ID [9954c8f0-7800]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 645 with ID [9954c8f0-7800]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 645 with ID [9954c8f0-7800]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack4 != 0 goto (branch) at line 972 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.util.Shell$1: void run()>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack25 == 0 goto this.<org.apache.hadoop.hdfs.server.datanode.metrics.DataNodeDiskMetrics: java.util.Map diskOutliersStats> = diskStats at line 143 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack21 = this.<org.apache.hadoop.hdfs.server.datanode.metrics.DataNodeDiskMetrics: org.apache.hadoop.hdfs.server.datanode.metrics.OutlierDetector slowDiskDetector> at line 136 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack16 = this.<org.apache.hadoop.hdfs.server.datanode.metrics.DataNodeDiskMetrics: org.apache.hadoop.hdfs.server.datanode.metrics.OutlierDetector slowDiskDetector> at line 129 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.metrics.DataNodeDiskMetrics: void detectAndUpdateDiskOutliers(java.util.Map,java.util.Map,java.util.Map)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hdfs.server.datanode.metrics.DataNodeDiskMetrics: org.slf4j.Logger LOG> AT LINE 148 with ID [d89a3f20-c7bd]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String)>("Updated disk outliers.") AT LINE 148 with ID [d89a3f20-c7bd]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto exitmonitor l2 at line 132 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: javax.management.AttributeList getAttributes(java.lang.String[])> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.slf4j.Logger LOG> AT LINE 135 with ID [8a2ef453-5531]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 135 with ID [8a2ef453-5531]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 135 with ID [8a2ef453-5531]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(attr) AT LINE 135 with ID [8a2ef453-5531]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 135 with ID [8a2ef453-5531]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack24) AT LINE 135 with ID [8a2ef453-5531]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack11 == 0 goto specialinvoke this.<org.apache.hadoop.hdfs.server.datanode.BPServiceActor$LifelineSender: void sendLifeline()>() at line 1051 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 != 0 goto $stack9 = this.<org.apache.hadoop.hdfs.server.datanode.BPServiceActor$LifelineSender: org.apache.hadoop.hdfs.server.datanode.BPServiceActor this$0> at line 1044 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BPServiceActor$LifelineSender: void sendLifelineIfDue()> has 14 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = <org.apache.hadoop.hdfs.server.datanode.BPServiceActor: org.slf4j.Logger LOG> AT LINE 1046 with ID [b602a9af-aa43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping sending lifeline for ") AT LINE 1046 with ID [b602a9af-aa43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = this.<org.apache.hadoop.hdfs.server.datanode.BPServiceActor$LifelineSender: org.apache.hadoop.hdfs.server.datanode.BPServiceActor this$0> AT LINE 1046 with ID [b602a9af-aa43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack39) AT LINE 1046 with ID [b602a9af-aa43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", because it is not due.") AT LINE 1046 with ID [b602a9af-aa43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1046 with ID [b602a9af-aa43]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack37.<org.slf4j.Logger: void debug(java.lang.String)>($stack42) AT LINE 1046 with ID [b602a9af-aa43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.server.datanode.BPServiceActor: org.slf4j.Logger LOG> AT LINE 1053 with ID [52c2900f-f298]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping sending lifeline for ") AT LINE 1053 with ID [52c2900f-f298]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.hdfs.server.datanode.BPServiceActor$LifelineSender: org.apache.hadoop.hdfs.server.datanode.BPServiceActor this$0> AT LINE 1053 with ID [52c2900f-f298]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack30) AT LINE 1053 with ID [52c2900f-f298]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", because heartbeats are disabled for tests.") AT LINE 1053 with ID [52c2900f-f298]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1053 with ID [52c2900f-f298]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String)>($stack33) AT LINE 1053 with ID [52c2900f-f298]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack21 = mostRecentSegmentTxId cmp -9223372036854775808L at line 447 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack25 == 0 goto (branch) at line 448 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.qjournal.client.QuorumJournalManager: void recoverUnfinalizedSegments()> has 10 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hdfs.qjournal.client.QuorumJournalManager: org.apache.commons.logging.Log LOG> AT LINE 442 with ID [47931605-e68c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("newEpoch(") AT LINE 442 with ID [47931605-e68c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = this.<org.apache.hadoop.hdfs.qjournal.client.QuorumJournalManager: org.apache.hadoop.hdfs.qjournal.client.AsyncLoggerSet loggers> AT LINE 442 with ID [47931605-e68c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<org.apache.hadoop.hdfs.qjournal.client.AsyncLoggerSet: long getEpoch()>() AT LINE 442 with ID [47931605-e68c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack33) AT LINE 442 with ID [47931605-e68c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") responses:\n") AT LINE 442 with ID [47931605-e68c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = staticinvoke <org.apache.hadoop.hdfs.qjournal.client.QuorumCall: java.lang.String mapToString(java.util.Map)>(resps) AT LINE 442 with ID [47931605-e68c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack36) AT LINE 442 with ID [47931605-e68c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 442 with ID [47931605-e68c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack38) AT LINE 442 with ID [47931605-e68c]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack6 != 0 goto $stack8 = this.<org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.apache.hadoop.hdfs.server.namenode.FSNamesystem namesystem> at line 1092 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: boolean mkdirs(java.lang.String,org.apache.hadoop.fs.permission.FsPermission,boolean)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.slf4j.Logger stateChangeLog> AT LINE 1090 with ID [e23e1627-0f84]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*DIR* NameNode.mkdirs: ") AT LINE 1090 with ID [e23e1627-0f84]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 1090 with ID [e23e1627-0f84]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1090 with ID [e23e1627-0f84]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 1090 with ID [e23e1627-0f84]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack38 == 0 goto $stack7 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: java.util.Map launchedContainers> at line 257 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if info != null goto (branch) at line 238 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: void releaseContainer(org.apache.hadoop.yarn.api.records.ContainerId,boolean)> has 25 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: org.apache.commons.logging.Log LOG> AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Released container ") AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke container.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.ContainerId getId()>() AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack16) AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of capacity ") AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke container.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.Resource getResource()>() AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on host ") AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode rmNode> AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = interfaceinvoke $stack22.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: java.lang.String getNodeAddress()>() AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", which currently has ") AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: int numContainers> AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack26) AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" containers, ") AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: org.apache.hadoop.yarn.api.records.Resource getAllocatedResource()>() AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack29) AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" used and ") AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: org.apache.hadoop.yarn.api.records.Resource getUnallocatedResource()>() AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack32) AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" available") AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", release resources=") AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(1) AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 251 with ID [c71f95da-931d]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack68 == 0 goto $stack70 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> at line 462 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack52 == 0 goto (branch) at line 457 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack41 == 0 goto $stack42 = this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.hadoop.yarn.util.Clock clock> at line 476 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack38 == 0 goto $stack39 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> at line 446 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack26 == 0 goto exitmonitor totalPreemptionAllowed at line 421 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: void containerBasedPreemptOrKill(org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSQueue,org.apache.hadoop.yarn.api.records.Resource)> has 45 units and 13 lines
2020-08-25 12:10:04 [INFO] - 	 -> startTime = 0L AT LINE 447 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> AT LINE 448 with ID [d4ac3cf2-053b, 83751ce6-af7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = interfaceinvoke $stack48.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 448 with ID [d4ac3cf2-053b, 83751ce6-af7b]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack49 == 0 goto i$ = virtualinvoke selector#12.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.PreemptionCandidatesSelector: java.util.Map selectCandidates(java.util.Map,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.api.records.Resource)>(i$, clusterResources, totalPreemptionAllowed#9) AT LINE 448 with ID [d4ac3cf2-053b, 83751ce6-af7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack79 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> AT LINE 449 with ID [83751ce6-af7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack78 = newarray (java.lang.Object)[1] AT LINE 449 with ID [83751ce6-af7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack82 = virtualinvoke selector#12.<java.lang.Object: java.lang.Class getClass()>() AT LINE 449 with ID [83751ce6-af7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.Class: java.lang.String getName()>() AT LINE 449 with ID [83751ce6-af7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack78[0] = $stack83 AT LINE 449 with ID [83751ce6-af7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack84 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Trying to use {0} to select preemption candidates", $stack78) AT LINE 449 with ID [83751ce6-af7b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack79.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack84) AT LINE 449 with ID [83751ce6-af7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack85 = this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.hadoop.yarn.util.Clock clock> AT LINE 452 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> startTime = interfaceinvoke $stack85.<org.apache.hadoop.yarn.util.Clock: long getTime()>() AT LINE 452 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> AT LINE 457 with ID [d4ac3cf2-053b, 9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = interfaceinvoke $stack51.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 457 with ID [d4ac3cf2-053b, 9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack52 == 0 goto (branch) AT LINE 457 with ID [d4ac3cf2-053b, 9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> AT LINE 458 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = newarray (java.lang.Object)[2] AT LINE 458 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke selector#12.<java.lang.Object: java.lang.Class getClass()>() AT LINE 458 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.Class: java.lang.String getName()>() AT LINE 458 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54[0] = $stack59 AT LINE 458 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.hadoop.yarn.util.Clock clock> AT LINE 458 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = interfaceinvoke $stack60.<org.apache.hadoop.yarn.util.Clock: long getTime()>() AT LINE 458 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = $stack62 - startTime AT LINE 458 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack63) AT LINE 458 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54[1] = $stack64 AT LINE 458 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("{0} uses {1} millisecond to run", $stack54) AT LINE 458 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack55.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack65) AT LINE 458 with ID [d4ac3cf2-053b]
2020-08-25 12:10:04 [INFO] - 	 -> totalSelected = 0 AT LINE 461 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = interfaceinvoke i$.<java.util.Map: java.util.Collection values()>() AT LINE 462 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> i$ = interfaceinvoke $stack66.<java.util.Collection: java.util.Iterator iterator()>() AT LINE 462 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>() AT LINE 462 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack68 == 0 goto $stack70 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> AT LINE 462 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 469 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> set = (java.util.Set) $stack75 AT LINE 469 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = interfaceinvoke set.<java.util.Set: int size()>() AT LINE 463 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> totalSelected = totalSelected + $stack76 AT LINE 463 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= $stack68 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] AT LINE 464 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> AT LINE 465 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = newarray (java.lang.Object)[1] AT LINE 465 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalSelected) AT LINE 465 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69[0] = $stack73 AT LINE 465 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("So far, total {0} containers selected to be preempted", $stack69) AT LINE 465 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack70.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack74) AT LINE 465 with ID [9ae994c1-907e]
2020-08-25 12:10:04 [INFO] - 	 -> specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: void logToCSV(java.util.List)>($stack44) AT LINE 472 with ID [9684c381-cc13]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack17 == 0 goto $stack18 = this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.blockmanagement.HeartbeatManager heartbeatManager> at line 1680 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack16 != 0 goto $stack17 = virtualinvoke nodeinfo.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: boolean isDisallowed()>() at line 1678 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void handleLifeline(org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration,org.apache.hadoop.hdfs.server.protocol.StorageReport[],java.lang.String,long,long,int,int,int,org.apache.hadoop.hdfs.server.protocol.VolumeFailureSummary)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.commons.logging.Log LOG> AT LINE 1669 with ID [04ebd8ed-8e15]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received handleLifeline from nodeReg = ") AT LINE 1669 with ID [04ebd8ed-8e15]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nodeReg) AT LINE 1669 with ID [04ebd8ed-8e15]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1669 with ID [04ebd8ed-8e15]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 1669 with ID [04ebd8ed-8e15]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack39 == 0 goto (branch) at line 761 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack28 != $stack29 goto (branch) at line 746 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack27 == 0 goto $stack28 = virtualinvoke childAssignment.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment$SkippedType getSkippedType()>() at line 741 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment assignContainersToChildQueues(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode)> has 37 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack82 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.commons.logging.Log LOG> AT LINE 724 with ID [3bb86208-2d05]
2020-08-25 12:10:04 [INFO] - 	 -> $stack83 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to assign to queue: ") AT LINE 724 with ID [3bb86208-2d05]
2020-08-25 12:10:04 [INFO] - 	 -> $stack84 = interfaceinvoke childQueue.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSQueue: java.lang.String getQueuePath()>() AT LINE 724 with ID [3bb86208-2d05]
2020-08-25 12:10:04 [INFO] - 	 -> $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack84) AT LINE 724 with ID [3bb86208-2d05]
2020-08-25 12:10:04 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stats: ") AT LINE 724 with ID [3bb86208-2d05]
2020-08-25 12:10:04 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(childQueue) AT LINE 724 with ID [3bb86208-2d05]
2020-08-25 12:10:04 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 724 with ID [3bb86208-2d05]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack82.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack88) AT LINE 724 with ID [3bb86208-2d05]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.commons.logging.Log LOG> AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigned to queue: ") AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = interfaceinvoke childQueue.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSQueue: java.lang.String getQueuePath()>() AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack67) AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stats: ") AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(childQueue) AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --> ") AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = virtualinvoke childAssignment.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment: org.apache.hadoop.yarn.api.records.Resource getResource()>() AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack72) AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = virtualinvoke childAssignment.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment: org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType getType()>() AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack75) AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack65.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack77) AT LINE 736 with ID [6d174fc0-8101]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.commons.logging.Log LOG> AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decrease parentLimits ") AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke limits.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits: org.apache.hadoop.yarn.api.records.Resource getLimit()>() AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack43) AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: java.lang.String getQueueName()>() AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack46) AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by ") AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(resourceToSubtract) AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as childQueue=") AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = interfaceinvoke childQueue.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSQueue: java.lang.String getQueueName()>() AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack51) AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is blocked") AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack41.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack54) AT LINE 762 with ID [cfaedbdb-27a3]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack93 == 0 goto $stack95 = <org.apache.hadoop.mapred.TestKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> at line 112 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if j >= $stack71 goto $stack73 = (long) length at line 97 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i >= 3 goto $stack50 = <org.apache.hadoop.mapred.TestKeyValueTextInputFormat: int MAX_LENGTH> at line 89 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i >= length goto virtualinvoke writer.<java.io.Writer: void close()>() at line 76 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if length >= $stack40 goto return at line 68 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TestKeyValueTextInputFormat: void testFormat()> has 41 units and 8 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = <org.apache.hadoop.mapred.TestKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 71 with ID [b715f492-ac36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("creating; entries = ") AT LINE 71 with ID [b715f492-ac36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(length) AT LINE 71 with ID [b715f492-ac36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 71 with ID [b715f492-ac36]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack45) AT LINE 71 with ID [b715f492-ac36]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = <org.apache.hadoop.mapred.TestKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 91 with ID [9f8adedd-b3ea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splitting: requesting = ") AT LINE 91 with ID [9f8adedd-b3ea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numSplits) AT LINE 91 with ID [9f8adedd-b3ea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 91 with ID [9f8adedd-b3ea]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack59.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack62) AT LINE 91 with ID [9f8adedd-b3ea]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = <org.apache.hadoop.mapred.TestKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 93 with ID [49d2f430-ac43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splitting: got =        ") AT LINE 93 with ID [49d2f430-ac43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = lengthof splits AT LINE 93 with ID [49d2f430-ac43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack67) AT LINE 93 with ID [49d2f430-ac43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 93 with ID [49d2f430-ac43]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack65.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack69) AT LINE 93 with ID [49d2f430-ac43]
2020-08-25 12:10:04 [INFO] - 	 -> $stack79 = <org.apache.hadoop.mapred.TestKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 98 with ID [443da4b7-fce6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("split[") AT LINE 98 with ID [443da4b7-fce6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j) AT LINE 98 with ID [443da4b7-fce6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]= ") AT LINE 98 with ID [443da4b7-fce6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack83 = splits[j] AT LINE 98 with ID [443da4b7-fce6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack84 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack83) AT LINE 98 with ID [443da4b7-fce6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack85 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 98 with ID [443da4b7-fce6]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack79.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack85) AT LINE 98 with ID [443da4b7-fce6]
2020-08-25 12:10:04 [INFO] - 	 -> count = 0 AT LINE 111 with ID [734bf081-4a0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack109 = <org.apache.hadoop.mapred.TestKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 114 with ID [f681f416-7ea1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack110 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read ") AT LINE 114 with ID [f681f416-7ea1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack111 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v) AT LINE 114 with ID [f681f416-7ea1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack112 = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 114 with ID [f681f416-7ea1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack109.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack112) AT LINE 114 with ID [f681f416-7ea1]
2020-08-25 12:10:04 [INFO] - 	 -> count = count + 1 AT LINE 122 with ID [734bf081-4a0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack95 = <org.apache.hadoop.mapred.TestKeyValueTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 124 with ID [734bf081-4a0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack96 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splits[") AT LINE 124 with ID [734bf081-4a0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j) AT LINE 124 with ID [734bf081-4a0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=") AT LINE 124 with ID [734bf081-4a0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack99 = splits[j] AT LINE 124 with ID [734bf081-4a0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack100 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack99) AT LINE 124 with ID [734bf081-4a0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=") AT LINE 124 with ID [734bf081-4a0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack102 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 124 with ID [734bf081-4a0e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack103 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 124 with ID [734bf081-4a0e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack95.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack103) AT LINE 124 with ID [734bf081-4a0e]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.UserGroupInformation: void logPrivilegedAction(javax.security.auth.Subject,java.lang.Object)> has 10 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>() AT LINE 1919 with ID [0a0336ac-b1aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = $stack7[2] AT LINE 1919 with ID [0a0336ac-b1aa]
2020-08-25 12:10:04 [INFO] - 	 -> where = virtualinvoke $stack8.<java.lang.StackTraceElement: java.lang.String toString()>() AT LINE 1919 with ID [0a0336ac-b1aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 1920 with ID [0a0336ac-b1aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PrivilegedAction as:") AT LINE 1920 with ID [0a0336ac-b1aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 1920 with ID [0a0336ac-b1aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from:") AT LINE 1920 with ID [0a0336ac-b1aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(where) AT LINE 1920 with ID [0a0336ac-b1aa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1920 with ID [0a0336ac-b1aa]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 1920 with ID [0a0336ac-b1aa]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.server.MultiSchemeAuthenticationHandler: org.apache.hadoop.security.authentication.server.AuthenticationHandler initializeAuthHandler(java.lang.String,java.util.Properties)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = <org.apache.hadoop.security.authentication.server.MultiSchemeAuthenticationHandler: org.slf4j.Logger logger> AT LINE 149 with ID [d60e9380-22ac]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializing Authentication handler of type ") AT LINE 149 with ID [d60e9380-22ac]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(authHandlerClassName) AT LINE 149 with ID [d60e9380-22ac]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 149 with ID [d60e9380-22ac]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack10) AT LINE 149 with ID [d60e9380-22ac]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = new org.apache.hadoop.fs.Path at line 752 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: java.util.Map loadStartedResources(org.apache.hadoop.yarn.server.utils.LeveldbIterator,java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 758 with ID [3ee935a6-578a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading in-progress resource at ") AT LINE 758 with ID [3ee935a6-578a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(localPath) AT LINE 758 with ID [3ee935a6-578a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 758 with ID [3ee935a6-578a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String)>($stack29) AT LINE 758 with ID [3ee935a6-578a]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = new org.apache.hadoop.yarn.exceptions.YarnRuntimeException at line 159 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if path != null goto $stack8 = virtualinvoke path.<java.lang.String: boolean equals(java.lang.Object)>("domain") at line 150 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.TimelineWriter: com.sun.jersey.api.client.ClientResponse doPostingObject(java.lang.Object,java.lang.String)> has 14 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = <org.apache.hadoop.yarn.client.api.impl.TimelineWriter: org.apache.commons.logging.Log LOG> AT LINE 152 with ID [392503cc-73da]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("POST to ") AT LINE 152 with ID [392503cc-73da]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = this.<org.apache.hadoop.yarn.client.api.impl.TimelineWriter: java.net.URI resURI> AT LINE 152 with ID [392503cc-73da]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack47) AT LINE 152 with ID [392503cc-73da]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 152 with ID [392503cc-73da]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack45.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack49) AT LINE 152 with ID [392503cc-73da]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.client.api.impl.TimelineWriter: org.apache.commons.logging.Log LOG> AT LINE 161 with ID [3a469bbd-3fbf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PUT to ") AT LINE 161 with ID [3a469bbd-3fbf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.yarn.client.api.impl.TimelineWriter: java.net.URI resURI> AT LINE 161 with ID [3a469bbd-3fbf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 161 with ID [3a469bbd-3fbf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") AT LINE 161 with ID [3a469bbd-3fbf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 161 with ID [3a469bbd-3fbf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 161 with ID [3a469bbd-3fbf]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack25) AT LINE 161 with ID [3a469bbd-3fbf]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: void killReservedContainer(org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1769 with ID [7d7ad661-ab2b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEventType: org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEventType KILL_RESERVED_CONTAINER> AT LINE 1769 with ID [7d7ad661-ab2b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack9) AT LINE 1769 with ID [7d7ad661-ab2b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") AT LINE 1769 with ID [7d7ad661-ab2b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke container.<java.lang.Object: java.lang.String toString()>() AT LINE 1769 with ID [7d7ad661-ab2b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 1769 with ID [7d7ad661-ab2b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1769 with ID [7d7ad661-ab2b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 1769 with ID [7d7ad661-ab2b]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl$LazyWriter: boolean saveNextReplica()> has 11 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 3219 with ID [588d3dd7-69cd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LazyWriter: Start persisting RamDisk block: block pool Id: ") AT LINE 3219 with ID [588d3dd7-69cd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = virtualinvoke block.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.RamDiskReplicaTracker$RamDiskReplica: java.lang.String getBlockPoolId()>() AT LINE 3219 with ID [588d3dd7-69cd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack61) AT LINE 3219 with ID [588d3dd7-69cd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" block id: ") AT LINE 3219 with ID [588d3dd7-69cd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = virtualinvoke block.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.RamDiskReplicaTracker$RamDiskReplica: long getBlockId()>() AT LINE 3219 with ID [588d3dd7-69cd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack64) AT LINE 3219 with ID [588d3dd7-69cd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on target volume ") AT LINE 3219 with ID [588d3dd7-69cd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(targetVolume) AT LINE 3219 with ID [588d3dd7-69cd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3219 with ID [588d3dd7-69cd]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack59.<org.slf4j.Logger: void debug(java.lang.String)>($stack68) AT LINE 3219 with ID [588d3dd7-69cd]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack9 == $stack10 goto $stack11 = this.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.hadoop.hdfs.server.namenode.FsImageProto$FileSummary$Builder fileSummaryBld> at line 1604 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if layoutVersion != null goto $stack9 = virtualinvoke layoutVersion.<java.lang.Integer: int intValue()>() at line 1600 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if onDiskVersion != null goto layoutVersion = virtualinvoke e#2.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$Node: java.lang.Integer removeChildInt(java.lang.String)>("layoutVersion") at line 1595 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: void readVersion()> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.commons.logging.Log LOG> AT LINE 1617 with ID [5534dac4-e7e5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded <version> with onDiskVersion=") AT LINE 1617 with ID [5534dac4-e7e5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(onDiskVersion) AT LINE 1617 with ID [5534dac4-e7e5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", layoutVersion=") AT LINE 1617 with ID [5534dac4-e7e5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(layoutVersion) AT LINE 1617 with ID [5534dac4-e7e5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") AT LINE 1617 with ID [5534dac4-e7e5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1617 with ID [5534dac4-e7e5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 1617 with ID [5534dac4-e7e5]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack21 == 0 goto return at line 934 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack66 != 0 goto (branch) at line 952 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack65 == 0 goto $stack66 = virtualinvoke old.<org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo: boolean isMovePending()>() at line 952 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: void scanIntermediateDirectory(org.apache.hadoop.fs.Path)> has 28 units and 6 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack101 = <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log LOG> AT LINE 927 with ID [211e8ca4-4f7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack102 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scanning intermediate dir ") AT LINE 927 with ID [211e8ca4-4f7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack103 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(absPath) AT LINE 927 with ID [211e8ca4-4f7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack104 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 927 with ID [211e8ca4-4f7b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack101.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack104) AT LINE 927 with ID [211e8ca4-4f7b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack93 = <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log LOG> AT LINE 932 with ID [616dc889-a6ab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack94 = virtualinvoke $stack92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found ") AT LINE 932 with ID [616dc889-a6ab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack95 = interfaceinvoke fileStatusList.<java.util.List: int size()>() AT LINE 932 with ID [616dc889-a6ab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack96 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack95) AT LINE 932 with ID [616dc889-a6ab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files") AT LINE 932 with ID [616dc889-a6ab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 932 with ID [616dc889-a6ab]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack93.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack98) AT LINE 932 with ID [616dc889-a6ab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log LOG> AT LINE 936 with ID [7ef4739c-402f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scanning file: ") AT LINE 936 with ID [7ef4739c-402f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = virtualinvoke fs.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() AT LINE 936 with ID [7ef4739c-402f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack75) AT LINE 936 with ID [7ef4739c-402f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 936 with ID [7ef4739c-402f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack73.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack77) AT LINE 936 with ID [7ef4739c-402f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log LOG> AT LINE 960 with ID [f6b9f714-8e0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling move to done of ") AT LINE 960 with ID [f6b9f714-8e0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(found) AT LINE 960 with ID [f6b9f714-8e0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 960 with ID [f6b9f714-8e0c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack53.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack56) AT LINE 960 with ID [f6b9f714-8e0c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log LOG> AT LINE 976 with ID [a6dcf0f9-23e0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = interfaceinvoke $stack67.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 976 with ID [a6dcf0f9-23e0]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack68 == 0 goto virtualinvoke fileInfo.<org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo: void delete()>() AT LINE 976 with ID [a6dcf0f9-23e0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log LOG> AT LINE 977 with ID [a6dcf0f9-23e0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack69.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Duplicate: deleting") AT LINE 977 with ID [a6dcf0f9-23e0]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack15 <= 0 goto sleepCounter = sleepCounter + 1 at line 945 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: java.lang.String getContainerPid(org.apache.hadoop.fs.Path)> has 14 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.slf4j.Logger LOG> AT LINE 928 with ID [d359bd81-e58c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Accessing pid for container ") AT LINE 928 with ID [d359bd81-e58c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerIdStr) AT LINE 928 with ID [d359bd81-e58c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid file ") AT LINE 928 with ID [d359bd81-e58c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(pidFilePath) AT LINE 928 with ID [d359bd81-e58c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 928 with ID [d359bd81-e58c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack38.<org.slf4j.Logger: void debug(java.lang.String)>($stack43) AT LINE 928 with ID [d359bd81-e58c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.slf4j.Logger LOG> AT LINE 940 with ID [64ee63f7-bbf9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got pid ") AT LINE 940 with ID [64ee63f7-bbf9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(processId) AT LINE 940 with ID [64ee63f7-bbf9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for container ") AT LINE 940 with ID [64ee63f7-bbf9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerIdStr) AT LINE 940 with ID [64ee63f7-bbf9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 940 with ID [64ee63f7-bbf9]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String)>($stack36) AT LINE 940 with ID [64ee63f7-bbf9]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack83 != 0 goto $stack50 = new org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplication at line 503 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if queue != null goto userUgi = staticinvoke <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation createRemoteUser(java.lang.String)>(user) at line 465 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack41 == 0 goto $stack42 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock> at line 458 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack24 = virtualinvoke queueName.<java.lang.String: boolean startsWith(java.lang.String)>(".") at line 446 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.lang.String,boolean)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack78 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.commons.logging.Log LOG> AT LINE 494 with ID [cec44317-997a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack79 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationId) AT LINE 494 with ID [cec44317-997a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is recovering. Skip notifying APP_ACCEPTED") AT LINE 494 with ID [cec44317-997a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 494 with ID [cec44317-997a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack78.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack81) AT LINE 494 with ID [cec44317-997a]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if r != null goto waiting_period#23 = interfaceinvoke r.<org.apache.hadoop.hdfs.server.datanode.Replica: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState getState()>() at line 723 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack72 <= 0 goto (branch) at line 731 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack17 > DN_N1 goto $stack18 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> at line 709 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: void waitForTempReplica(org.apache.hadoop.hdfs.protocol.Block,int)> has 41 units and 6 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack104 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 707 with ID [6b30cdcd-6fb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack105 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wait for datanode ") AT LINE 707 with ID [6b30cdcd-6fb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(DN_N1) AT LINE 707 with ID [6b30cdcd-6fb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to appear") AT LINE 707 with ID [6b30cdcd-6fb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack108 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 707 with ID [6b30cdcd-6fb1]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack104.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack108) AT LINE 707 with ID [6b30cdcd-6fb1]
2020-08-25 12:10:04 [INFO] - 	 -> $stack85 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 713 with ID [23b79ce0-0b90]
2020-08-25 12:10:04 [INFO] - 	 -> $stack86 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total number of DNs ") AT LINE 713 with ID [23b79ce0-0b90]
2020-08-25 12:10:04 [INFO] - 	 -> $stack87 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.hadoop.hdfs.MiniDFSCluster cluster> AT LINE 713 with ID [23b79ce0-0b90]
2020-08-25 12:10:04 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<org.apache.hadoop.hdfs.MiniDFSCluster: java.util.ArrayList getDataNodes()>() AT LINE 713 with ID [23b79ce0-0b90]
2020-08-25 12:10:04 [INFO] - 	 -> $stack89 = virtualinvoke $stack88.<java.util.ArrayList: int size()>() AT LINE 713 with ID [23b79ce0-0b90]
2020-08-25 12:10:04 [INFO] - 	 -> $stack90 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack89) AT LINE 713 with ID [23b79ce0-0b90]
2020-08-25 12:10:04 [INFO] - 	 -> $stack91 = virtualinvoke $stack90.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 713 with ID [23b79ce0-0b90]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack85.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack91) AT LINE 713 with ID [23b79ce0-0b90]
2020-08-25 12:10:04 [INFO] - 	 -> $stack79 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 729 with ID [3fcfab99-f219]
2020-08-25 12:10:04 [INFO] - 	 -> $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Has been waiting for ") AT LINE 729 with ID [3fcfab99-f219]
2020-08-25 12:10:04 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(waiting_period) AT LINE 729 with ID [3fcfab99-f219]
2020-08-25 12:10:04 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms.") AT LINE 729 with ID [3fcfab99-f219]
2020-08-25 12:10:04 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 729 with ID [3fcfab99-f219]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack79.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack83) AT LINE 729 with ID [3fcfab99-f219]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 738 with ID [2f3e5e04-8f88]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Replica state before the loop ") AT LINE 738 with ID [2f3e5e04-8f88]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = virtualinvoke waiting_period#23.<org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState: int getValue()>() AT LINE 738 with ID [2f3e5e04-8f88]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack64) AT LINE 738 with ID [2f3e5e04-8f88]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 738 with ID [2f3e5e04-8f88]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack62.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack66) AT LINE 738 with ID [2f3e5e04-8f88]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 745 with ID [87a6e876-1cc0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Keep waiting for ") AT LINE 745 with ID [87a6e876-1cc0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke bl.<org.apache.hadoop.hdfs.protocol.Block: java.lang.String getBlockName()>() AT LINE 745 with ID [87a6e876-1cc0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack53) AT LINE 745 with ID [87a6e876-1cc0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is in state ") AT LINE 745 with ID [87a6e876-1cc0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke waiting_period#23.<org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState: int getValue()>() AT LINE 745 with ID [87a6e876-1cc0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack56) AT LINE 745 with ID [87a6e876-1cc0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 745 with ID [87a6e876-1cc0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack51.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack58) AT LINE 745 with ID [87a6e876-1cc0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 753 with ID [93b13e05-0ea0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Replica state after the loop ") AT LINE 753 with ID [93b13e05-0ea0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke waiting_period#23.<org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState: int getValue()>() AT LINE 753 with ID [93b13e05-0ea0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack40) AT LINE 753 with ID [93b13e05-0ea0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 753 with ID [93b13e05-0ea0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack42) AT LINE 753 with ID [93b13e05-0ea0]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: void allocateResource(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt,org.apache.hadoop.yarn.api.records.Resource,java.lang.String,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer)> has 22 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager usersManager> AT LINE 1698 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> user = virtualinvoke $stack11.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager$User updateUserResourceUsage(java.lang.String,org.apache.hadoop.yarn.api.records.Resource,java.lang.String,boolean)>(rmContainers#11, resource, nodePartition, 1) AT LINE 1698 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: java.lang.String getQueueName()>() AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" user=") AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(rmContainers#11) AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" used=") AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage queueUsage> AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getUsed(java.lang.String)>(nodePartition) AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack28) AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numContainers=") AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: int numContainers> AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31) AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" headroom = ") AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: org.apache.hadoop.yarn.api.records.Resource getHeadroom()>() AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack34) AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" user-resources=") AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke user.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager$User: org.apache.hadoop.yarn.api.records.Resource getUsed()>() AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack37) AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack39) AT LINE 1708 with ID [818b128d-46c5]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.lib.MutableMetricsFactory: org.apache.hadoop.metrics2.lib.MutableMetric newForMethod(java.lang.Object,java.lang.reflect.Method,org.apache.hadoop.metrics2.'annotation'.Metric,org.apache.hadoop.metrics2.lib.MetricsRegistry)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = <org.apache.hadoop.metrics2.lib.MutableMetricsFactory: org.slf4j.Logger LOG> AT LINE 93 with ID [2d737a38-8bd8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke tmp$740866783.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method ") AT LINE 93 with ID [2d737a38-8bd8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(method) AT LINE 93 with ID [2d737a38-8bd8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with annotation ") AT LINE 93 with ID [2d737a38-8bd8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(annotation) AT LINE 93 with ID [2d737a38-8bd8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 93 with ID [2d737a38-8bd8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack24) AT LINE 93 with ID [2d737a38-8bd8]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment assignContainers(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 860 with ID [cd4b3c01-7d46]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pre-assignContainers for application ") AT LINE 860 with ID [cd4b3c01-7d46]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 860 with ID [cd4b3c01-7d46]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack13) AT LINE 860 with ID [cd4b3c01-7d46]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 860 with ID [cd4b3c01-7d46]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 860 with ID [cd4b3c01-7d46]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if ctor#7 == 8020 goto virtualinvoke providerNN.<org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider: void setFallbackToSimpleAuth(java.util.concurrent.atomic.AtomicBoolean)>(fallbackToSimpleAuth) at line 272 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if failoverProxyProviderClass != null goto $stack11 = newarray (java.lang.Class)[4] at line 231 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.NameNodeProxiesClient: org.apache.hadoop.hdfs.server.namenode.ha.AbstractNNFailoverProxyProvider createFailoverProxyProvider(org.apache.hadoop.conf.Configuration,java.net.URI,java.lang.Class,boolean,java.util.concurrent.atomic.AtomicBoolean,org.apache.hadoop.hdfs.server.namenode.ha.HAProxyFactory)>
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.webapp.Controller: void renderJSON(java.lang.Object)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.webapp.Controller: org.slf4j.Logger LOG> AT LINE 220 with ID [bcb2b4ed-a06b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: {}", "application/json; charset=UTF-8", object) AT LINE 220 with ID [bcb2b4ed-a06b]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack43 == 0 goto $stack44 = capacityByLabel cmpl 0.0F at line 181 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack25 == 0 goto $stack26 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: java.util.List childQueues> at line 177 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack47 <= 0 goto (branch) at line 190 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack45 != 0 goto (branch) at line 184 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack74 <= 0 goto $stack22 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.QueueCapacities queueCapacities> at line 183 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = 1.0F - childCapacities at line 165 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: void setChildQueues(java.util.Collection)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.commons.logging.Log LOG> AT LINE 195 with ID [ed067263-d0c7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setChildQueues: ") AT LINE 195 with ID [ed067263-d0c7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: java.lang.String getChildQueuesToPrint()>() AT LINE 195 with ID [ed067263-d0c7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35) AT LINE 195 with ID [ed067263-d0c7]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 195 with ID [ed067263-d0c7]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 195 with ID [ed067263-d0c7]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 == 0 goto specialinvoke this.<org.apache.hadoop.service.AbstractService: void serviceStart()>() at line 118 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.service.CompositeService: void serviceStart()> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = <org.apache.hadoop.service.CompositeService: org.slf4j.Logger LOG> AT LINE 116 with ID [c86c1866-050d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke this.<org.apache.hadoop.service.CompositeService: java.lang.String getName()>() AT LINE 116 with ID [c86c1866-050d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13) AT LINE 116 with ID [c86c1866-050d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": starting services, size=") AT LINE 116 with ID [c86c1866-050d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = interfaceinvoke services.<java.util.List: int size()>() AT LINE 116 with ID [c86c1866-050d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack16) AT LINE 116 with ID [c86c1866-050d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 116 with ID [c86c1866-050d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 116 with ID [c86c1866-050d]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if numLive < $stack28 goto $stack30 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger LOG> at line 369 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if numLive < $stack22 goto return 0 at line 380 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager> at line 353 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: boolean isSufficientlyReplicated(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,org.apache.hadoop.hdfs.server.blockmanagement.BlockCollection,org.apache.hadoop.hdfs.server.blockmanagement.NumberReplicas,boolean)> has 30 units and 4 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger LOG> AT LINE 355 with ID [f4c65be1-ab0d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Block {} does not need replication.", block) AT LINE 355 with ID [f4c65be1-ab0d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger LOG> AT LINE 364 with ID [c0c1366f-fa81]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = newarray (java.lang.Object)[3] AT LINE 364 with ID [c0c1366f-fa81]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[0] = block AT LINE 364 with ID [c0c1366f-fa81]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(numExpected) AT LINE 364 with ID [c0c1366f-fa81]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[1] = $stack16 AT LINE 364 with ID [c0c1366f-fa81]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(numLive) AT LINE 364 with ID [c0c1366f-fa81]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12[2] = $stack18 AT LINE 364 with ID [c0c1366f-fa81]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("Block {} numExpected={}, numLive={}", $stack12) AT LINE 364 with ID [c0c1366f-fa81]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger LOG> AT LINE 370 with ID [f9e5fbe2-14ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = newarray (java.lang.Object)[3] AT LINE 370 with ID [f9e5fbe2-14ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38[0] = block AT LINE 370 with ID [f9e5fbe2-14ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(numLive) AT LINE 370 with ID [f9e5fbe2-14ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38[1] = $stack42 AT LINE 370 with ID [f9e5fbe2-14ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager> AT LINE 370 with ID [f9e5fbe2-14ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = $stack43.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: short minReplication> AT LINE 370 with ID [f9e5fbe2-14ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($stack44) AT LINE 370 with ID [f9e5fbe2-14ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38[2] = $stack46 AT LINE 370 with ID [f9e5fbe2-14ee]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("UC block {} sufficiently-replicated since numLive ({}) >= minR ({})", $stack38) AT LINE 370 with ID [f9e5fbe2-14ee]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger LOG> AT LINE 374 with ID [3bea3413-5963]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = newarray (java.lang.Object)[3] AT LINE 374 with ID [3bea3413-5963]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29[0] = block AT LINE 374 with ID [3bea3413-5963]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(numLive) AT LINE 374 with ID [3bea3413-5963]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29[1] = $stack33 AT LINE 374 with ID [3bea3413-5963]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager> AT LINE 374 with ID [3bea3413-5963]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = $stack34.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: short minReplication> AT LINE 374 with ID [3bea3413-5963]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($stack35) AT LINE 374 with ID [3bea3413-5963]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29[2] = $stack37 AT LINE 374 with ID [3bea3413-5963]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("UC block {} insufficiently-replicated since numLive ({}) < minR ({})", $stack29) AT LINE 374 with ID [3bea3413-5963]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack17 == 0 goto $stack7 = staticinvoke <org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text access$300(org.apache.hadoop.security.token.Token)>(publicToken) at line 235 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.token.Token$PrivateToken: void <init>(org.apache.hadoop.security.token.Token,org.apache.hadoop.io.Text)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.security.token.Token$PrivateToken: org.slf4j.Logger LOG> AT LINE 233 with ID [cd04ead2-8aa2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cloned private token ") AT LINE 233 with ID [cd04ead2-8aa2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 233 with ID [cd04ead2-8aa2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ") AT LINE 233 with ID [cd04ead2-8aa2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(publicToken) AT LINE 233 with ID [cd04ead2-8aa2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 233 with ID [cd04ead2-8aa2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 233 with ID [cd04ead2-8aa2]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack21 == 0 goto $stack22 = new javax.security.auth.callback.UnsupportedCallbackException at line 346 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto (branch) at line 345 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslRpcServer$SaslGssCallbackHandler: void handle(javax.security.auth.callback.Callback[])> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.security.SaslRpcServer: org.slf4j.Logger LOG> AT LINE 363 with ID [d7cd4145-c9df]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SASL server GSSAPI callback: setting canonicalized client ID: ") AT LINE 363 with ID [d7cd4145-c9df]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(len$#6) AT LINE 363 with ID [d7cd4145-c9df]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 363 with ID [d7cd4145-c9df]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 363 with ID [d7cd4145-c9df]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto virtualinvoke directive.<org.apache.hadoop.hdfs.protocol.CacheDirective: void addBytesCached(long)>(cachedTotal) at line 396 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack26 <= 0 goto cachedTotal = 0L at line 384 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: void rescanFile(org.apache.hadoop.hdfs.protocol.CacheDirective,org.apache.hadoop.hdfs.server.namenode.INodeFile)> has 48 units and 5 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack99 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98 = newarray (java.lang.Object)[5] AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack102 = virtualinvoke directive.<org.apache.hadoop.hdfs.protocol.CacheDirective: long getId()>() AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack103 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack102) AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98[0] = $stack103 AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack105 = virtualinvoke file.<org.apache.hadoop.hdfs.server.namenode.INodeFile: java.lang.String getFullPathName()>() AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98[1] = $stack105 AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack107 = virtualinvoke pool.<org.apache.hadoop.hdfs.server.namenode.CachePool: java.lang.String getPoolName()>() AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98[2] = $stack107 AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack109 = virtualinvoke pool.<org.apache.hadoop.hdfs.server.namenode.CachePool: long getBytesNeeded()>() AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack110 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack109) AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98[3] = $stack110 AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack112 = virtualinvoke pool.<org.apache.hadoop.hdfs.server.namenode.CachePool: long getLimit()>() AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack113 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack112) AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98[4] = $stack113 AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack99.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Directive {}: not scanning file {} because bytesNeeded for pool {} is {}, but the pool\'s limit is {}", $stack98) AT LINE 385 with ID [b7d7cf40-3d4a]
2020-08-25 12:10:04 [INFO] - 	 -> $stack91 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 399 with ID [f76c6d19-93d4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack90 = newarray (java.lang.Object)[3] AT LINE 399 with ID [f76c6d19-93d4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack94 = virtualinvoke directive.<org.apache.hadoop.hdfs.protocol.CacheDirective: long getId()>() AT LINE 399 with ID [f76c6d19-93d4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack95 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack94) AT LINE 399 with ID [f76c6d19-93d4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack90[0] = $stack95 AT LINE 399 with ID [f76c6d19-93d4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack90[1] = blockInfo AT LINE 399 with ID [f76c6d19-93d4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack97 = virtualinvoke blockInfo.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$BlockUCState getBlockUCState()>() AT LINE 399 with ID [f76c6d19-93d4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack90[2] = $stack97 AT LINE 399 with ID [f76c6d19-93d4]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack91.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("Directive {}: can\'t cache block {} because it is in state {}, not COMPLETE.", $stack90) AT LINE 399 with ID [f76c6d19-93d4]
2020-08-25 12:10:04 [INFO] - 	 -> ocblock = ncblock AT LINE 411 with ID [a7ecf72d-88b0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 442 with ID [a7ecf72d-88b0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = newarray (java.lang.Object)[3] AT LINE 442 with ID [a7ecf72d-88b0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke directive.<org.apache.hadoop.hdfs.protocol.CacheDirective: long getId()>() AT LINE 442 with ID [a7ecf72d-88b0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack71) AT LINE 442 with ID [a7ecf72d-88b0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67[0] = $stack72 AT LINE 442 with ID [a7ecf72d-88b0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67[1] = blockInfo AT LINE 442 with ID [a7ecf72d-88b0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = virtualinvoke ocblock.<org.apache.hadoop.hdfs.server.namenode.CachedBlock: short getReplication()>() AT LINE 442 with ID [a7ecf72d-88b0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($stack74) AT LINE 442 with ID [a7ecf72d-88b0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67[2] = $stack75 AT LINE 442 with ID [a7ecf72d-88b0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack68.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("Directive {}: setting replication for block {} to {}", $stack67) AT LINE 442 with ID [a7ecf72d-88b0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 450 with ID [76938588-262b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = newarray (java.lang.Object)[4] AT LINE 450 with ID [76938588-262b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke directive.<org.apache.hadoop.hdfs.protocol.CacheDirective: long getId()>() AT LINE 450 with ID [76938588-262b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack32) AT LINE 450 with ID [76938588-262b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28[0] = $stack33 AT LINE 450 with ID [76938588-262b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke file.<org.apache.hadoop.hdfs.server.namenode.INodeFile: java.lang.String getFullPathName()>() AT LINE 450 with ID [76938588-262b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28[1] = $stack35 AT LINE 450 with ID [76938588-262b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(cachedTotal) AT LINE 450 with ID [76938588-262b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28[2] = $stack37 AT LINE 450 with ID [76938588-262b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(neededTotal) AT LINE 450 with ID [76938588-262b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28[3] = $stack39 AT LINE 450 with ID [76938588-262b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Directive {}: caching {}: {}/{} bytes", $stack28) AT LINE 450 with ID [76938588-262b]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack32 == 0 goto $stack33 = new org.apache.hadoop.hdfs.MiniDFSCluster$Builder at line 642 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack30 == 0 goto virtualinvoke editLog.<org.apache.hadoop.hdfs.server.namenode.FSEditLog: void close()>() at line 636 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.TestEditLog: void testEditChecksum()> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = <org.apache.hadoop.hdfs.server.namenode.TestEditLog: org.apache.commons.logging.Log LOG> AT LINE 647 with ID [1a4f2728-46b2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupting Log File: ") AT LINE 647 with ID [1a4f2728-46b2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(editFile) AT LINE 647 with ID [1a4f2728-46b2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" len: ") AT LINE 647 with ID [1a4f2728-46b2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileLen) AT LINE 647 with ID [1a4f2728-46b2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 647 with ID [1a4f2728-46b2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack47) AT LINE 647 with ID [1a4f2728-46b2]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void storeRMDTMasterKeyState(org.apache.hadoop.security.token.delegation.DelegationKey)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 1132 with ID [97723979-a6a9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing RMDelegationKey_") AT LINE 1132 with ID [97723979-a6a9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke delegationKey.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 1132 with ID [97723979-a6a9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack29) AT LINE 1132 with ID [97723979-a6a9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1132 with ID [97723979-a6a9]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack31) AT LINE 1132 with ID [97723979-a6a9]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack24 == 0 goto (branch) at line 377 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack31 != 0 goto virtualinvoke input.<java.io.DataInputStream: void close()>() at line 377 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if left#26 >= i$#25 goto (branch) at line 360 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack60 == 0 goto return at line 377 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ != null goto (branch) at line 360 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if input != null goto i$ = null at line 331 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack16 != 0 goto $stack17 = <org.apache.hadoop.mapreduce.task.reduce.Fetcher: org.apache.commons.logging.Log LOG> at line 313 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.task.reduce.Fetcher: void copyFromHost(org.apache.hadoop.mapreduce.task.reduce.MapHost)> has 10 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = <org.apache.hadoop.mapreduce.task.reduce.Fetcher: org.apache.commons.logging.Log LOG> AT LINE 318 with ID [92eb8440-e840]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fetcher ") AT LINE 318 with ID [92eb8440-e840]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = this.<org.apache.hadoop.mapreduce.task.reduce.Fetcher: int id> AT LINE 318 with ID [92eb8440-e840]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack70) AT LINE 318 with ID [92eb8440-e840]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" going to fetch from ") AT LINE 318 with ID [92eb8440-e840]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(host) AT LINE 318 with ID [92eb8440-e840]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for: ") AT LINE 318 with ID [92eb8440-e840]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(maps) AT LINE 318 with ID [92eb8440-e840]
2020-08-25 12:10:04 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 318 with ID [92eb8440-e840]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack68.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack76) AT LINE 318 with ID [92eb8440-e840]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack11 == 0 goto i$#2 = virtualinvoke cleaner.<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalCacheCleaner: org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalCacheCleaner$LocalCacheCleanerStats cleanCache()>() at line 533 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalCacheCleaner$LocalCacheCleanerStats handleCacheCleanup()> has 3 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: org.slf4j.Logger LOG> AT LINE 538 with ID [3612d291-a4fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke i$#2.<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalCacheCleaner$LocalCacheCleanerStats: java.lang.String toStringDetailed()>() AT LINE 538 with ID [3612d291-a4fa]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void debug(java.lang.String)>($stack37) AT LINE 538 with ID [3612d291-a4fa]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i >= assignedContainers goto return assignedContainers at line 696 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: int assignContainer(org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode,org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoAppAttempt,org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,int,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType)> has 21 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.commons.logging.Log LOG> AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("assignContainers: node=") AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode getRMNode()>() AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = interfaceinvoke $stack17.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: java.lang.String getNodeAddress()>() AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" application=") AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<org.apache.hadoop.yarn.api.records.ApplicationId: int getId()>() AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack22) AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" priority=") AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<org.apache.hadoop.yarn.api.records.Priority: int getPriority()>() AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack26) AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" assignableContainers=") AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(assignableContainers) AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" capability=") AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(capability) AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type=") AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(type) AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 681 with ID [28c03cd9-09b4]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.util.VersionInfo: void main(java.lang.String[])> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack2 = <org.apache.hadoop.util.VersionInfo: org.slf4j.Logger LOG> AT LINE 174 with ID [01bddd1f-c111]
2020-08-25 12:10:04 [INFO] - 	 -> $stack3 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version: ") AT LINE 174 with ID [01bddd1f-c111]
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = staticinvoke <org.apache.hadoop.util.VersionInfo: java.lang.String getVersion()>() AT LINE 174 with ID [01bddd1f-c111]
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4) AT LINE 174 with ID [01bddd1f-c111]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 174 with ID [01bddd1f-c111]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String)>($stack6) AT LINE 174 with ID [01bddd1f-c111]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if info != null goto $stack32 = info.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory$BlockReaderPeer: org.apache.hadoop.hdfs.net.Peer peer> at line 545 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if info == null goto $stack8 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> at line 525 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplicaInfo createShortCircuitReplicaInfo()> has 5 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 527 with ID [0f947c47-b9dd]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("{}: trying to create ShortCircuitReplicaInfo.", this) AT LINE 527 with ID [0f947c47-b9dd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 542 with ID [08dfe3bc-dd47]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke peer.<org.apache.hadoop.hdfs.net.DomainPeer: org.apache.hadoop.net.unix.DomainSocket getDomainSocket()>() AT LINE 542 with ID [08dfe3bc-dd47]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: allocShmSlot used up our previous socket {}.  Allocating a new one...", this, $stack30) AT LINE 542 with ID [08dfe3bc-dd47]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: java.lang.Object register(java.lang.String,java.lang.String,java.lang.Object)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.slf4j.Logger LOG> AT LINE 231 with ID [e618b9b3-c554]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(finalName) AT LINE 231 with ID [e618b9b3-c554]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 231 with ID [e618b9b3-c554]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(finalDesc) AT LINE 231 with ID [e618b9b3-c554]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 231 with ID [e618b9b3-c554]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 231 with ID [e618b9b3-c554]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: void unref(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica)> has 21 units and 5 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack79 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 430 with ID [c24061c5-2657]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack79.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: {}", this, purgeReason) AT LINE 430 with ID [c24061c5-2657]
2020-08-25 12:10:04 [INFO] - 	 -> purgeReason = "" AT LINE 434 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> purgeReason = "added to evictableMmapped, " AT LINE 452 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> purgeReason = "added to evictable, " AT LINE 455 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unref replica ") AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(replica) AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(purgeReason) AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" refCount ") AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = newRefCount + 1 AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack29) AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ") AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(newRefCount) AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String getStackTrace(java.lang.Thread)>($stack33) AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void trace(java.lang.String)>($stack36) AT LINE 465 with ID [f5e8d58e-a5a8]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.UserGroupInformation$HadoopLoginModule: boolean login()> has 5 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack1 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 245 with ID [c3958e2f-7487]
2020-08-25 12:10:04 [INFO] - 	 -> $stack2 = interfaceinvoke $stack1.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 245 with ID [c3958e2f-7487]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack2 == 0 goto return 1 AT LINE 245 with ID [c3958e2f-7487]
2020-08-25 12:10:04 [INFO] - 	 -> $stack3 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 246 with ID [c3958e2f-7487]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("hadoop login") AT LINE 246 with ID [c3958e2f-7487]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if op != null goto virtualinvoke op.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp: long getTransactionId()>() at line 152 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if op != null goto $stack22 = <org.apache.hadoop.hdfs.server.namenode.TestNameNodeRecovery: org.apache.commons.logging.Log LOG> at line 122 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.TestNameNodeRecovery: void runEditLogTest(org.apache.hadoop.hdfs.server.namenode.TestNameNodeRecovery$EditLogTestSetup)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.server.namenode.TestNameNodeRecovery: org.apache.commons.logging.Log LOG> AT LINE 125 with ID [87e9bc84-fa03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read txid ") AT LINE 125 with ID [87e9bc84-fa03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = op.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp: long txid> AT LINE 125 with ID [87e9bc84-fa03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack24) AT LINE 125 with ID [87e9bc84-fa03]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 125 with ID [87e9bc84-fa03]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 125 with ID [87e9bc84-fa03]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack21 <= 0 goto return storage at line 685 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack20 = remaining - scheduledSize at line 674 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo chooseStorage4Block(org.apache.hadoop.fs.StorageType,long)> has 11 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicy: org.slf4j.Logger LOG> AT LINE 686 with ID [61772310-8828]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = newarray (java.lang.Object)[5] AT LINE 686 with ID [61772310-8828]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22[0] = this AT LINE 686 with ID [61772310-8828]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22[1] = t AT LINE 686 with ID [61772310-8828]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(requiredSize) AT LINE 686 with ID [61772310-8828]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22[2] = $stack26 AT LINE 686 with ID [61772310-8828]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(scheduledSize) AT LINE 686 with ID [61772310-8828]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22[3] = $stack28 AT LINE 686 with ID [61772310-8828]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(remaining) AT LINE 686 with ID [61772310-8828]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22[4] = $stack30 AT LINE 686 with ID [61772310-8828]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("The node {} does not have enough {} space (required={}, scheduled={}, remaining={}).", $stack22) AT LINE 686 with ID [61772310-8828]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = virtualinvoke retryInfo.<org.apache.hadoop.io.retry.RetryInvocationHandler$RetryInfo: boolean isFailover()>() at line 375 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.io.retry.RetryInvocationHandler: org.apache.hadoop.io.retry.RetryInvocationHandler$RetryInfo handleException(java.lang.reflect.Method,int,org.apache.hadoop.io.retry.RetryPolicy,org.apache.hadoop.io.retry.RetryInvocationHandler$Counters,long,java.lang.Exception)> has 15 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.io.retry.RetryInvocationHandler: org.slf4j.Logger LOG> AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while invoking call #") AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(callId) AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = this.<org.apache.hadoop.io.retry.RetryInvocationHandler: org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor proxyDescriptor> AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<org.apache.hadoop.io.retry.RetryInvocationHandler$ProxyDescriptor: org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo getProxyInfo()>() AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>() AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<org.apache.hadoop.io.retry.FailoverProxyProvider$ProxyInfo: java.lang.String getString(java.lang.String)>($stack29) AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30) AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Not retrying because ") AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = staticinvoke <org.apache.hadoop.io.retry.RetryInvocationHandler$RetryInfo: org.apache.hadoop.io.retry.RetryPolicy$RetryAction access$1000(org.apache.hadoop.io.retry.RetryInvocationHandler$RetryInfo)>(retryInfo) AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = $stack33.<org.apache.hadoop.io.retry.RetryPolicy$RetryAction: java.lang.String reason> AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($stack36, e) AT LINE 379 with ID [d67e58aa-9337]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TestSortedRanges: void testRemove()> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = <org.apache.hadoop.mapred.TestSortedRanges: org.apache.commons.logging.Log LOG> AT LINE 99 with ID [05956776-0d7e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(sr) AT LINE 99 with ID [05956776-0d7e]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack30 == 0 goto return orderedByPriority at line 388 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoIntraQueuePreemptionPlugin: java.util.PriorityQueue createTempAppForResCalculation(org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.TempQueuePerPartition,java.util.Collection,org.apache.hadoop.yarn.api.records.Resource,java.util.Map)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack83 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoIntraQueuePreemptionPlugin: org.apache.commons.logging.Log LOG> AT LINE 449 with ID [6db9da1e-a664]
2020-08-25 12:10:04 [INFO] - 	 -> $stack84 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TempUser:") AT LINE 449 with ID [6db9da1e-a664]
2020-08-25 12:10:04 [INFO] - 	 -> $stack85 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tmpUser) AT LINE 449 with ID [6db9da1e-a664]
2020-08-25 12:10:04 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 449 with ID [6db9da1e-a664]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack83.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack86) AT LINE 449 with ID [6db9da1e-a664]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack33 == 0 goto (branch) at line 1192 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack30 == 0 goto $stack31 = virtualinvoke indexUpdates.<java.util.TreeMap: java.util.Collection values()>() at line 1189 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack27 == 0 goto $stack28 = virtualinvoke entityUpdates.<java.util.TreeMap: java.util.Collection values()>() at line 1183 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack24 == 0 goto $stack25 = virtualinvoke indexUpdates.<java.util.TreeMap: java.util.Collection values()>() at line 1179 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack21 == 0 goto $stack22 = virtualinvoke entityUpdates.<java.util.TreeMap: java.util.Collection values()>() at line 1174 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore: org.apache.hadoop.yarn.api.records.timeline.TimelinePutResponse put(org.apache.hadoop.yarn.api.records.timeline.TimelineEntities)> has 28 units and 9 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore: org.slf4j.Logger LOG> AT LINE 1160 with ID [f101a5fd-70d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = interfaceinvoke $stack14.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 1160 with ID [f101a5fd-70d2]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack15 == 0 goto $stack16 = new org.apache.hadoop.yarn.api.records.timeline.TimelinePutResponse AT LINE 1160 with ID [f101a5fd-70d2]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = <org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore: org.slf4j.Logger LOG> AT LINE 1161 with ID [f101a5fd-70d2]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack60.<org.slf4j.Logger: void debug(java.lang.String)>("Starting put") AT LINE 1161 with ID [f101a5fd-70d2]
2020-08-25 12:10:04 [INFO] - 	 -> entityCount = 0L AT LINE 1169 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> indexCount = 0L AT LINE 1170 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke entities.<org.apache.hadoop.yarn.api.records.timeline.TimelineEntities: java.util.List getEntities()>() AT LINE 1174 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> i$ = interfaceinvoke $stack19.<java.util.List: java.util.Iterator iterator()>() AT LINE 1174 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>() AT LINE 1174 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack21 == 0 goto $stack22 = virtualinvoke entityUpdates.<java.util.TreeMap: java.util.Collection values()>() AT LINE 1174 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 1181 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> entity = (org.apache.hadoop.yarn.api.records.timeline.TimelineEntity) $stack57 AT LINE 1181 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = specialinvoke this.<org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore: long putEntities(java.util.TreeMap,java.util.TreeMap,org.apache.hadoop.yarn.api.records.timeline.TimelineEntity,org.apache.hadoop.yarn.api.records.timeline.TimelinePutResponse)>(entityUpdates, indexUpdates, entity, response) AT LINE 1175 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> entityCount = entityCount + $stack58 AT LINE 1175 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> goto [?= $stack21 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] AT LINE 1177 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = <org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore: org.slf4j.Logger LOG> AT LINE 1197 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Put ") AT LINE 1197 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(entityCount) AT LINE 1197 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new leveldb entity entries and ") AT LINE 1197 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(indexCount) AT LINE 1197 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new leveldb index entries from ") AT LINE 1197 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke entities.<org.apache.hadoop.yarn.api.records.timeline.TimelineEntities: java.util.List getEntities()>() AT LINE 1197 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = interfaceinvoke $stack43.<java.util.List: int size()>() AT LINE 1197 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack44) AT LINE 1197 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" timeline entities") AT LINE 1197 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1197 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack37.<org.slf4j.Logger: void debug(java.lang.String)>($stack47) AT LINE 1197 with ID [d6bd82eb-a8a5]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void abandonBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock,long,java.lang.String,java.lang.String)> has 4 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 2646 with ID [dc315577-5515]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* NameSystem.abandonBlock: {} of file {}", b, src) AT LINE 2646 with ID [dc315577-5515]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 2655 with ID [568108df-146f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("BLOCK* NameSystem.abandonBlock: {} is removed from pendingCreates", b) AT LINE 2655 with ID [568108df-146f]
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.fs.FsShellPermissions$Chown: void processPath(org.apache.hadoop.fs.shell.PathData)>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack29 != 0 goto $stack30 = virtualinvoke fsd.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: boolean isPermissionEnabled()>() at line 64 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack22 == 0 goto $stack23 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> at line 47 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack12 != 0 goto $stack13 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirectory: boolean isReservedName(java.lang.String)>(target) at line 42 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirSymlinkOp: org.apache.hadoop.fs.FileStatus createSymlinkInt(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,java.lang.String,org.apache.hadoop.fs.permission.PermissionStatus,boolean,boolean)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 51 with ID [66923258-f195]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.createSymlink: target=") AT LINE 51 with ID [66923258-f195]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(target) AT LINE 51 with ID [66923258-f195]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" link=") AT LINE 51 with ID [66923258-f195]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(link) AT LINE 51 with ID [66923258-f195]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 51 with ID [66923258-f195]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack54.<org.slf4j.Logger: void debug(java.lang.String)>($stack59) AT LINE 51 with ID [66923258-f195]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack142 == 0 goto checkAll = 1 at line 59 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.util.NativeLibraryChecker: void main(java.lang.String[])>
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void storeContainerCompleted(org.apache.hadoop.yarn.api.records.ContainerId,int)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 504 with ID [11d87eb0-6bf0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storeContainerCompleted: containerId=") AT LINE 504 with ID [11d87eb0-6bf0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 504 with ID [11d87eb0-6bf0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 504 with ID [11d87eb0-6bf0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 504 with ID [11d87eb0-6bf0]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.security.YarnAuthorizationProvider: void destroy()> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = <org.apache.hadoop.yarn.security.YarnAuthorizationProvider: org.apache.commons.logging.Log LOG> AT LINE 72 with ID [2f12e251-882f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.security.YarnAuthorizationProvider: org.apache.hadoop.yarn.security.YarnAuthorizationProvider authorizer> AT LINE 72 with ID [2f12e251-882f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.Object: java.lang.Class getClass()>() AT LINE 72 with ID [2f12e251-882f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.Class: java.lang.String getName()>() AT LINE 72 with ID [2f12e251-882f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 72 with ID [2f12e251-882f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is destroyed.") AT LINE 72 with ID [2f12e251-882f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 72 with ID [2f12e251-882f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 72 with ID [2f12e251-882f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack21 = virtualinvoke record.<org.apache.hadoop.metrics2.impl.MetricsRecordImpl: java.lang.Iterable metrics()>() at line 257 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack13 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.slf4j.Logger LOG> at line 256 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack23 == 0 goto recNo = recNo + 1 at line 261 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: int updateAttrCache(java.lang.Iterable)> has 7 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.slf4j.Logger LOG> AT LINE 253 with ID [9bdb00f9-0b5f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>("Updating attr cache...") AT LINE 253 with ID [9bdb00f9-0b5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.slf4j.Logger LOG> AT LINE 267 with ID [2136395f-728f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done. # tags & metrics=") AT LINE 267 with ID [2136395f-728f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numMetrics) AT LINE 267 with ID [2136395f-728f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 267 with ID [2136395f-728f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 267 with ID [2136395f-728f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if chosenNode != null goto $stack11 = this.<org.apache.hadoop.hdfs.DFSInputStream: org.apache.hadoop.hdfs.DFSClient dfsClient> at line 1152 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack38 != 0 goto i = i + 1 at line 1152 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSInputStream: org.apache.hadoop.hdfs.DFSInputStream$DNAddrPair getBestNodeDNAddrPair(org.apache.hadoop.hdfs.protocol.LocatedBlock,java.util.Collection)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1160 with ID [d9575b96-48ca]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Connecting to datanode {}", i#8) AT LINE 1160 with ID [d9575b96-48ca]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack3 != $stack4 goto $stack6 = this.<org.apache.hadoop.hdfs.server.namenode.NNThroughputBenchmark$TinyDatanode: java.util.List blocks> at line 969 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NNThroughputBenchmark$TinyDatanode: boolean addBlock(org.apache.hadoop.hdfs.protocol.Block)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NNThroughputBenchmark: org.apache.commons.logging.Log access$000()>() AT LINE 971 with ID [f0ca804e-2650]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot add block: datanode capacity = ") AT LINE 971 with ID [f0ca804e-2650]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = this.<org.apache.hadoop.hdfs.server.namenode.NNThroughputBenchmark$TinyDatanode: java.util.List blocks> AT LINE 971 with ID [f0ca804e-2650]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = interfaceinvoke $stack16.<java.util.List: int size()>() AT LINE 971 with ID [f0ca804e-2650]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack17) AT LINE 971 with ID [f0ca804e-2650]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 971 with ID [f0ca804e-2650]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 971 with ID [f0ca804e-2650]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack17 == 0 goto (branch) at line 256 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.DomainLogInfo: long doParse(org.apache.hadoop.yarn.server.timeline.TimelineDataManager,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.ObjectMapper,org.apache.hadoop.security.UserGroupInformation,boolean)> has 6 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.timeline.DomainLogInfo: org.slf4j.Logger LOG> AT LINE 259 with ID [c8439c25-3304]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke domain.<org.apache.hadoop.yarn.api.records.timeline.TimelineDomain: java.lang.String getId()>() AT LINE 259 with ID [c8439c25-3304]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Read domain {}", $stack22) AT LINE 259 with ID [c8439c25-3304]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = <org.apache.hadoop.yarn.server.timeline.DomainLogInfo: org.slf4j.Logger LOG> AT LINE 262 with ID [5f0d6803-7200]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(bytesParsed) AT LINE 262 with ID [5f0d6803-7200]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Parser now at offset {}", $stack27) AT LINE 262 with ID [5f0d6803-7200]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack85 == 0 goto $stack53 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.commons.logging.Log LOG> at line 734 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack19 == 0 goto $stack20 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.commons.logging.Log LOG> at line 717 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: boolean canAssignToThisQueue(org.apache.hadoop.yarn.api.records.Resource,java.lang.String,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode)> has 64 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack90 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.commons.logging.Log LOG> AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack91 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("try to use reserved: ") AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack92 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: java.lang.String getQueueName()>() AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack93 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack92) AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack94 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" usedResources: ") AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack95 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage queueUsage> AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack96 = virtualinvoke $stack95.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getUsed()>() AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack97 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack96) AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterResources: ") AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clusterResource) AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reservedResources: ") AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(resourceCouldBeUnreserved) AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack102 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", capacity-without-reserved: ") AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack103 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(newTotalWithoutReservedResource) AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack104 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxLimitCapacity: ") AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack105 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(currentLimitResource) AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack90.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack106) AT LINE 737 with ID [b9e20b78-9dab]
2020-08-25 12:10:04 [INFO] - 	 -> $stack57 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.commons.logging.Log LOG> AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to assign to queue: ") AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack59 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: java.lang.String getQueueName()>() AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack59) AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nodePatrition: ") AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodePartition) AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", usedResources: ") AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack64 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage queueUsage> AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getUsed(java.lang.String)>(nodePartition) AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack66 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack65) AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterResources: ") AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clusterResource) AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reservedResources: ") AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(resourceCouldBeUnreserved) AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxLimitCapacity: ") AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(currentLimitResource) AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currTotalUsed:") AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(usedExceptKillable) AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack57.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack75) AT LINE 751 with ID [95070d04-1329]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.commons.logging.Log LOG> AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Check assign to queue: ") AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: java.lang.String getQueueName()>() AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nodePartition: ") AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodePartition) AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", usedResources: ") AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage queueUsage> AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getUsed(java.lang.String)>(nodePartition) AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack32) AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterResources: ") AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clusterResource) AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentUsedCapacity: ") AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.hadoop.yarn.util.resource.ResourceCalculator resourceCalculator> AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage queueUsage> AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getUsed(java.lang.String)>(nodePartition) AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.hadoop.yarn.server.resourcemanager.nodelabels.RMNodeLabelsManager labelManager> AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<org.apache.hadoop.yarn.server.resourcemanager.nodelabels.RMNodeLabelsManager: org.apache.hadoop.yarn.api.records.Resource getResourceByLabel(java.lang.String,org.apache.hadoop.yarn.api.records.Resource)>(nodePartition, clusterResource) AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = staticinvoke <org.apache.hadoop.yarn.util.resource.Resources: float divide(org.apache.hadoop.yarn.util.resource.ResourceCalculator,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.api.records.Resource)>($stack38, clusterResource, $stack39, $stack41) AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack42) AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max-capacity: ") AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.AbstractCSQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.QueueCapacities queueCapacities> AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.QueueCapacities: float getAbsoluteMaximumCapacity(java.lang.String)>(nodePartition) AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack46) AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack48) AT LINE 762 with ID [ea179097-bb4e]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.oncrpc.RpcCall: void <init>(int,org.apache.hadoop.oncrpc.RpcMessage$Type,int,int,int,int,org.apache.hadoop.oncrpc.security.Credentials,org.apache.hadoop.oncrpc.security.Verifier)> has 6 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = <org.apache.hadoop.oncrpc.RpcCall: org.slf4j.Logger LOG> AT LINE 62 with ID [3906ade0-d752]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = interfaceinvoke $stack9.<org.slf4j.Logger: boolean isTraceEnabled()>() AT LINE 62 with ID [3906ade0-d752]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack10 == 0 goto virtualinvoke this.<org.apache.hadoop.oncrpc.RpcCall: void validate()>() AT LINE 62 with ID [3906ade0-d752]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = <org.apache.hadoop.oncrpc.RpcCall: org.slf4j.Logger LOG> AT LINE 63 with ID [3906ade0-d752]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke this.<org.apache.hadoop.oncrpc.RpcCall: java.lang.String toString()>() AT LINE 63 with ID [3906ade0-d752]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void trace(java.lang.String)>($stack12) AT LINE 63 with ID [3906ade0-d752]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.CuratorService: void serviceInit(org.apache.hadoop.conf.Configuration)> has 6 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 148 with ID [f481b7f7-fdf9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = interfaceinvoke $stack5.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 148 with ID [f481b7f7-fdf9]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack6 == 0 goto specialinvoke this.<org.apache.hadoop.service.CompositeService: void serviceInit(org.apache.hadoop.conf.Configuration)>(conf) AT LINE 148 with ID [f481b7f7-fdf9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 149 with ID [f481b7f7-fdf9]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = this.<org.apache.hadoop.registry.client.impl.zk.CuratorService: java.lang.String registryRoot> AT LINE 149 with ID [f481b7f7-fdf9]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating Registry with root {}", $stack7) AT LINE 149 with ID [f481b7f7-fdf9]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.DFSHAAdmin: org.apache.hadoop.conf.Configuration addSecurityConfiguration(org.apache.hadoop.conf.Configuration)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.tools.DFSHAAdmin: org.apache.commons.logging.Log LOG> AT LINE 74 with ID [e3ab2779-4fcd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using NN principal: ") AT LINE 74 with ID [e3ab2779-4fcd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nameNodePrincipal) AT LINE 74 with ID [e3ab2779-4fcd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 74 with ID [e3ab2779-4fcd]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack10) AT LINE 74 with ID [e3ab2779-4fcd]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.RMAppManager: void handle(org.apache.hadoop.yarn.server.resourcemanager.RMAppManagerEvent)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.server.resourcemanager.RMAppManager: org.apache.commons.logging.Log LOG> AT LINE 546 with ID [38e01270-f7c3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RMAppManager processing event for ") AT LINE 546 with ID [38e01270-f7c3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationId) AT LINE 546 with ID [38e01270-f7c3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ") AT LINE 546 with ID [38e01270-f7c3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke event.<org.apache.hadoop.yarn.server.resourcemanager.RMAppManagerEvent: java.lang.Enum getType()>() AT LINE 546 with ID [38e01270-f7c3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10) AT LINE 546 with ID [38e01270-f7c3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 546 with ID [38e01270-f7c3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack12) AT LINE 546 with ID [38e01270-f7c3]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandlerImpl: void logLineFromTasksFile(java.io.File)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandlerImpl: org.slf4j.Logger LOG> AT LINE 487 with ID [70215827-b86e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("First line in cgroup tasks file: ") AT LINE 487 with ID [70215827-b86e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(cgf) AT LINE 487 with ID [70215827-b86e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 487 with ID [70215827-b86e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(str) AT LINE 487 with ID [70215827-b86e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 487 with ID [70215827-b86e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack24) AT LINE 487 with ID [70215827-b86e]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack65 != 0 goto $stack66 = new java.lang.StringBuilder at line 680 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack41 != 0 goto $stack42 = new java.lang.StringBuilder at line 700 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack10 != 0 goto $stack11 = interfaceinvoke queue.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSQueue: org.apache.hadoop.yarn.api.records.QueueState getState()>() at line 697 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if queue != null goto $stack10 = queue instanceof org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue at line 677 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: void addApplicationOnRecovery(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.lang.String,org.apache.hadoop.yarn.api.records.Priority)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack30 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 738 with ID [56868489-caa4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationId) AT LINE 738 with ID [56868489-caa4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is recovering. Skip notifying APP_ACCEPTED") AT LINE 738 with ID [56868489-caa4]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 738 with ID [56868489-caa4]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack33) AT LINE 738 with ID [56868489-caa4]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if f#79 >= $stack25 goto $stack26 = new java.io.IOException at line 2199 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack17 != 0 goto return at line 2195 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i >= $stack16 goto $stack17 = interfaceinvoke errors.<java.util.List: boolean isEmpty()>() at line 2110 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: void invalidate(java.lang.String,org.apache.hadoop.hdfs.protocol.Block[],boolean)> has 8 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack108 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 2146 with ID [ffe5c436-6c49]
2020-08-25 12:10:04 [INFO] - 	 -> $stack109 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block file ") AT LINE 2146 with ID [ffe5c436-6c49]
2020-08-25 12:10:04 [INFO] - 	 -> $stack110 = virtualinvoke x2.<org.apache.hadoop.hdfs.server.datanode.ReplicaInfo: java.io.File getBlockFile()>() AT LINE 2146 with ID [ffe5c436-6c49]
2020-08-25 12:10:04 [INFO] - 	 -> $stack111 = virtualinvoke $stack110.<java.io.File: java.lang.String getName()>() AT LINE 2146 with ID [ffe5c436-6c49]
2020-08-25 12:10:04 [INFO] - 	 -> $stack112 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack111) AT LINE 2146 with ID [ffe5c436-6c49]
2020-08-25 12:10:04 [INFO] - 	 -> $stack113 = virtualinvoke $stack112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is to be deleted") AT LINE 2146 with ID [ffe5c436-6c49]
2020-08-25 12:10:04 [INFO] - 	 -> $stack114 = virtualinvoke $stack113.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2146 with ID [ffe5c436-6c49]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack108.<org.slf4j.Logger: void debug(java.lang.String)>($stack114) AT LINE 2146 with ID [ffe5c436-6c49]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if type != null goto $stack7 = this.<org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30: org.slf4j.Logger LOG> at line 232 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if value != null goto (branch) at line 229 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if name != null goto (branch) at line 226 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30: void emitMetric(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.metrics2.sink.ganglia.GangliaConf,org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope)> has 15 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30: org.slf4j.Logger LOG> AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Emitting metric ") AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type ") AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(type) AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value ") AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value) AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", slope ") AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = virtualinvoke gSlope.<org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope: java.lang.String name()>() AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from hostname ") AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke this.<org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30: java.lang.String getHostName()>() AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>($stack27) AT LINE 238 with ID [2058911d-6abd]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack18 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.client.impl.DfsClientConf conf> at line 439 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack5 != 0 goto $stack6 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.ClientContext clientContext> at line 434 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.BlockReader getLegacyBlockReaderLocal()> has 7 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack3 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 433 with ID [35fde153-738b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("{}: trying to construct BlockReaderLocalLegacy", this) AT LINE 433 with ID [35fde153-738b]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 435 with ID [1cd78513-856c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: java.net.InetSocketAddress inetSocketAddress> AT LINE 435 with ID [1cd78513-856c]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: can\'t construct BlockReaderLocalLegacy because the address{} is not local", this, $stack21) AT LINE 435 with ID [1cd78513-856c]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = <org.apache.hadoop.util.PerformanceAdvisory: org.slf4j.Logger LOG> AT LINE 440 with ID [1b1541bb-38fa]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("{}: can\'t construct BlockReaderLocalLegacy because disableLegacyBlockReaderLocal is set.", this) AT LINE 440 with ID [1b1541bb-38fa]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack20 == 0 goto (branch) at line 554 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack30 != 0 goto $stack19 = <org.apache.hadoop.yarn.server.nodemanager.NodeManager: org.slf4j.Logger LOG> at line 558 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 == 0 goto interfaceinvoke knownCollectors.<java.util.Map: void clear()>() at line 543 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if knownCollectors != null goto $stack9 = this.<org.apache.hadoop.yarn.server.nodemanager.NodeManager: org.apache.hadoop.yarn.server.nodemanager.Context context> at line 537 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.NodeManager: void reregisterCollectors()> has 23 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>() AT LINE 548 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> data = (org.apache.hadoop.yarn.server.api.records.AppCollectorData) $stack34 AT LINE 548 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = <org.apache.hadoop.yarn.server.nodemanager.NodeManager: org.slf4j.Logger LOG> AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack39) AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = virtualinvoke data.<org.apache.hadoop.yarn.server.api.records.AppCollectorData: java.lang.String getCollectorAddr()>() AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack42) AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@<") AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack45 = virtualinvoke data.<org.apache.hadoop.yarn.server.api.records.AppCollectorData: long getRMIdentifier()>() AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack45) AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack48 = virtualinvoke data.<org.apache.hadoop.yarn.server.api.records.AppCollectorData: long getVersion()>() AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack48) AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">") AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack38.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 550 with ID [41f8f1b3-4ae6]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.nodemanager.NodeManager: org.slf4j.Logger LOG> AT LINE 555 with ID [b3a358de-0081]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remove collector data for done app ") AT LINE 555 with ID [b3a358de-0081]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 555 with ID [b3a358de-0081]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack25) AT LINE 555 with ID [b3a358de-0081]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 555 with ID [b3a358de-0081]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack27) AT LINE 555 with ID [b3a358de-0081]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider: void initFileSystem(java.net.URI)> has 6 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = <org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 165 with ID [a77d3db6-8291]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("backing jks path initialized to ") AT LINE 165 with ID [a77d3db6-8291]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider: org.apache.hadoop.fs.Path path> AT LINE 165 with ID [a77d3db6-8291]
2020-08-25 12:10:04 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8) AT LINE 165 with ID [a77d3db6-8291]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 165 with ID [a77d3db6-8291]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>($stack10) AT LINE 165 with ID [a77d3db6-8291]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = this.<org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager$EndpointShmManager: java.util.TreeMap notFull> at line 123 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager$EndpointShmManager: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot allocSlotFromExistingShm(org.apache.hadoop.hdfs.ExtendedBlockId)> has 16 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack21 = staticinvoke <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: org.slf4j.Logger access$000()>() AT LINE 131 with ID [8dad9ebc-41cf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = newarray (java.lang.Object)[3] AT LINE 131 with ID [8dad9ebc-41cf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22[0] = this AT LINE 131 with ID [8dad9ebc-41cf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke slot.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot: int getSlotIdx()>() AT LINE 131 with ID [8dad9ebc-41cf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack25) AT LINE 131 with ID [8dad9ebc-41cf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22[1] = $stack26 AT LINE 131 with ID [8dad9ebc-41cf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22[2] = shm AT LINE 131 with ID [8dad9ebc-41cf]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("{}: pulled the last slot {} out of {}", $stack22) AT LINE 131 with ID [8dad9ebc-41cf]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = staticinvoke <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: org.slf4j.Logger access$000()>() AT LINE 137 with ID [4969c319-2540]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = newarray (java.lang.Object)[3] AT LINE 137 with ID [4969c319-2540]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16[0] = this AT LINE 137 with ID [4969c319-2540]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke slot.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot: int getSlotIdx()>() AT LINE 137 with ID [4969c319-2540]
2020-08-25 12:10:04 [INFO] - 	 -> $stack20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack19) AT LINE 137 with ID [4969c319-2540]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16[1] = $stack20 AT LINE 137 with ID [4969c319-2540]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16[2] = shm AT LINE 137 with ID [4969c319-2540]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("{}: pulled slot {} out of {}", $stack16) AT LINE 137 with ID [4969c319-2540]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack4 == null goto $stack5 = this.<org.apache.hadoop.io.retry.RetryInvocationHandler$Call: org.apache.hadoop.io.retry.RetryInvocationHandler retryInvocationHandler> at line 86 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - No overhead is found at method <org.apache.hadoop.io.retry.RetryInvocationHandler$Call: org.apache.hadoop.io.retry.CallReturn invokeOnce()>
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack18 != 0 goto return 1 at line 363 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack38 == 0 goto $stack16 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.util.resource.ResourceCalculator rc> at line 351 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack44 != $stack45 goto (branch) at line 361 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack41 == $stack42 goto (branch) at line 354 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if fromReservedContainer == reservedContainerOnNode goto $stack11 = virtualinvoke schedulerContainer.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer: org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode getSchedulerNode()>() at line 332 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack49 != null goto $stack50 = virtualinvoke allocation.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ContainerAllocationProposal: org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer getAllocateFromReservedContainer()>() at line 326 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: boolean commonCheckContainerAllocation(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ContainerAllocationProposal,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.SchedulerContainer)> has 13 units and 3 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 333 with ID [6c004ed7-df6d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = interfaceinvoke $stack54.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 333 with ID [6c004ed7-df6d]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack55 == 0 goto return 0 AT LINE 333 with ID [6c004ed7-df6d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 334 with ID [6c004ed7-df6d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack56.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Try to allocate from a non-existed reserved container") AT LINE 334 with ID [6c004ed7-df6d]
2020-08-25 12:10:04 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 367 with ID [23b2e268-4a1f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node doesn\'t have enough available resource, asked=") AT LINE 367 with ID [23b2e268-4a1f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack24 = virtualinvoke allocation.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ContainerAllocationProposal: org.apache.hadoop.yarn.api.records.Resource getAllocatedOrReservedResource()>() AT LINE 367 with ID [23b2e268-4a1f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24) AT LINE 367 with ID [23b2e268-4a1f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" available=") AT LINE 367 with ID [23b2e268-4a1f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(fromReservedContainer#2) AT LINE 367 with ID [23b2e268-4a1f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 367 with ID [23b2e268-4a1f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 367 with ID [23b2e268-4a1f]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: void setQueues(java.lang.String,java.lang.String[])> has 9 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> AT LINE 762 with ID [2fa10004-3800]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSConf - setQueues: qPrefix=") AT LINE 762 with ID [2fa10004-3800]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: java.lang.String getQueuePrefix(java.lang.String)>(queue) AT LINE 762 with ID [2fa10004-3800]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 762 with ID [2fa10004-3800]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", queues=") AT LINE 762 with ID [2fa10004-3800]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String arrayToString(java.lang.String[])>(subQueues) AT LINE 762 with ID [2fa10004-3800]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 762 with ID [2fa10004-3800]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 762 with ID [2fa10004-3800]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack17) AT LINE 762 with ID [2fa10004-3800]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack44 == 0 goto (branch) at line 898 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack25 == 0 goto staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSEditLog: void closeAllStreams(java.lang.Iterable)>(editStreams) at line 887 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSImage: long loadEdits(java.lang.Iterable,org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption,org.apache.hadoop.hdfs.server.namenode.MetaRecoveryContext)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.commons.logging.Log LOG> AT LINE 878 with ID [f5513d38-9400]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("About to load edits:\n  ") AT LINE 878 with ID [f5513d38-9400]
2020-08-25 12:10:04 [INFO] - 	 -> $stack16 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>("\n  ") AT LINE 878 with ID [f5513d38-9400]
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>(editStreams) AT LINE 878 with ID [f5513d38-9400]
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17) AT LINE 878 with ID [f5513d38-9400]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 878 with ID [f5513d38-9400]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 878 with ID [f5513d38-9400]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack28 <= 0 goto (branch) at line 267 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack20 == 0 goto exitmonitor l1 at line 264 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.PendingReplicationBlocks$PendingReplicationMonitor: void pendingReplicationCheck()> has 5 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack18 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.PendingReplicationBlocks: org.slf4j.Logger access$200()>() AT LINE 261 with ID [93059ac7-a173]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = interfaceinvoke $stack18.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 261 with ID [93059ac7-a173]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack19 == 0 goto $stack20 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>() AT LINE 261 with ID [93059ac7-a173]
2020-08-25 12:10:04 [INFO] - 	 -> $stack43 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.PendingReplicationBlocks: org.slf4j.Logger access$200()>() AT LINE 262 with ID [93059ac7-a173]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void debug(java.lang.String)>("PendingReplicationMonitor checking Q") AT LINE 262 with ID [93059ac7-a173]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.metrics.DataNodePeerMetrics: java.util.Map getOutliers()> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.server.datanode.metrics.DataNodePeerMetrics: org.slf4j.Logger LOG> AT LINE 126 with ID [47dc5225-d15d]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("DataNodePeerMetrics: Got stats: {}", stats) AT LINE 126 with ID [47dc5225-d15d]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack17 == reservedContainer goto l5#5 = targetNode at line 1056 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if null != map#2 goto $stack17 = virtualinvoke sourceNode.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer getReservedContainer()>() at line 1048 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: java.util.Map reservedContainers> at line 1037 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: boolean moveReservation(org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode)> has 22 units and 9 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 1038 with ID [1e5b53a2-7129]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = interfaceinvoke $stack53.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 1038 with ID [1e5b53a2-7129]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack54 == 0 goto map = 0 AT LINE 1038 with ID [1e5b53a2-7129]
2020-08-25 12:10:04 [INFO] - 	 -> $stack56 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 1039 with ID [1e5b53a2-7129]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack56.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Failed to move reservation, two nodes are in different partition") AT LINE 1039 with ID [1e5b53a2-7129]
2020-08-25 12:10:04 [INFO] - 	 -> $stack46 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 1049 with ID [c72aeb81-69fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack47 = interfaceinvoke $stack46.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 1049 with ID [c72aeb81-69fa]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack47 == 0 goto l5 = 0 AT LINE 1049 with ID [c72aeb81-69fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack49 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 1050 with ID [c72aeb81-69fa]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack49.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Cannot find reserved container map.") AT LINE 1050 with ID [c72aeb81-69fa]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 1057 with ID [ebc668eb-1069]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = interfaceinvoke $stack39.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 1057 with ID [ebc668eb-1069]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack40 == 0 goto l5 = 0 AT LINE 1057 with ID [ebc668eb-1069]
2020-08-25 12:10:04 [INFO] - 	 -> $stack42 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 1058 with ID [ebc668eb-1069]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("To-be-moved container already updated.") AT LINE 1058 with ID [ebc668eb-1069]
2020-08-25 12:10:04 [INFO] - 	 -> $stack19 = virtualinvoke targetNode.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer getReservedContainer()>() AT LINE 1066 with ID [5c32b809-3c5f]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack19 == null goto $stack20 = interfaceinvoke reservedContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey getReservedSchedulerKey()>() AT LINE 1066 with ID [5c32b809-3c5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack32 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 1067 with ID [5c32b809-3c5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack33 = interfaceinvoke $stack32.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 1067 with ID [5c32b809-3c5f]
2020-08-25 12:10:04 [INFO] - 	 -> if $stack33 == 0 goto $stack20 = interfaceinvoke reservedContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey getReservedSchedulerKey()>() AT LINE 1067 with ID [5c32b809-3c5f]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 1068 with ID [5c32b809-3c5f]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Target node is already occupied before moving") AT LINE 1068 with ID [5c32b809-3c5f]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack17 = this.<org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator$ScheduledRequests: java.util.Map maps> at line 1113 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if i$ >= len$ goto arr$ = virtualinvoke event.<org.apache.hadoop.mapreduce.v2.app.rm.ContainerRequestEvent: java.lang.String[] getRacks()>() at line 1102 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator$ScheduledRequests: void addMap(org.apache.hadoop.mapreduce.v2.app.rm.ContainerRequestEvent)> has 10 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack52 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 1110 with ID [b3424850-d9c3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added attempt req to host ") AT LINE 1110 with ID [b3424850-d9c3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(host) AT LINE 1110 with ID [b3424850-d9c3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1110 with ID [b3424850-d9c3]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack52.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack55) AT LINE 1110 with ID [b3424850-d9c3]
2020-08-25 12:10:04 [INFO] - 	 -> $stack34 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 1121 with ID [e12d2264-2cca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added attempt req to rack ") AT LINE 1121 with ID [e12d2264-2cca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(host) AT LINE 1121 with ID [e12d2264-2cca]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1121 with ID [e12d2264-2cca]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 1121 with ID [e12d2264-2cca]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSClient: org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair connectToDN(org.apache.hadoop.hdfs.protocol.DatanodeInfo,int,org.apache.hadoop.hdfs.protocol.LocatedBlock)> has 2 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1921 with ID [8bec3ad8-410b]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Connecting to datanode {}", dnAddr) AT LINE 1921 with ID [8bec3ad8-410b]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: void removeApplicationAttemptInternal(org.apache.hadoop.yarn.api.records.ApplicationAttemptId)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 630 with ID [05bb61e5-3f18]
2020-08-25 12:10:04 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing state for attempt ") AT LINE 630 with ID [05bb61e5-3f18]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(attemptId) AT LINE 630 with ID [05bb61e5-3f18]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ") AT LINE 630 with ID [05bb61e5-3f18]
2020-08-25 12:10:04 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attemptKey) AT LINE 630 with ID [05bb61e5-3f18]
2020-08-25 12:10:04 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 630 with ID [05bb61e5-3f18]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 630 with ID [05bb61e5-3f18]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = this.<org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: java.util.List connections> at line 233 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: void close()> has 9 units and 2 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> AT LINE 228 with ID [58c9c3cc-29c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack6 = staticinvoke <org.apache.hadoop.util.Time: long now()>() AT LINE 228 with ID [58c9c3cc-29c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack7 = virtualinvoke this.<org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: long getLastActiveTime()>() AT LINE 228 with ID [58c9c3cc-29c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack8 = $stack6 - $stack7 AT LINE 228 with ID [58c9c3cc-29c0]
2020-08-25 12:10:04 [INFO] - 	 -> timeSinceLastActive = virtualinvoke $stack5.<java.util.concurrent.TimeUnit: long toSeconds(long)>($stack8) AT LINE 228 with ID [58c9c3cc-29c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: org.slf4j.Logger LOG> AT LINE 230 with ID [58c9c3cc-29c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: org.apache.hadoop.hdfs.server.federation.router.ConnectionPoolId connectionPoolId> AT LINE 230 with ID [58c9c3cc-29c0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(timeSinceLastActive) AT LINE 230 with ID [58c9c3cc-29c0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Shutting down connection pool \"{}\" used {} seconds ago", $stack12, $stack13) AT LINE 230 with ID [58c9c3cc-29c0]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = this.<org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: java.util.HashMap datanodes> at line 409 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot allocSlot(org.apache.hadoop.hdfs.protocol.DatanodeInfo,org.apache.hadoop.hdfs.net.DomainPeer,org.apache.commons.lang.mutable.MutableBoolean,org.apache.hadoop.hdfs.ExtendedBlockId,java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: org.slf4j.Logger LOG> AT LINE 410 with ID [af87159a-4e24]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 410 with ID [af87159a-4e24]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": the DfsClientShmManager isclosed.") AT LINE 410 with ID [af87159a-4e24]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 410 with ID [af87159a-4e24]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void trace(java.lang.String)>($stack29) AT LINE 410 with ID [af87159a-4e24]
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: void handleContainerExitCode(int,org.apache.hadoop.fs.Path)> has 7 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack36 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.slf4j.Logger LOG> AT LINE 460 with ID [181b6825-57d0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container ") AT LINE 460 with ID [181b6825-57d0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 460 with ID [181b6825-57d0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" completed with exit code ") AT LINE 460 with ID [181b6825-57d0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(exitCode) AT LINE 460 with ID [181b6825-57d0]
2020-08-25 12:10:04 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 460 with ID [181b6825-57d0]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void debug(java.lang.String)>($stack41) AT LINE 460 with ID [181b6825-57d0]
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = interfaceinvoke untrackedContainerIdList.<java.util.List: boolean isEmpty()>() at line 1015 don't merge! Need manual examination!
2020-08-25 12:10:04 [WARN] - Both branch of IfStmt if container == null goto interfaceinvoke untrackedContainerIdList.<java.util.List: boolean add(java.lang.Object)>(containerId) at line 1025 don't merge! Need manual examination!
2020-08-25 12:10:04 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: int updateCompletedContainers(java.util.List,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.api.records.NodeId)> has 5 units and 1 lines
2020-08-25 12:10:04 [INFO] - 	 -> $stack26 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: org.apache.commons.logging.Log LOG> AT LINE 1017 with ID [9174f4a9-662e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container FINISHED: ") AT LINE 1017 with ID [9174f4a9-662e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 1017 with ID [9174f4a9-662e]
2020-08-25 12:10:04 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1017 with ID [9174f4a9-662e]
2020-08-25 12:10:04 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 1017 with ID [9174f4a9-662e]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.Task: void reportNextRecordRange(org.apache.hadoop.mapred.TaskUmbilicalProtocol,long)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.mapred.Task: org.apache.commons.logging.Log LOG> AT LINE 911 with ID [910e1bad-b3ac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sending reportNextRecordRange ") AT LINE 911 with ID [910e1bad-b3ac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(range) AT LINE 911 with ID [910e1bad-b3ac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 911 with ID [910e1bad-b3ac]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 911 with ID [910e1bad-b3ac]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack15 == 0 goto return at line 980 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack29 == 0 goto (branch) at line 1002 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.CacheManager: void processCacheReportImpl(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,java.util.List)> has 9 units and 4 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.server.namenode.CacheManager: org.slf4j.Logger LOG> AT LINE 982 with ID [ebee6030-7281]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(blockId) AT LINE 982 with ID [ebee6030-7281]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Cache report from datanode {} has block {}", datanode, $stack21) AT LINE 982 with ID [ebee6030-7281]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hdfs.server.namenode.CacheManager: org.slf4j.Logger LOG> AT LINE 993 with ID [e7ce2f78-d139]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Added block {}  to cachedBlocks", cachedBlock) AT LINE 993 with ID [e7ce2f78-d139]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.server.namenode.CacheManager: org.slf4j.Logger LOG> AT LINE 1000 with ID [e5fed194-5bf8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Added block {} to CACHED list.", cachedBlock) AT LINE 1000 with ID [e5fed194-5bf8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = <org.apache.hadoop.hdfs.server.namenode.CacheManager: org.slf4j.Logger LOG> AT LINE 1004 with ID [5e5035cf-ccf1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Removed block {} from PENDING_CACHED list.", cachedBlock) AT LINE 1004 with ID [5e5035cf-ccf1]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if info == null goto $stack12 = new org.apache.hadoop.util.Waitable at line 695 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: java.util.HashMap replicaInfoMap> at line 681 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplicaInfo fetchOrCreate(org.apache.hadoop.hdfs.ExtendedBlockId,org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache$ShortCircuitReplicaCreator)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 682 with ID [77c266a2-5da9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: can\'t fethchOrCreate {} because the cache is closed.", this, key) AT LINE 682 with ID [77c266a2-5da9]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack10 != null goto $stack11 = virtualinvoke rbi.<org.apache.hadoop.hdfs.server.blockmanagement.PendingDataNodeMessages$ReportedBlockInfo: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo getStorageInfo()>() at line 2633 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack6 == 0 goto return at line 2629 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void processQueuedMessages(java.lang.Iterable)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 2631 with ID [2741a216-c6e8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing previouly queued message ") AT LINE 2631 with ID [2741a216-c6e8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(rbi) AT LINE 2631 with ID [2741a216-c6e8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2631 with ID [2741a216-c6e8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 2631 with ID [2741a216-c6e8]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack23 >= 0 goto $stack24 = offset cmp cachedOffset at line 580 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack21 > 0 goto $stack22 = offset cmp cachedOffset at line 549 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx addWritesToCache(org.apache.hadoop.nfs.nfs3.request.WRITE3Request,org.jboss.netty.channel.Channel,int)> has 27 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack146 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 544 with ID [a6c56320-36c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack147 = virtualinvoke $stack145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requested offset=") AT LINE 544 with ID [a6c56320-36c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack148 = virtualinvoke $stack147.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(offset) AT LINE 544 with ID [a6c56320-36c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack149 = virtualinvoke $stack148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and current offset=") AT LINE 544 with ID [a6c56320-36c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack150 = virtualinvoke $stack149.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(cachedOffset) AT LINE 544 with ID [a6c56320-36c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack151 = virtualinvoke $stack150.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 544 with ID [a6c56320-36c6]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack146.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack151) AT LINE 544 with ID [a6c56320-36c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack74 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 592 with ID [2d813ed6-4ac0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack75 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Add new write to the list with nextOffset ") AT LINE 592 with ID [2d813ed6-4ac0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(cachedOffset) AT LINE 592 with ID [2d813ed6-4ac0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and requested offset=") AT LINE 592 with ID [2d813ed6-4ac0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(offset) AT LINE 592 with ID [2d813ed6-4ac0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 592 with ID [2d813ed6-4ac0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack74.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack79) AT LINE 592 with ID [2d813ed6-4ac0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New write buffered with xid ") AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(xid) AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nextOffset ") AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(cachedOffset) AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" req offset=") AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(offset) AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mapsize=") AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.ConcurrentNavigableMap pendingWrites> AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = interfaceinvoke $stack62.<java.util.concurrent.ConcurrentNavigableMap: int size()>() AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [INFO] - 	 -> $stack64 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack63) AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack54.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack65) AT LINE 604 with ID [5e812cfa-d054]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack4 != 0 goto $stack7 = this.<org.apache.hadoop.hdfs.DFSClient: java.util.Random r> at line 436 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSClient: java.net.SocketAddress getRandomLocalInterfaceAddr()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 441 with ID [432ad0e4-9e82]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Using local interface {}", addr) AT LINE 441 with ID [432ad0e4-9e82]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 != 0 goto specialinvoke this.<org.apache.hadoop.ipc.Server$Connection: void processRpcRequest(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcRequestHeaderProto,org.apache.hadoop.ipc.RpcWritable$Buffer)>(header, buffer) at line 2289 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$Connection: void processOneRpc(java.nio.ByteBuffer)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 2283 with ID [f4a77fc9-9e28]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got #") AT LINE 2283 with ID [f4a77fc9-9e28]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(callId) AT LINE 2283 with ID [f4a77fc9-9e28]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2283 with ID [f4a77fc9-9e28]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 2283 with ID [f4a77fc9-9e28]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNode: void initializeGenericKeys(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger LOG> AT LINE 1719 with ID [2e2fbe3c-8dea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting fs.defaultFS to ") AT LINE 1719 with ID [2e2fbe3c-8dea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke defaultUri.<java.net.URI: java.lang.String toString()>() AT LINE 1719 with ID [2e2fbe3c-8dea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 1719 with ID [2e2fbe3c-8dea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1719 with ID [2e2fbe3c-8dea]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 1719 with ID [2e2fbe3c-8dea]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack25 == 0 goto (branch) at line 347 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack17 != 0 goto $stack18 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>() at line 341 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: int loadRMDTSecretManagerKeys(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState)> has 11 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 348 with ID [eb9bd7a0-3f99]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded RM delegation key from ") AT LINE 348 with ID [eb9bd7a0-3f99]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 348 with ID [eb9bd7a0-3f99]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": keyId=") AT LINE 348 with ID [eb9bd7a0-3f99]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke masterKey.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 348 with ID [eb9bd7a0-3f99]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack32) AT LINE 348 with ID [eb9bd7a0-3f99]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expirationDate=") AT LINE 348 with ID [eb9bd7a0-3f99]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke masterKey.<org.apache.hadoop.security.token.delegation.DelegationKey: long getExpiryDate()>() AT LINE 348 with ID [eb9bd7a0-3f99]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack35) AT LINE 348 with ID [eb9bd7a0-3f99]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 348 with ID [eb9bd7a0-3f99]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 348 with ID [eb9bd7a0-3f99]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.web.SimpleHttpProxyHandler$Forwarder$1: void operationComplete(io.netty.channel.ChannelFuture)> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.hdfs.server.datanode.web.SimpleHttpProxyHandler: org.apache.commons.logging.Log LOG> AT LINE 84 with ID [fee98bf3-708f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = interfaceinvoke future.<io.netty.channel.ChannelFuture: java.lang.Throwable cause()>() AT LINE 84 with ID [fee98bf3-708f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Proxy failed. Cause: ", $stack5) AT LINE 84 with ID [fee98bf3-708f]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack59 != 0 goto $stack37 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() at line 824 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if out != null goto $stack18 = this.<org.apache.hadoop.hdfs.server.datanode.BlockSender: long offset> at line 759 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockSender: long doSendBlock(java.io.DataOutputStream,java.io.OutputStream,org.apache.hadoop.hdfs.util.DataTransferThrottler)> has 26 units and 6 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.server.datanode.BlockSender: org.apache.commons.logging.Log ClientTraceLog> AT LINE 777 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = interfaceinvoke $stack21.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 777 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack22 == 0 goto $stack90 = 0L AT LINE 777 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack90 = staticinvoke <java.lang.System: long nanoTime()>() AT LINE 784 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> goto [?= startTime = $stack90] AT LINE 784 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack90 = 0L AT LINE 784 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> startTime = $stack90 AT LINE 777 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = this.<org.apache.hadoop.hdfs.server.datanode.BlockSender: java.lang.String clientTraceFmt> AT LINE 824 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack39 == null goto virtualinvoke this.<org.apache.hadoop.hdfs.server.datanode.BlockSender: void close()>() AT LINE 824 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = <org.apache.hadoop.hdfs.server.datanode.BlockSender: org.apache.commons.logging.Log ClientTraceLog> AT LINE 831 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = interfaceinvoke $stack40.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 831 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack41 == 0 goto virtualinvoke this.<org.apache.hadoop.hdfs.server.datanode.BlockSender: void close()>() AT LINE 831 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> maxChunksPerPacket#34 = staticinvoke <java.lang.System: long nanoTime()>() AT LINE 825 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.server.datanode.BlockSender: org.apache.commons.logging.Log ClientTraceLog> AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = this.<org.apache.hadoop.hdfs.server.datanode.BlockSender: java.lang.String clientTraceFmt> AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = newarray (java.lang.Object)[3] AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(totalRead) AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44[0] = $stack48 AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = this.<org.apache.hadoop.hdfs.server.datanode.BlockSender: long initialOffset> AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack49) AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44[1] = $stack51 AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = maxChunksPerPacket#34 - startTime AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack52) AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44[2] = $stack54 AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($stack46, $stack44) AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack45.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack55) AT LINE 826 with ID [d564f930-a041]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = virtualinvoke mergedCommand.<java.lang.StringBuilder: java.lang.String toString()>() at line 507 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.YARNRunner: org.apache.hadoop.yarn.api.records.ContainerLaunchContext setupContainerLaunchContextForAM(org.apache.hadoop.conf.Configuration,java.util.Map,java.nio.ByteBuffer,java.util.List)> has 13 units and 5 lines
2020-08-25 12:10:05 [INFO] - 	 -> i$ = interfaceinvoke vargs.<java.util.List: java.util.Iterator iterator()>() AT LINE 507 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>() AT LINE 507 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> if $stack12 == 0 goto $stack13 = virtualinvoke mergedCommand.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 507 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 547 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> str = (java.lang.CharSequence) $stack48 AT LINE 547 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke mergedCommand.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(str) AT LINE 508 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 508 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> goto [?= $stack12 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] AT LINE 509 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.mapred.YARNRunner: org.apache.commons.logging.Log LOG> AT LINE 512 with ID [2978bad8-9046]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Command to launch container for ApplicationMaster is : ") AT LINE 512 with ID [2978bad8-9046]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mergedCommand) AT LINE 512 with ID [2978bad8-9046]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 512 with ID [2978bad8-9046]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 512 with ID [2978bad8-9046]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.security.BaseNMTokenSecretManager: byte[] createPassword(org.apache.hadoop.yarn.security.NMTokenIdentifier)> has 12 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.security.BaseNMTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 75 with ID [d4df4045-e8f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("creating password for ") AT LINE 75 with ID [d4df4045-e8f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 75 with ID [d4df4045-e8f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack15) AT LINE 75 with ID [d4df4045-e8f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ") AT LINE 75 with ID [d4df4045-e8f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.NMTokenIdentifier: java.lang.String getApplicationSubmitter()>() AT LINE 75 with ID [d4df4045-e8f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 75 with ID [d4df4045-e8f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to run on NM ") AT LINE 75 with ID [d4df4045-e8f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.yarn.api.records.NodeId getNodeId()>() AT LINE 75 with ID [d4df4045-e8f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 75 with ID [d4df4045-e8f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 75 with ID [d4df4045-e8f4]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 75 with ID [d4df4045-e8f4]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack16 goto return at line 111 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.qjournal.MiniJournalCluster: void <init>(org.apache.hadoop.hdfs.qjournal.MiniJournalCluster$Builder)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hdfs.qjournal.MiniJournalCluster: org.apache.commons.logging.Log LOG> AT LINE 114 with ID [ce32f540-640a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fully deleting JN directory ") AT LINE 114 with ID [ce32f540-640a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dir) AT LINE 114 with ID [ce32f540-640a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 114 with ID [ce32f540-640a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 114 with ID [ce32f540-640a]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.checker.DatasetVolumeChecker$ResultHandler: void onSuccess(org.apache.hadoop.hdfs.server.datanode.checker.VolumeCheckResult)> has 4 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.server.datanode.checker.DatasetVolumeChecker: org.slf4j.Logger LOG> AT LINE 346 with ID [e0986bdd-09cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.hdfs.server.datanode.checker.DatasetVolumeChecker$ResultHandler: org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeReference reference> AT LINE 346 with ID [e0986bdd-09cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = interfaceinvoke $stack9.<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeReference: org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi getVolume()>() AT LINE 346 with ID [e0986bdd-09cf]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Volume {} is {}.", $stack12, result) AT LINE 346 with ID [e0986bdd-09cf]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if lastException == null goto $stack16 = new java.io.IOException at line 415 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack24 != 0 goto subclazz = virtualinvoke clazz.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/hadoop/mapred/MapOutputCollector;") at line 393 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto (branch) at line 391 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.MapTask: org.apache.hadoop.mapred.MapOutputCollector createSortingCollector(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.mapred.Task$TaskReporter)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = <org.apache.hadoop.mapred.MapTask: org.apache.commons.logging.Log LOG> AT LINE 399 with ID [d9cbda2f-1ad9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying map output collector class: ") AT LINE 399 with ID [d9cbda2f-1ad9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke subclazz.<java.lang.Class: java.lang.String getName()>() AT LINE 399 with ID [d9cbda2f-1ad9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 399 with ID [d9cbda2f-1ad9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 399 with ID [d9cbda2f-1ad9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack31) AT LINE 399 with ID [d9cbda2f-1ad9]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if attempt != null goto $stack4 = virtualinvoke attempt.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: org.apache.hadoop.yarn.api.records.ApplicationResourceUsageReport getResourceUsageReport()>() at line 401 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: org.apache.hadoop.yarn.api.records.ApplicationResourceUsageReport getAppResourceUsageReport(org.apache.hadoop.yarn.api.records.ApplicationAttemptId)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: org.apache.commons.logging.Log LOG> AT LINE 403 with ID [5693f723-6f50]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request for appInfo of unknown attempt ") AT LINE 403 with ID [5693f723-6f50]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appAttemptId) AT LINE 403 with ID [5693f723-6f50]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 403 with ID [5693f723-6f50]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 403 with ID [5693f723-6f50]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if rtmax >= $stack33 goto $stack34 = new org.apache.hadoop.nfs.nfs3.response.READLINK3Response at line 684 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if target != null goto $stack29 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.conf.NfsConfiguration config> at line 677 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack26 == $stack28 goto (branch) at line 673 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if postOpAttr != null goto $stack26 = virtualinvoke postOpAttr.<org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes: int getType()>() at line 669 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.READLINK3Request: org.apache.hadoop.nfs.nfs3.request.READLINK3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 643 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 != 0 goto $stack15 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache clientCache> at line 637 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.READLINK3Response readlink(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack72 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 659 with ID [e15cbc07-658c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack73 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS READLINK fileId: ") AT LINE 659 with ID [e15cbc07-658c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack74 = virtualinvoke e#2.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 659 with ID [e15cbc07-658c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack75 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack74) AT LINE 659 with ID [e15cbc07-658c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 659 with ID [e15cbc07-658c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 659 with ID [e15cbc07-658c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 659 with ID [e15cbc07-658c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack72.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack78) AT LINE 659 with ID [e15cbc07-658c]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack6 goto $stack7 = this.<org.apache.hadoop.mapred.BackupStore: int firstSegmentOffset> at line 198 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.BackupStore: void reset()> has 10 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = <org.apache.hadoop.mapred.BackupStore: org.apache.commons.logging.Log LOG> AT LINE 218 with ID [2e87f749-014a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reset - First segment offset is ") AT LINE 218 with ID [2e87f749-014a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.mapred.BackupStore: int firstSegmentOffset> AT LINE 218 with ID [2e87f749-014a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack11) AT LINE 218 with ID [2e87f749-014a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Segment List Size is ") AT LINE 218 with ID [2e87f749-014a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.mapred.BackupStore: java.util.List segmentList> AT LINE 218 with ID [2e87f749-014a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = interfaceinvoke $stack14.<java.util.List: int size()>() AT LINE 218 with ID [2e87f749-014a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15) AT LINE 218 with ID [2e87f749-014a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 218 with ID [2e87f749-014a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack17) AT LINE 218 with ID [2e87f749-014a]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.server.LdapAuthenticationHandler: void authenticateWithTlsExtension(java.lang.String,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = <org.apache.hadoop.security.authentication.server.LdapAuthenticationHandler: org.slf4j.Logger logger> AT LINE 276 with ID [ffca4ae1-08c1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Authentication successful for {}", userDN) AT LINE 276 with ID [ffca4ae1-08c1]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack18 == 0 goto return at line 547 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testErrorReplicas()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 542 with ID [898255ba-2193]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 542 with ID [898255ba-2193]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 542 with ID [898255ba-2193]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32) AT LINE 542 with ID [898255ba-2193]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 542 with ID [898255ba-2193]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 542 with ID [898255ba-2193]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack19 != null goto start = 0L at line 1237 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack61 >= 0 goto login = specialinvoke this.<org.apache.hadoop.security.UserGroupInformation: javax.security.auth.login.LoginContext getLogin()>() at line 1236 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack62 != 0 goto tgt = specialinvoke this.<org.apache.hadoop.security.UserGroupInformation: javax.security.auth.kerberos.KerberosTicket getTGT()>() at line 1232 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 != 0 goto now = staticinvoke <org.apache.hadoop.util.Time: long now()>() at line 1220 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.UserGroupInformation: void reloginFromKeytab()> has 12 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 1245 with ID [28234ca3-4fbe]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initiating logout for ") AT LINE 1245 with ID [28234ca3-4fbe]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke this.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getUserName()>() AT LINE 1245 with ID [28234ca3-4fbe]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack49) AT LINE 1245 with ID [28234ca3-4fbe]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1245 with ID [28234ca3-4fbe]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 1245 with ID [28234ca3-4fbe]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 1258 with ID [5595bb4c-2d4f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initiating re-login for ") AT LINE 1258 with ID [5595bb4c-2d4f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = <org.apache.hadoop.security.UserGroupInformation: java.lang.String keytabPrincipal> AT LINE 1258 with ID [5595bb4c-2d4f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack38) AT LINE 1258 with ID [5595bb4c-2d4f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1258 with ID [5595bb4c-2d4f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void debug(java.lang.String)>($stack40) AT LINE 1258 with ID [5595bb4c-2d4f]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: void markContainerForNonKillable(org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1842 with ID [75c13945-70eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEventType: org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.SchedulerEventType MARK_CONTAINER_FOR_NONKILLABLE> AT LINE 1842 with ID [75c13945-70eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack23) AT LINE 1842 with ID [75c13945-70eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": container") AT LINE 1842 with ID [75c13945-70eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke nonKillableContainer.<java.lang.Object: java.lang.String toString()>() AT LINE 1842 with ID [75c13945-70eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 1842 with ID [75c13945-70eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1842 with ID [75c13945-70eb]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 1842 with ID [75c13945-70eb]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void storeContainer(org.apache.hadoop.yarn.api.records.ContainerId,int,long,org.apache.hadoop.yarn.api.protocolrecords.StartContainerRequest)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 323 with ID [2c7169cc-62f3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storeContainer: containerId= ") AT LINE 323 with ID [2c7169cc-62f3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(idStr) AT LINE 323 with ID [2c7169cc-62f3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", startRequest= ") AT LINE 323 with ID [2c7169cc-62f3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(startRequest) AT LINE 323 with ID [2c7169cc-62f3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 323 with ID [2c7169cc-62f3]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack38.<org.slf4j.Logger: void debug(java.lang.String)>($stack43) AT LINE 323 with ID [2c7169cc-62f3]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if firstException == null goto return at line 165 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i < 0 goto (branch) at line 149 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.service.CompositeService: void stop(int,boolean)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.service.CompositeService: org.slf4j.Logger LOG> AT LINE 152 with ID [fd2c3150-f57e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping service #") AT LINE 152 with ID [fd2c3150-f57e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i) AT LINE 152 with ID [fd2c3150-f57e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 152 with ID [fd2c3150-f57e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(service) AT LINE 152 with ID [fd2c3150-f57e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 152 with ID [fd2c3150-f57e]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack28) AT LINE 152 with ID [fd2c3150-f57e]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.io.nativeio.NativeIO$POSIX: java.lang.String getName(org.apache.hadoop.io.nativeio.NativeIO$POSIX$IdCache,int)> has 16 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.io.nativeio.NativeIO$POSIX$IdCache: org.apache.hadoop.io.nativeio.NativeIO$POSIX$IdCache USER> AT LINE 442 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> if domain != $stack19 goto $stack36 = "GroupName" AT LINE 442 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = "UserName" AT LINE 449 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> goto [?= type = $stack36] AT LINE 449 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = "GroupName" AT LINE 449 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> type = $stack36 AT LINE 442 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = <org.apache.hadoop.io.nativeio.NativeIO$POSIX: org.slf4j.Logger LOG> AT LINE 443 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got ") AT LINE 443 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(type) AT LINE 443 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 443 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 443 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ID ") AT LINE 443 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(id) AT LINE 443 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from the native implementation") AT LINE 443 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 443 with ID [912812e3-b80a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String)>($stack29) AT LINE 443 with ID [912812e3-b80a]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if j <= i goto best[i] = cur at line 165 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= tasksToPick goto (branch) at line 164 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack77 > $stack79 goto (branch) at line 164 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack42 == 0 goto $stack43 = best[i$#9] at line 175 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack25 != 0 goto (branch) at line 186 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack23 == 0 goto return at line 185 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$#9 >= tasksToPick goto $stack21 = host.<org.apache.hadoop.examples.terasort.TeraScheduler$Host: java.util.List splits> at line 172 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack20 == 0 goto i$#9 = 0 at line 157 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.examples.terasort.TeraScheduler: void pickBestSplits(org.apache.hadoop.examples.terasort.TeraScheduler$Host)> has 19 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = <org.apache.hadoop.examples.terasort.TeraScheduler: org.slf4j.Logger LOG> AT LINE 158 with ID [1a62f8a3-638a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  examine: ") AT LINE 158 with ID [1a62f8a3-638a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = cur.<org.apache.hadoop.examples.terasort.TeraScheduler$Split: java.lang.String filename> AT LINE 158 with ID [1a62f8a3-638a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack60) AT LINE 158 with ID [1a62f8a3-638a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 158 with ID [1a62f8a3-638a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = cur.<org.apache.hadoop.examples.terasort.TeraScheduler$Split: java.util.List locations> AT LINE 158 with ID [1a62f8a3-638a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack64 = interfaceinvoke $stack63.<java.util.List: int size()>() AT LINE 158 with ID [1a62f8a3-638a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack65 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack64) AT LINE 158 with ID [1a62f8a3-638a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 158 with ID [1a62f8a3-638a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack58.<org.slf4j.Logger: void debug(java.lang.String)>($stack66) AT LINE 158 with ID [1a62f8a3-638a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack68 = j - 1 AT LINE 166 with ID [UNKNOWN_ID, 78285e6a-f793]
2020-08-25 12:10:05 [INFO] - 	 -> $stack69 = best[$stack68] AT LINE 166 with ID [UNKNOWN_ID, 78285e6a-f793]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = <org.apache.hadoop.examples.terasort.TeraScheduler: org.slf4j.Logger LOG> AT LINE 174 with ID [78285e6a-f793]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" best: ") AT LINE 174 with ID [78285e6a-f793]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = best[i$#9] AT LINE 174 with ID [78285e6a-f793]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = $stack35.<org.apache.hadoop.examples.terasort.TeraScheduler$Split: java.lang.String filename> AT LINE 174 with ID [78285e6a-f793]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack36) AT LINE 174 with ID [78285e6a-f793]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 174 with ID [78285e6a-f793]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String)>($stack38) AT LINE 174 with ID [78285e6a-f793]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocolPB.ClientDatanodeProtocolTranslatorPB: void <init>(org.apache.hadoop.hdfs.protocol.DatanodeID,org.apache.hadoop.conf.Configuration,int,boolean)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.protocolPB.ClientDatanodeProtocolTranslatorPB: org.slf4j.Logger LOG> AT LINE 145 with ID [34fbdf59-c5ba]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Connecting to datanode {} addr={}", dnAddr, addr) AT LINE 145 with ID [34fbdf59-c5ba]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: java.util.LinkedHashSet suspectBlocks> at line 684 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if recent == null goto $stack6 = this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: java.util.LinkedHashSet suspectBlocks> at line 679 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack3 == 0 goto $stack4 = this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: com.google.common.cache.Cache recentSuspectBlocks> at line 673 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: void markSuspectBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock)> has 8 units and 4 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 674 with ID [746a2693-9611]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: Not scheduling suspect block {} for rescanning, because this volume scanner is stopping.", this, block) AT LINE 674 with ID [746a2693-9611]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 680 with ID [90c17e1a-c9cf]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: Not scheduling suspect block {} for rescanning, because we rescanned it recently.", this, block) AT LINE 680 with ID [90c17e1a-c9cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 685 with ID [f11549d0-d7b6]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: suspect block {} is already queued for rescanning.", this, block) AT LINE 685 with ID [f11549d0-d7b6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 691 with ID [f1bf2900-5ec9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: Scheduling suspect block {} for rescanning.", this, block) AT LINE 691 with ID [f1bf2900-5ec9]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 == 0 goto return null at line 263 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.HftpFileSystem$2: org.apache.hadoop.security.token.Token run()> has 10 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.web.HftpFileSystem: org.slf4j.Logger LOG> AT LINE 265 with ID [da3ee910-11a7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got dt for ") AT LINE 265 with ID [da3ee910-11a7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = this.<org.apache.hadoop.hdfs.web.HftpFileSystem$2: org.apache.hadoop.hdfs.web.HftpFileSystem this$0> AT LINE 265 with ID [da3ee910-11a7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<org.apache.hadoop.hdfs.web.HftpFileSystem: java.net.URI getUri()>() AT LINE 265 with ID [da3ee910-11a7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 265 with ID [da3ee910-11a7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";t.service=") AT LINE 265 with ID [da3ee910-11a7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke t.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 265 with ID [da3ee910-11a7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24) AT LINE 265 with ID [da3ee910-11a7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 265 with ID [da3ee910-11a7]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack26) AT LINE 265 with ID [da3ee910-11a7]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void removeRMDTMasterKeyState(org.apache.hadoop.security.token.delegation.DelegationKey)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 1150 with ID [a8755fbe-ac84]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing RMDelegationKey_") AT LINE 1150 with ID [a8755fbe-ac84]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke delegationKey.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 1150 with ID [a8755fbe-ac84]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack18) AT LINE 1150 with ID [a8755fbe-ac84]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1150 with ID [a8755fbe-ac84]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 1150 with ID [a8755fbe-ac84]
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.security.TestLdapGroupsMapping: void testLdapConnectionTimeout()>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack18 > 0 goto $stack19 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> at line 1332 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack11 == null goto $stack12 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.hadoop.yarn.util.resource.ResourceCalculator calculator> at line 1320 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if reservedApplication != null goto $stack55 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> at line 1270 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack9 == node goto reservedContainer = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer getReservedContainer()>() at line 1256 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment allocateContainerOnSingleNode(org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode,boolean)> has 25 units and 4 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1322 with ID [691fd239-d6f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping scheduling since node ") AT LINE 1322 with ID [691fd239-d6f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.api.records.NodeId getNodeID()>() AT LINE 1322 with ID [691fd239-d6f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack43) AT LINE 1322 with ID [691fd239-d6f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is reserved by application ") AT LINE 1322 with ID [691fd239-d6f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer getReservedContainer()>() AT LINE 1322 with ID [691fd239-d6f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = interfaceinvoke $stack46.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 1322 with ID [691fd239-d6f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<org.apache.hadoop.yarn.api.records.ContainerId: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 1322 with ID [691fd239-d6f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack48) AT LINE 1322 with ID [691fd239-d6f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1322 with ID [691fd239-d6f6]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack41.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack50) AT LINE 1322 with ID [691fd239-d6f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1335 with ID [0cdc46e6-199d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = interfaceinvoke $stack34.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 1335 with ID [0cdc46e6-199d]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack35 == 0 goto return null AT LINE 1335 with ID [0cdc46e6-199d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1336 with ID [0cdc46e6-199d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack36.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("This node or this node partition doesn\'t have available orkillable resource") AT LINE 1336 with ID [0cdc46e6-199d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 1343 with ID [3b5cfa26-7691]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to schedule on node: ") AT LINE 1343 with ID [3b5cfa26-7691]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: java.lang.String getNodeName()>() AT LINE 1343 with ID [3b5cfa26-7691]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 1343 with ID [3b5cfa26-7691]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", available: ") AT LINE 1343 with ID [3b5cfa26-7691]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.api.records.Resource getUnallocatedResource()>() AT LINE 1343 with ID [3b5cfa26-7691]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack28) AT LINE 1343 with ID [3b5cfa26-7691]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1343 with ID [3b5cfa26-7691]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack30) AT LINE 1343 with ID [3b5cfa26-7691]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack58 == 0 goto (branch) at line 187 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack61 == 0 goto (branch) at line 183 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack65 == 0 goto (branch) at line 192 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = ts cmp 0L at line 178 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack24 == 0 goto (branch) at line 180 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack35 != 0 goto (branch) at line 190 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: void consume(org.apache.hadoop.metrics2.impl.MetricsBuffer)> has 17 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = <org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: org.slf4j.Logger LOG> AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke tmp$1896772302.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pushing record ") AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke entry.<org.apache.hadoop.metrics2.impl.MetricsBuffer$Entry: java.lang.String name()>() AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack43) AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke record.<org.apache.hadoop.metrics2.impl.MetricsRecordImpl: java.lang.String context()>() AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack46) AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke record.<org.apache.hadoop.metrics2.impl.MetricsRecordImpl: java.lang.String name()>() AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack49) AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = this.<org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: java.lang.String name> AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack52) AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack41.<org.slf4j.Logger: void debug(java.lang.String)>($stack54) AT LINE 184 with ID [0aa471e0-41a5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: org.slf4j.Logger LOG> AT LINE 202 with ID [1e14b0d3-8657]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>("Done") AT LINE 202 with ID [1e14b0d3-8657]
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.namenode.TestLargeDirectoryDelete$TestThread: void endThread()>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack5 != null goto this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$ShmId shmId> = shmId at line 476 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack4 == 0 goto $stack5 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: sun.misc.Unsafe unsafe> at line 472 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack3 != 0 goto $stack4 = <org.apache.hadoop.util.Shell: boolean WINDOWS> at line 469 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: void <init>(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$ShmId,java.io.FileInputStream)> has 20 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: org.slf4j.Logger LOG> AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = newarray (java.lang.Object)[5] AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17[0] = $stack22 AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17[1] = shmId AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: int mmappedLength> AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack23) AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17[2] = $stack25 AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = newarray (java.lang.Object)[1] AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: long baseAddress> AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack27) AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26[0] = $stack31 AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%x", $stack26) AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17[3] = $stack32 AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot[] slots> AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = lengthof $stack33 AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack34) AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17[4] = $stack36 AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("creating {}(shmId={}, mmappedLength={}, baseAddress={}, slots.length={})", $stack17) AT LINE 487 with ID [89d661fd-854e]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack19 != 0 goto specialinvoke this.<org.apache.hadoop.hdfs.server.namenode.CacheManager: void processCacheReportImpl(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,java.util.List)>(datanode, blockIds) at line 954 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.CacheManager: void processCacheReport(org.apache.hadoop.hdfs.protocol.DatanodeID,java.util.List)> has 10 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = <org.apache.hadoop.hdfs.server.namenode.CacheManager: org.slf4j.Logger LOG> AT LINE 969 with ID [dbc6afd2-08b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = newarray (java.lang.Object)[3] AT LINE 969 with ID [dbc6afd2-08b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23[0] = datanodeID AT LINE 969 with ID [dbc6afd2-08b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = interfaceinvoke blockIds.<java.util.List: int size()>() AT LINE 969 with ID [dbc6afd2-08b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack27) AT LINE 969 with ID [dbc6afd2-08b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23[1] = $stack28 AT LINE 969 with ID [dbc6afd2-08b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = endTime - startTime AT LINE 969 with ID [dbc6afd2-08b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack29) AT LINE 969 with ID [dbc6afd2-08b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23[2] = $stack31 AT LINE 969 with ID [dbc6afd2-08b0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Processed cache report from {}, blocks: {}, processing time: {} msecs", $stack23) AT LINE 969 with ID [dbc6afd2-08b0]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.security.ContainerTokenIdentifier: void write(java.io.DataOutput)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.commons.logging.Log LOG> AT LINE 248 with ID [88c3c1e4-23f9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing ContainerTokenIdentifier to RPC layer: ") AT LINE 248 with ID [88c3c1e4-23f9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 248 with ID [88c3c1e4-23f9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 248 with ID [88c3c1e4-23f9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack6) AT LINE 248 with ID [88c3c1e4-23f9]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$ActiveLogParser: void run()> has 4 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 885 with ID [020c6681-3480]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("Begin parsing summary logs. ") AT LINE 885 with ID [020c6681-3480]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 891 with ID [9fcd7943-6d37]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>("End parsing summary logs. ") AT LINE 891 with ID [9fcd7943-6d37]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if conf != null goto $stack2 = staticinvoke <org.apache.hadoop.io.compress.ZStandardCodec: int getCompressionLevel(org.apache.hadoop.conf.Configuration)>(conf) at line 112 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.io.compress.zstd.ZStandardCompressor: void reinit(org.apache.hadoop.conf.Configuration)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.io.compress.zstd.ZStandardCompressor: org.slf4j.Logger LOG> AT LINE 117 with ID [c723212d-ed86]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("Reinit compressor with new compression configuration") AT LINE 117 with ID [c723212d-ed86]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: void processNodeUpdate(org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppNodeUpdateEvent$RMAppNodeUpdateType,org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode)> has 10 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> nodeState = interfaceinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: org.apache.hadoop.yarn.api.records.NodeState getState()>() AT LINE 992 with ID [7335cfc8-18c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppImpl: org.apache.commons.logging.Log LOG> AT LINE 994 with ID [7335cfc8-18c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received node update event:") AT LINE 994 with ID [7335cfc8-18c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(type) AT LINE 994 with ID [7335cfc8-18c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for node:") AT LINE 994 with ID [7335cfc8-18c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(node) AT LINE 994 with ID [7335cfc8-18c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with state:") AT LINE 994 with ID [7335cfc8-18c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nodeState) AT LINE 994 with ID [7335cfc8-18c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 994 with ID [7335cfc8-18c6]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 994 with ID [7335cfc8-18c6]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack8 != 0 goto return at line 213 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.util.CgroupsLCEResourcesHandler: void createCgroup(java.lang.String,java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.nodemanager.util.CgroupsLCEResourcesHandler: org.slf4j.Logger LOG> AT LINE 210 with ID [4977d376-e7d4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createCgroup: ") AT LINE 210 with ID [4977d376-e7d4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 210 with ID [4977d376-e7d4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 210 with ID [4977d376-e7d4]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 210 with ID [4977d376-e7d4]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.JniBasedUnixGroupsNetgroupMappingWithFallback: void <init>()> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = <org.apache.hadoop.security.JniBasedUnixGroupsNetgroupMappingWithFallback: org.slf4j.Logger LOG> AT LINE 44 with ID [84c88d13-94bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group mapping impl=") AT LINE 44 with ID [84c88d13-94bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.security.JniBasedUnixGroupsNetgroupMappingWithFallback: org.apache.hadoop.security.GroupMappingServiceProvider impl> AT LINE 44 with ID [84c88d13-94bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.Object: java.lang.Class getClass()>() AT LINE 44 with ID [84c88d13-94bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.Class: java.lang.String getName()>() AT LINE 44 with ID [84c88d13-94bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 44 with ID [84c88d13-94bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 44 with ID [84c88d13-94bd]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack13) AT LINE 44 with ID [84c88d13-94bd]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if prevValue != null goto $stack15 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$1: int[] $SwitchMap$org$apache$hadoop$hdfs$server$datanode$fsdataset$impl$FsDatasetCache$State> at line 322 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: void uncacheBlock(java.lang.String,long)> has 23 units and 6 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger LOG> AT LINE 323 with ID [41298fee-3546]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(blockId) AT LINE 323 with ID [41298fee-3546]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack59.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Block with id {}, pool {} does not need to be uncached, because it is not currently in the mappableBlockMap.", $stack61, bpid) AT LINE 323 with ID [41298fee-3546]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger LOG> AT LINE 331 with ID [537b011a-e73c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(blockId) AT LINE 331 with ID [537b011a-e73c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Cancelling caching for block with id {}, pool {}.", $stack45, bpid) AT LINE 331 with ID [537b011a-e73c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger LOG> AT LINE 340 with ID [1fe0a92c-983e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = interfaceinvoke $stack26.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 340 with ID [1fe0a92c-983e]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack27 == 0 goto $stack30 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: java.util.concurrent.ScheduledThreadPoolExecutor deferredUncachingExecutor> AT LINE 340 with ID [1fe0a92c-983e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger LOG> AT LINE 341 with ID [1fe0a92c-983e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: long revocationPollingMs> AT LINE 341 with ID [1fe0a92c-983e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = staticinvoke <org.apache.commons.lang.time.DurationFormatUtils: java.lang.String formatDurationHMS(long)>($stack34) AT LINE 341 with ID [1fe0a92c-983e]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{} is anchored, and can\'t be uncached now.  Scheduling it for uncaching in {} ", key, $stack37) AT LINE 341 with ID [1fe0a92c-983e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger LOG> AT LINE 349 with ID [aed5a191-9b61]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("{} has been scheduled for immediate uncaching.", key) AT LINE 349 with ID [aed5a191-9b61]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger LOG> AT LINE 354 with ID [43b527d6-9fe0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = newarray (java.lang.Object)[3] AT LINE 354 with ID [43b527d6-9fe0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(blockId) AT LINE 354 with ID [43b527d6-9fe0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51[0] = $stack55 AT LINE 354 with ID [43b527d6-9fe0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51[1] = bpid AT LINE 354 with ID [43b527d6-9fe0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = prevValue.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$Value: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$State state> AT LINE 354 with ID [43b527d6-9fe0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51[2] = $stack56 AT LINE 354 with ID [43b527d6-9fe0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack52.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Block with id {}, pool {} does not need to be uncached, because it is in state {}.", $stack51) AT LINE 354 with ID [43b527d6-9fe0]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack10 != 0 goto $stack11 = <org.apache.hadoop.hdfs.server.datanode.IncrementalBlockReportManager: org.slf4j.Logger LOG> at line 200 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.IncrementalBlockReportManager: void sendIBRs(org.apache.hadoop.hdfs.server.protocol.DatanodeProtocol,org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration,java.lang.String)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.datanode.IncrementalBlockReportManager: org.slf4j.Logger LOG> AT LINE 207 with ID [677d6f71-7851]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("call blockReceivedAndDeleted: ") AT LINE 207 with ID [677d6f71-7851]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(reports) AT LINE 207 with ID [677d6f71-7851]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20) AT LINE 207 with ID [677d6f71-7851]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 207 with ID [677d6f71-7851]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 207 with ID [677d6f71-7851]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if pairs != null goto $stack26 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: org.apache.commons.logging.Log LOG> at line 125 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: boolean put(org.apache.hadoop.nfs.nfs3.FileHandle,org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: org.apache.commons.logging.Log LOG> AT LINE 129 with ID [d1746d6f-23f0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Evict stream ctx: ") AT LINE 129 with ID [d1746d6f-23f0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = interfaceinvoke pairs.<java.util.Map$Entry: java.lang.Object getValue()>() AT LINE 129 with ID [d1746d6f-23f0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack40) AT LINE 129 with ID [d1746d6f-23f0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 129 with ID [d1746d6f-23f0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack42) AT LINE 129 with ID [d1746d6f-23f0]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack98 == 0 goto (branch) at line 218 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack95 == 0 goto $stack96 = interfaceinvoke contextEntry.<java.util.Map$Entry: java.lang.Object getKey()>() at line 216 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if user != null goto $stack33 = this.<org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyService: org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyTokenSecretManager secretManager> at line 231 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if amrmToken != null goto (branch) at line 227 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack32 == 0 goto (branch) at line 214 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack24 == 0 goto return at line 205 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack39 == 0 goto (branch) at line 241 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack72 != $stack73 goto (branch) at line 247 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack63 == null goto (branch) at line 255 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack61 == 0 goto (branch) at line 243 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyService: void recover()> has 13 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyService: org.slf4j.Logger LOG> AT LINE 242 with ID [c6f36692-c729]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("From NM Context container ") AT LINE 242 with ID [c6f36692-c729]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = interfaceinvoke container.<org.apache.hadoop.yarn.server.nodemanager.containermanager.container.Container: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 242 with ID [c6f36692-c729]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack56) AT LINE 242 with ID [c6f36692-c729]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 242 with ID [c6f36692-c729]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack54.<org.slf4j.Logger: void debug(java.lang.String)>($stack58) AT LINE 242 with ID [c6f36692-c729]
2020-08-25 12:10:05 [INFO] - 	 -> $stack65 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyService: org.slf4j.Logger LOG> AT LINE 245 with ID [985cbf3e-9138]
2020-08-25 12:10:05 [INFO] - 	 -> $stack66 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container type ") AT LINE 245 with ID [985cbf3e-9138]
2020-08-25 12:10:05 [INFO] - 	 -> $stack67 = interfaceinvoke container.<org.apache.hadoop.yarn.server.nodemanager.containermanager.container.Container: org.apache.hadoop.yarn.security.ContainerTokenIdentifier getContainerTokenIdentifier()>() AT LINE 245 with ID [985cbf3e-9138]
2020-08-25 12:10:05 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.yarn.server.api.ContainerType getContainerType()>() AT LINE 245 with ID [985cbf3e-9138]
2020-08-25 12:10:05 [INFO] - 	 -> $stack69 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack68) AT LINE 245 with ID [985cbf3e-9138]
2020-08-25 12:10:05 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 245 with ID [985cbf3e-9138]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack65.<org.slf4j.Logger: void debug(java.lang.String)>($stack70) AT LINE 245 with ID [985cbf3e-9138]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testFailedReplicaUpdate()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 609 with ID [1773cf7f-74fb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 609 with ID [1773cf7f-74fb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 609 with ID [1773cf7f-74fb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) AT LINE 609 with ID [1773cf7f-74fb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 609 with ID [1773cf7f-74fb]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 609 with ID [1773cf7f-74fb]
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.test.LambdaTestUtils: java.lang.Object eventually(int,java.util.concurrent.Callable,java.util.concurrent.Callable)>
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: org.apache.hadoop.fs.permission.FsPermission tryLoadIncompleteFlush(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 245 with ID [3ae32418-757a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>("KeyStore initialized anew successfully !!") AT LINE 245 with ID [3ae32418-757a]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack17 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> at line 2589 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$Handler: void run()> has 25 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 2587 with ID [3e8e1f20-49e8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 2587 with ID [3e8e1f20-49e8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.Thread: java.lang.String getName()>() AT LINE 2587 with ID [3e8e1f20-49e8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 2587 with ID [3e8e1f20-49e8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": starting") AT LINE 2587 with ID [3e8e1f20-49e8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2587 with ID [3e8e1f20-49e8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>($stack11) AT LINE 2587 with ID [3e8e1f20-49e8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 2594 with ID [c44be7d7-64b4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 2594 with ID [c44be7d7-64b4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.Thread: java.lang.String getName()>() AT LINE 2594 with ID [c44be7d7-64b4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack51) AT LINE 2594 with ID [c44be7d7-64b4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 2594 with ID [c44be7d7-64b4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(call) AT LINE 2594 with ID [c44be7d7-64b4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for RpcKind ") AT LINE 2594 with ID [c44be7d7-64b4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = call.<org.apache.hadoop.ipc.Server$Call: org.apache.hadoop.ipc.RPC$RpcKind rpcKind> AT LINE 2594 with ID [c44be7d7-64b4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack56) AT LINE 2594 with ID [c44be7d7-64b4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2594 with ID [c44be7d7-64b4]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack49.<org.slf4j.Logger: void debug(java.lang.String)>($stack58) AT LINE 2594 with ID [c44be7d7-64b4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 2629 with ID [29528b46-16f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 2629 with ID [29528b46-16f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.Thread: java.lang.String getName()>() AT LINE 2629 with ID [29528b46-16f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19) AT LINE 2629 with ID [29528b46-16f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": exiting") AT LINE 2629 with ID [29528b46-16f6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2629 with ID [29528b46-16f6]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 2629 with ID [29528b46-16f6]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack6 == 0 goto return at line 460 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: void populateNMTokens(java.util.List)> has 10 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = <org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: org.apache.commons.logging.Log LOG> AT LINE 464 with ID [7bb5c1e0-beed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Replacing token for : ") AT LINE 464 with ID [7bb5c1e0-beed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodeId) AT LINE 464 with ID [7bb5c1e0-beed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 464 with ID [7bb5c1e0-beed]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 464 with ID [7bb5c1e0-beed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = <org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: org.apache.commons.logging.Log LOG> AT LINE 466 with ID [0bf17aa8-ea42]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received new token for : ") AT LINE 466 with ID [0bf17aa8-ea42]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodeId) AT LINE 466 with ID [0bf17aa8-ea42]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 466 with ID [0bf17aa8-ea42]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 466 with ID [0bf17aa8-ea42]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack15 = this.<org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: org.apache.hadoop.metrics2.lib.MutableCounterInt dropped> at line 99 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack7 != 0 goto return 1 at line 97 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: boolean putMetrics(org.apache.hadoop.metrics2.impl.MetricsBuffer,long)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = <org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: org.slf4j.Logger LOG> AT LINE 98 with ID [567195eb-c66d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enqueue, logicalTime=") AT LINE 98 with ID [567195eb-c66d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(logicalTime) AT LINE 98 with ID [567195eb-c66d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 98 with ID [567195eb-c66d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 98 with ID [567195eb-c66d]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack8 == 0 goto started = staticinvoke <java.lang.System: long currentTimeMillis()>() at line 90 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.util.ShutdownHookManager$1: void run()> has 14 units and 4 lines
2020-08-25 12:10:05 [INFO] - 	 -> started = staticinvoke <java.lang.System: long currentTimeMillis()>() AT LINE 94 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> timeoutCount = staticinvoke <org.apache.hadoop.util.ShutdownHookManager: int executeShutdown()>() AT LINE 95 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> ended = staticinvoke <java.lang.System: long currentTimeMillis()>() AT LINE 96 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = staticinvoke <org.apache.hadoop.util.ShutdownHookManager: org.slf4j.Logger access$200()>() AT LINE 97 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = newarray (java.lang.Object)[2] AT LINE 97 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = ended - started AT LINE 97 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = (double) $stack14 AT LINE 97 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = $stack15 / 1000.0 AT LINE 97 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack16) AT LINE 97 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13[0] = $stack19 AT LINE 97 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(timeoutCount) AT LINE 97 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13[1] = $stack21 AT LINE 97 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Completed shutdown in %.3f seconds; Timeouts: %d", $stack13) AT LINE 97 with ID [f8868858-367b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 97 with ID [f8868858-367b]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if isSpnego == 0 goto $stack4 = <org.apache.hadoop.hdfs.web.URLConnectionFactory: org.slf4j.Logger LOG> at line 214 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.URLConnectionFactory: java.net.URLConnection openConnection(java.net.URL,boolean)> has 4 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.web.URLConnectionFactory: org.slf4j.Logger LOG> AT LINE 215 with ID [c22b7d3c-f77f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("open AuthenticatedURL connection {}", url) AT LINE 215 with ID [c22b7d3c-f77f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.web.URLConnectionFactory: org.slf4j.Logger LOG> AT LINE 221 with ID [e2498fc5-5014]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String)>("open URL connection") AT LINE 221 with ID [e2498fc5-5014]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: void bumpReplicaGS(org.apache.hadoop.hdfs.server.datanode.ReplicaInfo,long)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 1426 with ID [684e06e2-c752]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Renaming ") AT LINE 1426 with ID [684e06e2-c752]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(oldmeta) AT LINE 1426 with ID [684e06e2-c752]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 1426 with ID [684e06e2-c752]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(newmeta) AT LINE 1426 with ID [684e06e2-c752]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1426 with ID [684e06e2-c752]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack23) AT LINE 1426 with ID [684e06e2-c752]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack28 != 0 goto return -1L at line 352 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack24 != 0 goto len = specialinvoke this.<org.apache.hadoop.hdfs.DFSInputStream: long readBlockLength(org.apache.hadoop.hdfs.protocol.LocatedBlock)>(last) at line 351 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack39 == 0 goto this.<org.apache.hadoop.hdfs.DFSInputStream: org.apache.hadoop.hdfs.protocol.LocatedBlocks locatedBlocks> = newInfo at line 348 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack46 != 0 goto $stack34 = interfaceinvoke oldIter.<java.util.Iterator: boolean hasNext()>() at line 341 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if newInfo != null goto $stack13 = this.<org.apache.hadoop.hdfs.DFSInputStream: org.apache.hadoop.hdfs.protocol.LocatedBlocks locatedBlocks> at line 333 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSInputStream: long fetchLocatedBlocksAndGetLastBlockLength(boolean)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 332 with ID [adeebcb0-4485]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("newInfo = {}", newInfo) AT LINE 332 with ID [adeebcb0-4485]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack36 == 0 goto $stack38 = <java.lang.System: java.io.PrintStream err> at line 195 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack33 == 0 goto $stack34 = virtualinvoke args.<java.util.LinkedList: java.lang.Object get(int)>(0) at line 193 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack30 == 0 goto $stack31 = virtualinvoke args.<java.util.LinkedList: java.lang.Object get(int)>(0) at line 191 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack15 == 0 goto len$#6 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String popOptionWithArgument(java.lang.String,java.util.List)>("-principal", args) at line 169 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if arr$#5 != null goto $stack15 = virtualinvoke args.<java.util.LinkedList: boolean isEmpty()>() at line 165 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 != 0 goto arr$#5 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String popOptionWithArgument(java.lang.String,java.util.List)>("-host", args) at line 160 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = virtualinvoke args.<java.util.LinkedList: int size()>() at line 159 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack11 = staticinvoke <org.apache.hadoop.util.StringUtils: boolean popOption(java.lang.String,java.util.List)>("-h", args) at line 153 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.tracing.TraceAdmin: int run(java.lang.String[])> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = <org.apache.hadoop.tracing.TraceAdmin: org.slf4j.Logger LOG> AT LINE 176 with ID [f9476238-7fc1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack61.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Set service principal: {}", len$#6) AT LINE 176 with ID [f9476238-7fc1]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack25 == 0 goto return at line 1242 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack62 == 0 goto (branch) at line 1200 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator$ScheduledRequests: void assign(java.util.List)> has 12 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack152 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 1147 with ID [f3e4ec68-4def]
2020-08-25 12:10:05 [INFO] - 	 -> $stack153 = virtualinvoke $stack151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigning container ") AT LINE 1147 with ID [f3e4ec68-4def]
2020-08-25 12:10:05 [INFO] - 	 -> $stack154 = virtualinvoke allocated.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.ContainerId getId()>() AT LINE 1147 with ID [f3e4ec68-4def]
2020-08-25 12:10:05 [INFO] - 	 -> $stack155 = virtualinvoke $stack153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack154) AT LINE 1147 with ID [f3e4ec68-4def]
2020-08-25 12:10:05 [INFO] - 	 -> $stack156 = virtualinvoke $stack155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with priority ") AT LINE 1147 with ID [f3e4ec68-4def]
2020-08-25 12:10:05 [INFO] - 	 -> $stack157 = virtualinvoke allocated.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 1147 with ID [f3e4ec68-4def]
2020-08-25 12:10:05 [INFO] - 	 -> $stack158 = virtualinvoke $stack156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack157) AT LINE 1147 with ID [f3e4ec68-4def]
2020-08-25 12:10:05 [INFO] - 	 -> $stack159 = virtualinvoke $stack158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to NM ") AT LINE 1147 with ID [f3e4ec68-4def]
2020-08-25 12:10:05 [INFO] - 	 -> $stack160 = virtualinvoke allocated.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.NodeId getNodeId()>() AT LINE 1147 with ID [f3e4ec68-4def]
2020-08-25 12:10:05 [INFO] - 	 -> $stack161 = virtualinvoke $stack159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack160) AT LINE 1147 with ID [f3e4ec68-4def]
2020-08-25 12:10:05 [INFO] - 	 -> $stack162 = virtualinvoke $stack161.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1147 with ID [f3e4ec68-4def]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack152.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack162) AT LINE 1147 with ID [f3e4ec68-4def]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: void allocateContainer(org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer,boolean)> has 23 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: org.apache.commons.logging.Log LOG> AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigned container ") AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke container.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.ContainerId getId()>() AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack16) AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of capacity ") AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke container.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.Resource getResource()>() AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on host ") AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode rmNode> AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = interfaceinvoke $stack22.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: java.lang.String getNodeAddress()>() AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", which has ") AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: int numContainers> AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack26) AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" containers, ") AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: org.apache.hadoop.yarn.api.records.Resource getAllocatedResource()>() AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack29) AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" used and ") AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: org.apache.hadoop.yarn.api.records.Resource getUnallocatedResource()>() AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack32) AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" available after allocation") AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 175 with ID [4b66a4bd-7c22]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: void purge(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica)> has 20 units and 13 lines
2020-08-25 12:10:05 [INFO] - 	 -> removedFromInfoMap = 0 AT LINE 631 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> evictionMapName = null AT LINE 632 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> removedFromInfoMap = 1 AT LINE 640 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> info#11 = virtualinvoke replica.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: java.lang.Long getEvictableTimeNs()>() AT LINE 643 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> if info#11 == null goto $stack12 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 644 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> evictionMapName = specialinvoke this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: java.lang.String removeEvictable(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica)>(replica) AT LINE 645 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> builder = $stack14 AT LINE 648 with ID [5855eafa-7b76]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 649 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 649 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": purged ") AT LINE 649 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(replica) AT LINE 649 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from the cache.") AT LINE 649 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> if removedFromInfoMap == 0 goto (branch) AT LINE 651 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Removed from the replicaInfoMap.") AT LINE 652 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> if evictionMapName == null goto $stack20 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 654 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Removed from ") AT LINE 655 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(evictionMapName) AT LINE 655 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 657 with ID [5855eafa-7b76]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 657 with ID [5855eafa-7b76]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void trace(java.lang.String)>($stack21) AT LINE 657 with ID [5855eafa-7b76]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.pipes.BinaryProtocol: void abort()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = <org.apache.hadoop.mapred.pipes.BinaryProtocol: org.apache.commons.logging.Log LOG> AT LINE 343 with ID [e5aef527-57a5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Sent abort command") AT LINE 343 with ID [e5aef527-57a5]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack34 == 0 goto (branch) at line 284 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if msg == null goto (branch) at line 280 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack21 == 0 goto $stack23 = <org.apache.hadoop.hdfs.server.namenode.ImageServlet: org.apache.commons.logging.Log LOG> at line 286 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack21 = staticinvoke <org.apache.hadoop.http.HttpServer2: boolean userHasAdministratorAccess(javax.servlet.ServletContext,java.lang.String)>(context, remoteUser) at line 279 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if remoteUser != null goto $stack6 = new java.util.HashSet at line 244 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.namenode.ImageServlet: boolean isValidRequestor(javax.servlet.ServletContext,java.lang.String,org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: boolean commonReserve(org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode,org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer,org.apache.hadoop.yarn.api.records.Resource)> has 18 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: org.apache.commons.logging.Log LOG> AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application attempt ") AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack18) AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reserved container ") AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(rmContainer) AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on node ") AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(node) AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". This attempt currently has ") AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = interfaceinvoke e#2.<java.util.Map: int size()>() AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack25) AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reserved containers at priority ") AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack28) AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; currentReservation ") AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(reservedResource) AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 531 with ID [5d5465a6-f32e]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 != 0 goto (branch) at line 394 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: void renew()> has 4 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: org.slf4j.Logger LOG> AT LINE 396 with ID [4e2bdc29-7802]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Did not renew lease for client {}", c) AT LINE 396 with ID [4e2bdc29-7802]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: org.slf4j.Logger LOG> AT LINE 400 with ID [40c3ca98-28ca]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Lease renewed for client {}", previousName#3) AT LINE 400 with ID [40c3ca98-28ca]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.ShuffleHandler$Shuffle: void setResponseHeaders(org.jboss.netty.handler.codec.http.HttpResponse,boolean,long)> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() AT LINE 1183 with ID [fc940035-3ca3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = interfaceinvoke $stack31.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 1183 with ID [fc940035-3ca3]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack32 == 0 goto interfaceinvoke response.<org.jboss.netty.handler.codec.http.HttpResponse: void setHeader(java.lang.String,java.lang.Object)>("Connection", "close") AT LINE 1183 with ID [fc940035-3ca3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() AT LINE 1184 with ID [fc940035-3ca3]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Setting connection close header...") AT LINE 1184 with ID [fc940035-3ca3]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack4 != 0 goto $stack5 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> at line 262 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeList: void waitVolumeRemoved(int,java.util.concurrent.locks.Condition)> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 263 with ID [725277f8-9562]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 263 with ID [725277f8-9562]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack7 == 0 goto $stack9 = (long) sleepMillis AT LINE 263 with ID [725277f8-9562]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 264 with ID [725277f8-9562]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>("Waiting for volume reference to be released.") AT LINE 264 with ID [725277f8-9562]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if authRetryCount <= 0 goto staticinvoke <org.apache.hadoop.util.HttpExceptionUtils: void validateResponse(java.net.HttpURLConnection,int)>(conn, expectedResponse) at line 616 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.kms.KMSClientProvider: java.lang.Object call(java.net.HttpURLConnection,java.util.Map,int,java.lang.Class,int)> has 8 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.slf4j.Logger LOG> AT LINE 610 with ID [02ee2888-0d1a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = interfaceinvoke $stack23.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 610 with ID [02ee2888-0d1a]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack24 == 0 goto $stack25 = new org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL$Token AT LINE 610 with ID [02ee2888-0d1a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = <org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.slf4j.Logger LOG> AT LINE 611 with ID [02ee2888-0d1a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke conn.<java.net.HttpURLConnection: int getResponseCode()>() AT LINE 611 with ID [02ee2888-0d1a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack37) AT LINE 611 with ID [02ee2888-0d1a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke conn.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>() AT LINE 611 with ID [02ee2888-0d1a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Response={}({}), resetting authToken", $stack38, $stack39) AT LINE 611 with ID [02ee2888-0d1a]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack27 >= $stack28 goto (branch) at line 293 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack17 <= 0 goto return null at line 302 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 <= $stack16 goto $stack17 = interfaceinvoke records.<java.util.Collection: int size()>() at line 299 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = virtualinvoke i$#5.<java.util.TreeSet: int size()>() at line 292 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = new java.util.TreeSet at line 279 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.store.impl.MembershipStoreImpl: org.apache.hadoop.hdfs.server.federation.store.records.MembershipState getRepresentativeQuorum(java.util.Collection)> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.server.federation.store.impl.MembershipStoreImpl: org.slf4j.Logger LOG> AT LINE 304 with ID [9e3d715a-f321]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke record#8.<java.util.TreeSet: java.lang.Object first()>() AT LINE 304 with ID [9e3d715a-f321]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Quorum failed, using most recent: {}", $stack21) AT LINE 304 with ID [9e3d715a-f321]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack17 == 0 goto return at line 354 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.SortedRanges$SkipRangeIterator: void doNext()> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = staticinvoke <org.apache.hadoop.mapred.SortedRanges: org.apache.commons.logging.Log access$000()>() AT LINE 348 with ID [3208abe0-65d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("currentIndex ") AT LINE 348 with ID [3208abe0-65d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = this.<org.apache.hadoop.mapred.SortedRanges$SkipRangeIterator: long next> AT LINE 348 with ID [3208abe0-65d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack6) AT LINE 348 with ID [3208abe0-65d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ") AT LINE 348 with ID [3208abe0-65d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.mapred.SortedRanges$SkipRangeIterator: org.apache.hadoop.mapred.SortedRanges$Range range> AT LINE 348 with ID [3208abe0-65d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack9) AT LINE 348 with ID [3208abe0-65d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 348 with ID [3208abe0-65d9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 348 with ID [3208abe0-65d9]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.ClientRMService: void refreshScheduler(java.lang.String,org.apache.hadoop.yarn.api.records.ReservationDefinition,java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.server.resourcemanager.ClientRMService: org.apache.commons.logging.Log LOG> AT LINE 1446 with ID [6b12d839-7b22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = newarray (java.lang.Object)[1] AT LINE 1446 with ID [6b12d839-7b22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11[0] = reservationId AT LINE 1446 with ID [6b12d839-7b22]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Reservation {0} is within threshold so attempting to create synchronously.", $stack11) AT LINE 1446 with ID [6b12d839-7b22]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 1446 with ID [6b12d839-7b22]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.TestEncryptionZones: void testDelegationToken()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = <org.apache.hadoop.hdfs.DistributedFileSystem: org.apache.commons.logging.Log LOG> AT LINE 1332 with ID [ec93ed6a-bee5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delegation tokens: ") AT LINE 1332 with ID [ec93ed6a-bee5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(tokens) AT LINE 1332 with ID [ec93ed6a-bee5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack39) AT LINE 1332 with ID [ec93ed6a-bee5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1332 with ID [ec93ed6a-bee5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack41) AT LINE 1332 with ID [ec93ed6a-bee5]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto return sum at line 174 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.top.window.RollingWindow: long getSum(long)> has 14 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> timeStr = virtualinvoke $stack20.<java.util.Date: java.lang.String toString()>() AT LINE 181 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.namenode.top.window.RollingWindow: org.slf4j.Logger LOG> AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sum: + ") AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(sum) AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Bucket: updateTime: ") AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(timeStr) AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (") AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(bucketTime) AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") isStale ") AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(stale) AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ") AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(time) AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack34) AT LINE 182 with ID [2b92ad30-7196]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.hadoop.oncrpc.XDR dump(org.apache.hadoop.oncrpc.XDR,int,java.net.InetAddress)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.commons.logging.Log LOG> AT LINE 158 with ID [6c837bda-c309]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MOUNT NULLOP :  client: ") AT LINE 158 with ID [6c837bda-c309]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(client) AT LINE 158 with ID [6c837bda-c309]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 158 with ID [6c837bda-c309]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 158 with ID [6c837bda-c309]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack22 == 0 goto $stack23 = staticinvoke <org.apache.hadoop.mapred.TestBadRecords: java.util.List access$100()>() at line 236 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TestBadRecords$BadMapper: void map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = staticinvoke <org.apache.hadoop.mapred.TestBadRecords: org.apache.commons.logging.Log access$000()>() AT LINE 231 with ID [7643eefb-d5f9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MAP key:") AT LINE 231 with ID [7643eefb-d5f9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(key) AT LINE 231 with ID [7643eefb-d5f9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  value:") AT LINE 231 with ID [7643eefb-d5f9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(str) AT LINE 231 with ID [7643eefb-d5f9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 231 with ID [7643eefb-d5f9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 231 with ID [7643eefb-d5f9]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.util.NativeCodeLoader: void <clinit>()> has 7 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = <org.apache.hadoop.util.NativeCodeLoader: org.slf4j.Logger LOG> AT LINE 45 with ID [a936dad6-572f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = interfaceinvoke $stack2.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 45 with ID [a936dad6-572f]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack3 == 0 goto staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("hadoop") AT LINE 45 with ID [a936dad6-572f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = <org.apache.hadoop.util.NativeCodeLoader: org.slf4j.Logger LOG> AT LINE 46 with ID [a936dad6-572f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>("Trying to load the custom-built native-hadoop library...") AT LINE 46 with ID [a936dad6-572f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = <org.apache.hadoop.util.NativeCodeLoader: org.slf4j.Logger LOG> AT LINE 50 with ID [c7059c9d-df08]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String)>("Loaded the native-hadoop library") AT LINE 50 with ID [c7059c9d-df08]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.pipes.BinaryProtocol: void close()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack1 = <org.apache.hadoop.mapred.pipes.BinaryProtocol: org.apache.commons.logging.Log LOG> AT LINE 263 with ID [69f0740a-0521]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("closing connection") AT LINE 263 with ID [69f0740a-0521]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack34 != 0 goto $stack35 = this.<org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.hadoop.hdfs.server.datanode.DataNode spyDN> at line 971 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testStopWorker(org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery$TestStopWorkerRunnable)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 909 with ID [0aa5a0f9-3dcb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 909 with ID [0aa5a0f9-3dcb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.junit.rules.TestName currentTestName> AT LINE 909 with ID [0aa5a0f9-3dcb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<org.junit.rules.TestName: java.lang.String getMethodName()>() AT LINE 909 with ID [0aa5a0f9-3dcb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 909 with ID [0aa5a0f9-3dcb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 909 with ID [0aa5a0f9-3dcb]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack17) AT LINE 909 with ID [0aa5a0f9-3dcb]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if connectionRetryCount >= $stack4 goto return success at line 836 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector: boolean reEstablishSession()> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 822 with ID [776e6634-b673]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Establishing zookeeper connection for ") AT LINE 822 with ID [776e6634-b673]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 822 with ID [776e6634-b673]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 822 with ID [776e6634-b673]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack13) AT LINE 822 with ID [776e6634-b673]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCallQueue$Processor: void tryStart()> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.io.retry.AsyncCallHandler: org.slf4j.Logger LOG> AT LINE 174 with ID [169e5652-29d0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting AsyncCallQueue.Processor ") AT LINE 174 with ID [169e5652-29d0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(daemon) AT LINE 174 with ID [169e5652-29d0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 174 with ID [169e5652-29d0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 174 with ID [169e5652-29d0]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if codec == null goto return null at line 313 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.io.file.tfile.Compression$Algorithm: org.apache.hadoop.io.compress.Decompressor getDecompressor()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = <org.apache.hadoop.io.file.tfile.Compression: org.slf4j.Logger LOG> AT LINE 322 with ID [e1702a7d-7806]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a decompressor: ") AT LINE 322 with ID [e1702a7d-7806]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke decompressor.<java.lang.Object: int hashCode()>() AT LINE 322 with ID [e1702a7d-7806]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack12) AT LINE 322 with ID [e1702a7d-7806]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 322 with ID [e1702a7d-7806]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 322 with ID [e1702a7d-7806]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if setAttr3 != null goto $stack44 = virtualinvoke setAttr3.<org.apache.hadoop.nfs.nfs3.request.SetAttr3: java.util.EnumSet getUpdateFields()>() at line 992 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack35 != 0 goto $stack36 = new java.lang.StringBuilder at line 979 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if preOpDirAttr != null goto $stack34 = <org.apache.hadoop.nfs.AccessPrivilege: org.apache.hadoop.nfs.AccessPrivilege READ_WRITE> at line 974 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack172 == 0 goto fos = null at line 974 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.CREATE3Request: org.apache.hadoop.nfs.nfs3.request.CREATE3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 936 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.CREATE3Response create(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 18 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack183 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 953 with ID [2c321856-02af]
2020-08-25 12:10:05 [INFO] - 	 -> $stack184 = virtualinvoke $stack182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS CREATE dir fileId: ") AT LINE 953 with ID [2c321856-02af]
2020-08-25 12:10:05 [INFO] - 	 -> $stack185 = virtualinvoke e.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 953 with ID [2c321856-02af]
2020-08-25 12:10:05 [INFO] - 	 -> $stack186 = virtualinvoke $stack184.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack185) AT LINE 953 with ID [2c321856-02af]
2020-08-25 12:10:05 [INFO] - 	 -> $stack187 = virtualinvoke $stack186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" filename: ") AT LINE 953 with ID [2c321856-02af]
2020-08-25 12:10:05 [INFO] - 	 -> $stack188 = virtualinvoke $stack187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) AT LINE 953 with ID [2c321856-02af]
2020-08-25 12:10:05 [INFO] - 	 -> $stack189 = virtualinvoke $stack188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 953 with ID [2c321856-02af]
2020-08-25 12:10:05 [INFO] - 	 -> $stack190 = virtualinvoke $stack189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 953 with ID [2c321856-02af]
2020-08-25 12:10:05 [INFO] - 	 -> $stack191 = virtualinvoke $stack190.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 953 with ID [2c321856-02af]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack183.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack191) AT LINE 953 with ID [2c321856-02af]
2020-08-25 12:10:05 [INFO] - 	 -> $stack84 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 1027 with ID [2b3afd82-5d27]
2020-08-25 12:10:05 [INFO] - 	 -> $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opened stream for file: ") AT LINE 1027 with ID [2b3afd82-5d27]
2020-08-25 12:10:05 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) AT LINE 1027 with ID [2b3afd82-5d27]
2020-08-25 12:10:05 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", fileId: ") AT LINE 1027 with ID [2b3afd82-5d27]
2020-08-25 12:10:05 [INFO] - 	 -> $stack88 = virtualinvoke fileHandle.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 1027 with ID [2b3afd82-5d27]
2020-08-25 12:10:05 [INFO] - 	 -> $stack89 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack88) AT LINE 1027 with ID [2b3afd82-5d27]
2020-08-25 12:10:05 [INFO] - 	 -> $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1027 with ID [2b3afd82-5d27]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack84.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack90) AT LINE 1027 with ID [2b3afd82-5d27]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack24 = virtualinvoke numReplicas.<org.apache.hadoop.hdfs.server.blockmanagement.NumberReplicas: int liveReplicas()>() at line 1696 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack42 >= $stack43 goto $stack21 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.PendingReplicationBlocks pendingReplications> at line 1701 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if srcNode != null goto $stack20 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean $assertionsDisabled> at line 1685 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 != 0 goto $stack15 = new java.util.ArrayList at line 1674 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.ReplicationWork scheduleReplication(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,int)> has 8 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 1686 with ID [49ba0d1c-628d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block ") AT LINE 1686 with ID [49ba0d1c-628d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 1686 with ID [49ba0d1c-628d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be repl from any node") AT LINE 1686 with ID [49ba0d1c-628d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1686 with ID [49ba0d1c-628d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack52.<org.slf4j.Logger: void debug(java.lang.String)>($stack56) AT LINE 1686 with ID [49ba0d1c-628d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1698 with ID [2e152324-6c07]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack40.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("BLOCK* Removing {} from neededReplications as it has enough replicas", block) AT LINE 1698 with ID [2e152324-6c07]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if delay#27 >= s#26 goto $stack40 = this.<org.apache.hadoop.hdfs.server.balancer.Dispatcher: java.util.Collection targets> at line 1128 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if j >= $stack39 goto j#25 = futures at line 1110 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if concurrentThreads > 0 goto $stack24 = <org.apache.hadoop.hdfs.server.balancer.Dispatcher: org.apache.commons.logging.Log LOG> at line 1092 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.balancer.Dispatcher: long dispatchBlockMoves()> has 13 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack76 = <org.apache.hadoop.hdfs.server.balancer.Dispatcher: org.apache.commons.logging.Log LOG> AT LINE 1084 with ID [5c184de3-f526]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack76.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Balancer allowed RPCs per sec = 20") AT LINE 1084 with ID [5c184de3-f526]
2020-08-25 12:10:05 [INFO] - 	 -> $stack78 = <org.apache.hadoop.hdfs.server.balancer.Dispatcher: org.apache.commons.logging.Log LOG> AT LINE 1085 with ID [1996c022-d072]
2020-08-25 12:10:05 [INFO] - 	 -> $stack79 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Balancer concurrent threads = ") AT LINE 1085 with ID [1996c022-d072]
2020-08-25 12:10:05 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(concurrentThreads) AT LINE 1085 with ID [1996c022-d072]
2020-08-25 12:10:05 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1085 with ID [1996c022-d072]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack78.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack81) AT LINE 1085 with ID [1996c022-d072]
2020-08-25 12:10:05 [INFO] - 	 -> $stack83 = <org.apache.hadoop.hdfs.server.balancer.Dispatcher: org.apache.commons.logging.Log LOG> AT LINE 1086 with ID [629015b1-e1d1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack84 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disperse Interval sec = ") AT LINE 1086 with ID [629015b1-e1d1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack85 = concurrentThreads / 20 AT LINE 1086 with ID [629015b1-e1d1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack86 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack85) AT LINE 1086 with ID [629015b1-e1d1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1086 with ID [629015b1-e1d1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack83.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack87) AT LINE 1086 with ID [629015b1-e1d1]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.sharedcachemanager.metrics.ClientSCMMetrics: void <init>()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.server.sharedcachemanager.metrics.ClientSCMMetrics: org.slf4j.Logger LOG> AT LINE 47 with ID [fd6ff096-8687]
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initialized ") AT LINE 47 with ID [fd6ff096-8687]
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = this.<org.apache.hadoop.yarn.server.sharedcachemanager.metrics.ClientSCMMetrics: org.apache.hadoop.metrics2.lib.MetricsRegistry registry> AT LINE 47 with ID [fd6ff096-8687]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack5) AT LINE 47 with ID [fd6ff096-8687]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 47 with ID [fd6ff096-8687]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>($stack7) AT LINE 47 with ID [fd6ff096-8687]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.fs.StreamCapabilitiesPolicy: void unbuffer(java.io.InputStream)> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = <org.apache.hadoop.fs.StreamCapabilitiesPolicy: org.slf4j.Logger LOG> AT LINE 50 with ID [6a3737bd-ff25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = virtualinvoke in.<java.lang.Object: java.lang.Class getClass()>() AT LINE 50 with ID [6a3737bd-ff25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.Class: java.lang.String getName()>() AT LINE 50 with ID [6a3737bd-ff25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6) AT LINE 50 with ID [6a3737bd-ff25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") AT LINE 50 with ID [6a3737bd-ff25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not implement StreamCapabilities") AT LINE 50 with ID [6a3737bd-ff25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and the unbuffer capability") AT LINE 50 with ID [6a3737bd-ff25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 50 with ID [6a3737bd-ff25]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String)>($stack11) AT LINE 50 with ID [6a3737bd-ff25]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSEditLogAsync: void logSync()> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.server.namenode.FSEditLogAsync: org.apache.commons.logging.Log LOG> AT LINE 130 with ID [f6ac6d48-6049]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("logSync ") AT LINE 130 with ID [f6ac6d48-6049]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(edit) AT LINE 130 with ID [f6ac6d48-6049]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 130 with ID [f6ac6d48-6049]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 130 with ID [f6ac6d48-6049]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.io.ReadaheadPool: org.apache.hadoop.io.ReadaheadPool$ReadaheadRequest submitReadahead(java.lang.String,java.io.FileDescriptor,long,long)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.io.ReadaheadPool: org.slf4j.Logger LOG> AT LINE 154 with ID [915207ff-5687]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("submit readahead: ") AT LINE 154 with ID [915207ff-5687]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(req) AT LINE 154 with ID [915207ff-5687]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 154 with ID [915207ff-5687]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void trace(java.lang.String)>($stack16) AT LINE 154 with ID [915207ff-5687]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService: void storeTokenMasterKey(org.apache.hadoop.security.token.delegation.DelegationKey)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService: org.apache.commons.logging.Log LOG> AT LINE 262 with ID [a3a117df-41d2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing master key ") AT LINE 262 with ID [a3a117df-41d2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke masterKey.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 262 with ID [a3a117df-41d2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack19) AT LINE 262 with ID [a3a117df-41d2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 262 with ID [a3a117df-41d2]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 262 with ID [a3a117df-41d2]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack6 == 0 goto i$#3 = null at line 701 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack24 == 0 goto (branch) at line 702 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: void enableBlockPoolId(java.lang.String)> has 4 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 711 with ID [9140b6b8-b490]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: loaded block iterator for {}.", this, bpid) AT LINE 711 with ID [9140b6b8-b490]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 719 with ID [ed0edda0-5ce3]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: created new block iterator for {}.", this, bpid) AT LINE 719 with ID [ed0edda0-5ce3]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if isWrapped != 0 goto return at line 615 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslRpcClient$WrappedInputStream: void readNextRpcPacket()> has 8 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 588 with ID [164bf7f7-a454]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>("reading next wrapped RPC packet") AT LINE 588 with ID [164bf7f7-a454]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 609 with ID [8dcc95fd-08d8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unwrapping token of length:") AT LINE 609 with ID [8dcc95fd-08d8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = lengthof token AT LINE 609 with ID [8dcc95fd-08d8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack37) AT LINE 609 with ID [8dcc95fd-08d8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 609 with ID [8dcc95fd-08d8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String)>($stack39) AT LINE 609 with ID [8dcc95fd-08d8]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if c != null goto (branch) at line 195 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.util.ApplicationClassLoader: java.lang.Class loadClass(java.lang.String,boolean)> has 17 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = <org.apache.hadoop.util.ApplicationClassLoader: org.slf4j.Logger LOG> AT LINE 165 with ID [39019858-1181]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading class: ") AT LINE 165 with ID [39019858-1181]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 165 with ID [39019858-1181]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 165 with ID [39019858-1181]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String)>($stack38) AT LINE 165 with ID [39019858-1181]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = <org.apache.hadoop.util.ApplicationClassLoader: org.slf4j.Logger LOG> AT LINE 178 with ID [d2e37b33-04ec]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded class: ") AT LINE 178 with ID [d2e37b33-04ec]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 178 with ID [d2e37b33-04ec]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 178 with ID [d2e37b33-04ec]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 178 with ID [d2e37b33-04ec]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String)>($stack33) AT LINE 178 with ID [d2e37b33-04ec]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.util.ApplicationClassLoader: org.slf4j.Logger LOG> AT LINE 191 with ID [22ab9ab9-29ef]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded class from parent: ") AT LINE 191 with ID [22ab9ab9-29ef]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 191 with ID [22ab9ab9-29ef]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 191 with ID [22ab9ab9-29ef]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 191 with ID [22ab9ab9-29ef]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 191 with ID [22ab9ab9-29ef]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack21 != 0 goto $stack19 = new org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.RamDiskAsyncLazyPersistService$ReplicaLazyPersistTask at line 204 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.RamDiskAsyncLazyPersistService: void submitLazyPersistTask(java.lang.String,long,long,long,java.io.File,java.io.File,org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeReference)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.RamDiskAsyncLazyPersistService: org.apache.commons.logging.Log LOG> AT LINE 188 with ID [52a754aa-51c3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LazyWriter schedule async task to persist RamDisk block pool id: ") AT LINE 188 with ID [52a754aa-51c3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(bpId) AT LINE 188 with ID [52a754aa-51c3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" block id: ") AT LINE 188 with ID [52a754aa-51c3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(blockId) AT LINE 188 with ID [52a754aa-51c3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 188 with ID [52a754aa-51c3]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack46.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack51) AT LINE 188 with ID [52a754aa-51c3]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if respCode != 404 goto $stack9 = <org.apache.hadoop.security.authentication.client.AuthenticatedURL: org.slf4j.Logger LOG> at line 391 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if respCode != 202 goto (branch) at line 390 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.client.AuthenticatedURL: void extractToken(java.net.HttpURLConnection,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token)> has 6 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = <org.apache.hadoop.security.authentication.client.AuthenticatedURL: org.slf4j.Logger LOG> AT LINE 392 with ID [7383ff45-7c9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(respCode) AT LINE 392 with ID [7383ff45-7c9c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Setting token value to null ({}), resp={}", token, $stack26) AT LINE 392 with ID [7383ff45-7c9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = <org.apache.hadoop.security.authentication.client.AuthenticatedURL: org.slf4j.Logger LOG> AT LINE 396 with ID [1fac7e8e-6b19]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(respCode) AT LINE 396 with ID [1fac7e8e-6b19]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Setting token value to null ({}), resp={}", token, $stack11) AT LINE 396 with ID [1fac7e8e-6b19]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack7 == 0 goto return at line 528 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.namenode.LeaseManager$Monitor: void run()>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if preempted != 0 goto (branch) at line 115 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack65 == 0 goto (branch) at line 99 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack50 == 0 goto specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoCandidatesSelector: void preemptFrom(org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp,org.apache.hadoop.yarn.api.records.Resource,java.util.Map,java.util.List,org.apache.hadoop.yarn.api.records.Resource,java.util.Map,org.apache.hadoop.yarn.api.records.Resource)>(rmContainers#18, clusterResource, resToObtainByPartition, skippedAMContainerlist, i$#16, selectedCandidates, totalPreemptionAllowed) at line 131 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack36 == 0 goto i$#16 = staticinvoke <org.apache.hadoop.yarn.api.records.Resource: org.apache.hadoop.yarn.api.records.Resource newInstance(int,int)>(0, 0) at line 98 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack70 == 0 goto (branch) at line 104 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoCandidatesSelector: java.util.Map selectCandidates(java.util.Map,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.api.records.Resource)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack80 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoCandidatesSelector: org.apache.commons.logging.Log LOG> AT LINE 77 with ID [fa1d652a-cfb3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack81 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("skipping from queue=") AT LINE 77 with ID [fa1d652a-cfb3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(queueName) AT LINE 77 with ID [fa1d652a-cfb3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it\'s a non-preemptable queue") AT LINE 77 with ID [fa1d652a-cfb3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 77 with ID [fa1d652a-cfb3]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack80.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack84) AT LINE 77 with ID [fa1d652a-cfb3]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack21 == 0 goto ret = 0 at line 1068 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: boolean delete(java.lang.String,boolean)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.slf4j.Logger stateChangeLog> AT LINE 1054 with ID [9b99e51d-7a82]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*DIR* Namenode.delete: src=") AT LINE 1054 with ID [9b99e51d-7a82]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 1054 with ID [9b99e51d-7a82]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", recursive=") AT LINE 1054 with ID [9b99e51d-7a82]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(recursive) AT LINE 1054 with ID [9b99e51d-7a82]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1054 with ID [9b99e51d-7a82]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String)>($stack31) AT LINE 1054 with ID [9b99e51d-7a82]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 != 0 goto $stack13 = new org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment at line 509 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack205 != 0 goto $stack11 = interfaceinvoke ps.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet: java.lang.String getPartition()>() at line 521 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment assignContainers(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode)> has 42 units and 4 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack225 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.commons.logging.Log LOG> AT LINE 490 with ID [57d00307-6ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack226 = virtualinvoke $stack224.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip this queue=") AT LINE 490 with ID [57d00307-6ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack227 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: java.lang.String getQueuePath()>() AT LINE 490 with ID [57d00307-6ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack228 = virtualinvoke $stack226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack227) AT LINE 490 with ID [57d00307-6ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack229 = virtualinvoke $stack228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", because it is not able to access partition=") AT LINE 490 with ID [57d00307-6ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack230 = interfaceinvoke ps.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet: java.lang.String getPartition()>() AT LINE 490 with ID [57d00307-6ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack231 = virtualinvoke $stack229.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack230) AT LINE 490 with ID [57d00307-6ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack232 = virtualinvoke $stack231.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 490 with ID [57d00307-6ef9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack225.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack232) AT LINE 490 with ID [57d00307-6ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack187 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.commons.logging.Log LOG> AT LINE 512 with ID [74298e88-6e15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack188 = virtualinvoke $stack186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip this queue=") AT LINE 512 with ID [74298e88-6e15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack189 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: java.lang.String getQueuePath()>() AT LINE 512 with ID [74298e88-6e15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack190 = virtualinvoke $stack188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack189) AT LINE 512 with ID [74298e88-6e15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack191 = virtualinvoke $stack190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", because it doesn\'t need more resource, schedulingMode=") AT LINE 512 with ID [74298e88-6e15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack192 = virtualinvoke schedulingMode.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode: java.lang.String name()>() AT LINE 512 with ID [74298e88-6e15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack193 = virtualinvoke $stack191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack192) AT LINE 512 with ID [74298e88-6e15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack194 = virtualinvoke $stack193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node-partition=") AT LINE 512 with ID [74298e88-6e15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack195 = interfaceinvoke ps.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet: java.lang.String getPartition()>() AT LINE 512 with ID [74298e88-6e15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack196 = virtualinvoke $stack194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack195) AT LINE 512 with ID [74298e88-6e15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack197 = virtualinvoke $stack196.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 512 with ID [74298e88-6e15]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack187.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack197) AT LINE 512 with ID [74298e88-6e15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack165 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.commons.logging.Log LOG> AT LINE 534 with ID [e24fb11d-c3dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack166 = virtualinvoke $stack164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to assign containers to child-queue of ") AT LINE 534 with ID [e24fb11d-c3dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack167 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: java.lang.String getQueueName()>() AT LINE 534 with ID [e24fb11d-c3dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack168 = virtualinvoke $stack166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack167) AT LINE 534 with ID [e24fb11d-c3dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack169 = virtualinvoke $stack168.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 534 with ID [e24fb11d-c3dc]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack165.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack169) AT LINE 534 with ID [e24fb11d-c3dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack103 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.commons.logging.Log LOG> AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack104 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ParentQ=") AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack105 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: java.lang.String getQueueName()>() AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack106 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack105) AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" assignedSoFarInThisIteration=") AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack108 = virtualinvoke assignment.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment: org.apache.hadoop.yarn.api.records.Resource getResource()>() AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack109 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack108) AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack110 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" usedCapacity=") AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack111 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: float getUsedCapacity()>() AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack112 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack111) AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack113 = virtualinvoke $stack112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" absoluteUsedCapacity=") AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack114 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: float getAbsoluteUsedCapacity()>() AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack115 = virtualinvoke $stack113.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack114) AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack116 = virtualinvoke $stack115.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack103.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack116) AT LINE 622 with ID [d9f2fe67-5afb]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack18 > 0 goto $stack19 = evictableSize cmp 0L at line 534 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: void trimEvictionMaps()> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 549 with ID [73739d62-c581]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 549 with ID [73739d62-c581]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": trimEvictionMaps is purging ") AT LINE 549 with ID [73739d62-c581]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(replica) AT LINE 549 with ID [73739d62-c581]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 549 with ID [73739d62-c581]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String getStackTrace(java.lang.Thread)>($stack38) AT LINE 549 with ID [73739d62-c581]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39) AT LINE 549 with ID [73739d62-c581]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 549 with ID [73739d62-c581]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void trace(java.lang.String)>($stack41) AT LINE 549 with ID [73739d62-c581]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack24 <= 0 goto return absExpiryTime at line 376 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack23 <= 0 goto $stack24 = relExpiryTime cmp maxRelativeExpiryTime at line 371 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack20 >= 0 goto $stack21 = virtualinvoke expiry.<org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo$Expiration: boolean isRelative()>() at line 358 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack17 != null goto expiry = virtualinvoke info.<org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo: org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo$Expiration getExpiration()>() at line 355 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.CacheManager: long validateExpiryTime(org.apache.hadoop.hdfs.protocol.CacheDirectiveInfo,long)> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.namenode.CacheManager: org.slf4j.Logger LOG> AT LINE 350 with ID [1a22567c-9ab0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(maxRelativeExpiryTime) AT LINE 350 with ID [1a22567c-9ab0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Validating directive {} pool maxRelativeExpiryTime {}", info, $stack14) AT LINE 350 with ID [1a22567c-9ab0]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 73 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = this.<org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation: java.util.Set protocolCache> at line 69 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation: void init(java.lang.Class)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation: org.slf4j.Logger LOG> AT LINE 75 with ID [49e65795-a66a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>(name) AT LINE 75 with ID [49e65795-a66a]
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: int incrementCurrentKeyId()>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto return bytesReceived at line 715 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack46 goto exitmonitor l12 at line 730 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.balancer.Dispatcher$Source: long getBlockList()> has 21 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack75 = <org.apache.hadoop.hdfs.server.balancer.Dispatcher: org.apache.commons.logging.Log LOG> AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack76 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getBlocks(") AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack77 = virtualinvoke this.<org.apache.hadoop.hdfs.server.balancer.Dispatcher$Source: org.apache.hadoop.hdfs.protocol.DatanodeInfo getDatanodeInfo()>() AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack78 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack77) AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack80 = staticinvoke <org.apache.hadoop.util.StringUtils$TraditionalBinaryPrefix: java.lang.String long2String(long,java.lang.String,int)>(size, "B", 2) AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack81 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack80) AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") returns ") AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack83 = virtualinvoke newBlocks.<org.apache.hadoop.hdfs.server.protocol.BlocksWithLocations: org.apache.hadoop.hdfs.server.protocol.BlocksWithLocations$BlockWithLocations[] getBlocks()>() AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack84 = lengthof $stack83 AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack85 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack84) AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" blocks.") AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack75.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack87) AT LINE 709 with ID [64b031bb-fbd3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = <org.apache.hadoop.hdfs.server.balancer.Dispatcher: org.apache.commons.logging.Log LOG> AT LINE 740 with ID [4406e4e8-9c57]
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Add ") AT LINE 740 with ID [4406e4e8-9c57]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 740 with ID [4406e4e8-9c57]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 740 with ID [4406e4e8-9c57]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 740 with ID [4406e4e8-9c57]
2020-08-25 12:10:05 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 740 with ID [4406e4e8-9c57]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack59.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack64) AT LINE 740 with ID [4406e4e8-9c57]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void storeApplication(org.apache.hadoop.yarn.api.records.ApplicationId,org.apache.hadoop.yarn.proto.YarnServerNodemanagerRecoveryProtos$ContainerManagerApplicationProto)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 622 with ID [f487620d-8072]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storeApplication: appId=") AT LINE 622 with ID [f487620d-8072]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 622 with ID [f487620d-8072]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", proto=") AT LINE 622 with ID [f487620d-8072]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(p) AT LINE 622 with ID [f487620d-8072]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 622 with ID [f487620d-8072]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 622 with ID [f487620d-8072]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack9 != -1 goto $stack10 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> at line 111 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack41 != 0 goto $stack4 = this.<org.apache.hadoop.net.unix.DomainSocketWatcher$NotificationHandler: org.apache.hadoop.net.unix.DomainSocketWatcher this$0> at line 111 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.net.unix.DomainSocketWatcher$NotificationHandler: boolean handle(org.apache.hadoop.net.unix.DomainSocket)> has 21 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> AT LINE 108 with ID [3f4434ec-bce1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 108 with ID [3f4434ec-bce1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": NotificationHandler: doing a read on ") AT LINE 108 with ID [3f4434ec-bce1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = sock.<org.apache.hadoop.net.unix.DomainSocket: int fd> AT LINE 108 with ID [3f4434ec-bce1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack34) AT LINE 108 with ID [3f4434ec-bce1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 108 with ID [3f4434ec-bce1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void trace(java.lang.String)>($stack36) AT LINE 108 with ID [3f4434ec-bce1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> AT LINE 113 with ID [df7d713c-3081]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 113 with ID [df7d713c-3081]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": NotificationHandler: got EOF on ") AT LINE 113 with ID [df7d713c-3081]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = sock.<org.apache.hadoop.net.unix.DomainSocket: int fd> AT LINE 113 with ID [df7d713c-3081]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack27) AT LINE 113 with ID [df7d713c-3081]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 113 with ID [df7d713c-3081]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void trace(java.lang.String)>($stack29) AT LINE 113 with ID [df7d713c-3081]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> AT LINE 118 with ID [4c238c39-4fd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 118 with ID [4c238c39-4fd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": NotificationHandler: read succeeded on ") AT LINE 118 with ID [4c238c39-4fd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = sock.<org.apache.hadoop.net.unix.DomainSocket: int fd> AT LINE 118 with ID [4c238c39-4fd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack16) AT LINE 118 with ID [4c238c39-4fd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 118 with ID [4c238c39-4fd4]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void trace(java.lang.String)>($stack18) AT LINE 118 with ID [4c238c39-4fd4]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.fs.contract.ContractTestUtils: void noteAction(java.lang.String)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = <org.apache.hadoop.fs.contract.ContractTestUtils: org.slf4j.Logger LOG> AT LINE 469 with ID [d272e902-5caa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("==============  ") AT LINE 469 with ID [d272e902-5caa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(action) AT LINE 469 with ID [d272e902-5caa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" =============") AT LINE 469 with ID [d272e902-5caa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 469 with ID [d272e902-5caa]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String)>($stack8) AT LINE 469 with ID [d272e902-5caa]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor: org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse allocate(org.apache.hadoop.yarn.api.protocolrecords.AllocateRequest)> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor: org.slf4j.Logger LOG> AT LINE 132 with ID [1ba5ac35-f3ed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = interfaceinvoke $stack3.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 132 with ID [1ba5ac35-f3ed]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack4 == 0 goto $stack5 = this.<org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor: org.apache.hadoop.yarn.api.ApplicationMasterProtocol rmClient> AT LINE 132 with ID [1ba5ac35-f3ed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor: org.slf4j.Logger LOG> AT LINE 133 with ID [1ba5ac35-f3ed]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>("Forwarding allocate request to the real YARN RM") AT LINE 133 with ID [1ba5ac35-f3ed]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSOutputStream: void computePacketChunkSize(int,int)> has 13 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = newarray (java.lang.Object)[4] AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.hdfs.DFSOutputStream: java.lang.String src> AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11[0] = $stack12 AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(chunkSize) AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11[1] = $stack16 AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = this.<org.apache.hadoop.hdfs.DFSOutputStream: int chunksPerPacket> AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack17) AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11[2] = $stack19 AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = this.<org.apache.hadoop.hdfs.DFSOutputStream: int packetSize> AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack20) AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11[3] = $stack22 AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("computePacketChunkSize: src={}, chunkSize={}, chunksPerPacket={}, packetSize={}", $stack11) AT LINE 391 with ID [9e66c320-f640]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: void storeOrUpdateRMDT(org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier,java.lang.Long,boolean)> has 13 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 717 with ID [a41cc891-e22a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing token to ") AT LINE 717 with ID [a41cc891-e22a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tokenKey) AT LINE 717 with ID [a41cc891-e22a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 717 with ID [a41cc891-e22a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack48.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack51) AT LINE 717 with ID [a41cc891-e22a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 729 with ID [a4e06286-97d5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing ") AT LINE 729 with ID [a4e06286-97d5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke tokenId.<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 729 with ID [a4e06286-97d5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack39) AT LINE 729 with ID [a4e06286-97d5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 729 with ID [a4e06286-97d5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RMDTSecretManagerRoot/RMDTSequentialNumber") AT LINE 729 with ID [a4e06286-97d5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 729 with ID [a4e06286-97d5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack43) AT LINE 729 with ID [a4e06286-97d5]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.CuratorService: void zkCreate(java.lang.String,org.apache.zookeeper.CreateMode,byte[],java.util.List)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 592 with ID [2ed1e872-ba23]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = newarray (java.lang.Object)[3] AT LINE 592 with ID [2ed1e872-ba23]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17[0] = fullpath AT LINE 592 with ID [2ed1e872-ba23]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = lengthof data AT LINE 592 with ID [2ed1e872-ba23]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack18) AT LINE 592 with ID [2ed1e872-ba23]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17[1] = $stack22 AT LINE 592 with ID [2ed1e872-ba23]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17[2] = $stack23 AT LINE 592 with ID [2ed1e872-ba23]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Creating {} with {} bytes of data and ACL {}", $stack17) AT LINE 592 with ID [2ed1e872-ba23]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack7 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> at line 1352 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReceiver$PacketResponder: void close()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 1348 with ID [994160ec-00c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver$PacketResponder: java.lang.String myString> AT LINE 1348 with ID [994160ec-00c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 1348 with ID [994160ec-00c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": closing") AT LINE 1348 with ID [994160ec-00c6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1348 with ID [994160ec-00c6]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 1348 with ID [994160ec-00c6]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack143 goto $stack68 = this.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager> at line 3514 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack153 goto (branch) at line 3498 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack62 == 0 goto (branch) at line 3472 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack55 == 0 goto truncatedBlock = virtualinvoke iFile.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getLastBlock()>() at line 3458 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack52 == 0 goto $stack53 = virtualinvoke iFile.<org.apache.hadoop.hdfs.server.namenode.INodeFile: boolean isUnderConstruction()>() at line 3454 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if deleteblock == 0 goto $stack225 = new java.io.IOException at line 3422 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack49 == 0 goto iFile = virtualinvoke this.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.INodeFile getBlockCollection(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)>(storedBlock) at line 3447 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if storedBlock != null goto oldGenerationStamp = virtualinvoke storedBlock.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getGenerationStamp()>() at line 3421 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void commitBlockSynchronization(org.apache.hadoop.hdfs.protocol.ExtendedBlock,long,long,boolean,boolean,org.apache.hadoop.hdfs.protocol.DatanodeID[],java.lang.String[])> has 22 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack234 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 3426 with ID [38341d7f-4cd0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack235 = virtualinvoke $stack233.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block (=") AT LINE 3426 with ID [38341d7f-4cd0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack236 = virtualinvoke $stack235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(oldBlock) AT LINE 3426 with ID [38341d7f-4cd0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack237 = virtualinvoke $stack236.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not found") AT LINE 3426 with ID [38341d7f-4cd0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack238 = virtualinvoke $stack237.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3426 with ID [38341d7f-4cd0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack234.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack238) AT LINE 3426 with ID [38341d7f-4cd0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack196 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 3461 with ID [72bafac7-d7a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack197 = virtualinvoke $stack195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected block (=") AT LINE 3461 with ID [72bafac7-d7a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack198 = virtualinvoke $stack197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(oldBlock) AT LINE 3461 with ID [72bafac7-d7a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack199 = virtualinvoke $stack198.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") since the file (=") AT LINE 3461 with ID [72bafac7-d7a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack200 = virtualinvoke iFile.<org.apache.hadoop.hdfs.server.namenode.INodeFile: java.lang.String getLocalName()>() AT LINE 3461 with ID [72bafac7-d7a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack201 = virtualinvoke $stack199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack200) AT LINE 3461 with ID [72bafac7-d7a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack202 = virtualinvoke $stack201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is not under construction") AT LINE 3461 with ID [72bafac7-d7a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack203 = virtualinvoke $stack202.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3461 with ID [72bafac7-d7a8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack196.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack203) AT LINE 3461 with ID [72bafac7-d7a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack164 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 3506 with ID [7d1d72dd-5a33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack165 = virtualinvoke $stack163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DatanodeDescriptor (=") AT LINE 3506 with ID [7d1d72dd-5a33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack166 = newtargets[i] AT LINE 3506 with ID [7d1d72dd-5a33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack167 = virtualinvoke $stack165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack166) AT LINE 3506 with ID [7d1d72dd-5a33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack168 = virtualinvoke $stack167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not found") AT LINE 3506 with ID [7d1d72dd-5a33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack169 = virtualinvoke $stack168.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3506 with ID [7d1d72dd-5a33]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack164.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack169) AT LINE 3506 with ID [7d1d72dd-5a33]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataNode: org.apache.hadoop.hdfs.protocol.BlockLocalPathInfo getBlockLocalPathInfo(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.security.token.Token)> has 17 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 1834 with ID [5129edf7-54b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getBlockLocalPathInfo successful block=") AT LINE 1834 with ID [5129edf7-54b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 1834 with ID [5129edf7-54b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" blockfile ") AT LINE 1834 with ID [5129edf7-54b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke info.<org.apache.hadoop.hdfs.protocol.BlockLocalPathInfo: java.lang.String getBlockPath()>() AT LINE 1834 with ID [5129edf7-54b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 1834 with ID [5129edf7-54b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" metafile ") AT LINE 1834 with ID [5129edf7-54b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke info.<org.apache.hadoop.hdfs.protocol.BlockLocalPathInfo: java.lang.String getMetaPath()>() AT LINE 1834 with ID [5129edf7-54b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32) AT LINE 1834 with ID [5129edf7-54b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1834 with ID [5129edf7-54b0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void trace(java.lang.String)>($stack34) AT LINE 1834 with ID [5129edf7-54b0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 1840 with ID [7395b7aa-7002]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getBlockLocalPathInfo for block=") AT LINE 1840 with ID [7395b7aa-7002]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 1840 with ID [7395b7aa-7002]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returning null") AT LINE 1840 with ID [7395b7aa-7002]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1840 with ID [7395b7aa-7002]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void trace(java.lang.String)>($stack21) AT LINE 1840 with ID [7395b7aa-7002]
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.namenode.SecondaryNameNode: void join()>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack24 = this.<org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager$EndpointShmManager: java.util.TreeMap notFull> at line 265 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager$EndpointShmManager: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot allocSlot(org.apache.hadoop.hdfs.net.DomainPeer,org.apache.commons.lang.mutable.MutableBoolean,java.lang.String,org.apache.hadoop.hdfs.ExtendedBlockId)> has 8 units and 4 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = staticinvoke <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: org.slf4j.Logger access$000()>() AT LINE 229 with ID [1e80a9d2-f915]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack37.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("{}: the DfsClientShmManager has been closed.", this) AT LINE 229 with ID [1e80a9d2-f915]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = staticinvoke <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: org.slf4j.Logger access$000()>() AT LINE 233 with ID [0f40c2c0-c700]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("{}: shared memory segment access is disabled.", this) AT LINE 233 with ID [0f40c2c0-c700]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = staticinvoke <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: org.slf4j.Logger access$000()>() AT LINE 244 with ID [5406f03d-0e03]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("{}: waiting for loading to finish...", this) AT LINE 244 with ID [5406f03d-0e03]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = staticinvoke <org.apache.hadoop.hdfs.shortcircuit.DfsClientShmManager: org.slf4j.Logger access$000()>() AT LINE 271 with ID [1f218b15-9528]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("{}: the UNIX domain socket associated with this short-circuit memory closed before we could make use of the shm.", this) AT LINE 271 with ID [1f218b15-9528]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack34 == 0 goto return instr#31 at line 1183 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: java.util.zip.Checksum computePartialChunkCrc(long,long)> has 18 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 1154 with ID [dfc06fa1-f6bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("computePartialChunkCrc for ") AT LINE 1154 with ID [dfc06fa1-f6bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 1154 with ID [dfc06fa1-f6bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack62) AT LINE 1154 with ID [dfc06fa1-f6bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": sizePartialChunk=") AT LINE 1154 with ID [dfc06fa1-f6bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(sizePartialChunk) AT LINE 1154 with ID [dfc06fa1-f6bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", block offset=") AT LINE 1154 with ID [dfc06fa1-f6bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(blkoff#2) AT LINE 1154 with ID [dfc06fa1-f6bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", metafile offset=") AT LINE 1154 with ID [dfc06fa1-f6bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(ckoff) AT LINE 1154 with ID [dfc06fa1-f6bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1154 with ID [dfc06fa1-f6bd]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack60.<org.slf4j.Logger: void debug(java.lang.String)>($stack70) AT LINE 1154 with ID [dfc06fa1-f6bd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 1178 with ID [715f805c-d240]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read in partial CRC chunk from disk for ") AT LINE 1178 with ID [715f805c-d240]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 1178 with ID [715f805c-d240]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack48) AT LINE 1178 with ID [715f805c-d240]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1178 with ID [715f805c-d240]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String)>($stack50) AT LINE 1178 with ID [715f805c-d240]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack58 == 0 goto (branch) at line 641 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = <org.apache.hadoop.hdfs.server.protocol.RemoteEditLog: com.google.common.base.Function GET_START_TXID> at line 640 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.JournalSet: org.apache.hadoop.hdfs.server.protocol.RemoteEditLogManifest getEditLogManifest(long)> has 16 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = <org.apache.hadoop.hdfs.server.namenode.JournalSet: org.apache.commons.logging.Log LOG> AT LINE 670 with ID [608b483a-fe8f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found gap in logs at ") AT LINE 670 with ID [608b483a-fe8f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(j#5) AT LINE 670 with ID [608b483a-fe8f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 670 with ID [608b483a-fe8f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not returning previous logs in manifest.") AT LINE 670 with ID [608b483a-fe8f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 670 with ID [608b483a-fe8f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack42) AT LINE 670 with ID [608b483a-fe8f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = interfaceinvoke startTxIds#21.<java.util.SortedSet: java.lang.Object first()>() AT LINE 674 with ID [UNKNOWN_ID, 608b483a-fe8f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = (java.lang.Long) $stack33 AT LINE 674 with ID [UNKNOWN_ID, 608b483a-fe8f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = <org.apache.hadoop.hdfs.server.namenode.JournalSet: org.apache.commons.logging.Log LOG> AT LINE 688 with ID [853f63a4-3a06]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Generated manifest for logs since ") AT LINE 688 with ID [853f63a4-3a06]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fromTxId) AT LINE 688 with ID [853f63a4-3a06]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") AT LINE 688 with ID [853f63a4-3a06]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(logGroup#23) AT LINE 688 with ID [853f63a4-3a06]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 688 with ID [853f63a4-3a06]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack49.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack54) AT LINE 688 with ID [853f63a4-3a06]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if reply == $stack138 goto i = i + -1 at line 1118 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack137 == 0 goto $stack138 = <org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status: org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status SUCCESS> at line 1110 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack91 == 0 goto $stack57 = this.<org.apache.hadoop.hdfs.DataStreamer$ResponseProcessor: org.apache.hadoop.hdfs.DataStreamer this$0> at line 1180 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack53 == 0 goto $stack54 = virtualinvoke i#22.<org.apache.hadoop.hdfs.DFSPacket: boolean isLastPacketInBlock()>() at line 1148 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DataStreamer$ResponseProcessor: void run()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack172 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 1095 with ID [6145c6c1-4752]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack172.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("DFSClient {}", ack) AT LINE 1095 with ID [6145c6c1-4752]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.client.AuthenticatedURL$AuthCookieHandler: void setAuthCookie(java.net.HttpCookie)> has 4 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> oldCookie = this.<org.apache.hadoop.security.authentication.client.AuthenticatedURL$AuthCookieHandler: java.net.HttpCookie authCookie> AT LINE 123 with ID [af5ca3ff-2e47]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = staticinvoke <org.apache.hadoop.security.authentication.client.AuthenticatedURL: org.slf4j.Logger access$000()>() AT LINE 153 with ID [af5ca3ff-2e47]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.security.authentication.client.AuthenticatedURL$AuthCookieHandler: java.net.HttpCookie authCookie> AT LINE 153 with ID [af5ca3ff-2e47]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Setting token value to {} ({})", $stack8, oldCookie) AT LINE 153 with ID [af5ca3ff-2e47]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void removeContainerQueued(org.apache.hadoop.yarn.api.records.ContainerId)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 377 with ID [ce7b48d3-395c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeContainerQueued: containerId=") AT LINE 377 with ID [ce7b48d3-395c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 377 with ID [ce7b48d3-395c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 377 with ID [ce7b48d3-395c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 377 with ID [ce7b48d3-395c]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: void addResourceRequest(org.apache.hadoop.yarn.api.records.Priority,java.lang.String,org.apache.hadoop.yarn.api.records.Resource,java.lang.String,org.apache.hadoop.yarn.api.records.ExecutionType)> has 24 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: org.apache.commons.logging.Log LOG> AT LINE 450 with ID [9462112f-c4aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added priority=") AT LINE 450 with ID [9462112f-c4aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(priority) AT LINE 450 with ID [9462112f-c4aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 450 with ID [9462112f-c4aa]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack61.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack64) AT LINE 450 with ID [9462112f-c4aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: org.apache.commons.logging.Log LOG> AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addResourceRequest: applicationId=") AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = this.<org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: org.apache.hadoop.yarn.api.records.ApplicationId applicationId> AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<org.apache.hadoop.yarn.api.records.ApplicationId: int getId()>() AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack21) AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" priority=") AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke priority.<org.apache.hadoop.yarn.api.records.Priority: int getPriority()>() AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24) AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resourceName=") AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourceName) AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numContainers=") AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke remoteRequest.<org.apache.hadoop.yarn.api.records.ResourceRequest: int getNumContainers()>() AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack29) AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #asks=") AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = this.<org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: java.util.Set ask> AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = interfaceinvoke $stack32.<java.util.Set: int size()>() AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack33) AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 475 with ID [f3d6ea49-cfa6]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeImpl: void handle(org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeEvent)> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeImpl: org.apache.commons.logging.Log LOG> AT LINE 659 with ID [581b99b8-ace8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ") AT LINE 659 with ID [581b99b8-ace8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = virtualinvoke event.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeEvent: org.apache.hadoop.yarn.api.records.NodeId getNodeId()>() AT LINE 659 with ID [581b99b8-ace8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8) AT LINE 659 with ID [581b99b8-ace8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ") AT LINE 659 with ID [581b99b8-ace8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke event.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeEvent: java.lang.Enum getType()>() AT LINE 659 with ID [581b99b8-ace8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack11) AT LINE 659 with ID [581b99b8-ace8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 659 with ID [581b99b8-ace8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 659 with ID [581b99b8-ace8]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack30 == 0 goto $stack31 = specialinvoke this.<org.apache.hadoop.yarn.webapp.Router: org.apache.hadoop.yarn.webapp.Router$Dest resolveAction(org.apache.hadoop.yarn.webapp.WebApp$HTTP,org.apache.hadoop.yarn.webapp.Router$Dest,java.lang.String)>(method, dest, path) at line 168 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if key != path goto $stack30 = staticinvoke <org.apache.hadoop.yarn.webapp.Router: boolean isGoodMatch(org.apache.hadoop.yarn.webapp.Router$Dest,java.lang.String)>(dest, path) at line 165 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack21 = specialinvoke this.<org.apache.hadoop.yarn.webapp.Router: org.apache.hadoop.yarn.webapp.Router$Dest resolveAction(org.apache.hadoop.yarn.webapp.WebApp$HTTP,org.apache.hadoop.yarn.webapp.Router$Dest,java.lang.String)>(method, dest, path) at line 181 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack17 == 0 goto slashPos = virtualinvoke key.<java.lang.String: int lastIndexOf(int)>(47) at line 180 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 == 0 goto key = "/" at line 179 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if lower != null goto $stack11 = interfaceinvoke lower.<java.util.Map$Entry: java.lang.Object getValue()>() at line 175 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack26 == 0 goto $stack9 = this.<org.apache.hadoop.yarn.webapp.Router: java.util.TreeMap routes> at line 176 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.webapp.Router: org.apache.hadoop.yarn.webapp.Router$Dest lookupRoute(org.apache.hadoop.yarn.webapp.WebApp$HTTP,java.lang.String)> has 11 units and 4 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = <org.apache.hadoop.yarn.webapp.Router: org.slf4j.Logger LOG> AT LINE 166 with ID [8c7a776d-a161]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = dest.<org.apache.hadoop.yarn.webapp.Router$Dest: java.lang.reflect.Method action> AT LINE 166 with ID [8c7a776d-a161]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("exact match for {}: {}", key, $stack34) AT LINE 166 with ID [8c7a776d-a161]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = <org.apache.hadoop.yarn.webapp.Router: org.slf4j.Logger LOG> AT LINE 169 with ID [656f2ff5-cce1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = dest.<org.apache.hadoop.yarn.webapp.Router$Dest: java.lang.reflect.Method action> AT LINE 169 with ID [656f2ff5-cce1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("prefix match2 for {}: {}", key, $stack32) AT LINE 169 with ID [656f2ff5-cce1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.webapp.Router: org.slf4j.Logger LOG> AT LINE 182 with ID [eb63c9b7-85c9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = interfaceinvoke lower.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 182 with ID [eb63c9b7-85c9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = dest.<org.apache.hadoop.yarn.webapp.Router$Dest: java.lang.reflect.Method action> AT LINE 182 with ID [eb63c9b7-85c9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("prefix match for {}: {}", $stack24, $stack25) AT LINE 182 with ID [eb63c9b7-85c9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke path.<java.lang.String: java.lang.String substring(int,int)>(0, slashPos) AT LINE 193 with ID [656f2ff5-cce1, 8c7a776d-a161, eb63c9b7-85c9, UNKNOWN_ID]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: void decrInactiveNMMetrics(org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: org.apache.commons.logging.Log LOG> AT LINE 175 with ID [0f5a1b87-dac2]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Unexpected node state") AT LINE 175 with ID [0f5a1b87-dac2]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack18 >= 0 goto $stack19 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.FSImageLoader: org.apache.commons.logging.Log LOG> at line 233 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.FSImageLoader: byte[][] loadINodeSection(java.io.InputStream)> has 4 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.FSImageLoader: org.apache.commons.logging.Log LOG> AT LINE 239 with ID [e13e4dd7-a481]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Sorting inodes") AT LINE 239 with ID [e13e4dd7-a481]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.FSImageLoader: org.apache.commons.logging.Log LOG> AT LINE 241 with ID [26a532a6-1720]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Finished sorting inodes") AT LINE 241 with ID [26a532a6-1720]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$#8 != null goto $stack14 = this.<org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: org.apache.hadoop.io.Text timelineService> at line 348 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 == 0 goto i$#8 = virtualinvoke this.<org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: org.apache.hadoop.security.token.Token getTimelineDelegationToken()>() at line 340 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack36 == 0 goto (branch) at line 342 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: void addTimelineDelegationToken(org.apache.hadoop.yarn.api.records.ContainerLaunchContext)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: org.apache.commons.logging.Log LOG> AT LINE 353 with ID [6914e7a1-14f5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Add timline delegation token into credentials: ") AT LINE 353 with ID [6914e7a1-14f5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(i$#8) AT LINE 353 with ID [6914e7a1-14f5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 353 with ID [6914e7a1-14f5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 353 with ID [6914e7a1-14f5]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack8 = <org.apache.hadoop.mapred.ClientCache: org.apache.commons.logging.Log LOG> at line 85 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.ClientCache: org.apache.hadoop.mapreduce.v2.api.MRClientProtocol instantiateHistoryProxy()> has 10 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.mapred.ClientCache: org.apache.commons.logging.Log LOG> AT LINE 88 with ID [e92b8599-a9ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to HistoryServer at: ") AT LINE 88 with ID [e92b8599-a9ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(serviceAddr) AT LINE 88 with ID [e92b8599-a9ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 88 with ID [e92b8599-a9ee]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 88 with ID [e92b8599-a9ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = <org.apache.hadoop.mapred.ClientCache: org.apache.commons.logging.Log LOG> AT LINE 90 with ID [460318a8-0c9b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connected to HistoryServer at: ") AT LINE 90 with ID [460318a8-0c9b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(serviceAddr) AT LINE 90 with ID [460318a8-0c9b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 90 with ID [460318a8-0c9b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 90 with ID [460318a8-0c9b]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if priority == null goto priority#3 = specialinvoke this.<org.apache.hadoop.ipc.DecayRpcScheduler: int computePriorityLevel(long)>(occurrences) at line 530 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.ipc.DecayRpcScheduler: int cachedOrComputedPriorityLevel(java.lang.Object)> has 9 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = <org.apache.hadoop.ipc.DecayRpcScheduler: org.slf4j.Logger LOG> AT LINE 531 with ID [f8bb8a8f-b401]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Cache priority for: {} with priority: {}", identity, priority) AT LINE 531 with ID [f8bb8a8f-b401]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = <org.apache.hadoop.ipc.DecayRpcScheduler: org.slf4j.Logger LOG> AT LINE 539 with ID [e9544f49-00f0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("compute priority for ") AT LINE 539 with ID [e9544f49-00f0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(identity) AT LINE 539 with ID [e9544f49-00f0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" priority ") AT LINE 539 with ID [e9544f49-00f0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(priority#3) AT LINE 539 with ID [e9544f49-00f0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 539 with ID [e9544f49-00f0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 539 with ID [e9544f49-00f0]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: void handle(org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerEvent)> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = <org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl: org.apache.commons.logging.Log LOG> AT LINE 472 with ID [0b741b04-b0c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ") AT LINE 472 with ID [0b741b04-b0c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke event.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerEvent: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 472 with ID [0b741b04-b0c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack28) AT LINE 472 with ID [0b741b04-b0c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ") AT LINE 472 with ID [0b741b04-b0c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke event.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerEvent: java.lang.Enum getType()>() AT LINE 472 with ID [0b741b04-b0c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31) AT LINE 472 with ID [0b741b04-b0c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 472 with ID [0b741b04-b0c7]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack33) AT LINE 472 with ID [0b741b04-b0c7]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: java.io.OutputStream createOutputStreamWithMode(org.apache.hadoop.fs.Path,boolean,org.apache.hadoop.fs.permission.FsPermission)> has 11 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: org.apache.commons.logging.Log LOG> AT LINE 365 with ID [33068f5c-4232]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = interfaceinvoke $stack8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 365 with ID [33068f5c-4232]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack9 == 0 goto success = 0 AT LINE 365 with ID [33068f5c-4232]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: org.apache.commons.logging.Log LOG> AT LINE 366 with ID [33068f5c-4232]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = newarray (java.lang.Object)[3] AT LINE 366 with ID [33068f5c-4232]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14[0] = f AT LINE 366 with ID [33068f5c-4232]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(append) AT LINE 366 with ID [33068f5c-4232]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14[1] = $stack18 AT LINE 366 with ID [33068f5c-4232]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14[2] = permission AT LINE 366 with ID [33068f5c-4232]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("EFS:createOutputStreamWithMode: %s %b %s", $stack14) AT LINE 366 with ID [33068f5c-4232]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 366 with ID [33068f5c-4232]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.net.unix.DomainSocketWatcher: void addNotificationSocket(java.util.TreeMap,org.apache.hadoop.net.unix.DomainSocketWatcher$FdSet)> has 14 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": adding notificationSocket ") AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = this.<org.apache.hadoop.net.unix.DomainSocketWatcher: org.apache.hadoop.net.unix.DomainSocket[] notificationSockets> AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = $stack25[1] AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = $stack26.<org.apache.hadoop.net.unix.DomainSocket: int fd> AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack27) AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", connected to ") AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.net.unix.DomainSocketWatcher: org.apache.hadoop.net.unix.DomainSocket[] notificationSockets> AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = $stack30[0] AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = $stack31.<org.apache.hadoop.net.unix.DomainSocket: int fd> AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack32) AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void trace(java.lang.String)>($stack34) AT LINE 557 with ID [769d634b-aa81]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.fs.loadGenerator.LoadGenerator$DFSClientThread: void nextOp()> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.fs.loadGenerator.LoadGenerator: org.slf4j.Logger LOG> AT LINE 265 with ID [542e7fd9-6c15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Thread ") AT LINE 265 with ID [542e7fd9-6c15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.fs.loadGenerator.LoadGenerator$DFSClientThread: int id> AT LINE 265 with ID [542e7fd9-6c15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack21) AT LINE 265 with ID [542e7fd9-6c15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" moving to index ") AT LINE 265 with ID [542e7fd9-6c15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i) AT LINE 265 with ID [542e7fd9-6c15]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 265 with ID [542e7fd9-6c15]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 265 with ID [542e7fd9-6c15]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult renameToInt(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,java.lang.String,boolean,org.apache.hadoop.fs.Options$Rename[])> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 239 with ID [b58efe24-4827]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.renameTo: with options - ") AT LINE 239 with ID [b58efe24-4827]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 239 with ID [b58efe24-4827]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 239 with ID [b58efe24-4827]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dst) AT LINE 239 with ID [b58efe24-4827]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 239 with ID [b58efe24-4827]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 239 with ID [b58efe24-4827]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if attemptState != null goto $stack12 = virtualinvoke attemptState.<org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationAttemptStateData: org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptState getState()>() at line 972 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: void recover(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState)> has 11 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.commons.logging.Log LOG> AT LINE 964 with ID [bb4e221f-40a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = interfaceinvoke $stack13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 964 with ID [bb4e221f-40a8]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack14 == 0 goto $stack15 = this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl$BoundedAppender diagnostics> AT LINE 964 with ID [bb4e221f-40a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.commons.logging.Log LOG> AT LINE 965 with ID [bb4e221f-40a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = newarray (java.lang.Object)[2] AT LINE 965 with ID [bb4e221f-40a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getAppAttemptId()>() AT LINE 965 with ID [bb4e221f-40a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59[0] = $stack63 AT LINE 965 with ID [bb4e221f-40a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack65 = virtualinvoke attemptState.<org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationAttemptStateData: org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptState getState()>() AT LINE 965 with ID [bb4e221f-40a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59[1] = $stack65 AT LINE 965 with ID [bb4e221f-40a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack66 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Recovering attempt: %s with final state = %s", $stack59) AT LINE 965 with ID [bb4e221f-40a8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack60.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack66) AT LINE 965 with ID [bb4e221f-40a8]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if user == null goto $stack13 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> at line 215 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack8 != 0 goto user = null at line 184 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.UserGroupInformation$HadoopLoginModule: boolean commit()> has 37 units and 7 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 180 with ID [13fc3234-897c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = interfaceinvoke $stack4.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 180 with ID [13fc3234-897c]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack5 == 0 goto $stack6 = this.<org.apache.hadoop.security.UserGroupInformation$HadoopLoginModule: javax.security.auth.Subject subject> AT LINE 180 with ID [13fc3234-897c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack81 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 181 with ID [13fc3234-897c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack81.<org.slf4j.Logger: void debug(java.lang.String)>("hadoop login commit") AT LINE 181 with ID [13fc3234-897c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack74 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 186 with ID [46eec62c-3a2a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack75 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using existing subject:") AT LINE 186 with ID [46eec62c-3a2a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack76 = this.<org.apache.hadoop.security.UserGroupInformation$HadoopLoginModule: javax.security.auth.Subject subject> AT LINE 186 with ID [46eec62c-3a2a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<javax.security.auth.Subject: java.util.Set getPrincipals()>() AT LINE 186 with ID [46eec62c-3a2a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack78 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack77) AT LINE 186 with ID [46eec62c-3a2a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 186 with ID [46eec62c-3a2a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack74.<org.slf4j.Logger: void debug(java.lang.String)>($stack79) AT LINE 186 with ID [46eec62c-3a2a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack67 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 195 with ID [45937fd3-83f7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using kerberos user:") AT LINE 195 with ID [45937fd3-83f7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(user) AT LINE 195 with ID [45937fd3-83f7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 195 with ID [45937fd3-83f7]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack67.<org.slf4j.Logger: void debug(java.lang.String)>($stack70) AT LINE 195 with ID [45937fd3-83f7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 211 with ID [50bddb73-65e5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using local user:") AT LINE 211 with ID [50bddb73-65e5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(user) AT LINE 211 with ID [50bddb73-65e5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 211 with ID [50bddb73-65e5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack54.<org.slf4j.Logger: void debug(java.lang.String)>($stack57) AT LINE 211 with ID [50bddb73-65e5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 217 with ID [ebbddd56-3aac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using user: \"") AT LINE 217 with ID [ebbddd56-3aac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(user) AT LINE 217 with ID [ebbddd56-3aac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" with name ") AT LINE 217 with ID [ebbddd56-3aac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = interfaceinvoke user.<java.security.Principal: java.lang.String getName()>() AT LINE 217 with ID [ebbddd56-3aac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack43) AT LINE 217 with ID [ebbddd56-3aac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 217 with ID [ebbddd56-3aac]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void debug(java.lang.String)>($stack45) AT LINE 217 with ID [ebbddd56-3aac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 227 with ID [b6ef8f65-578b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User entry: \"") AT LINE 227 with ID [b6ef8f65-578b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke envUser#12.<org.apache.hadoop.security.User: java.lang.String toString()>() AT LINE 227 with ID [b6ef8f65-578b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31) AT LINE 227 with ID [b6ef8f65-578b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"") AT LINE 227 with ID [b6ef8f65-578b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 227 with ID [b6ef8f65-578b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String)>($stack34) AT LINE 227 with ID [b6ef8f65-578b]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack33 == 0 goto exitmonitor i$ at line 1393 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: java.util.List getDatanodeListForReport(org.apache.hadoop.hdfs.protocol.HdfsConstants$DatanodeReportType)> has 15 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.commons.logging.Log LOG> AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getDatanodeListForReport with includedNodes = ") AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.blockmanagement.HostConfigManager hostConfigManager> AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<org.apache.hadoop.hdfs.server.blockmanagement.HostConfigManager: java.lang.Iterable getIncludes()>() AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack41) AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", excludedNodes = ") AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.hadoop.hdfs.server.blockmanagement.HostConfigManager hostConfigManager> AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<org.apache.hadoop.hdfs.server.blockmanagement.HostConfigManager: java.lang.Iterable getExcludes()>() AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack45) AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", foundNodes = ") AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(foundNodes) AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nodes = ") AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nodes) AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack51) AT LINE 1440 with ID [68d275f1-34aa]
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.server.resourcemanager.webapp.RMWebAppFilter: java.lang.String ahsRedirectPath(java.lang.String,org.apache.hadoop.yarn.server.resourcemanager.webapp.RMWebApp)>
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: void startDNandWait(org.apache.hadoop.fs.Path,boolean)> has 21 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 777 with ID [5e09b34a-3f87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Before next DN start: ") AT LINE 777 with ID [5e09b34a-3f87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.hadoop.hdfs.MiniDFSCluster cluster> AT LINE 777 with ID [5e09b34a-3f87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<org.apache.hadoop.hdfs.MiniDFSCluster: java.util.ArrayList getDataNodes()>() AT LINE 777 with ID [5e09b34a-3f87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.util.ArrayList: int size()>() AT LINE 777 with ID [5e09b34a-3f87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack36) AT LINE 777 with ID [5e09b34a-3f87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 777 with ID [5e09b34a-3f87]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack38) AT LINE 777 with ID [5e09b34a-3f87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke datanodes.<java.util.ArrayList: int size()>() AT LINE 785 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - 	 -> lastDn = $stack18 - 1 AT LINE 785 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 786 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New datanode ") AT LINE 786 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.hadoop.hdfs.MiniDFSCluster cluster> AT LINE 786 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<org.apache.hadoop.hdfs.MiniDFSCluster: java.util.ArrayList getDataNodes()>() AT LINE 786 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.util.ArrayList: java.lang.Object get(int)>(lastDn) AT LINE 786 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = (org.apache.hadoop.hdfs.server.datanode.DataNode) $stack24 AT LINE 786 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<org.apache.hadoop.hdfs.server.datanode.DataNode: java.lang.String getDisplayName()>() AT LINE 786 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 786 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has been started") AT LINE 786 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 786 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 786 with ID [d30ed417-1b7a]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService: void storeToken(org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier,java.lang.Long)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService: org.apache.commons.logging.Log LOG> AT LINE 215 with ID [5bf78371-59e9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing token ") AT LINE 215 with ID [5bf78371-59e9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke tokenId.<org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 215 with ID [5bf78371-59e9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack21) AT LINE 215 with ID [5bf78371-59e9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 215 with ID [5bf78371-59e9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 215 with ID [5bf78371-59e9]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack61 == 0 goto $stack62 = this.<org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory: org.apache.hadoop.conf.Configuration conf> at line 204 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack27 == 0 goto keyPasswordProperty = staticinvoke <org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory: java.lang.String resolvePropertyName(org.apache.hadoop.security.ssl.SSLFactory$Mode,java.lang.String)>(mode, "ssl.{0}.keystore.keypassword") at line 158 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack23 == 0 goto passwordProperty = staticinvoke <org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory: java.lang.String resolvePropertyName(org.apache.hadoop.security.ssl.SSLFactory$Mode,java.lang.String)>(mode, "ssl.{0}.keystore.password") at line 151 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory: void init(org.apache.hadoop.security.ssl.SSLFactory$Mode)> has 35 units and 5 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack126 = <org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory: org.slf4j.Logger LOG> AT LINE 170 with ID [8455aa8e-94ca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack127 = virtualinvoke mode.<org.apache.hadoop.security.ssl.SSLFactory$Mode: java.lang.String toString()>() AT LINE 170 with ID [8455aa8e-94ca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack128 = virtualinvoke $stack125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack127) AT LINE 170 with ID [8455aa8e-94ca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack129 = virtualinvoke $stack128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" KeyStore: ") AT LINE 170 with ID [8455aa8e-94ca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack130 = virtualinvoke $stack129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(keystoreLocation) AT LINE 170 with ID [8455aa8e-94ca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack131 = virtualinvoke $stack130.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 170 with ID [8455aa8e-94ca]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack126.<org.slf4j.Logger: void debug(java.lang.String)>($stack131) AT LINE 170 with ID [8455aa8e-94ca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack119 = <org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory: org.slf4j.Logger LOG> AT LINE 180 with ID [596bae28-34e6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack120 = virtualinvoke mode.<org.apache.hadoop.security.ssl.SSLFactory$Mode: java.lang.String toString()>() AT LINE 180 with ID [596bae28-34e6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack121 = virtualinvoke $stack118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack120) AT LINE 180 with ID [596bae28-34e6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack122 = virtualinvoke $stack121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Loaded KeyStore: ") AT LINE 180 with ID [596bae28-34e6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack123 = virtualinvoke $stack122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(keystoreLocation) AT LINE 180 with ID [596bae28-34e6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack124 = virtualinvoke $stack123.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 180 with ID [596bae28-34e6]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack119.<org.slf4j.Logger: void debug(java.lang.String)>($stack124) AT LINE 180 with ID [596bae28-34e6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack85 = <org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory: org.slf4j.Logger LOG> AT LINE 214 with ID [eb513d88-ada0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack86 = virtualinvoke mode.<org.apache.hadoop.security.ssl.SSLFactory$Mode: java.lang.String toString()>() AT LINE 214 with ID [eb513d88-ada0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack87 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack86) AT LINE 214 with ID [eb513d88-ada0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" TrustStore: ") AT LINE 214 with ID [eb513d88-ada0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(keystorePassword) AT LINE 214 with ID [eb513d88-ada0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 214 with ID [eb513d88-ada0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack85.<org.slf4j.Logger: void debug(java.lang.String)>($stack90) AT LINE 214 with ID [eb513d88-ada0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack74 = <org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory: org.slf4j.Logger LOG> AT LINE 223 with ID [c4e861a3-9d09]
2020-08-25 12:10:05 [INFO] - 	 -> $stack75 = virtualinvoke mode.<org.apache.hadoop.security.ssl.SSLFactory$Mode: java.lang.String toString()>() AT LINE 223 with ID [c4e861a3-9d09]
2020-08-25 12:10:05 [INFO] - 	 -> $stack76 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack75) AT LINE 223 with ID [c4e861a3-9d09]
2020-08-25 12:10:05 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Loaded TrustStore: ") AT LINE 223 with ID [c4e861a3-9d09]
2020-08-25 12:10:05 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(keystorePassword) AT LINE 223 with ID [c4e861a3-9d09]
2020-08-25 12:10:05 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 223 with ID [c4e861a3-9d09]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack74.<org.slf4j.Logger: void debug(java.lang.String)>($stack79) AT LINE 223 with ID [c4e861a3-9d09]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = <org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory: org.slf4j.Logger LOG> AT LINE 228 with ID [5d1f51cb-3bd0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The property \'") AT LINE 228 with ID [5d1f51cb-3bd0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(passwordProperty) AT LINE 228 with ID [5d1f51cb-3bd0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has not been set, ") AT LINE 228 with ID [5d1f51cb-3bd0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no TrustStore will be loaded") AT LINE 228 with ID [5d1f51cb-3bd0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 228 with ID [5d1f51cb-3bd0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack50.<org.slf4j.Logger: void debug(java.lang.String)>($stack55) AT LINE 228 with ID [5d1f51cb-3bd0]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeList: void removeVolume(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 324 with ID [bbea7927-9975]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Volume ") AT LINE 324 with ID [bbea7927-9975]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(target) AT LINE 324 with ID [bbea7927-9975]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist or is removed by others.") AT LINE 324 with ID [bbea7927-9975]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 324 with ID [bbea7927-9975]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 324 with ID [bbea7927-9975]
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.fs.FsShellPermissions$Chmod: void processPath(org.apache.hadoop.fs.shell.PathData)>
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl$TestSink: void init(org.apache.commons.configuration.SubsetConfiguration)> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = staticinvoke <org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl: org.slf4j.Logger access$000()>() AT LINE 88 with ID [d441e70e-59c9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = staticinvoke <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.String toString(org.apache.commons.configuration.Configuration)>(conf) AT LINE 88 with ID [d441e70e-59c9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String)>($stack3) AT LINE 88 with ID [d441e70e-59c9]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack32 > 0 goto $stack8 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: java.util.Map usersApplications> at line 879 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: void activateApplication(java.lang.String,org.apache.hadoop.yarn.api.records.ApplicationId)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.commons.logging.Log LOG> AT LINE 875 with ID [7d16e99b-c3c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ") AT LINE 875 with ID [7d16e99b-c3c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 875 with ID [7d16e99b-c3c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" added to activeUsers, currently: ") AT LINE 875 with ID [7d16e99b-c3c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: java.util.concurrent.atomic.AtomicInteger activeUsers> AT LINE 875 with ID [7d16e99b-c3c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack29) AT LINE 875 with ID [7d16e99b-c3c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 875 with ID [7d16e99b-c3c7]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack31) AT LINE 875 with ID [7d16e99b-c3c7]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack31 <= 0 goto (branch) at line 945 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack20 == 0 goto (branch) at line 939 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if highest != null goto $stack14 = new org.apache.hadoop.ipc.RPC$Server$VerProtocolImpl at line 946 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 == 0 goto (branch) at line 938 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.ipc.RPC$Server: org.apache.hadoop.ipc.RPC$Server$VerProtocolImpl getHighestSupportedProtocol(org.apache.hadoop.ipc.RPC$RpcKind,java.lang.String)> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = <org.apache.hadoop.ipc.RPC$Server: org.slf4j.Logger LOG> AT LINE 934 with ID [75b0be84-6c25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size of protoMap for ") AT LINE 934 with ID [75b0be84-6c25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(rpcKind) AT LINE 934 with ID [75b0be84-6c25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" =") AT LINE 934 with ID [75b0be84-6c25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke this.<org.apache.hadoop.ipc.RPC$Server: java.util.Map getProtocolImplMap(org.apache.hadoop.ipc.RPC$RpcKind)>(rpcKind) AT LINE 934 with ID [75b0be84-6c25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = interfaceinvoke $stack40.<java.util.Map: int size()>() AT LINE 934 with ID [75b0be84-6c25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack41) AT LINE 934 with ID [75b0be84-6c25]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 934 with ID [75b0be84-6c25]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void debug(java.lang.String)>($stack43) AT LINE 934 with ID [75b0be84-6c25]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: void setPermission(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)> has 9 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: org.apache.commons.logging.Log LOG> AT LINE 346 with ID [1c488ba6-bd58]
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = interfaceinvoke $stack3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 346 with ID [1c488ba6-bd58]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack4 == 0 goto $stack5 = virtualinvoke permission.<org.apache.hadoop.fs.permission.FsPermission: short toShort()>() AT LINE 346 with ID [1c488ba6-bd58]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: org.apache.commons.logging.Log LOG> AT LINE 347 with ID [1c488ba6-bd58]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = newarray (java.lang.Object)[2] AT LINE 347 with ID [1c488ba6-bd58]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6[0] = p AT LINE 347 with ID [1c488ba6-bd58]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6[1] = permission AT LINE 347 with ID [1c488ba6-bd58]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("EFS:setPermission: %s %s", $stack6) AT LINE 347 with ID [1c488ba6-bd58]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack8) AT LINE 347 with ID [1c488ba6-bd58]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if entities == null goto (branch) at line 1047 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack22 == 0 goto return returnEntities at line 1042 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.apache.hadoop.yarn.api.records.timeline.TimelineEntities getEntities(java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.String,java.lang.Long,org.apache.hadoop.yarn.server.timeline.NameValuePair,java.util.Collection,java.util.EnumSet,org.apache.hadoop.yarn.server.timeline.TimelineDataManager$CheckAcl)> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 1037 with ID [55e8908a-81f1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("getEntities type={} primary={}", entityType, primaryFilter) AT LINE 1037 with ID [55e8908a-81f1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 1043 with ID [c279ea17-75ff]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = interfaceinvoke store.<org.apache.hadoop.yarn.server.timeline.TimelineStore: java.lang.String getName()>() AT LINE 1043 with ID [c279ea17-75ff]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Try timeline store {} for the request", $stack26) AT LINE 1043 with ID [c279ea17-75ff]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void storeContainerDiagnostics(org.apache.hadoop.yarn.api.records.ContainerId,java.lang.StringBuilder)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 424 with ID [2f91fd34-9319]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storeContainerDiagnostics: containerId=") AT LINE 424 with ID [2f91fd34-9319]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 424 with ID [2f91fd34-9319]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", diagnostics=") AT LINE 424 with ID [2f91fd34-9319]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(diagnostics) AT LINE 424 with ID [2f91fd34-9319]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 424 with ID [2f91fd34-9319]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack23) AT LINE 424 with ID [2f91fd34-9319]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataNode: void <init>(org.apache.hadoop.conf.Configuration,java.util.List,org.apache.hadoop.hdfs.server.datanode.checker.StorageLocationChecker,org.apache.hadoop.hdfs.server.datanode.SecureDataNodeStarter$SecureResources)> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 489 with ID [7dae3d3d-83bf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.hdfs.server.datanode.DataNode: java.lang.String fileDescriptorPassingDisabledReason> AT LINE 489 with ID [7dae3d3d-83bf]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String)>($stack31) AT LINE 489 with ID [7dae3d3d-83bf]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: void addDatanode(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 10 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager: org.apache.commons.logging.Log LOG> AT LINE 708 with ID [dfe221f9-5125]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() AT LINE 708 with ID [dfe221f9-5125]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 708 with ID [dfe221f9-5125]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20) AT LINE 708 with ID [dfe221f9-5125]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".addDatanode: ") AT LINE 708 with ID [dfe221f9-5125]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("node ") AT LINE 708 with ID [dfe221f9-5125]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(node) AT LINE 708 with ID [dfe221f9-5125]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is added to datanodeMap.") AT LINE 708 with ID [dfe221f9-5125]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 708 with ID [dfe221f9-5125]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 708 with ID [dfe221f9-5125]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: void doTailEdits()> has 23 units and 4 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = <org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: org.apache.commons.logging.Log LOG> AT LINE 240 with ID [731e7f67-766d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lastTxnId: ") AT LINE 240 with ID [731e7f67-766d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(lastTxnId) AT LINE 240 with ID [731e7f67-766d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 240 with ID [731e7f67-766d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack59.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack62) AT LINE 240 with ID [731e7f67-766d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = <org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: org.apache.commons.logging.Log LOG> AT LINE 254 with ID [aa25e84e-6e37]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("edit streams to load from: ") AT LINE 254 with ID [aa25e84e-6e37]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = interfaceinvoke streams.<java.util.Collection: int size()>() AT LINE 254 with ID [aa25e84e-6e37]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack49) AT LINE 254 with ID [aa25e84e-6e37]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 254 with ID [aa25e84e-6e37]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack47.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack51) AT LINE 254 with ID [aa25e84e-6e37]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = <org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: org.apache.commons.logging.Log LOG> AT LINE 279 with ID [6e0868fa-cfd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = interfaceinvoke $stack39.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 279 with ID [6e0868fa-cfd4]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack40 == 0 goto $stack32 = ioe#3 cmp 0L AT LINE 279 with ID [6e0868fa-cfd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: org.apache.commons.logging.Log LOG> AT LINE 268 with ID [6e0868fa-cfd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = newarray (java.lang.Object)[2] AT LINE 268 with ID [6e0868fa-cfd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(ioe#3) AT LINE 268 with ID [6e0868fa-cfd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24[0] = $stack28 AT LINE 268 with ID [6e0868fa-cfd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(lastTxnId) AT LINE 268 with ID [6e0868fa-cfd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24[1] = $stack30 AT LINE 268 with ID [6e0868fa-cfd4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Loaded %d edits starting from txid %d ", $stack24) AT LINE 268 with ID [6e0868fa-cfd4]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack31) AT LINE 268 with ID [6e0868fa-cfd4]
2020-08-25 12:10:05 [INFO] - 	 -> goto [?= $stack32 = ioe#3 cmp 0L] AT LINE 268 with ID [6e0868fa-cfd4]
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.namenode.FSDirEncryptionZoneOp$EDEKCacheLoader: void run()>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if inodeIdPath#30 >= $stack91 goto (branch) at line 1813 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if inodeIdPath#30 >= cookieVerf#19 goto $stack62 = new org.apache.hadoop.nfs.nfs3.response.READDIRPLUS3Response$DirListPlus3 at line 1830 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if postOpDirAttr != null goto (branch) at line 1787 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if dotdotStatus != null goto dotdotFileId = virtualinvoke dotdotStatus.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: long getFileId()>() at line 1768 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack147 == 0 goto $stack149 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> at line 1742 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack44 != 0 goto cookieVerf = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.READDIRPLUS3Request: long getCookieVerf()>() at line 1735 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if dirStatus != null goto $stack44 = virtualinvoke dirStatus.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: boolean isDir()>() at line 1731 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if maxCount > 0 goto $stack40 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> at line 1712 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack38 > 0 goto maxCount = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.READDIRPLUS3Request: int getMaxCount()>() at line 1707 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack36 >= 0 goto $stack37 = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.READDIRPLUS3Request: int getDirCount()>() at line 1702 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.READDIRPLUS3Request: org.apache.hadoop.nfs.nfs3.request.READDIRPLUS3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 1688 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack29 != 0 goto $stack30 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache clientCache> at line 1683 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.READDIRPLUS3Response readdirplus(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 14 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack177 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> $stack178 = virtualinvoke $stack176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS READDIRPLUS fileId: ") AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> $stack179 = virtualinvoke e.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> $stack180 = virtualinvoke $stack178.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack179) AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> $stack181 = virtualinvoke $stack180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cookie: ") AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> $stack182 = virtualinvoke $stack181.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(cookie) AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> $stack183 = virtualinvoke $stack182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dirCount: ") AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> $stack184 = virtualinvoke $stack183.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(dirCount) AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> $stack185 = virtualinvoke $stack184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxCount: ") AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> $stack186 = virtualinvoke $stack185.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(maxCount) AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> $stack187 = virtualinvoke $stack186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> $stack188 = virtualinvoke $stack187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> $stack189 = virtualinvoke $stack188.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack177.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack189) AT LINE 1718 with ID [705ae6c4-5711]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.fs.shell.Command: void displayError(java.lang.Exception)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.fs.shell.Command: org.slf4j.Logger LOG> AT LINE 405 with ID [a9b7a79f-c6d2]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>(errorMessage) AT LINE 405 with ID [a9b7a79f-c6d2]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack4 == 0 goto return out at line 132 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.CryptoUtils: org.apache.hadoop.fs.FSDataOutputStream wrapIfNecessary(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FSDataOutputStream,boolean)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.mapreduce.CryptoUtils: org.apache.commons.logging.Log LOG> AT LINE 137 with ID [992c42eb-cebb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IV written to Stream [") AT LINE 137 with ID [992c42eb-cebb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64URLSafeString(byte[])>(iv) AT LINE 137 with ID [992c42eb-cebb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19) AT LINE 137 with ID [992c42eb-cebb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") AT LINE 137 with ID [992c42eb-cebb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 137 with ID [992c42eb-cebb]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 137 with ID [992c42eb-cebb]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack3 <= 0 goto $stack4 = this.<org.apache.hadoop.hdfs.server.namenode.FSImagePreTransactionalStorageInspector: org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory latestEditsSD> at line 262 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSImagePreTransactionalStorageInspector: java.util.List getLatestEditsFiles()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hdfs.server.namenode.FSImagePreTransactionalStorageInspector: org.apache.commons.logging.Log LOG> AT LINE 264 with ID [a5bac47b-2a61]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Name checkpoint time is newer than edits, not loading edits.") AT LINE 264 with ID [a5bac47b-2a61]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack42 == 0 goto $stack23 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: java.util.LinkedHashSet postponedMisreplicatedBlocks> at line 2277 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 != 0 goto $stack15 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.namenode.Namesystem namesystem> at line 2237 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void rescanPostponedMisreplicatedBlocks()> has 14 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack79 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 2252 with ID [e3806b8d-1962]
2020-08-25 12:10:05 [INFO] - 	 -> $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BLOCK* rescanPostponedMisreplicatedBlocks: Postponed mis-replicated block ") AT LINE 2252 with ID [e3806b8d-1962]
2020-08-25 12:10:05 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(b) AT LINE 2252 with ID [e3806b8d-1962]
2020-08-25 12:10:05 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer found ") AT LINE 2252 with ID [e3806b8d-1962]
2020-08-25 12:10:05 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in block map.") AT LINE 2252 with ID [e3806b8d-1962]
2020-08-25 12:10:05 [INFO] - 	 -> $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2252 with ID [e3806b8d-1962]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack79.<org.slf4j.Logger: void debug(java.lang.String)>($stack84) AT LINE 2252 with ID [e3806b8d-1962]
2020-08-25 12:10:05 [INFO] - 	 -> $stack69 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 2260 with ID [abdf5455-cb17]
2020-08-25 12:10:05 [INFO] - 	 -> $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BLOCK* rescanPostponedMisreplicatedBlocks: Re-scanned block ") AT LINE 2260 with ID [abdf5455-cb17]
2020-08-25 12:10:05 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(b) AT LINE 2260 with ID [abdf5455-cb17]
2020-08-25 12:10:05 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", result is ") AT LINE 2260 with ID [abdf5455-cb17]
2020-08-25 12:10:05 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(res) AT LINE 2260 with ID [abdf5455-cb17]
2020-08-25 12:10:05 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2260 with ID [abdf5455-cb17]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack69.<org.slf4j.Logger: void debug(java.lang.String)>($stack74) AT LINE 2260 with ID [abdf5455-cb17]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.CuratorService: java.util.List zkList(java.lang.String)> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 694 with ID [39e2ce82-48de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 694 with ID [39e2ce82-48de]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack7 == 0 goto $stack8 = this.<org.apache.hadoop.registry.client.impl.zk.CuratorService: org.apache.curator.framework.CuratorFramework curator> AT LINE 694 with ID [39e2ce82-48de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 695 with ID [39e2ce82-48de]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("ls {}", fullpath) AT LINE 695 with ID [39e2ce82-48de]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i > 2 goto i#21 = virtualinvoke batch.<org.apache.hadoop.hdfs.inotify.EventBatch: long getTxid()>() at line 687 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i > 5 goto i = 1 at line 679 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.TestDFSUpgradeFromImage: void testPreserveEditLogs()> has 7 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack117 = virtualinvoke batch.<org.apache.hadoop.hdfs.inotify.EventBatch: org.apache.hadoop.hdfs.inotify.Event[] getEvents()>() AT LINE 690 with ID [6eeca23a-fc75]
2020-08-25 12:10:05 [INFO] - 	 -> $stack118 = $stack117[0] AT LINE 690 with ID [6eeca23a-fc75]
2020-08-25 12:10:05 [INFO] - 	 -> $stack119 = virtualinvoke $stack118.<org.apache.hadoop.hdfs.inotify.Event: org.apache.hadoop.hdfs.inotify.Event$EventType getEventType()>() AT LINE 690 with ID [6eeca23a-fc75]
2020-08-25 12:10:05 [INFO] - 	 -> $stack120 = <org.apache.hadoop.hdfs.inotify.Event$EventType: org.apache.hadoop.hdfs.inotify.Event$EventType CREATE> AT LINE 690 with ID [6eeca23a-fc75]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack119 == $stack120 goto $stack121 = virtualinvoke batch.<org.apache.hadoop.hdfs.inotify.EventBatch: org.apache.hadoop.hdfs.inotify.Event[] getEvents()>() AT LINE 690 with ID [6eeca23a-fc75]
2020-08-25 12:10:05 [INFO] - 	 -> $stack173 = <org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.commons.logging.Log LOG> AT LINE 691 with ID [6eeca23a-fc75]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack173.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("") AT LINE 691 with ID [6eeca23a-fc75]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 != 0 goto virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: void handleContainerUpdates(org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ContainerUpdates)>(application, updateRequests) at line 825 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if application != null goto $stack13 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() at line 814 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.hadoop.yarn.server.resourcemanager.scheduler.Allocation allocate(org.apache.hadoop.yarn.api.records.ApplicationAttemptId,java.util.List,java.util.List,java.util.List,java.util.List,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ContainerUpdates)> has 26 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack72 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.commons.logging.Log LOG> AT LINE 848 with ID [129c15a9-7df5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack73 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: pre-update applicationAttemptId=") AT LINE 848 with ID [129c15a9-7df5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appAttemptId) AT LINE 848 with ID [129c15a9-7df5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" application=") AT LINE 848 with ID [129c15a9-7df5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack76 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 848 with ID [129c15a9-7df5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack76) AT LINE 848 with ID [129c15a9-7df5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 848 with ID [129c15a9-7df5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack72.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack78) AT LINE 848 with ID [129c15a9-7df5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.commons.logging.Log LOG> AT LINE 866 with ID [b9c9fef5-f17d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: post-update applicationAttemptId=") AT LINE 866 with ID [b9c9fef5-f17d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appAttemptId) AT LINE 866 with ID [b9c9fef5-f17d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #ask=") AT LINE 866 with ID [b9c9fef5-f17d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = interfaceinvoke ask.<java.util.List: int size()>() AT LINE 866 with ID [b9c9fef5-f17d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack49) AT LINE 866 with ID [b9c9fef5-f17d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reservation= ") AT LINE 866 with ID [b9c9fef5-f17d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.Resource getCurrentReservation()>() AT LINE 866 with ID [b9c9fef5-f17d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack52) AT LINE 866 with ID [b9c9fef5-f17d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 866 with ID [b9c9fef5-f17d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack45.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack54) AT LINE 866 with ID [b9c9fef5-f17d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.commons.logging.Log LOG> AT LINE 871 with ID [6fe74aab-cab2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preempting ") AT LINE 871 with ID [6fe74aab-cab2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = interfaceinvoke preemptionContainerIds#4.<java.util.Set: int size()>() AT LINE 871 with ID [6fe74aab-cab2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack58) AT LINE 871 with ID [6fe74aab-cab2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" container(s)") AT LINE 871 with ID [6fe74aab-cab2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 871 with ID [6fe74aab-cab2]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack56.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack61) AT LINE 871 with ID [6fe74aab-cab2]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if update != 0 goto $stack9 = this.<org.apache.hadoop.yarn.server.federation.store.impl.ZookeeperFederationStateStore: org.apache.hadoop.util.curator.ZKCuratorManager zkManager> at line 612 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.federation.store.impl.ZookeeperFederationStateStore: void put(java.lang.String,byte[],boolean)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = <org.apache.hadoop.yarn.server.federation.store.impl.ZookeeperFederationStateStore: org.slf4j.Logger LOG> AT LINE 611 with ID [f37c915f-a9cf]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("{} not created", znode) AT LINE 611 with ID [f37c915f-a9cf]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: boolean mkOneDirWithMode(org.apache.hadoop.fs.Path,java.io.File,org.apache.hadoop.fs.permission.FsPermission)> has 9 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: org.apache.commons.logging.Log LOG> AT LINE 322 with ID [feb1f4fa-2a84]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 322 with ID [feb1f4fa-2a84]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack7 == 0 goto ret = 0 AT LINE 322 with ID [feb1f4fa-2a84]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: org.apache.commons.logging.Log LOG> AT LINE 323 with ID [feb1f4fa-2a84]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = newarray (java.lang.Object)[2] AT LINE 323 with ID [feb1f4fa-2a84]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8[0] = path AT LINE 323 with ID [feb1f4fa-2a84]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8[1] = permission AT LINE 323 with ID [feb1f4fa-2a84]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("EFS:mkOneDirWithMode: %s %s", $stack8) AT LINE 323 with ID [feb1f4fa-2a84]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack10) AT LINE 323 with ID [feb1f4fa-2a84]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if future == null goto $stack53 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> at line 1398 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack32 == 0 goto getFromDataNodeCallable#12 = 0 at line 1381 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSInputStream: void hedgedFetchBlockByteRange(org.apache.hadoop.hdfs.protocol.LocatedBlock,long,long,byte[],int,java.util.Map)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1404 with ID [6ea8ad79-9245]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke conf.<org.apache.hadoop.hdfs.client.impl.DfsClientConf: long getHedgedReadThresholdMillis()>() AT LINE 1404 with ID [6ea8ad79-9245]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack55) AT LINE 1404 with ID [6ea8ad79-9245]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = chosenNode.<org.apache.hadoop.hdfs.DFSInputStream$DNAddrPair: org.apache.hadoop.hdfs.protocol.DatanodeInfo info> AT LINE 1404 with ID [6ea8ad79-9245]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack53.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Waited {}ms to read from {}; spawning hedged read", $stack56, $stack57) AT LINE 1404 with ID [6ea8ad79-9245]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack5 >= 0 goto return 0 at line 206 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: boolean tryCloseProxy(org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: org.apache.commons.logging.Log LOG> AT LINE 196 with ID [3be4a10f-e3e1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing proxy : ") AT LINE 196 with ID [3be4a10f-e3e1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = staticinvoke <org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData: java.lang.String access$300(org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData)>(proxy) AT LINE 196 with ID [3be4a10f-e3e1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 196 with ID [3be4a10f-e3e1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 196 with ID [3be4a10f-e3e1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 196 with ID [3be4a10f-e3e1]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo addBlock(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[])> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 460 with ID [5a8d5e2d-128b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* FSDirectory.addBlock: ") AT LINE 460 with ID [5a8d5e2d-128b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 460 with ID [5a8d5e2d-128b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ") AT LINE 460 with ID [5a8d5e2d-128b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 460 with ID [5a8d5e2d-128b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" block is added to the in-memory ") AT LINE 460 with ID [5a8d5e2d-128b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file system") AT LINE 460 with ID [5a8d5e2d-128b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 460 with ID [5a8d5e2d-128b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack30) AT LINE 460 with ID [5a8d5e2d-128b]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack5 == 0 goto return in at line 206 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.CryptoUtils: org.apache.hadoop.fs.FSDataInputStream wrapIfNecessary(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FSDataInputStream)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.mapreduce.CryptoUtils: org.apache.commons.logging.Log LOG> AT LINE 217 with ID [34bcb335-987a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IV read from Stream [") AT LINE 217 with ID [34bcb335-987a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64URLSafeString(byte[])>(iv) AT LINE 217 with ID [34bcb335-987a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 217 with ID [34bcb335-987a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") AT LINE 217 with ID [34bcb335-987a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 217 with ID [34bcb335-987a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 217 with ID [34bcb335-987a]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack35 == 0 goto $stack36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) at line 259 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack31 == 0 goto return 1 at line 266 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack28 == 0 goto $stack29 = virtualinvoke dnDescriptor.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.util.EnumSet getStorageTypes()>() at line 258 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack110 == 0 goto i = i + 1 at line 216 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack83 == 0 goto return 1 at line 230 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack98 goto $stack74 = this.<org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: java.util.List children> at line 215 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack51 == 0 goto (branch) at line 252 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack17 == 0 goto return 0 at line 246 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 == 0 goto prev#9 = virtualinvoke this.<org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: java.lang.String getNextAncestorName(org.apache.hadoop.net.Node)>(n) at line 209 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 != 0 goto dnDescriptor = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) n at line 204 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack11 != 0 goto $stack12 = n instanceof org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor at line 198 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: boolean add(org.apache.hadoop.net.Node)> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: org.slf4j.Logger LOG> AT LINE 197 with ID [8bc6ea21-7601]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = interfaceinvoke n.<org.apache.hadoop.net.Node: java.lang.String getName()>() AT LINE 197 with ID [8bc6ea21-7601]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("adding node {}", $stack10) AT LINE 197 with ID [8bc6ea21-7601]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: void updateToken(org.apache.hadoop.security.token.delegation.AbstractDelegationTokenIdentifier,org.apache.hadoop.security.token.delegation.AbstractDelegationTokenSecretManager$DelegationTokenInformation)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 826 with ID [81658418-4e26]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to update a non-existing znode ") AT LINE 826 with ID [81658418-4e26]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodeRemovePath) AT LINE 826 with ID [81658418-4e26]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 826 with ID [81658418-4e26]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 826 with ID [81658418-4e26]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl$5: int[] $SwitchMap$org$apache$hadoop$metrics2$impl$MetricsSystemImpl$InitMode> at line 156 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack26 != 0 goto $stack4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(prefix, "prefix") at line 159 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.MetricsSystem init(java.lang.String)>
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: void updateInfoCache(java.lang.Iterable)> has 4 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.slf4j.Logger LOG> AT LINE 246 with ID [cd2dfdb2-6f98]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("Updating info cache...") AT LINE 246 with ID [cd2dfdb2-6f98]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.slf4j.Logger LOG> AT LINE 248 with ID [714d1928-ef89]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>("Done") AT LINE 248 with ID [714d1928-ef89]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack36 == 0 goto $stack37 = virtualinvoke logLoader.<org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: long getLastAppliedTxId()>() at line 226 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack73 == 0 goto $stack23 = <org.apache.hadoop.hdfs.server.namenode.BackupImage: org.apache.commons.logging.Log LOG> at line 226 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.BackupImage: void applyEdits(long,int,byte[])> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = <org.apache.hadoop.hdfs.server.namenode.BackupImage: org.apache.commons.logging.Log LOG> AT LINE 216 with ID [170a1df8-2074]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data:") AT LINE 216 with ID [170a1df8-2074]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String byteToHexString(byte[])>(data) AT LINE 216 with ID [170a1df8-2074]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack53) AT LINE 216 with ID [170a1df8-2074]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 216 with ID [170a1df8-2074]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack51.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack55) AT LINE 216 with ID [170a1df8-2074]
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.security.authentication.util.KerberosName: void <clinit>()>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack25 == null goto $stack21 = <org.apache.hadoop.yarn.server.federation.store.impl.SQLFederationStateStore: org.slf4j.Logger LOG> at line 874 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.federation.store.impl.SQLFederationStateStore: org.apache.hadoop.yarn.server.federation.store.records.GetSubClusterPolicyConfigurationResponse getPolicyConfiguration(org.apache.hadoop.yarn.server.federation.store.records.GetSubClusterPolicyConfigurationRequest)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = <org.apache.hadoop.yarn.server.federation.store.impl.SQLFederationStateStore: org.slf4j.Logger LOG> AT LINE 856 with ID [caf51f7d-8125]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selected from StateStore the policy for the queue: ") AT LINE 856 with ID [caf51f7d-8125]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke subClusterPolicyConfiguration.<org.apache.hadoop.yarn.server.federation.store.records.SubClusterPolicyConfiguration: java.lang.String toString()>() AT LINE 856 with ID [caf51f7d-8125]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44) AT LINE 856 with ID [caf51f7d-8125]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 856 with ID [caf51f7d-8125]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>($stack46) AT LINE 856 with ID [caf51f7d-8125]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.security.LocalizerSecurityInfo$1: java.lang.Class value()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack1 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.security.LocalizerSecurityInfo: org.slf4j.Logger access$000()>() AT LINE 59 with ID [31e8b21c-8ac0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack1.<org.slf4j.Logger: void debug(java.lang.String)>("Using localizerTokenSecurityInfo") AT LINE 59 with ID [31e8b21c-8ac0]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack7 != 0 goto return at line 104 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.PeerCache: void <init>(int,long)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.PeerCache: org.slf4j.Logger LOG> AT LINE 103 with ID [61a64377-55dc]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>("SocketCache disabled.") AT LINE 103 with ID [61a64377-55dc]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.web.SimpleHttpProxyHandler$Forwarder: void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.server.datanode.web.SimpleHttpProxyHandler: org.apache.commons.logging.Log LOG> AT LINE 93 with ID [82d93930-ecca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy for ") AT LINE 93 with ID [82d93930-ecca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = this.<org.apache.hadoop.hdfs.server.datanode.web.SimpleHttpProxyHandler$Forwarder: java.lang.String uri> AT LINE 93 with ID [82d93930-ecca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6) AT LINE 93 with ID [82d93930-ecca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed. cause: ") AT LINE 93 with ID [82d93930-ecca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 93 with ID [82d93930-ecca]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($stack9, cause) AT LINE 93 with ID [82d93930-ecca]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack65 >= $stack66 goto $stack63 = virtualinvoke samples.<java.util.ArrayList: java.lang.Object[] toArray()>() at line 241 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack26 goto i = 0 at line 206 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.partition.InputSampler$RandomSampler: java.lang.Object[] getSample(org.apache.hadoop.mapreduce.InputFormat,org.apache.hadoop.mapreduce.Job)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = staticinvoke <org.apache.hadoop.mapreduce.lib.partition.InputSampler: org.apache.commons.logging.Log access$000()>() AT LINE 204 with ID [1b4b2a55-bb50]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seed: ") AT LINE 204 with ID [1b4b2a55-bb50]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(seed) AT LINE 204 with ID [1b4b2a55-bb50]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 204 with ID [1b4b2a55-bb50]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack25) AT LINE 204 with ID [1b4b2a55-bb50]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack28 == 0 goto $stack29 = this.<org.apache.hadoop.hdfs.server.federation.router.ConnectionManager$CleanupTask: org.apache.hadoop.hdfs.server.federation.router.ConnectionManager this$0> at line 379 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack21 == 0 goto $stack22 = this.<org.apache.hadoop.hdfs.server.federation.router.ConnectionManager$CleanupTask: org.apache.hadoop.hdfs.server.federation.router.ConnectionManager this$0> at line 354 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if isStale == 0 goto $stack44 = staticinvoke <org.apache.hadoop.hdfs.server.federation.router.ConnectionManager: org.slf4j.Logger access$400()>() at line 370 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.ConnectionManager$CleanupTask: void run()> has 4 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = staticinvoke <org.apache.hadoop.hdfs.server.federation.router.ConnectionManager: org.slf4j.Logger access$400()>() AT LINE 361 with ID [2e42d98f-cefb]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack51.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Closing and removing stale pool {}", pool) AT LINE 361 with ID [2e42d98f-cefb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = staticinvoke <org.apache.hadoop.hdfs.server.federation.router.ConnectionManager: org.slf4j.Logger access$400()>() AT LINE 367 with ID [25e9ce43-8caa]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Cleaning up {}", pool) AT LINE 367 with ID [25e9ce43-8caa]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.registry.server.services.RegistryAdminService: java.util.concurrent.Future submit(java.util.concurrent.Callable)> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> AT LINE 160 with ID [051e97c2-c780]
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = interfaceinvoke $stack2.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 160 with ID [051e97c2-c780]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack3 == 0 goto $stack4 = virtualinvoke this.<org.apache.hadoop.registry.server.services.RegistryAdminService: java.util.concurrent.ExecutorService getExecutor()>() AT LINE 160 with ID [051e97c2-c780]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> AT LINE 161 with ID [051e97c2-c780]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Submitting {}", callable) AT LINE 161 with ID [051e97c2-c780]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack306 == 0 goto $stack307 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl: org.slf4j.Logger access$100()>() at line 399 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack39 != 0 goto return at line 619 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl$MonitoringThread: void run()> has 68 units and 19 lines
2020-08-25 12:10:05 [INFO] - 	 -> tmp = $stack301 AT LINE 398 with ID [90e4fc61-f8c5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack302 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl$MonitoringThread: org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl this$0> AT LINE 399 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack303 = $stack302.<org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl: java.util.Map trackingContainers> AT LINE 399 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack304 = interfaceinvoke $stack303.<java.util.Map: java.util.Collection values()>() AT LINE 399 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> i$ = interfaceinvoke $stack304.<java.util.Collection: java.util.Iterator iterator()>() AT LINE 399 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack306 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>() AT LINE 399 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> if $stack306 == 0 goto $stack307 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl: org.slf4j.Logger access$100()>() AT LINE 399 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack324 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 418 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> p = (org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl$ProcessTreeInfo) $stack324 AT LINE 418 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack325 = virtualinvoke p.<org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl$ProcessTreeInfo: java.lang.String getPID()>() AT LINE 400 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke tmp.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack325) AT LINE 400 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke tmp.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 401 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> goto [?= $stack306 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] AT LINE 402 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack307 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl: org.slf4j.Logger access$100()>() AT LINE 403 with ID [90e4fc61-f8c5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack309 = virtualinvoke $stack308.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current ProcessTree list : ") AT LINE 403 with ID [90e4fc61-f8c5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack311 = virtualinvoke tmp.<java.lang.StringBuilder: int length()>() AT LINE 403 with ID [90e4fc61-f8c5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack312 = virtualinvoke tmp.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, $stack311) AT LINE 403 with ID [90e4fc61-f8c5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack313 = virtualinvoke $stack309.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack312) AT LINE 403 with ID [90e4fc61-f8c5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack314 = virtualinvoke $stack313.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") AT LINE 403 with ID [90e4fc61-f8c5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack315 = virtualinvoke $stack314.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 403 with ID [90e4fc61-f8c5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack307.<org.slf4j.Logger: void debug(java.lang.String)>($stack315) AT LINE 403 with ID [90e4fc61-f8c5]
2020-08-25 12:10:05 [INFO] - 	 -> i$#4 = 0L AT LINE 414 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> pmemByAllContainers = 0L AT LINE 415 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> cpuUsagePercentPerCoreByAllContainers = 0L AT LINE 416 with ID [UNKNOWN_ID, bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> cpuUsageTotalCoresByAllContainers = 0L AT LINE 417 with ID [UNKNOWN_ID, bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack287 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl: org.slf4j.Logger access$100()>() AT LINE 433 with ID [67a125a3-8c05]
2020-08-25 12:10:05 [INFO] - 	 -> $stack289 = virtualinvoke $stack288.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tracking ProcessTree ") AT LINE 433 with ID [67a125a3-8c05]
2020-08-25 12:10:05 [INFO] - 	 -> $stack290 = virtualinvoke $stack289.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(pId) AT LINE 433 with ID [67a125a3-8c05]
2020-08-25 12:10:05 [INFO] - 	 -> $stack291 = virtualinvoke $stack290.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for the first time") AT LINE 433 with ID [67a125a3-8c05]
2020-08-25 12:10:05 [INFO] - 	 -> $stack292 = virtualinvoke $stack291.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 433 with ID [67a125a3-8c05]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack287.<org.slf4j.Logger: void debug(java.lang.String)>($stack292) AT LINE 433 with ID [67a125a3-8c05]
2020-08-25 12:10:05 [INFO] - 	 -> $stack221 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl: org.slf4j.Logger access$100()>() AT LINE 470 with ID [e0227ff3-0516]
2020-08-25 12:10:05 [INFO] - 	 -> $stack223 = virtualinvoke $stack222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constructing ProcessTree for : PID = ") AT LINE 470 with ID [e0227ff3-0516]
2020-08-25 12:10:05 [INFO] - 	 -> $stack224 = virtualinvoke $stack223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(pId) AT LINE 470 with ID [e0227ff3-0516]
2020-08-25 12:10:05 [INFO] - 	 -> $stack225 = virtualinvoke $stack224.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ContainerId = ") AT LINE 470 with ID [e0227ff3-0516]
2020-08-25 12:10:05 [INFO] - 	 -> $stack226 = virtualinvoke $stack225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 470 with ID [e0227ff3-0516]
2020-08-25 12:10:05 [INFO] - 	 -> $stack227 = virtualinvoke $stack226.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 470 with ID [e0227ff3-0516]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack221.<org.slf4j.Logger: void debug(java.lang.String)>($stack227) AT LINE 470 with ID [e0227ff3-0516]
2020-08-25 12:10:05 [INFO] - 	 -> $stack196 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl: org.slf4j.Logger access$1200()>() AT LINE 504 with ID [02cd2bb0-68a2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack198 = newarray (java.lang.Object)[2] AT LINE 504 with ID [02cd2bb0-68a2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack198[0] = pId AT LINE 504 with ID [02cd2bb0-68a2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack201 = virtualinvoke containerId.<org.apache.hadoop.yarn.api.records.ContainerId: java.lang.String toString()>() AT LINE 504 with ID [02cd2bb0-68a2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack198[1] = $stack201 AT LINE 504 with ID [02cd2bb0-68a2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack202 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Memory usage of ProcessTree %s for container-id %s: ", $stack198) AT LINE 504 with ID [02cd2bb0-68a2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack203 = virtualinvoke $stack197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack202) AT LINE 504 with ID [02cd2bb0-68a2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack204 = specialinvoke this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl$MonitoringThread: java.lang.String formatUsageString(long,long,long,long)>(usageMetrics#44, vmemLimit, currentPmemUsage, pmemLimit) AT LINE 504 with ID [02cd2bb0-68a2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack205 = virtualinvoke $stack203.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack204) AT LINE 504 with ID [02cd2bb0-68a2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack206 = virtualinvoke $stack205.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 504 with ID [02cd2bb0-68a2]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack196.<org.slf4j.Logger: void debug(java.lang.String)>($stack206) AT LINE 504 with ID [02cd2bb0-68a2]
2020-08-25 12:10:05 [INFO] - 	 -> i$#4 = i$#4 + usageMetrics#44 AT LINE 561 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> pmemByAllContainers = pmemByAllContainers + currentPmemUsage AT LINE 562 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack113 = (float) cpuUsagePercentPerCoreByAllContainers AT LINE 564 with ID [UNKNOWN_ID, bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack114 = $stack113 + cpuUsagePercentPerCore AT LINE 564 with ID [UNKNOWN_ID, bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> cpuUsagePercentPerCoreByAllContainers = (long) $stack114 AT LINE 564 with ID [UNKNOWN_ID, bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack115 = (float) cpuUsageTotalCoresByAllContainers AT LINE 565 with ID [UNKNOWN_ID, bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack116 = $stack115 + cpuUsagePercentPerCore AT LINE 565 with ID [UNKNOWN_ID, bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> cpuUsageTotalCoresByAllContainers = (long) $stack116 AT LINE 565 with ID [UNKNOWN_ID, bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl: org.slf4j.Logger access$100()>() AT LINE 600 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total Resource Usage stats in NM by all containers : Virtual Memory= ") AT LINE 600 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(i$#4) AT LINE 600 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Physical Memory= ") AT LINE 600 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(pmemByAllContainers) AT LINE 600 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Total CPU usage= ") AT LINE 600 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(cpuUsageTotalCoresByAllContainers) AT LINE 600 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Total CPU(% per core) usage") AT LINE 600 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(cpuUsagePercentPerCoreByAllContainers) AT LINE 600 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 600 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack54.<org.slf4j.Logger: void debug(java.lang.String)>($stack64) AT LINE 600 with ID [bdaabee5-6d10]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack5 == 0 goto saslResponse = specialinvoke this.<org.apache.hadoop.ipc.Server$Connection: org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto processSaslMessage(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto)>(saslMessage) at line 1788 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$Connection: void saslProcess(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto)> has 13 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 1812 with ID [ee80a6ac-0034]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SASL server context established. Negotiated QoP is ") AT LINE 1812 with ID [ee80a6ac-0034]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = this.<org.apache.hadoop.ipc.Server$Connection: javax.security.sasl.SaslServer saslServer> AT LINE 1812 with ID [ee80a6ac-0034]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = interfaceinvoke $stack49.<javax.security.sasl.SaslServer: java.lang.Object getNegotiatedProperty(java.lang.String)>("javax.security.sasl.qop") AT LINE 1812 with ID [ee80a6ac-0034]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack50) AT LINE 1812 with ID [ee80a6ac-0034]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1812 with ID [ee80a6ac-0034]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void debug(java.lang.String)>($stack52) AT LINE 1812 with ID [ee80a6ac-0034]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 1817 with ID [f5b0bc49-cab7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SASL server successfully authenticated client: ") AT LINE 1817 with ID [f5b0bc49-cab7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = this.<org.apache.hadoop.ipc.Server$Connection: org.apache.hadoop.security.UserGroupInformation user> AT LINE 1817 with ID [f5b0bc49-cab7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack38) AT LINE 1817 with ID [f5b0bc49-cab7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1817 with ID [f5b0bc49-cab7]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void debug(java.lang.String)>($stack40) AT LINE 1817 with ID [f5b0bc49-cab7]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack17 == 0 goto return pluginList at line 235 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: java.util.List loadPlugIns(org.apache.hadoop.conf.Configuration)> has 6 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 236 with ID [d4e5b9c5-c8cf]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Trying to load plugin class {}", name) AT LINE 236 with ID [d4e5b9c5-c8cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 241 with ID [a2dda1c5-ba0f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Load plugin {} with classpath: {}", name, pluginClasspath) AT LINE 241 with ID [a2dda1c5-ba0f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 247 with ID [92077ba0-b49c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>("Load plugin class with system classpath") AT LINE 247 with ID [92077ba0-b49c]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testFinalizedRwrReplicas()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 389 with ID [7e925e5c-ec47]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 389 with ID [7e925e5c-ec47]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 389 with ID [7e925e5c-ec47]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack40) AT LINE 389 with ID [7e925e5c-ec47]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 389 with ID [7e925e5c-ec47]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack42) AT LINE 389 with ID [7e925e5c-ec47]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack6 != 0 goto $stack7 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> at line 1119 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: boolean assignReservedContainer(org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 1129 with ID [5814e48f-b569]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to fulfill reservation for application ") AT LINE 1129 with ID [5814e48f-b569]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 1129 with ID [5814e48f-b569]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack18) AT LINE 1129 with ID [5814e48f-b569]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on node: ") AT LINE 1129 with ID [5814e48f-b569]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(node) AT LINE 1129 with ID [5814e48f-b569]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1129 with ID [5814e48f-b569]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 1129 with ID [5814e48f-b569]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack30 == 0 goto return at line 3441 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack28 == 0 goto i$ = interfaceinvoke toCorrupt.<java.util.Collection: java.util.Iterator iterator()>() at line 3436 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack24 == 0 goto $stack25 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long maxNumBlocksToLog> at line 3428 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack22 == 0 goto i$#6 = 0L at line 3424 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack68 <= 1 goto i$ = interfaceinvoke toUC.<java.util.Collection: java.util.Iterator iterator()>() at line 3426 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void processAndHandleReportedBlock(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.server.common.HdfsServerConstants$ReplicaState,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 16 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long maxNumBlocksToLog> AT LINE 3432 with ID [e1f2eb8b-d9aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = i$#6 cmp $stack25 AT LINE 3432 with ID [e1f2eb8b-d9aa]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack26 <= 0 goto i$ = interfaceinvoke toInvalidate.<java.util.Collection: java.util.Iterator iterator()>() AT LINE 3432 with ID [e1f2eb8b-d9aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 3433 with ID [e1f2eb8b-d9aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: long maxNumBlocksToLog> AT LINE 3433 with ID [e1f2eb8b-d9aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack41) AT LINE 3433 with ID [e1f2eb8b-d9aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(i$#6) AT LINE 3433 with ID [e1f2eb8b-d9aa]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* addBlock: logged info for {} of {} reported.", $stack44, $stack45) AT LINE 3433 with ID [e1f2eb8b-d9aa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 3437 with ID [83ccd84e-d55c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = newarray (java.lang.Object)[3] AT LINE 3437 with ID [83ccd84e-d55c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34[0] = b#15 AT LINE 3437 with ID [83ccd84e-d55c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34[1] = node AT LINE 3437 with ID [83ccd84e-d55c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke b#15.<org.apache.hadoop.hdfs.protocol.Block: long getNumBytes()>() AT LINE 3437 with ID [83ccd84e-d55c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack38) AT LINE 3437 with ID [83ccd84e-d55c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34[2] = $stack39 AT LINE 3437 with ID [83ccd84e-d55c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* addBlock: block {} on node {} size {} does not belong to any file", $stack34) AT LINE 3437 with ID [83ccd84e-d55c]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 <= 0 goto virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ReservationQueue: void setCapacity(float)>(capacity) at line 92 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ReservationQueue: void setEntitlement(org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.QueueEntitlement)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ReservationQueue: org.slf4j.Logger LOG> AT LINE 101 with ID [fc120872-590c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("successfully changed to ") AT LINE 101 with ID [fc120872-590c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(capacity) AT LINE 101 with ID [fc120872-590c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for queue ") AT LINE 101 with ID [fc120872-590c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ReservationQueue: java.lang.String getQueueName()>() AT LINE 101 with ID [fc120872-590c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 101 with ID [fc120872-590c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 101 with ID [fc120872-590c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String)>($stack28) AT LINE 101 with ID [fc120872-590c]
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.fs.FileUtil: int chmod(java.lang.String,java.lang.String,boolean)>
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: void addApplicationAttempt(org.apache.hadoop.yarn.api.records.ApplicationAttemptId,boolean,boolean)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.commons.logging.Log LOG> AT LINE 543 with ID [2664fa91-98f5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationAttemptId) AT LINE 543 with ID [2664fa91-98f5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is recovering. Skipping notifying ATTEMPT_ADDED") AT LINE 543 with ID [2664fa91-98f5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 543 with ID [2664fa91-98f5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack41.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack44) AT LINE 543 with ID [2664fa91-98f5]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack17 == 0 goto (branch) at line 204 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack9 == 0 goto return at line 200 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.IntraQueueCandidatesSelector: void initializeUsageAndUserLimitForCompute(org.apache.hadoop.yarn.api.records.Resource,java.lang.String,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue,java.util.Map)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.IntraQueueCandidatesSelector: org.apache.commons.logging.Log LOG> AT LINE 205 with ID [340c65dd-64d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rolling resource usage for user:") AT LINE 205 with ID [340c65dd-64d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 205 with ID [340c65dd-64d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is : ") AT LINE 205 with ID [340c65dd-64d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = interfaceinvoke rollingResourceUsagePerUser.<java.util.Map: java.lang.Object get(java.lang.Object)>(user) AT LINE 205 with ID [340c65dd-64d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24) AT LINE 205 with ID [340c65dd-64d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 205 with ID [340c65dd-64d9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 205 with ID [340c65dd-64d9]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.federation.store.utils.FederationStateStoreUtils: void setPassword(com.zaxxer.hikari.HikariDataSource,java.lang.String)> has 4 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.server.federation.store.utils.FederationStateStoreUtils: org.slf4j.Logger LOG> AT LINE 209 with ID [6c5f0fd6-9cd7]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("Setting non NULL Credentials for Store connection") AT LINE 209 with ID [6c5f0fd6-9cd7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = <org.apache.hadoop.yarn.server.federation.store.utils.FederationStateStoreUtils: org.slf4j.Logger LOG> AT LINE 211 with ID [0609674f-0718]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String)>("NULL Credentials specified for Store connection, so ignoring") AT LINE 211 with ID [0609674f-0718]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if cklen == $stack62 goto $stack9 = this.<org.apache.hadoop.hdfs.DFSOutputStream: org.apache.hadoop.hdfs.DFSPacket currentPacket> at line 433 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if len <= $stack8 goto (branch) at line 407 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSOutputStream: void writeChunk(byte[],int,int,byte[],int,int)> has 19 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = newarray (java.lang.Object)[5] AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = this.<org.apache.hadoop.hdfs.DFSOutputStream: org.apache.hadoop.hdfs.DFSPacket currentPacket> AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack32.<org.apache.hadoop.hdfs.DFSPacket: long getSeqno()>() AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack36) AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31[0] = $stack37 AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = this.<org.apache.hadoop.hdfs.DFSOutputStream: java.lang.String src> AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31[1] = $stack38 AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = this.<org.apache.hadoop.hdfs.DFSOutputStream: int packetSize> AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack39) AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31[2] = $stack41 AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = this.<org.apache.hadoop.hdfs.DFSOutputStream: int chunksPerPacket> AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack42) AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31[3] = $stack44 AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke this.<org.apache.hadoop.hdfs.DFSOutputStream: org.apache.hadoop.hdfs.DataStreamer getStreamer()>() AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<org.apache.hadoop.hdfs.DataStreamer: long getBytesCurBlock()>() AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack47) AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31[4] = $stack48 AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("DFSClient writeChunk allocating new packet seqno={}, src={}, packetSize={}, chunksPerPacket={}, bytesCurBlock={}", $stack31) AT LINE 420 with ID [70c0dc68-62db]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack16 = new org.apache.hadoop.mapreduce.lib.db.DataDrivenDBRecordReader at line 288 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.db.DataDrivenDBInputFormat: org.apache.hadoop.mapreduce.RecordReader createDBRecordReader(org.apache.hadoop.mapreduce.lib.db.DBInputFormat$DBInputSplit,org.apache.hadoop.conf.Configuration)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = <org.apache.hadoop.mapreduce.lib.db.DataDrivenDBInputFormat: org.apache.commons.logging.Log LOG> AT LINE 284 with ID [b6056474-d888]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating db record reader for db product: ") AT LINE 284 with ID [b6056474-d888]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dbProductName) AT LINE 284 with ID [b6056474-d888]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 284 with ID [b6056474-d888]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 284 with ID [b6056474-d888]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack8 != 0 goto return path at line 469 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandlerImpl: java.lang.String createCGroup(org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandler$CGroupController,java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandlerImpl: org.slf4j.Logger LOG> AT LINE 466 with ID [46f4af96-4cc3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createCgroup: ") AT LINE 466 with ID [46f4af96-4cc3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 466 with ID [46f4af96-4cc3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 466 with ID [46f4af96-4cc3]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 466 with ID [46f4af96-4cc3]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack8 == 0 goto return response at line 1354 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.applications.distributedshell.ApplicationMaster: org.apache.hadoop.yarn.api.records.timeline.TimelinePutResponse processTimelineResponseErrors(org.apache.hadoop.yarn.api.records.timeline.TimelinePutResponse)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.applications.distributedshell.ApplicationMaster: org.apache.commons.logging.Log LOG> AT LINE 1352 with ID [fa474ff5-1b19]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Timeline entities are successfully put") AT LINE 1352 with ID [fa474ff5-1b19]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack39 == 0 goto (branch) at line 272 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.server.nodemanager.webapp.NMWebServices: javax.ws.rs.core.Response getContainerLogsInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack64 == 0 goto (branch) at line 1058 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: void processEventForTimelineServer(org.apache.hadoop.mapreduce.jobhistory.HistoryEvent,org.apache.hadoop.mapreduce.v2.api.records.JobId,long)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack82 = <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.commons.logging.Log LOG> AT LINE 1054 with ID [c5514d92-5da9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack83 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeline entities are successfully put in event ") AT LINE 1054 with ID [c5514d92-5da9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack84 = interfaceinvoke event.<org.apache.hadoop.mapreduce.jobhistory.HistoryEvent: org.apache.hadoop.mapreduce.jobhistory.EventType getEventType()>() AT LINE 1054 with ID [c5514d92-5da9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack84) AT LINE 1054 with ID [c5514d92-5da9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1054 with ID [c5514d92-5da9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack82.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack86) AT LINE 1054 with ID [c5514d92-5da9]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack24 goto $stack26 = <org.apache.hadoop.mapred.LocalJobRunner: org.apache.commons.logging.Log LOG> at line 999 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.LocalJobRunner: void setupChildMapredLocalDirs(org.apache.hadoop.mapred.Task,org.apache.hadoop.mapred.JobConf)> has 13 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",") AT LINE 1000 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = localDirs[i] AT LINE 1000 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 1000 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") AT LINE 1000 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = staticinvoke <org.apache.hadoop.mapred.LocalJobRunner: java.lang.String getLocalTaskDir(java.lang.String,java.lang.String,java.lang.String,boolean)>(user, jobId, taskId, isCleanup) AT LINE 1000 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37) AT LINE 1000 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1000 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke childMapredLocalDir.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack39) AT LINE 1000 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = <org.apache.hadoop.mapred.LocalJobRunner: org.apache.commons.logging.Log LOG> AT LINE 1003 with ID [d0e2ff61-491e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mapreduce.cluster.local.dir for child : ") AT LINE 1003 with ID [d0e2ff61-491e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(childMapredLocalDir) AT LINE 1003 with ID [d0e2ff61-491e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1003 with ID [d0e2ff61-491e]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 1003 with ID [d0e2ff61-491e]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSOutputStream: void enqueueCurrentPacketFull()> has 20 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.DFSOutputStream: org.slf4j.Logger LOG> AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack1 = newarray (java.lang.Object)[6] AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = this.<org.apache.hadoop.hdfs.DFSOutputStream: org.apache.hadoop.hdfs.DFSPacket currentPacket> AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack1[0] = $stack2 AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = this.<org.apache.hadoop.hdfs.DFSOutputStream: java.lang.String src> AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack1[1] = $stack3 AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = virtualinvoke this.<org.apache.hadoop.hdfs.DFSOutputStream: org.apache.hadoop.hdfs.DataStreamer getStreamer()>() AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<org.apache.hadoop.hdfs.DataStreamer: long getBytesCurBlock()>() AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack8) AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack1[2] = $stack9 AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = this.<org.apache.hadoop.hdfs.DFSOutputStream: long blockSize> AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack10) AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack1[3] = $stack12 AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke this.<org.apache.hadoop.hdfs.DFSOutputStream: org.apache.hadoop.hdfs.DataStreamer getStreamer()>() AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<org.apache.hadoop.hdfs.DataStreamer: boolean getAppendChunk()>() AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack15) AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack1[4] = $stack16 AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke this.<org.apache.hadoop.hdfs.DFSOutputStream: org.apache.hadoop.hdfs.DataStreamer getStreamer()>() AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack1[5] = $stack18 AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("enqueue full {}, src={}, bytesCurBlock={}, blockSize={}, appendChunk={}, {}", $stack1) AT LINE 445 with ID [c85e09ab-5ef9]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack70 == 0 goto (branch) at line 821 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack46 == 0 goto $stack47 = <org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.slf4j.Logger LOG> at line 818 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack115 == 0 goto staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirectory$InitQuotaTask: java.util.Collection invokeAll(java.util.Collection)>(subtasks) at line 781 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack121 == 0 goto $stack122 = this.<org.apache.hadoop.hdfs.server.namenode.FSDirectory$InitQuotaTask: org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite bsps> at line 784 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirectory$InitQuotaTask: void compute()> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = <org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.slf4j.Logger LOG> AT LINE 829 with ID [749d2128-4f5a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting quota for ") AT LINE 829 with ID [749d2128-4f5a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = this.<org.apache.hadoop.hdfs.server.namenode.FSDirectory$InitQuotaTask: org.apache.hadoop.hdfs.server.namenode.INodeDirectory dir> AT LINE 829 with ID [749d2128-4f5a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack57) AT LINE 829 with ID [749d2128-4f5a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") AT LINE 829 with ID [749d2128-4f5a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(myCounts) AT LINE 829 with ID [749d2128-4f5a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 829 with ID [749d2128-4f5a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack55.<org.slf4j.Logger: void debug(java.lang.String)>($stack61) AT LINE 829 with ID [749d2128-4f5a]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.ipc.metrics.RetryCacheMetrics: void <init>(org.apache.hadoop.ipc.RetryCache)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.ipc.metrics.RetryCacheMetrics: org.slf4j.Logger LOG> AT LINE 46 with ID [dd8b9592-ad90]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initialized ") AT LINE 46 with ID [dd8b9592-ad90]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.ipc.metrics.RetryCacheMetrics: org.apache.hadoop.metrics2.lib.MetricsRegistry registry> AT LINE 46 with ID [dd8b9592-ad90]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack14) AT LINE 46 with ID [dd8b9592-ad90]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 46 with ID [dd8b9592-ad90]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 46 with ID [dd8b9592-ad90]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack49 == 0 goto $stack28 = staticinvoke <org.apache.hadoop.security.UserGroupInformation: boolean isSecurityEnabled()>() at line 1301 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$LocalizerRunner: void writeCredentials(org.apache.hadoop.fs.Path)> has 16 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: org.slf4j.Logger access$300()>() AT LINE 1299 with ID [3768d0f2-0386]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Credentials list in ") AT LINE 1299 with ID [3768d0f2-0386]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke nmPrivateCTokensPath.<org.apache.hadoop.fs.Path: java.lang.String toString()>() AT LINE 1299 with ID [3768d0f2-0386]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack43) AT LINE 1299 with ID [3768d0f2-0386]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 1299 with ID [3768d0f2-0386]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1299 with ID [3768d0f2-0386]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack40.<org.slf4j.Logger: void debug(java.lang.String)>($stack46) AT LINE 1299 with ID [3768d0f2-0386]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 1306 with ID [cff23f85-d325]
2020-08-25 12:10:05 [INFO] - 	 -> tk = (org.apache.hadoop.security.token.Token) $stack50 AT LINE 1306 with ID [cff23f85-d325]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: org.slf4j.Logger access$300()>() AT LINE 1303 with ID [cff23f85-d325]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tk) AT LINE 1303 with ID [cff23f85-d325]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") AT LINE 1303 with ID [cff23f85-d325]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: java.lang.String buildTokenFingerprint(org.apache.hadoop.security.token.Token)>(tk) AT LINE 1303 with ID [cff23f85-d325]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack55) AT LINE 1303 with ID [cff23f85-d325]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1303 with ID [cff23f85-d325]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack51.<org.slf4j.Logger: void debug(java.lang.String)>($stack57) AT LINE 1303 with ID [cff23f85-d325]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = <org.apache.hadoop.fs.FsUrlStreamHandlerFactory: org.slf4j.Logger LOG> at line 102 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.fs.FsUrlStreamHandlerFactory: java.net.URLStreamHandler createURLStreamHandler(java.lang.String)> has 10 units and 5 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = <org.apache.hadoop.fs.FsUrlStreamHandlerFactory: org.slf4j.Logger LOG> AT LINE 89 with ID [19186479-eda3]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Creating handler for protocol {}", protocol) AT LINE 89 with ID [19186479-eda3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.fs.FsUrlStreamHandlerFactory: org.apache.hadoop.conf.Configuration conf> AT LINE 93 with ID [59964e6d-5972]
2020-08-25 12:10:05 [INFO] - 	 -> impl = staticinvoke <org.apache.hadoop.fs.FileSystem: java.lang.Class getFileSystemClass(java.lang.String,org.apache.hadoop.conf.Configuration)>(protocol, $stack14) AT LINE 93 with ID [59964e6d-5972]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.fs.FsUrlStreamHandlerFactory: org.slf4j.Logger LOG> AT LINE 95 with ID [59964e6d-5972]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Found implementation of {}: {}", protocol, impl) AT LINE 95 with ID [59964e6d-5972]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.fs.FsUrlStreamHandlerFactory: org.slf4j.Logger LOG> AT LINE 103 with ID [4fb890be-cdfd]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Using handler for protocol {}", protocol) AT LINE 103 with ID [4fb890be-cdfd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = <org.apache.hadoop.fs.FsUrlStreamHandlerFactory: org.slf4j.Logger LOG> AT LINE 107 with ID [5534f0b9-7d36]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Unknown protocol {}, delegating to default implementation", protocol) AT LINE 107 with ID [5534f0b9-7d36]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.portmap.RpcProgramPortmap: org.apache.hadoop.oncrpc.XDR unset(int,org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.XDR)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = <org.apache.hadoop.portmap.RpcProgramPortmap: org.slf4j.Logger LOG> AT LINE 112 with ID [c660964f-0453]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Portmap remove key=") AT LINE 112 with ID [c660964f-0453]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 112 with ID [c660964f-0453]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 112 with ID [c660964f-0453]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 112 with ID [c660964f-0453]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator$ScheduledRequests: void containerAssigned(org.apache.hadoop.yarn.api.records.Container,org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor$ContainerRequest)> has 13 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigned container (") AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(allocated) AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ") AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to task ") AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = assigned.<org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor$ContainerRequest: org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID> AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on node ") AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke allocated.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.NodeId getNodeId()>() AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<org.apache.hadoop.yarn.api.records.NodeId: java.lang.String toString()>() AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 1262 with ID [0f5120ad-6c87]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack24 != 0 goto $stack25 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.slf4j.Logger LOG> at line 493 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack21 == 0 goto exitmonitor l2 at line 492 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack19 = virtualinvoke excessStorages.<java.util.HashMap: java.util.Collection values()>() at line 486 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: void pruneStorageMap(org.apache.hadoop.hdfs.server.protocol.StorageReport[])> has 11 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.slf4j.Logger LOG> AT LINE 476 with ID [62537d30-097c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = lengthof reports AT LINE 476 with ID [62537d30-097c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack10) AT LINE 476 with ID [62537d30-097c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.util.Map storageMap> AT LINE 476 with ID [62537d30-097c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = interfaceinvoke $stack14.<java.util.Map: int size()>() AT LINE 476 with ID [62537d30-097c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack15) AT LINE 476 with ID [62537d30-097c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Number of storages reported in heartbeat={}; Number of storages in storageMap={}", $stack13, $stack16) AT LINE 476 with ID [62537d30-097c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.slf4j.Logger LOG> AT LINE 507 with ID [19e02db6-0bcb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke len$#5.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo: int numBlocks()>() AT LINE 507 with ID [19e02db6-0bcb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack27) AT LINE 507 with ID [19e02db6-0bcb]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Deferring removal of stale storage {} with {} blocks", len$#5, $stack28) AT LINE 507 with ID [19e02db6-0bcb]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if null != unreservedContainer goto $stack73 = new org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.ContainerAllocation at line 590 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if needToUnreserve == 0 goto $stack48 = new org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.ContainerAllocation at line 613 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if rmContainer == null goto $stack70 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.activities.ActivitiesManager activitiesManager> at line 621 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack47 <= 0 goto (branch) at line 562 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack111 == 0 goto (branch) at line 551 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack31 != 0 goto shouldAllocOrReserveNewContainer = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: boolean shouldAllocOrReserveNewContainer(org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,org.apache.hadoop.yarn.api.records.Resource)>(schedulerKey, capability) at line 505 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.ContainerAllocation assignContainer(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode,org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.PendingAsk,org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits)> has 22 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack137 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack138 = virtualinvoke $stack136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("assignContainers: node=") AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack139 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: java.lang.String getNodeName()>() AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack140 = virtualinvoke $stack138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack139) AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack141 = virtualinvoke $stack140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" application=") AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack142 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp application> AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack143 = virtualinvoke $stack142.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack144 = virtualinvoke $stack141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack143) AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack145 = virtualinvoke $stack144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" priority=") AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack146 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack147 = virtualinvoke $stack145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack146) AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack148 = virtualinvoke $stack147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pendingAsk=") AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack149 = virtualinvoke $stack148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(pendingAsk) AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack150 = virtualinvoke $stack149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type=") AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack151 = virtualinvoke $stack150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(type) AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack152 = virtualinvoke $stack151.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack137.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack152) AT LINE 495 with ID [952fb746-54eb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 614 with ID [f0d75678-83ad]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = interfaceinvoke $stack58.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 614 with ID [f0d75678-83ad]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack59 == 0 goto $stack61 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.activities.ActivitiesManager activitiesManager> AT LINE 614 with ID [f0d75678-83ad]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 615 with ID [f0d75678-83ad]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack63.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("we needed to unreserve to be able to allocate") AT LINE 615 with ID [f0d75678-83ad]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.ResourceManager$ApplicationAttemptEventDispatcher: void handle(org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptEvent)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.ResourceManager: org.apache.commons.logging.Log access$400()>() AT LINE 978 with ID [5d3805db-4b0a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Event ") AT LINE 978 with ID [5d3805db-4b0a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke event.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptEvent: java.lang.Enum getType()>() AT LINE 978 with ID [5d3805db-4b0a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack33) AT LINE 978 with ID [5d3805db-4b0a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" handled by ") AT LINE 978 with ID [5d3805db-4b0a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(t) AT LINE 978 with ID [5d3805db-4b0a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 978 with ID [5d3805db-4b0a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 978 with ID [5d3805db-4b0a]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack31 < 0 goto $stack32 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache$CacheCleaner: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache this$0> at line 122 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 == 0 goto curMs = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() at line 104 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache$CacheCleaner: void run()> has 26 units and 6 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 107 with ID [6d28748d-a794]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curMs) AT LINE 107 with ID [6d28748d-a794]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: cache cleaner running at {}", this, $stack18) AT LINE 107 with ID [6d28748d-a794]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache$CacheCleaner: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache this$0> AT LINE 109 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> numDemoted = staticinvoke <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: int access$200(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache,long)>($stack19, curMs) AT LINE 109 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> numPurged = 0 AT LINE 110 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 126 with ID [db29603d-16ab]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CacheCleaner: purging ") AT LINE 126 with ID [db29603d-16ab]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(replica) AT LINE 126 with ID [db29603d-16ab]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 126 with ID [db29603d-16ab]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 126 with ID [db29603d-16ab]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String getStackTrace(java.lang.Thread)>($stack44) AT LINE 126 with ID [db29603d-16ab]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack45) AT LINE 126 with ID [db29603d-16ab]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 126 with ID [db29603d-16ab]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack40.<org.slf4j.Logger: void trace(java.lang.String)>($stack47) AT LINE 126 with ID [db29603d-16ab]
2020-08-25 12:10:05 [INFO] - 	 -> numPurged = numPurged + 1 AT LINE 130 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 133 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = newarray (java.lang.Object)[4] AT LINE 133 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50[0] = this AT LINE 133 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curMs) AT LINE 133 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50[1] = $stack54 AT LINE 133 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(numDemoted) AT LINE 133 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50[2] = $stack56 AT LINE 133 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(numPurged) AT LINE 133 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50[3] = $stack58 AT LINE 133 with ID [13737f89-835a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack51.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("{}: finishing cache cleaner run started at {}. Demoted {} mmapped replicas; purged {} replicas.", $stack50) AT LINE 133 with ID [13737f89-835a]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack34 > reduce goto $stack35 = info.<org.apache.hadoop.mapred.IndexCache$IndexInformation: org.apache.hadoop.mapred.SpillRecord mapSpillRecord> at line 84 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 == 0 goto exitmonitor l6 at line 71 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.IndexCache: org.apache.hadoop.mapred.IndexRecord getIndexInformation(java.lang.String,int,org.apache.hadoop.fs.Path,java.lang.String)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = <org.apache.hadoop.mapred.IndexCache: org.apache.commons.logging.Log LOG> AT LINE 79 with ID [f9b9b83e-8c00]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IndexCache HIT: MapId ") AT LINE 79 with ID [f9b9b83e-8c00]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(mapId) AT LINE 79 with ID [f9b9b83e-8c00]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found") AT LINE 79 with ID [f9b9b83e-8c00]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 79 with ID [f9b9b83e-8c00]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 79 with ID [f9b9b83e-8c00]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack10 goto $stack11 = virtualinvoke favoredSet.<java.util.HashSet: boolean isEmpty()>() at line 1820 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack5 != null goto $stack6 = lengthof nodes at line 1815 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DataStreamer: boolean[] getPinnings(org.apache.hadoop.hdfs.protocol.DatanodeInfo[])> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 1822 with ID [b1b057d5-45d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = nodes[i] AT LINE 1822 with ID [b1b057d5-45d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack25.<org.apache.hadoop.hdfs.protocol.DatanodeInfo: java.lang.String getXferAddrWithHostname()>() AT LINE 1822 with ID [b1b057d5-45d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = pinnings[i] AT LINE 1822 with ID [b1b057d5-45d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack29) AT LINE 1822 with ID [b1b057d5-45d7]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{} was chosen by name node (favored={}).", $stack28, $stack30) AT LINE 1822 with ID [b1b057d5-45d7]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i#22 != 0 goto return at line 453 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack42 goto (branch) at line 435 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i#22 == 0 goto i = i + 1 at line 448 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack24 = new java.lang.StringBuffer at line 406 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack72 goto $stack23 = interfaceinvoke h#13.<java.util.Set: boolean isEmpty()>() at line 400 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack84 goto (branch) at line 394 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack19 goto virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(62) at line 375 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.ssl.SSLHostnameVerifier$AbstractVerifier: void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)> has 16 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = <org.apache.hadoop.security.ssl.SSLHostnameVerifier$AbstractVerifier: org.slf4j.Logger LOG> AT LINE 366 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = interfaceinvoke $stack15.<org.slf4j.Logger: boolean isTraceEnabled()>() AT LINE 366 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack16 == 0 goto $stack17 = new java.lang.StringBuffer AT LINE 366 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack102 = <org.apache.hadoop.security.ssl.SSLHostnameVerifier$AbstractVerifier: org.slf4j.Logger LOG> AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack101 = newarray (java.lang.Object)[5] AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack105 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(hosts) AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack101[0] = $stack105 AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack107 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(cns) AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack101[1] = $stack107 AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack109 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(subjectAlts) AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack101[2] = $stack109 AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack111 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(ie6) AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack101[3] = $stack111 AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack113 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(strictWithSubDomains) AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack101[4] = $stack113 AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack102.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("Hosts:{}, CNs:{} subjectAlts:{}, ie6:{}, strictWithSubDomains{}", $stack101) AT LINE 367 with ID [ba7809dc-a9ea]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack28 == 0 goto info = null at line 781 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus append(java.lang.String,java.lang.String,org.apache.hadoop.io.EnumSetWritable)> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.slf4j.Logger stateChangeLog> AT LINE 763 with ID [dce3cb20-11ff]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*DIR* NameNode.append: file ") AT LINE 763 with ID [dce3cb20-11ff]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 763 with ID [dce3cb20-11ff]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 763 with ID [dce3cb20-11ff]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(clientName) AT LINE 763 with ID [dce3cb20-11ff]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ") AT LINE 763 with ID [dce3cb20-11ff]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(clientMachine) AT LINE 763 with ID [dce3cb20-11ff]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 763 with ID [dce3cb20-11ff]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack37.<org.slf4j.Logger: void debug(java.lang.String)>($stack44) AT LINE 763 with ID [dce3cb20-11ff]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if curPeer != null goto $stack16 = curPeer.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory$BlockReaderPeer: boolean fromCache> at line 682 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack10 != 0 goto $stack12 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> at line 671 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.BlockReader getRemoteBlockReaderFromDomain()> has 7 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = <org.apache.hadoop.util.PerformanceAdvisory: org.slf4j.Logger LOG> AT LINE 672 with ID [f25516cb-5e1d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory$PathInfo pathInfo> AT LINE 672 with ID [f25516cb-5e1d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: not trying to create a remote block reader because the UNIX domain socket at {} is not usable.", this, $stack31) AT LINE 672 with ID [f25516cb-5e1d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 677 with ID [e9d83aec-c611]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory$PathInfo pathInfo> AT LINE 677 with ID [e9d83aec-c611]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack11.<org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory$PathInfo: java.lang.String getPath()>() AT LINE 677 with ID [e9d83aec-c611]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: trying to create a remote block reader from the UNIX domain socket at {}", this, $stack14) AT LINE 677 with ID [e9d83aec-c611]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 276 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.io.IOUtils: void cleanupWithLogger(org.slf4j.Logger,java.io.Closeable[])>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack17 == 0 goto return null at line 738 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack22 == 0 goto (branch) at line 746 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.api.records.NodeId getNodeIdToUnreserve(org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.util.resource.ResourceCalculator,org.apache.hadoop.yarn.api.records.Resource)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 749 with ID [0e2017f3-d2c1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unreserving node with reservation size: ") AT LINE 749 with ID [0e2017f3-d2c1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(reservedResource) AT LINE 749 with ID [0e2017f3-d2c1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in order to allocate container with size: ") AT LINE 749 with ID [0e2017f3-d2c1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(resourceNeedUnreserve) AT LINE 749 with ID [0e2017f3-d2c1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 749 with ID [0e2017f3-d2c1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 749 with ID [0e2017f3-d2c1]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack391 <= 0 goto $stack55 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> at line 714 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataXceiver: void writeBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.fs.StorageType,org.apache.hadoop.security.token.Token,java.lang.String,org.apache.hadoop.hdfs.protocol.DatanodeInfo[],org.apache.hadoop.fs.StorageType[],org.apache.hadoop.hdfs.protocol.DatanodeInfo,org.apache.hadoop.hdfs.protocol.datatransfer.BlockConstructionStage,int,long,long,long,org.apache.hadoop.util.DataChecksum,org.apache.hadoop.hdfs.server.datanode.CachingStrategy,boolean,boolean,boolean[])> has 72 units and 8 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack344 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack345 = virtualinvoke $stack343.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("opWriteBlock: stage=") AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack346 = virtualinvoke $stack345.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(stage) AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack347 = virtualinvoke $stack346.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clientname=") AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack348 = virtualinvoke $stack347.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(clientname) AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack349 = virtualinvoke $stack348.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  block  =") AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack350 = virtualinvoke $stack349.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack351 = virtualinvoke $stack350.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newGs=") AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack352 = virtualinvoke $stack351.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(latestGenerationStamp) AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack353 = virtualinvoke $stack352.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bytesRcvd=[") AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack354 = virtualinvoke $stack353.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(minBytesRcvd) AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack355 = virtualinvoke $stack354.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack356 = virtualinvoke $stack355.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(maxBytesRcvd) AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack357 = virtualinvoke $stack356.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack358 = virtualinvoke $stack357.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  targets=") AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack359 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(targets) AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack360 = virtualinvoke $stack358.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack359) AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack361 = virtualinvoke $stack360.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; pipelineSize=") AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack362 = virtualinvoke $stack361.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(pipelineSize) AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack363 = virtualinvoke $stack362.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", srcDataNode=") AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack364 = virtualinvoke $stack363.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcDataNode) AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack365 = virtualinvoke $stack364.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pinning=") AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack366 = virtualinvoke $stack365.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(pinning) AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack367 = virtualinvoke $stack366.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack344.<org.slf4j.Logger: void debug(java.lang.String)>($stack367) AT LINE 697 with ID [1568e735-c675]
2020-08-25 12:10:05 [INFO] - 	 -> $stack369 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 703 with ID [2f311aa1-bf33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack370 = virtualinvoke $stack368.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isDatanode=") AT LINE 703 with ID [2f311aa1-bf33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack371 = virtualinvoke $stack370.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(isDatanode) AT LINE 703 with ID [2f311aa1-bf33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack372 = virtualinvoke $stack371.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isClient=") AT LINE 703 with ID [2f311aa1-bf33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack373 = virtualinvoke $stack372.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(isClient) AT LINE 703 with ID [2f311aa1-bf33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack374 = virtualinvoke $stack373.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isTransfer=") AT LINE 703 with ID [2f311aa1-bf33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack375 = virtualinvoke $stack374.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(isTransfer) AT LINE 703 with ID [2f311aa1-bf33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack376 = virtualinvoke $stack375.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 703 with ID [2f311aa1-bf33]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack369.<org.slf4j.Logger: void debug(java.lang.String)>($stack376) AT LINE 703 with ID [2f311aa1-bf33]
2020-08-25 12:10:05 [INFO] - 	 -> $stack378 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 706 with ID [75328f07-8494]
2020-08-25 12:10:05 [INFO] - 	 -> $stack379 = virtualinvoke $stack377.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeBlock receive buf size ") AT LINE 706 with ID [75328f07-8494]
2020-08-25 12:10:05 [INFO] - 	 -> $stack380 = this.<org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.apache.hadoop.hdfs.net.Peer peer> AT LINE 706 with ID [75328f07-8494]
2020-08-25 12:10:05 [INFO] - 	 -> $stack381 = interfaceinvoke $stack380.<org.apache.hadoop.hdfs.net.Peer: int getReceiveBufferSize()>() AT LINE 706 with ID [75328f07-8494]
2020-08-25 12:10:05 [INFO] - 	 -> $stack382 = virtualinvoke $stack379.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack381) AT LINE 706 with ID [75328f07-8494]
2020-08-25 12:10:05 [INFO] - 	 -> $stack383 = virtualinvoke $stack382.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tcp no delay ") AT LINE 706 with ID [75328f07-8494]
2020-08-25 12:10:05 [INFO] - 	 -> $stack384 = this.<org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.apache.hadoop.hdfs.net.Peer peer> AT LINE 706 with ID [75328f07-8494]
2020-08-25 12:10:05 [INFO] - 	 -> $stack385 = interfaceinvoke $stack384.<org.apache.hadoop.hdfs.net.Peer: boolean getTcpNoDelay()>() AT LINE 706 with ID [75328f07-8494]
2020-08-25 12:10:05 [INFO] - 	 -> $stack386 = virtualinvoke $stack383.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack385) AT LINE 706 with ID [75328f07-8494]
2020-08-25 12:10:05 [INFO] - 	 -> $stack387 = virtualinvoke $stack386.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 706 with ID [75328f07-8494]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack378.<org.slf4j.Logger: void debug(java.lang.String)>($stack387) AT LINE 706 with ID [75328f07-8494]
2020-08-25 12:10:05 [INFO] - 	 -> $stack280 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 755 with ID [47b9992c-1737]
2020-08-25 12:10:05 [INFO] - 	 -> $stack281 = virtualinvoke $stack279.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to datanode ") AT LINE 755 with ID [47b9992c-1737]
2020-08-25 12:10:05 [INFO] - 	 -> $stack282 = virtualinvoke $stack281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(mirrorNode) AT LINE 755 with ID [47b9992c-1737]
2020-08-25 12:10:05 [INFO] - 	 -> $stack283 = virtualinvoke $stack282.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 755 with ID [47b9992c-1737]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack280.<org.slf4j.Logger: void debug(java.lang.String)>($stack283) AT LINE 755 with ID [47b9992c-1737]
2020-08-25 12:10:05 [INFO] - 	 -> $stack217 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 813 with ID [b2e64027-1a14]
2020-08-25 12:10:05 [INFO] - 	 -> $stack218 = virtualinvoke $stack216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Datanode ") AT LINE 813 with ID [b2e64027-1a14]
2020-08-25 12:10:05 [INFO] - 	 -> $stack219 = lengthof targets AT LINE 813 with ID [b2e64027-1a14]
2020-08-25 12:10:05 [INFO] - 	 -> $stack220 = virtualinvoke $stack218.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack219) AT LINE 813 with ID [b2e64027-1a14]
2020-08-25 12:10:05 [INFO] - 	 -> $stack221 = virtualinvoke $stack220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got response for connect ack ") AT LINE 813 with ID [b2e64027-1a14]
2020-08-25 12:10:05 [INFO] - 	 -> $stack222 = virtualinvoke $stack221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from downstream datanode with firstbadlink as ") AT LINE 813 with ID [b2e64027-1a14]
2020-08-25 12:10:05 [INFO] - 	 -> $stack223 = virtualinvoke $stack222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(firstBadLink) AT LINE 813 with ID [b2e64027-1a14]
2020-08-25 12:10:05 [INFO] - 	 -> $stack224 = virtualinvoke $stack223.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 813 with ID [b2e64027-1a14]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack217.<org.slf4j.Logger: void debug(java.lang.String)>($stack224) AT LINE 813 with ID [b2e64027-1a14]
2020-08-25 12:10:05 [INFO] - 	 -> $stack154 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 852 with ID [aef1cdae-94b5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack155 = virtualinvoke $stack153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Datanode ") AT LINE 852 with ID [aef1cdae-94b5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack156 = lengthof targets AT LINE 852 with ID [aef1cdae-94b5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack157 = virtualinvoke $stack155.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack156) AT LINE 852 with ID [aef1cdae-94b5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack158 = virtualinvoke $stack157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" forwarding connect ack to upstream firstbadlink is ") AT LINE 852 with ID [aef1cdae-94b5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack159 = virtualinvoke $stack158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(firstBadLink) AT LINE 852 with ID [aef1cdae-94b5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack160 = virtualinvoke $stack159.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 852 with ID [aef1cdae-94b5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack154.<org.slf4j.Logger: void debug(java.lang.String)>($stack160) AT LINE 852 with ID [aef1cdae-94b5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack134 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 872 with ID [044cbf6d-b4ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack135 = interfaceinvoke $stack134.<org.slf4j.Logger: boolean isTraceEnabled()>() AT LINE 872 with ID [044cbf6d-b4ea]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack135 == 0 goto $stack136 = <org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status: org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status SUCCESS> AT LINE 872 with ID [044cbf6d-b4ea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack137 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 873 with ID [044cbf6d-b4ea]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack137.<org.slf4j.Logger: void trace(java.lang.String)>("TRANSFER: send close-ack") AT LINE 873 with ID [044cbf6d-b4ea]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: void apply(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ResourceCommitRequest)> has 15 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: applicationAttemptId=") AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = virtualinvoke containerId.<org.apache.hadoop.yarn.api.records.ContainerId: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack60) AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" container=") AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" host=") AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack65 = interfaceinvoke rmContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.NodeId getAllocatedNode()>() AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<org.apache.hadoop.yarn.api.records.NodeId: java.lang.String getHost()>() AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack67 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack66) AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type=") AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack69 = virtualinvoke allocation.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.ContainerAllocationProposal: org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType getAllocationLocalityType()>() AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack69) AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack58.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack71) AT LINE 555 with ID [423730c0-7503]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if info != null goto $stack9 = <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: org.apache.commons.logging.Log LOG> at line 951 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree$ProcessSmapMemoryInfo: void setMemInfo(java.lang.String,java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: org.apache.commons.logging.Log LOG> AT LINE 955 with ID [7caad8ab-2f41]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setMemInfo : memInfo : ") AT LINE 955 with ID [7caad8ab-2f41]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(info) AT LINE 955 with ID [7caad8ab-2f41]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 955 with ID [7caad8ab-2f41]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 955 with ID [7caad8ab-2f41]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.resource.DynamicResourceConfiguration: void setMemoryPerNode(java.lang.String,int)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.resource.DynamicResourceConfiguration: org.apache.commons.logging.Log LOG> AT LINE 103 with ID [c2a1f2ce-3e57]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DRConf - setMemoryPerNode: nodePrefix=") AT LINE 103 with ID [c2a1f2ce-3e57]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.resource.DynamicResourceConfiguration: java.lang.String getNodePrefix(java.lang.String)>(node) AT LINE 103 with ID [c2a1f2ce-3e57]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 103 with ID [c2a1f2ce-3e57]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", memory=") AT LINE 103 with ID [c2a1f2ce-3e57]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(memory) AT LINE 103 with ID [c2a1f2ce-3e57]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 103 with ID [c2a1f2ce-3e57]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 103 with ID [c2a1f2ce-3e57]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack16 == 0 goto (branch) at line 229 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = virtualinvoke defaultEnabledCipherSuites.<java.util.ArrayList: int size()>() at line 227 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.ssl.SSLFactory: void disableExcludedCiphers(javax.net.ssl.SSLEngine)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.security.ssl.SSLFactory: org.slf4j.Logger LOG> AT LINE 231 with ID [ffdf150b-0d11]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Disabling cipher suite {}.", cipherName) AT LINE 231 with ID [ffdf150b-0d11]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.fs.contract.AbstractFSContractTestBase: void handleExpectedException(java.lang.Exception)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = staticinvoke <org.apache.hadoop.fs.contract.AbstractFSContractTestBase: org.slf4j.Logger getLog()>() AT LINE 284 with ID [44da8ba6-90c5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("expected :{}", e, e) AT LINE 284 with ID [44da8ba6-90c5]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = new java.io.IOException at line 128 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack11 == null goto $stack12 = this.<org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.apache.hadoop.hdfs.server.datanode.DNConf dnConf> at line 123 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = this.<org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.apache.hadoop.hdfs.server.datanode.DNConf dnConf> at line 118 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack8 != 0 goto $stack9 = staticinvoke <org.apache.hadoop.security.SecurityUtil: boolean isPrivilegedPort(int)>(xferPort) at line 113 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = staticinvoke <org.apache.hadoop.security.UserGroupInformation: boolean isSecurityEnabled()>() at line 108 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair receive(org.apache.hadoop.hdfs.net.Peer,java.io.OutputStream,java.io.InputStream,int,org.apache.hadoop.hdfs.protocol.DatanodeID)> has 10 units and 5 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.slf4j.Logger LOG> AT LINE 109 with ID [fdf20839-280d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("SASL server doing encrypted handshake for peer = {}, datanodeId = {}", peer, datanodeId) AT LINE 109 with ID [fdf20839-280d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.slf4j.Logger LOG> AT LINE 114 with ID [c5b26a8e-44cf]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("SASL server skipping handshake in unsecured configuration for peer = {}, datanodeId = {}", peer, datanodeId) AT LINE 114 with ID [c5b26a8e-44cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.slf4j.Logger LOG> AT LINE 119 with ID [e38cdc31-d3b2]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("SASL server skipping handshake in secured configuration for peer = {}, datanodeId = {}", peer, datanodeId) AT LINE 119 with ID [e38cdc31-d3b2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.slf4j.Logger LOG> AT LINE 124 with ID [21719afa-f719]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("SASL server doing general handshake for peer = {}, datanodeId = {}", peer, datanodeId) AT LINE 124 with ID [21719afa-f719]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.slf4j.Logger LOG> AT LINE 132 with ID [095513c8-96e6]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("SASL server skipping handshake in secured configuration with no SASL protection configured for peer = {}, datanodeId = {}", peer, datanodeId) AT LINE 132 with ID [095513c8-96e6]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.TokenAspect: void ensureTokenInitialized()> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.hdfs.web.TokenAspect: org.slf4j.Logger LOG> AT LINE 143 with ID [ac85bb45-90ca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 143 with ID [ac85bb45-90ca]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Created new DT for {}", $stack10) AT LINE 143 with ID [ac85bb45-90ca]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack20 >= $stack19 goto $stack21 = new java.lang.StringBuilder at line 730 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack15 = new java.io.IOException at line 758 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack8 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> at line 729 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Client$Connection$1: java.lang.Object run()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 732 with ID [ffbba1de-c8cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception encountered while connecting to the server : ") AT LINE 732 with ID [ffbba1de-c8cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = this.<org.apache.hadoop.ipc.Client$Connection$1: java.lang.Exception val$ex> AT LINE 732 with ID [ffbba1de-c8cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack54) AT LINE 732 with ID [ffbba1de-c8cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 732 with ID [ffbba1de-c8cf]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack52.<org.slf4j.Logger: void debug(java.lang.String)>($stack56) AT LINE 732 with ID [ffbba1de-c8cf]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if childCount != 0 goto $stack24 = new java.io.IOException at line 415 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto (branch) at line 409 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack16 = new java.io.IOException at line 400 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack15 = virtualinvoke f.<java.io.File: boolean isDirectory()>() at line 397 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = virtualinvoke f.<java.io.File: boolean isFile()>() at line 393 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: boolean delete(org.apache.hadoop.fs.Path,boolean)> has 10 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: org.apache.commons.logging.Log LOG> AT LINE 384 with ID [b645469e-9b4b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = interfaceinvoke $stack10.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 384 with ID [b645469e-9b4b]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack11 == 0 goto f = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: java.io.File pathToFile(org.apache.hadoop.fs.Path)>(p) AT LINE 384 with ID [b645469e-9b4b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = <org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem$ElevatedRawLocalFilesystem: org.apache.commons.logging.Log LOG> AT LINE 385 with ID [b645469e-9b4b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = newarray (java.lang.Object)[2] AT LINE 385 with ID [b645469e-9b4b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39[0] = p AT LINE 385 with ID [b645469e-9b4b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(recursive) AT LINE 385 with ID [b645469e-9b4b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39[1] = $stack43 AT LINE 385 with ID [b645469e-9b4b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("EFS:delete: %s %b", $stack39) AT LINE 385 with ID [b645469e-9b4b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack44) AT LINE 385 with ID [b645469e-9b4b]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if splitIdx != 0 goto $stack8 = virtualinvoke nodeName.<java.lang.String: int length()>() at line 1285 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: java.lang.String getLeafZnodePath(java.lang.String,java.lang.String,int,boolean)>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if null == preemptionResult goto (branch) at line 103 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack31 == 0 goto (branch) at line 104 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack37 == 0 goto (branch) at line 113 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack19 == 0 goto i$ = specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ReservedContainerCandidatesSelector: java.util.List getNodesForPreemption(org.apache.hadoop.yarn.api.records.Resource,java.util.Map,java.util.Map,org.apache.hadoop.yarn.api.records.Resource)>(clusterResource, queueToPreemptableResourceByPartition, selectedCandidates, totalPreemptedResourceAllowed) at line 81 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ReservedContainerCandidatesSelector: java.util.Map selectCandidates(java.util.Map,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.api.records.Resource)> has 13 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ReservedContainerCandidatesSelector: org.apache.commons.logging.Log LOG> AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.Class: java.lang.String getName()>() AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack42) AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Marked container=") AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = interfaceinvoke c.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack45) AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from queue=") AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = interfaceinvoke c.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: java.lang.String getQueueName()>() AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48) AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to be preemption candidates") AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack51) AT LINE 114 with ID [c719a9ea-31b7]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if events == null goto (branch) at line 1093 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack25 == 0 goto (branch) at line 1085 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack20 == 0 goto return returnEvents at line 1081 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.apache.hadoop.yarn.api.records.timeline.TimelineEvents getEntityTimelines(java.lang.String,java.util.SortedSet,java.lang.Long,java.lang.Long,java.lang.Long,java.util.Set)> has 8 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 1078 with ID [960bc80e-5655]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("getEntityTimelines type={} ids={}", entityType, entityIds) AT LINE 1078 with ID [960bc80e-5655]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 1082 with ID [6dce4b13-fe27]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("getEntityTimeline type={} id={}", entityType, entityId) AT LINE 1082 with ID [6dce4b13-fe27]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 1086 with ID [13853f53-b946]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = interfaceinvoke store.<org.apache.hadoop.yarn.server.timeline.TimelineStore: java.lang.String getName()>() AT LINE 1086 with ID [13853f53-b946]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke store.<java.lang.Object: java.lang.String toString()>() AT LINE 1086 with ID [13853f53-b946]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Try timeline store {}:{} for the request", $stack30, $stack31) AT LINE 1086 with ID [13853f53-b946]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack1 != 0 goto $stack2 = <org.apache.hadoop.hdfs.security.token.block.BlockTokenSecretManager: org.apache.commons.logging.Log LOG> at line 170 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.security.token.block.BlockTokenSecretManager: org.apache.hadoop.hdfs.security.token.block.ExportedBlockKeys exportKeys()> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = <org.apache.hadoop.hdfs.security.token.block.BlockTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 172 with ID [15b21032-3ca1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = interfaceinvoke $stack2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 172 with ID [15b21032-3ca1]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack3 == 0 goto $stack4 = new org.apache.hadoop.hdfs.security.token.block.ExportedBlockKeys AT LINE 172 with ID [15b21032-3ca1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.security.token.block.BlockTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 173 with ID [15b21032-3ca1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Exporting access keys") AT LINE 173 with ID [15b21032-3ca1]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack19 != 0 goto return at line 770 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl$1: void run()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack77 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger access$1300()>() AT LINE 871 with ID [c7bd1c30-659f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node\'s resource is updated to ") AT LINE 871 with ID [c7bd1c30-659f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack80 = virtualinvoke logAggregationReports#64.<org.apache.hadoop.yarn.api.records.Resource: java.lang.String toString()>() AT LINE 871 with ID [c7bd1c30-659f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack81 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack80) AT LINE 871 with ID [c7bd1c30-659f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 871 with ID [c7bd1c30-659f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack77.<org.slf4j.Logger: void debug(java.lang.String)>($stack82) AT LINE 871 with ID [c7bd1c30-659f]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack20 >= 0 goto $stack21 = virtualinvoke fsd.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>() at line 192 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack48 != 0 goto $stack12 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> at line 192 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirDeleteOp: org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo deleteInternal(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.INodesInPath,boolean)> has 13 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 180 with ID [2af5ddae-732a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.delete: ") AT LINE 180 with ID [2af5ddae-732a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke iip.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>() AT LINE 180 with ID [2af5ddae-732a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack36) AT LINE 180 with ID [2af5ddae-732a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 180 with ID [2af5ddae-732a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String)>($stack38) AT LINE 180 with ID [2af5ddae-732a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 201 with ID [23479386-4c9f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* Namesystem.delete: ") AT LINE 201 with ID [23479386-4c9f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke iip.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>() AT LINE 201 with ID [23479386-4c9f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28) AT LINE 201 with ID [23479386-4c9f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is removed") AT LINE 201 with ID [23479386-4c9f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 201 with ID [23479386-4c9f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String)>($stack31) AT LINE 201 with ID [23479386-4c9f]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack24 != 3 goto $stack26 = <org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl: org.slf4j.Logger LOG> at line 114 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack19 == null goto (branch) at line 112 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 != 0 goto reader = null at line 95 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl: void load()> has 7 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = <org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl: org.slf4j.Logger LOG> AT LINE 121 with ID [88afa800-ba3a, ea4cd9cc-a215]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = interfaceinvoke $stack40.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 121 with ID [88afa800-ba3a, ea4cd9cc-a215]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack41 == 0 goto $stack42 = virtualinvoke this.<org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl: java.util.Map getNodeToSubCluster()>() AT LINE 121 with ID [88afa800-ba3a, ea4cd9cc-a215]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = <org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl: org.slf4j.Logger LOG> AT LINE 122 with ID [ea4cd9cc-a215]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Loading node into resolver: {} --> {}", nodeName, subClusterId) AT LINE 122 with ID [ea4cd9cc-a215]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = <org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl: org.slf4j.Logger LOG> AT LINE 124 with ID [88afa800-ba3a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Loading rack into resolver: {} --> {} ", rackName, subClusterId) AT LINE 124 with ID [88afa800-ba3a]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 == 0 goto return at line 715 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.conf.Configuration: void handleDeprecation()> has 8 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = <org.apache.hadoop.conf.Configuration: org.slf4j.Logger LOG> AT LINE 711 with ID [39da56ca-ce21]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>("Handling deprecation for all properties in config...") AT LINE 711 with ID [39da56ca-ce21]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.conf.Configuration: org.slf4j.Logger LOG> AT LINE 716 with ID [9a04f1d0-e816]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Handling deprecation for ") AT LINE 716 with ID [9a04f1d0-e816]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = (java.lang.String) item AT LINE 716 with ID [9a04f1d0-e816]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 716 with ID [9a04f1d0-e816]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 716 with ID [9a04f1d0-e816]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 716 with ID [9a04f1d0-e816]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack31 != 0 goto $stack32 = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.SETATTR3Request: org.apache.hadoop.nfs.nfs3.request.SetAttr3 getAttr()>() at line 461 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack42 != 0 goto $stack30 = <org.apache.hadoop.nfs.AccessPrivilege: org.apache.hadoop.nfs.AccessPrivilege READ_WRITE> at line 454 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if preOpAttr != null goto preOpWcc = staticinvoke <org.apache.hadoop.hdfs.nfs.nfs3.Nfs3Utils: org.apache.hadoop.nfs.nfs3.response.WccAttr getWccAttr(org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes)>(preOpAttr) at line 447 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack24 == 0 goto fileIdPath = staticinvoke <org.apache.hadoop.hdfs.nfs.nfs3.Nfs3Utils: java.lang.String getFileIdPath(org.apache.hadoop.nfs.nfs3.FileHandle)>(e#2) at line 436 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.SETATTR3Request: org.apache.hadoop.nfs.nfs3.request.SETATTR3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 416 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.SETATTR3Response setattr(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 432 with ID [213f9133-76f8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS SETATTR fileId: ") AT LINE 432 with ID [213f9133-76f8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = virtualinvoke e#2.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 432 with ID [213f9133-76f8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack62) AT LINE 432 with ID [213f9133-76f8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 432 with ID [213f9133-76f8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 432 with ID [213f9133-76f8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 432 with ID [213f9133-76f8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack60.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack66) AT LINE 432 with ID [213f9133-76f8]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.security.BaseContainerTokenSecretManager: byte[] retrievePasswordInternal(org.apache.hadoop.yarn.security.ContainerTokenIdentifier,org.apache.hadoop.yarn.server.security.MasterKeyData)> has 12 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.security.BaseContainerTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 118 with ID [4b52fb86-e04c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retrieving password for ") AT LINE 118 with ID [4b52fb86-e04c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.yarn.api.records.ContainerId getContainerID()>() AT LINE 118 with ID [4b52fb86-e04c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack11) AT LINE 118 with ID [4b52fb86-e04c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ") AT LINE 118 with ID [4b52fb86-e04c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>() AT LINE 118 with ID [4b52fb86-e04c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack14) AT LINE 118 with ID [4b52fb86-e04c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to be run on NM ") AT LINE 118 with ID [4b52fb86-e04c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: java.lang.String getNmHostAddress()>() AT LINE 118 with ID [4b52fb86-e04c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17) AT LINE 118 with ID [4b52fb86-e04c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 118 with ID [4b52fb86-e04c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 118 with ID [4b52fb86-e04c]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 == 0 goto (branch) at line 749 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> at line 748 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void loadApplicationAttemptState(org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationStateData,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 760 with ID [7cf45c71-4a26]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Done loading applications from ZK state store") AT LINE 760 with ID [7cf45c71-4a26]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack124 != null goto $stack126 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForAcl: org.apache.commons.logging.Log LOG> at line 154 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForAcl: void createOriginalFSImage()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack126 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForAcl: org.apache.commons.logging.Log LOG> AT LINE 157 with ID [c7ce0960-f43c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack127 = virtualinvoke $stack125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("original FS image file is ") AT LINE 157 with ID [c7ce0960-f43c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack128 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForAcl: java.io.File originalFsimage> AT LINE 157 with ID [c7ce0960-f43c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack129 = virtualinvoke $stack127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack128) AT LINE 157 with ID [c7ce0960-f43c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack130 = virtualinvoke $stack129.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 157 with ID [c7ce0960-f43c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack126.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack130) AT LINE 157 with ID [c7ce0960-f43c]
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.io.nativeio.NativeIO$Windows: void <clinit>()>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack36 >= 0 goto $stack12 = this.<org.apache.hadoop.hdfs.server.datanode.checker.ThrottledAsyncChecker: com.google.common.util.concurrent.ListeningExecutorService executorService> at line 130 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = this.<org.apache.hadoop.hdfs.server.datanode.checker.ThrottledAsyncChecker: java.util.Map completedChecks> at line 123 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.checker.ThrottledAsyncChecker: com.google.common.base.Optional schedule(org.apache.hadoop.hdfs.server.datanode.checker.Checkable,java.lang.Object)> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = <org.apache.hadoop.hdfs.server.datanode.checker.ThrottledAsyncChecker: org.slf4j.Logger LOG> AT LINE 131 with ID [15bb52bb-ba2b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = newarray (java.lang.Object)[3] AT LINE 131 with ID [15bb52bb-ba2b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43[0] = target AT LINE 131 with ID [15bb52bb-ba2b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(msSinceLastCheck) AT LINE 131 with ID [15bb52bb-ba2b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43[1] = $stack47 AT LINE 131 with ID [15bb52bb-ba2b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = this.<org.apache.hadoop.hdfs.server.datanode.checker.ThrottledAsyncChecker: long minMsBetweenChecks> AT LINE 131 with ID [15bb52bb-ba2b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack48) AT LINE 131 with ID [15bb52bb-ba2b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43[2] = $stack50 AT LINE 131 with ID [15bb52bb-ba2b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Skipped checking {}. Time since last check {}ms is less than the min gap {}ms.", $stack43) AT LINE 131 with ID [15bb52bb-ba2b]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack112 == 0 goto $stack8 = this.<org.apache.hadoop.hdfs.server.datanode.DataNode: org.apache.hadoop.hdfs.server.datanode.BlockPoolManager blockPoolManager> at line 1940 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.datanode.DataNode: void shutdown()>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if replica#13 >= $stack17 goto (branch) at line 194 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto arr$#11 = 0L at line 187 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto (branch) at line 178 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack15 != 0 goto allLiveReplicasTriedAsPrimary = 1 at line 169 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if startRecovery != 0 goto $stack14 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature: org.apache.hadoop.hdfs.server.blockmanagement.ReplicaUnderConstruction[] replicas> at line 166 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature: void initializeBlockRecovery(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,long,boolean)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger blockStateChangeLog> AT LINE 212 with ID [f294bf45-3040]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* {} recovery started, primary={}", this, i$#12) AT LINE 212 with ID [f294bf45-3040]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack55 != 0 goto $stack32 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> at line 3512 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack17 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> at line 3492 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void processIncrementalBlockReport(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,org.apache.hadoop.hdfs.server.protocol.StorageReceivedDeletedBlocks)> has 24 units and 8 lines
2020-08-25 12:10:05 [INFO] - 	 -> received = 0 AT LINE 3488 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> deleted = 0 AT LINE 3489 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> receiving = 0 AT LINE 3490 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> deleted = deleted + 1 AT LINE 3496 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> received = received + 1 AT LINE 3500 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> receiving = receiving + 1 AT LINE 3503 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 3515 with ID [c21307cc-c0db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = newarray (java.lang.Object)[3] AT LINE 3515 with ID [c21307cc-c0db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke rdbi.<org.apache.hadoop.hdfs.server.protocol.ReceivedDeletedBlockInfo: org.apache.hadoop.hdfs.server.protocol.ReceivedDeletedBlockInfo$BlockStatus getStatus()>() AT LINE 3515 with ID [c21307cc-c0db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31[0] = $stack35 AT LINE 3515 with ID [c21307cc-c0db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke rdbi.<org.apache.hadoop.hdfs.server.protocol.ReceivedDeletedBlockInfo: org.apache.hadoop.hdfs.protocol.Block getBlock()>() AT LINE 3515 with ID [c21307cc-c0db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31[1] = $stack37 AT LINE 3515 with ID [c21307cc-c0db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31[2] = node AT LINE 3515 with ID [c21307cc-c0db]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* block {}: {} is received from {}", $stack31) AT LINE 3515 with ID [c21307cc-c0db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 3518 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = newarray (java.lang.Object)[4] AT LINE 3518 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16[0] = node AT LINE 3518 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(receiving) AT LINE 3518 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16[1] = $stack20 AT LINE 3518 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(received) AT LINE 3518 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16[2] = $stack22 AT LINE 3518 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(deleted) AT LINE 3518 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16[3] = $stack24 AT LINE 3518 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("*BLOCK* NameNode.processIncrementalBlockReport: from {} receiving: {}, received: {}, deleted: {}", $stack16) AT LINE 3518 with ID [269c4db1-8bcf]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = <org.apache.hadoop.security.http.CrossOriginFilter: org.slf4j.Logger LOG> at line 135 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack11 != 0 goto accessControlRequestHeaders = interfaceinvoke req.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Access-Control-Request-Headers") at line 125 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack9 != 0 goto accessControlRequestMethod = interfaceinvoke req.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Access-Control-Request-Method") at line 116 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack8 != 0 goto $stack9 = virtualinvoke this.<org.apache.hadoop.security.http.CrossOriginFilter: boolean areOriginsAllowed(java.lang.String)>(originsList) at line 109 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.http.CrossOriginFilter: void doCrossFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> has 28 units and 7 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = <org.apache.hadoop.security.http.CrossOriginFilter: org.slf4j.Logger LOG> AT LINE 110 with ID [37fb1010-552a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = interfaceinvoke $stack60.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 110 with ID [37fb1010-552a]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack61 == 0 goto return AT LINE 110 with ID [37fb1010-552a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = <org.apache.hadoop.security.http.CrossOriginFilter: org.slf4j.Logger LOG> AT LINE 111 with ID [37fb1010-552a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack62.<org.slf4j.Logger: void debug(java.lang.String)>("Header origin is null. Returning") AT LINE 111 with ID [37fb1010-552a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = <org.apache.hadoop.security.http.CrossOriginFilter: org.slf4j.Logger LOG> AT LINE 118 with ID [e1ed9516-69d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Header origins \'") AT LINE 118 with ID [e1ed9516-69d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(originsList) AT LINE 118 with ID [e1ed9516-69d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not allowed. Returning") AT LINE 118 with ID [e1ed9516-69d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 118 with ID [e1ed9516-69d9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack55.<org.slf4j.Logger: void debug(java.lang.String)>($stack59) AT LINE 118 with ID [e1ed9516-69d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = <org.apache.hadoop.security.http.CrossOriginFilter: org.slf4j.Logger LOG> AT LINE 127 with ID [5e18bcc9-5100]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Access control method \'") AT LINE 127 with ID [5e18bcc9-5100]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(accessControlRequestMethod) AT LINE 127 with ID [5e18bcc9-5100]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not allowed. Returning") AT LINE 127 with ID [5e18bcc9-5100]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 127 with ID [5e18bcc9-5100]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 127 with ID [5e18bcc9-5100]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = <org.apache.hadoop.security.http.CrossOriginFilter: org.slf4j.Logger LOG> AT LINE 137 with ID [0ab574ec-81ca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Access control headers \'") AT LINE 137 with ID [0ab574ec-81ca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(accessControlRequestHeaders) AT LINE 137 with ID [0ab574ec-81ca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not allowed. Returning") AT LINE 137 with ID [0ab574ec-81ca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 137 with ID [0ab574ec-81ca]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void debug(java.lang.String)>($stack43) AT LINE 137 with ID [0ab574ec-81ca]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = <org.apache.hadoop.security.http.CrossOriginFilter: org.slf4j.Logger LOG> AT LINE 143 with ID [0135c576-d3b8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = interfaceinvoke $stack14.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 143 with ID [0135c576-d3b8]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack15 == 0 goto interfaceinvoke res.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Access-Control-Allow-Origin", originsList) AT LINE 143 with ID [0135c576-d3b8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = <org.apache.hadoop.security.http.CrossOriginFilter: org.slf4j.Logger LOG> AT LINE 144 with ID [0135c576-d3b8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>("Completed cross origin filter checks. Populating HttpServletResponse") AT LINE 144 with ID [0135c576-d3b8]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack37 != 0 goto $stack38 = new java.lang.StringBuilder at line 1379 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if toPreOpAttr != null goto $stack36 = <org.apache.hadoop.nfs.AccessPrivilege: org.apache.hadoop.nfs.AccessPrivilege READ_WRITE> at line 1374 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if fromPreOpAttr != null goto $stack34 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.security.IdMappingServiceProvider iug> at line 1367 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.RENAME3Request: org.apache.hadoop.nfs.nfs3.request.RENAME3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 1336 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.RENAME3Response rename(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 15 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack77 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack78 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS RENAME from: ") AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack79 = virtualinvoke e.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack79) AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fromName) AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to: ") AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack84 = virtualinvoke toHandle.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack84) AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(toName) AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack77.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack90) AT LINE 1354 with ID [70decd5f-3383]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.LeaseManager: void removeLease(org.apache.hadoop.hdfs.server.namenode.LeaseManager$Lease,long)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.namenode.LeaseManager: org.apache.commons.logging.Log LOG> AT LINE 357 with ID [f9e4a493-4514]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inode ") AT LINE 357 with ID [f9e4a493-4514]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(inodeId) AT LINE 357 with ID [f9e4a493-4514]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found in lease.files (=") AT LINE 357 with ID [f9e4a493-4514]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(lease) AT LINE 357 with ID [f9e4a493-4514]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 357 with ID [f9e4a493-4514]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 357 with ID [f9e4a493-4514]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 357 with ID [f9e4a493-4514]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskAttemptImpl$TooManyFetchFailureTransition: void transition(org.apache.hadoop.mapreduce.v2.app.job.impl.TaskAttemptImpl,org.apache.hadoop.mapreduce.v2.app.job.event.TaskAttemptEvent)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = staticinvoke <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskAttemptImpl: org.apache.commons.logging.Log access$3100()>() AT LINE 2054 with ID [993e2574-7535]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not generating HistoryFinish event since start event not generated for taskAttempt: ") AT LINE 2054 with ID [993e2574-7535]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke taskAttempt.<org.apache.hadoop.mapreduce.v2.app.job.impl.TaskAttemptImpl: org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId getID()>() AT LINE 2054 with ID [993e2574-7535]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack22) AT LINE 2054 with ID [993e2574-7535]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2054 with ID [993e2574-7535]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 2054 with ID [993e2574-7535]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> at line 598 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: void logToCSV(java.util.List)> has 19 units and 10 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" QUEUESTATE: ") AT LINE 594 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.hadoop.yarn.util.Clock clock> AT LINE 594 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = interfaceinvoke $stack9.<org.apache.hadoop.yarn.util.Clock: long getTime()>() AT LINE 594 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack10) AT LINE 594 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> queueState = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 594 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> sb = $stack13 AT LINE 595 with ID [ff7a6536-49ab]
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(queueState) AT LINE 596 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> i$ = interfaceinvoke leafQueueNames.<java.util.List: java.util.Iterator iterator()>() AT LINE 598 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>() AT LINE 598 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> if $stack16 == 0 goto $stack17 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> AT LINE 598 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 605 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> queueName = (java.lang.String) $stack19 AT LINE 605 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> tq = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.TempQueuePerPartition getQueueByPartition(java.lang.String,java.lang.String)>(queueName, "") AT LINE 599 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 601 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke tq.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.TempQueuePerPartition: void appendLogString(java.lang.StringBuilder)>(sb) AT LINE 602 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> goto [?= $stack16 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] AT LINE 603 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy: org.apache.commons.logging.Log LOG> AT LINE 604 with ID [ff7a6536-49ab]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 604 with ID [ff7a6536-49ab]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 604 with ID [ff7a6536-49ab]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack19 == 0 goto $stack21 = <org.apache.hadoop.hdfs.server.federation.router.ConnectionManager: org.slf4j.Logger LOG> at line 329 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.ConnectionManager: void cleanup(org.apache.hadoop.hdfs.server.federation.router.ConnectionPool)> has 15 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.server.federation.router.ConnectionManager: org.slf4j.Logger LOG> AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = newarray (java.lang.Object)[4] AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke pool.<org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: org.apache.hadoop.hdfs.server.federation.router.ConnectionPoolId getConnectionPoolId()>() AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20[0] = $stack24 AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.util.concurrent.TimeUnit: long toSeconds(long)>(timeSinceLastActive) AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack27) AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20[1] = $stack28 AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke pool.<org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: int getNumConnections()>() AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack30) AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20[2] = $stack31 AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke pool.<org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: int getMaxSize()>() AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack33) AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20[3] = $stack34 AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Removed connection {} used {} seconds ago. Pool has {}/{} connections", $stack20) AT LINE 332 with ID [bd7ae73e-b2a8]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.server.JWTRedirectAuthenticationHandler: boolean validateExpiration(com.nimbusds.jwt.SignedJWT)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.security.authentication.server.JWTRedirectAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 346 with ID [d56f9794-82c9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>("JWT token expiration date has been successfully validated") AT LINE 346 with ID [d56f9794-82c9]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.registry.server.services.MicroZookeeperService: void serviceInit(org.apache.hadoop.conf.Configuration)> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.registry.server.services.MicroZookeeperService: org.slf4j.Logger LOG> AT LINE 147 with ID [e33b480d-154c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.registry.server.services.MicroZookeeperService: java.io.File instanceDir> AT LINE 147 with ID [e33b480d-154c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Instance directory is {}", $stack12) AT LINE 147 with ID [e33b480d-154c]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if existing != null goto iip = existing at line 80 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack40 == 0 goto (branch) at line 63 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirMkdirOp: org.apache.hadoop.fs.FileStatus mkdirs(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,org.apache.hadoop.fs.permission.PermissionStatus,boolean)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 46 with ID [d3a45128-0105]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.mkdirs: ") AT LINE 46 with ID [d3a45128-0105]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 46 with ID [d3a45128-0105]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 46 with ID [d3a45128-0105]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack48.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 46 with ID [d3a45128-0105]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack37 > 0 goto return at line 1190 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack17 <= 0 goto $stack19 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.hadoop.hdfs.client.HdfsDataOutputStream fos> at line 1135 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: void processCommits(long)> has 13 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileId: ") AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes latestAttr> AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes: long getFileId()>() AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack62) AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Service time: ") AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack65 = commit.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$CommitCtx: long startTime> AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack66 = staticinvoke <org.apache.hadoop.hdfs.nfs.nfs3.Nfs3Utils: long getElapsedTime(long)>($stack65) AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack67 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack66) AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ns. Sent response for commit: ") AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(commit) AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack59.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack70) AT LINE 1184 with ID [a517dd36-0e9c]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.Groups: org.apache.hadoop.security.Groups getUserToGroupsMappingService(org.apache.hadoop.conf.Configuration)> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.security.Groups: org.slf4j.Logger LOG> AT LINE 446 with ID [0ffa85f8-011b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = interfaceinvoke $stack3.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 446 with ID [0ffa85f8-011b]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack4 == 0 goto $stack5 = new org.apache.hadoop.security.Groups AT LINE 446 with ID [0ffa85f8-011b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.security.Groups: org.slf4j.Logger LOG> AT LINE 447 with ID [0ffa85f8-011b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>(" Creating new Groups object") AT LINE 447 with ID [0ffa85f8-011b]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack10 != null goto (branch) at line 212 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSInotifyEventInputStream: org.apache.hadoop.hdfs.inotify.EventBatch take()> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.DFSInotifyEventInputStream: org.slf4j.Logger LOG> AT LINE 216 with ID [d561be49-eb01]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sleepTime) AT LINE 216 with ID [d561be49-eb01]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("take(): poll() returned null, sleeping for {} ms", $stack16) AT LINE 216 with ID [d561be49-eb01]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack1 != 0 goto $stack2 = <org.apache.hadoop.security.JniBasedUnixGroupsNetgroupMapping: org.slf4j.Logger LOG> at line 51 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.JniBasedUnixGroupsNetgroupMapping: void <clinit>()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = <org.apache.hadoop.security.JniBasedUnixGroupsNetgroupMapping: org.slf4j.Logger LOG> AT LINE 55 with ID [40324b54-906f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String)>("Using JniBasedUnixGroupsNetgroupMapping for Netgroup resolution") AT LINE 55 with ID [40324b54-906f]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor: void addNode(java.util.List,org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.distributed.NodeQueueLoadMonitor: org.apache.commons.logging.Log LOG> AT LINE 186 with ID [0760cb89-5cce]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node added event from: ") AT LINE 186 with ID [0760cb89-5cce]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = interfaceinvoke rmNode.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: org.apache.hadoop.net.Node getNode()>() AT LINE 186 with ID [0760cb89-5cce]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = interfaceinvoke $stack8.<org.apache.hadoop.net.Node: java.lang.String getName()>() AT LINE 186 with ID [0760cb89-5cce]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9) AT LINE 186 with ID [0760cb89-5cce]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 186 with ID [0760cb89-5cce]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 186 with ID [0760cb89-5cce]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.service.CompositeService: void addService(org.apache.hadoop.service.Service)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = <org.apache.hadoop.service.CompositeService: org.slf4j.Logger LOG> AT LINE 74 with ID [e7c970f5-0867]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding service ") AT LINE 74 with ID [e7c970f5-0867]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = interfaceinvoke service.<org.apache.hadoop.service.Service: java.lang.String getName()>() AT LINE 74 with ID [e7c970f5-0867]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13) AT LINE 74 with ID [e7c970f5-0867]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 74 with ID [e7c970f5-0867]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 74 with ID [e7c970f5-0867]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: void trimWriteRequest(org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx,long)> has 26 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 517 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = interfaceinvoke $stack7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 517 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack8 == 0 goto $stack9 = currentOffset - offset AT LINE 517 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> count = virtualinvoke writeCtx.<org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: int getCount()>() AT LINE 518 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = newarray (java.lang.Object)[7] AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(offset) AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12[0] = $stack16 AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = (long) count AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = offset + $stack17 AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack18) AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12[1] = $stack20 AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(currentOffset) AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12[2] = $stack22 AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(offset) AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12[3] = $stack24 AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(currentOffset) AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12[4] = $stack26 AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(currentOffset) AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12[5] = $stack28 AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = (long) count AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = offset + $stack29 AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack30) AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12[6] = $stack32 AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Trim request [%d-%d), current offset %d, drop the overlapped section [%d-%d) and write new data [%d-%d)", $stack12) AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack33) AT LINE 519 with ID [929b97d1-dbc8]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack3 <= 0 goto $stack4 = new java.lang.StringBuilder at line 426 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: void setMaximumCapacity(java.lang.String,float)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> AT LINE 431 with ID [a751701d-3e38]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSConf - setMaxCapacity: queuePrefix=") AT LINE 431 with ID [a751701d-3e38]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: java.lang.String getQueuePrefix(java.lang.String)>(queue) AT LINE 431 with ID [a751701d-3e38]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 431 with ID [a751701d-3e38]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxCapacity=") AT LINE 431 with ID [a751701d-3e38]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(maxCapacity) AT LINE 431 with ID [a751701d-3e38]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 431 with ID [a751701d-3e38]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 431 with ID [a751701d-3e38]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.security.TimelineV1DelegationTokenSecretManagerService$TimelineV1DelegationTokenSecretManager: void removeStoredToken(org.apache.hadoop.yarn.security.client.TimelineDelegationTokenIdentifier)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.timeline.security.TimelineV1DelegationTokenSecretManagerService$TimelineV1DelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 187 with ID [d2f54a9e-1ec0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing token ") AT LINE 187 with ID [d2f54a9e-1ec0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke tokenId.<org.apache.hadoop.yarn.security.client.TimelineDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 187 with ID [d2f54a9e-1ec0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack10) AT LINE 187 with ID [d2f54a9e-1ec0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 187 with ID [d2f54a9e-1ec0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 187 with ID [d2f54a9e-1ec0]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack4 != $stack3 goto oldBreadcrumbStat = specialinvoke this.<org.apache.hadoop.ha.ActiveStandbyElector: org.apache.zookeeper.data.Stat fenceOldActive()>() at line 883 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack18 != 0 goto $stack4 = this.<org.apache.hadoop.ha.ActiveStandbyElector: org.apache.hadoop.ha.ActiveStandbyElector$State state> at line 885 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector: boolean becomeActive()> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 892 with ID [0c5a83c4-8da1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Becoming active for ") AT LINE 892 with ID [0c5a83c4-8da1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 892 with ID [0c5a83c4-8da1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 892 with ID [0c5a83c4-8da1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 892 with ID [0c5a83c4-8da1]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if count < $stack47 goto (branch) at line 5142 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack44 == 0 goto (branch) at line 5139 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack42 != 0 goto (branch) at line 5133 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if inode == null goto (branch) at line 5137 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack50 == 0 goto $stack23 = interfaceinvoke blkIterator.<java.util.Iterator: boolean hasNext()>() at line 5148 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack18 != 0 goto $stack19 = this.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager> at line 5119 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack15 != 0 goto virtualinvoke this.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void readLock()>() at line 5106 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.util.Collection listCorruptFileBlocks(java.lang.String,java.lang.String[])> has 10 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 5110 with ID [cdb9b56b-cc80]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = interfaceinvoke $stack56.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 5110 with ID [cdb9b56b-cc80]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack57 == 0 goto return corruptFiles AT LINE 5110 with ID [cdb9b56b-cc80]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 5111 with ID [cdb9b56b-cc80]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack58.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("there are no corrupt file blocks.") AT LINE 5111 with ID [cdb9b56b-cc80]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 5149 with ID [483e3364-4807]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("list corrupt file blocks returned: ") AT LINE 5149 with ID [483e3364-4807]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 5149 with ID [483e3364-4807]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 5149 with ID [483e3364-4807]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 5149 with ID [483e3364-4807]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack50 != 0 goto (branch) at line 357 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack46 == 0 goto (branch) at line 356 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if reqMap == null goto (branch) at line 355 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack40 == 0 goto (branch) at line 351 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if foundAll == 0 goto (branch) at line 374 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = this.<org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: java.util.Map nodeFailures> at line 330 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack10 != 0 goto $stack11 = this.<org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: java.util.Set blacklistedNodes> at line 327 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: void containerFailedOnHost(java.lang.String)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack75 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor: org.apache.commons.logging.Log LOG> AT LINE 332 with ID [bcbda3f0-9ddf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack76 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host ") AT LINE 332 with ID [bcbda3f0-9ddf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(hostName) AT LINE 332 with ID [bcbda3f0-9ddf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is already blacklisted.") AT LINE 332 with ID [bcbda3f0-9ddf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 332 with ID [bcbda3f0-9ddf]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack75.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack79) AT LINE 332 with ID [bcbda3f0-9ddf]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if application != null goto $stack12 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplication: org.apache.hadoop.yarn.server.resourcemanager.scheduler.Queue getQueue()>() at line 810 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: void addApplicationAttempt(org.apache.hadoop.yarn.api.records.ApplicationAttemptId,boolean,boolean)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler: org.apache.commons.logging.Log LOG> AT LINE 844 with ID [be51ba9a-cc21]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationAttemptId) AT LINE 844 with ID [be51ba9a-cc21]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is recovering. Skipping notifying ATTEMPT_ADDED") AT LINE 844 with ID [be51ba9a-cc21]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 844 with ID [be51ba9a-cc21]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack45) AT LINE 844 with ID [be51ba9a-cc21]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager$Monitor: boolean exceededNumNodesPerCheck()> has 4 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack1 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger access$100()>() AT LINE 491 with ID [50082a26-47f8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = this.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager$Monitor: int numNodesChecked> AT LINE 491 with ID [50082a26-47f8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack2) AT LINE 491 with ID [50082a26-47f8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack1.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Processed {} nodes so far this tick", $stack4) AT LINE 491 with ID [50082a26-47f8]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= factor goto $stack27 = <org.apache.hadoop.io.TestSequenceFile: org.slf4j.Logger LOG> at line 361 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= factor goto i = 0 at line 358 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= count goto i = 0 at line 350 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= factor goto $stack25 = new org.apache.hadoop.io.RandomDatum$Generator at line 339 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.io.TestSequenceFile: void mergeTest(org.apache.hadoop.fs.FileSystem,int,int,org.apache.hadoop.fs.Path,org.apache.hadoop.io.SequenceFile$CompressionType,boolean,int,int)> has 18 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.io.TestSequenceFile: org.slf4j.Logger LOG> AT LINE 333 with ID [50a20f12-2e18]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("creating ") AT LINE 333 with ID [50a20f12-2e18]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(factor) AT LINE 333 with ID [50a20f12-2e18]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files with ") AT LINE 333 with ID [50a20f12-2e18]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = count / factor AT LINE 333 with ID [50a20f12-2e18]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack21) AT LINE 333 with ID [50a20f12-2e18]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" records") AT LINE 333 with ID [50a20f12-2e18]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 333 with ID [50a20f12-2e18]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack24) AT LINE 333 with ID [50a20f12-2e18]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = <org.apache.hadoop.io.TestSequenceFile: org.slf4j.Logger LOG> AT LINE 362 with ID [7fcf2088-f919]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sorting file ") AT LINE 362 with ID [7fcf2088-f919]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i) AT LINE 362 with ID [7fcf2088-f919]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ") AT LINE 362 with ID [7fcf2088-f919]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = count / factor AT LINE 362 with ID [7fcf2088-f919]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack48) AT LINE 362 with ID [7fcf2088-f919]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" records") AT LINE 362 with ID [7fcf2088-f919]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 362 with ID [7fcf2088-f919]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 362 with ID [7fcf2088-f919]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 != 0 goto return at line 104 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack4 != 0 goto $stack5 = interfaceinvoke saslProps.<java.util.Map: java.lang.Object get(java.lang.Object)>("javax.security.sasl.qop") at line 96 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataTransferSaslUtil: void checkSaslComplete(org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslParticipant,java.util.Map)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataTransferSaslUtil: org.slf4j.Logger LOG> AT LINE 102 with ID [cf8b6679-bb64]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Verifying QOP, requested QOP = {}, negotiated QOP = {}", requestedQop, negotiatedQop) AT LINE 102 with ID [cf8b6679-bb64]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.RouterClientProtocol: org.apache.hadoop.hdfs.protocol.HdfsFileStatus create(java.lang.String,org.apache.hadoop.fs.permission.FsPermission,java.lang.String,org.apache.hadoop.io.EnumSetWritable,boolean,short,long,org.apache.hadoop.crypto.CryptoProtocolVersion[])> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack71 = <org.apache.hadoop.hdfs.server.federation.router.RouterClientProtocol: org.slf4j.Logger LOG> AT LINE 188 with ID [4a72719a-1868]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack71.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Creating {} requires creating parent {}", src, parent) AT LINE 188 with ID [4a72719a-1868]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.security.MRDelegationTokenRenewer: org.apache.hadoop.mapreduce.v2.api.MRClientProtocol instantiateHistoryProxy(org.apache.hadoop.conf.Configuration,java.net.InetSocketAddress)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.mapreduce.v2.security.MRDelegationTokenRenewer: org.apache.commons.logging.Log LOG> AT LINE 109 with ID [37f767a4-37d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to MRHistoryServer at: ") AT LINE 109 with ID [37f767a4-37d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(hsAddress) AT LINE 109 with ID [37f767a4-37d9]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 109 with ID [37f767a4-37d9]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 109 with ID [37f767a4-37d9]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack11 != 0 goto virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: void killContainer(java.lang.String,org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal)>(pid, signal) at line 419 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: boolean signalContainer(org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext)> has 11 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> user = virtualinvoke ctx.<org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext: java.lang.String getUser()>() AT LINE 411 with ID [2edc3a45-d6dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: org.slf4j.Logger LOG> AT LINE 416 with ID [2edc3a45-d6dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending signal ") AT LINE 416 with ID [2edc3a45-d6dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke signal.<org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal: int getValue()>() AT LINE 416 with ID [2edc3a45-d6dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15) AT LINE 416 with ID [2edc3a45-d6dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to pid ") AT LINE 416 with ID [2edc3a45-d6dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(pid) AT LINE 416 with ID [2edc3a45-d6dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as user ") AT LINE 416 with ID [2edc3a45-d6dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 416 with ID [2edc3a45-d6dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 416 with ID [2edc3a45-d6dc]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 416 with ID [2edc3a45-d6dc]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 <= 0 goto throw e#5 at line 321 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.mapred.ClientServiceDelegate: java.lang.Object invoke(java.lang.String,java.lang.Class,java.lang.Object)>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if json != null goto ioe = virtualinvoke this.<org.apache.hadoop.hdfs.web.WebHdfsFileSystem$FsPathResponseRunner: java.lang.Object decodeResponse(java.util.Map)>(json) at line 931 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.web.WebHdfsFileSystem$FsPathResponseRunner: java.lang.Object getResponse(java.net.HttpURLConnection)>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack1 == 0 goto this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: boolean closed> = 1 at line 624 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: void close()> has 4 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.slf4j.Logger LOG> AT LINE 626 with ID [5fbb11e7-8bea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: java.lang.String filename> AT LINE 626 with ID [5fbb11e7-8bea]
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 626 with ID [5fbb11e7-8bea]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("close(filename={}, block={})", $stack3, $stack2) AT LINE 626 with ID [5fbb11e7-8bea]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void processChosenExcessReplica(java.util.Collection,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 3245 with ID [fc54ae61-3178]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* chooseExcessReplicates: ({}, {}) is added to invalidated blocks set", chosen, storedBlock) AT LINE 3245 with ID [fc54ae61-3178]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack46 <= 0 goto (branch) at line 683 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if curReplicas != 0 goto (branch) at line 768 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager$Monitor: void processBlocksInternal(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,java.util.Iterator,java.util.List,boolean)> has 4 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack95 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger access$100()>() AT LINE 695 with ID [a0e2abbf-b2a2]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack95.<org.slf4j.Logger: void debug(java.lang.String)>("Yielded lock during decommission/maintenance check") AT LINE 695 with ID [a0e2abbf-b2a2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack82 = staticinvoke <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger access$100()>() AT LINE 710 with ID [d09ebb15-819d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack82.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Removing unknown block {}", ignored#40) AT LINE 710 with ID [d09ebb15-819d]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 != $stack14 goto $stack15 = staticinvoke <org.apache.hadoop.ipc.RetryCache$CacheEntry: byte access$300(org.apache.hadoop.ipc.RetryCache$CacheEntry)>(mapEntry) at line 285 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if mapEntry != null goto $stack9 = this.<org.apache.hadoop.ipc.RetryCache: org.apache.hadoop.ipc.metrics.RetryCacheMetrics retryCacheMetrics> at line 265 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.ipc.RetryCache: org.apache.hadoop.ipc.RetryCache$CacheEntry waitForCompletion(org.apache.hadoop.ipc.RetryCache$CacheEntry)> has 12 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = <org.apache.hadoop.ipc.RetryCache: org.slf4j.Logger LOG> AT LINE 267 with ID [33e0135a-fb3e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding Rpc request clientId ") AT LINE 267 with ID [33e0135a-fb3e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = staticinvoke <org.apache.hadoop.ipc.RetryCache$CacheEntry: long access$000(org.apache.hadoop.ipc.RetryCache$CacheEntry)>(newEntry) AT LINE 267 with ID [33e0135a-fb3e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack30) AT LINE 267 with ID [33e0135a-fb3e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = staticinvoke <org.apache.hadoop.ipc.RetryCache$CacheEntry: long access$100(org.apache.hadoop.ipc.RetryCache$CacheEntry)>(newEntry) AT LINE 267 with ID [33e0135a-fb3e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack32) AT LINE 267 with ID [33e0135a-fb3e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callId ") AT LINE 267 with ID [33e0135a-fb3e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = staticinvoke <org.apache.hadoop.ipc.RetryCache$CacheEntry: int access$200(org.apache.hadoop.ipc.RetryCache$CacheEntry)>(newEntry) AT LINE 267 with ID [33e0135a-fb3e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack35) AT LINE 267 with ID [33e0135a-fb3e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to retryCache") AT LINE 267 with ID [33e0135a-fb3e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 267 with ID [33e0135a-fb3e]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void trace(java.lang.String)>($stack38) AT LINE 267 with ID [33e0135a-fb3e]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if failureState != $stack22 goto throw failure at line 472 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.service.launcher.ServiceLauncher: org.apache.hadoop.util.ExitUtil$ExitException launchService(org.apache.hadoop.conf.Configuration,java.util.List,boolean,boolean)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 475 with ID [f2678ac3-1a69]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Failure during shutdown: {} ", failure, failure) AT LINE 475 with ID [f2678ac3-1a69]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if operation != $stack64 goto $stack65 = new org.apache.hadoop.yarn.exceptions.YarnRuntimeException at line 902 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if alternatePathInfo != null goto appDirPath = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore$ZnodeSplitInfo: java.lang.String access$000(org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore$ZnodeSplitInfo)>(alternatePathInfo) at line 901 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void handleApplicationAttemptStateOp(org.apache.hadoop.yarn.api.records.ApplicationAttemptId,org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationAttemptStateData,org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore$AppAttemptOp)> has 17 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 917 with ID [3bb28af6-ad5f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(operation) AT LINE 917 with ID [3bb28af6-ad5f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" info for attempt: ") AT LINE 917 with ID [3bb28af6-ad5f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appAttemptId) AT LINE 917 with ID [3bb28af6-ad5f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at: ") AT LINE 917 with ID [3bb28af6-ad5f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(alternatePathInfo#3) AT LINE 917 with ID [3bb28af6-ad5f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 917 with ID [3bb28af6-ad5f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack50.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack56) AT LINE 917 with ID [3bb28af6-ad5f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 929 with ID [7c7f0717-4705]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Path ") AT LINE 929 with ID [7c7f0717-4705]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(alternatePathInfo#3) AT LINE 929 with ID [7c7f0717-4705]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 929 with ID [7c7f0717-4705]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appAttemptId) AT LINE 929 with ID [7c7f0717-4705]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" didn\'t exist.") AT LINE 929 with ID [7c7f0717-4705]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Created a new znode to update the application attempt state.") AT LINE 929 with ID [7c7f0717-4705]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 929 with ID [7c7f0717-4705]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack45) AT LINE 929 with ID [7c7f0717-4705]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if mi == null goto (branch) at line 211 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack10 == 0 goto (branch) at line 210 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.CachedHistoryStorage: java.util.Map getAllPartialJobs()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = <org.apache.hadoop.mapreduce.v2.hs.CachedHistoryStorage: org.apache.commons.logging.Log LOG> AT LINE 207 with ID [601fd9ee-c541]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Called getAllPartialJobs()") AT LINE 207 with ID [601fd9ee-c541]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack136 > 0 goto $stack123 = virtualinvoke this.<org.apache.hadoop.hdfs.DFSOutputStream: org.apache.hadoop.hdfs.DataStreamer getStreamer()>() at line 629 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSOutputStream: void flushOrSync(boolean,java.util.EnumSet)> has 12 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 597 with ID [839f0c44-7790]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = newarray (java.lang.Object)[3] AT LINE 597 with ID [839f0c44-7790]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke this.<org.apache.hadoop.hdfs.DFSOutputStream: org.apache.hadoop.hdfs.DataStreamer getStreamer()>() AT LINE 597 with ID [839f0c44-7790]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<org.apache.hadoop.hdfs.DataStreamer: long getBytesCurBlock()>() AT LINE 597 with ID [839f0c44-7790]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack27) AT LINE 597 with ID [839f0c44-7790]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22[0] = $stack28 AT LINE 597 with ID [839f0c44-7790]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = this.<org.apache.hadoop.hdfs.DFSOutputStream: long lastFlushOffset> AT LINE 597 with ID [839f0c44-7790]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack29) AT LINE 597 with ID [839f0c44-7790]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22[1] = $stack31 AT LINE 597 with ID [839f0c44-7790]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(endBlock) AT LINE 597 with ID [839f0c44-7790]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22[2] = $stack33 AT LINE 597 with ID [839f0c44-7790]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("DFSClient flush():  bytesCurBlock={}, lastFlushOffset={}, createNewBlock={}", $stack22) AT LINE 597 with ID [839f0c44-7790]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack30 goto $stack32 = this.<org.apache.hadoop.hdfs.server.datanode.checker.DatasetVolumeChecker: long maxAllowedTimeForCheckMs> at line 206 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack20 != 0 goto $stack21 = this.<org.apache.hadoop.hdfs.server.datanode.checker.DatasetVolumeChecker: org.apache.hadoop.util.Timer timer> at line 193 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack18 >= 0 goto references = interfaceinvoke dataset.<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsDatasetSpi: org.apache.hadoop.hdfs.server.datanode.fsdataset.FsDatasetSpi$FsVolumeReferences getFsVolumeReferences()>() at line 181 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.checker.DatasetVolumeChecker: java.util.Set checkAllVolumes(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsDatasetSpi)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack73 = <org.apache.hadoop.hdfs.server.datanode.checker.DatasetVolumeChecker: org.slf4j.Logger LOG> AT LINE 183 with ID [96dd7ade-795e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack75 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(gap) AT LINE 183 with ID [96dd7ade-795e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack76 = this.<org.apache.hadoop.hdfs.server.datanode.checker.DatasetVolumeChecker: long minDiskCheckGapMs> AT LINE 183 with ID [96dd7ade-795e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack77 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack76) AT LINE 183 with ID [96dd7ade-795e]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack73.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Skipped checking all volumes, time since last check {} is less than the minimum gap between checks ({} ms).", $stack75, $stack77) AT LINE 183 with ID [96dd7ade-795e]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack85 == 0 goto (branch) at line 1279 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto arr$#28 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(" ", classPathEntryList) at line 1271 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack24 goto tmp$582477333 = new java.io.File at line 1254 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.fs.FileUtil: java.lang.String[] createJarWithClassPath(java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.util.Map)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack93 = <org.apache.hadoop.fs.FileUtil: org.slf4j.Logger LOG> AT LINE 1264 with ID [626996f5-aff2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack94 = virtualinvoke tmp$1946303697.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mkdirs false for ") AT LINE 1264 with ID [626996f5-aff2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack95 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(i#9) AT LINE 1264 with ID [626996f5-aff2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack96 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", execution will continue") AT LINE 1264 with ID [626996f5-aff2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1264 with ID [626996f5-aff2]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack93.<org.slf4j.Logger: void debug(java.lang.String)>($stack97) AT LINE 1264 with ID [626996f5-aff2]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack128 != null goto $stack130 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewer: org.apache.commons.logging.Log LOG> at line 237 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack57 = new org.apache.hadoop.fs.Path at line 178 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if j >= 4 goto i = i + 1 at line 139 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= 3 goto $stack24 = new org.apache.hadoop.fs.Path at line 135 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewer: void createOriginalFSImage()> has 12 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> t = arr$[i$] AT LINE 238 with ID [9d9d4842-5e7d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack137 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewer: org.apache.commons.logging.Log LOG> AT LINE 179 with ID [9d9d4842-5e7d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack138 = virtualinvoke $stack136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("got token ") AT LINE 179 with ID [9d9d4842-5e7d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack139 = virtualinvoke $stack138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(t) AT LINE 179 with ID [9d9d4842-5e7d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack140 = virtualinvoke $stack139.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 179 with ID [9d9d4842-5e7d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack137.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack140) AT LINE 179 with ID [9d9d4842-5e7d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack130 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewer: org.apache.commons.logging.Log LOG> AT LINE 240 with ID [3034d4f4-1c24]
2020-08-25 12:10:05 [INFO] - 	 -> $stack131 = virtualinvoke $stack129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("original FS image file is ") AT LINE 240 with ID [3034d4f4-1c24]
2020-08-25 12:10:05 [INFO] - 	 -> $stack132 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewer: java.io.File originalFsimage> AT LINE 240 with ID [3034d4f4-1c24]
2020-08-25 12:10:05 [INFO] - 	 -> $stack133 = virtualinvoke $stack131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack132) AT LINE 240 with ID [3034d4f4-1c24]
2020-08-25 12:10:05 [INFO] - 	 -> $stack134 = virtualinvoke $stack133.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 240 with ID [3034d4f4-1c24]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack130.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack134) AT LINE 240 with ID [3034d4f4-1c24]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack3 != 0 goto $stack4 = new org.apache.hadoop.fs.Path at line 1024 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter$AttemptDirCache: org.apache.hadoop.fs.Path getAppRootDir(java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = staticinvoke <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: org.apache.commons.logging.Log access$000()>() AT LINE 1031 with ID [0e524cd4-7d68]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New user directory created - ") AT LINE 1031 with ID [0e524cd4-7d68]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(userDir) AT LINE 1031 with ID [0e524cd4-7d68]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1031 with ID [0e524cd4-7d68]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 1031 with ID [0e524cd4-7d68]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy newBlockReader(org.apache.hadoop.hdfs.client.impl.DfsClientConf,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.security.token.Token,org.apache.hadoop.hdfs.protocol.DatanodeInfo,long,long,org.apache.hadoop.fs.StorageType,org.apache.htrace.core.Tracer)> has 17 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: org.slf4j.Logger LOG> AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = newarray (java.lang.Object)[5] AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34[0] = blkfile AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke blkfile.<java.io.File: long length()>() AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack38) AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34[1] = $stack39 AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(startOffset) AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34[2] = $stack41 AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(length) AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34[3] = $stack43 AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> if skipChecksumCheck != 0 goto $stack59 = 0 AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = 1 AT LINE 256 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> goto [?= $stack45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack59)] AT LINE 256 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = 0 AT LINE 256 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack59) AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34[4] = $stack45 AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("New BlockReaderLocalLegacy for file {} of size {} startOffset {} length {} short circuit checksum {}", $stack34) AT LINE 228 with ID [5d9bd2d7-d0ee]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: void ignoreSnapshotName(long)> has 6 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: org.slf4j.Logger LOG> AT LINE 641 with ID [506e81cf-436e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = interfaceinvoke $stack2.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 641 with ID [506e81cf-436e]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack3 == 0 goto $stack4 = new org.apache.hadoop.hdfs.tools.offlineImageViewer.IgnoreSnapshotException AT LINE 641 with ID [506e81cf-436e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: org.slf4j.Logger LOG> AT LINE 642 with ID [506e81cf-436e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(inode) AT LINE 642 with ID [506e81cf-436e]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("No snapshot name found for inode {}", $stack7) AT LINE 642 with ID [506e81cf-436e]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack74 goto interfaceinvoke i$#3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(b, l) at line 227 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack65 == 0 goto k = k + 1 at line 269 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if j >= $stack36 goto (branch) at line 247 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack26 == 0 goto $stack27 = interfaceinvoke metadatas.<java.util.Map: java.util.Set entrySet()>() at line 225 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack24 = new java.util.HashMap at line 217 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.BlockStorageLocationUtil: java.util.Map associateVolumeIdsWithBlocks(java.util.List,java.util.Map)> has 11 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hdfs.BlockStorageLocationUtil: org.slf4j.Logger LOG> AT LINE 256 with ID [625564ff-e373]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No data for block ") AT LINE 256 with ID [625564ff-e373]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(blockId) AT LINE 256 with ID [625564ff-e373]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 256 with ID [625564ff-e373]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String)>($stack49) AT LINE 256 with ID [625564ff-e373]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = <org.apache.hadoop.hdfs.BlockStorageLocationUtil: org.slf4j.Logger LOG> AT LINE 275 with ID [699c6a7b-dae2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = interfaceinvoke $stack61.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 275 with ID [699c6a7b-dae2]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack62 == 0 goto j = j + 1 AT LINE 275 with ID [699c6a7b-dae2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = <org.apache.hadoop.hdfs.BlockStorageLocationUtil: org.slf4j.Logger LOG> AT LINE 276 with ID [699c6a7b-dae2]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack63.<org.slf4j.Logger: void debug(java.lang.String)>("Datanode responded with a block volume id we did not request, omitting.") AT LINE 276 with ID [699c6a7b-dae2]
2020-08-25 12:10:05 [INFO] - 	 -> goto [?= j = j + 1] AT LINE 276 with ID [699c6a7b-dae2]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if rmApp == null goto (branch) at line 406 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack19 == 0 goto return at line 389 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack54 == 0 goto $stack56 = <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: org.apache.commons.logging.Log LOG> at line 403 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = this.<org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: org.apache.hadoop.yarn.util.MonotonicClock mclock> at line 386 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: void logDecommissioningNodesStatus()> has 71 units and 11 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: org.apache.hadoop.yarn.util.MonotonicClock mclock> AT LINE 388 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> now = virtualinvoke $stack14.<org.apache.hadoop.yarn.util.MonotonicClock: long getTime()>() AT LINE 388 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> sb = $stack21 AT LINE 390 with ID [a0f8b938-056f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = newarray (java.lang.Object)[5] AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext: org.apache.hadoop.yarn.api.records.NodeId access$1200(org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext)>(d) AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<org.apache.hadoop.yarn.api.records.NodeId: java.lang.String getHost()>() AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack24[0] = $stack28 AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext: long access$800(org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext)>(d) AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = now - $stack30 AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = $stack31 / 1000L AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack32) AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack24[1] = $stack33 AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext: long access$400(org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext)>(d) AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = now - $stack35 AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = $stack36 / 1000L AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack37) AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack24[2] = $stack38 AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext: int access$600(org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext)>(d) AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack40) AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack24[3] = $stack41 AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack24[4] = s AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%n  %-34s %4ds fresh:%3ds containers:%2d %14s", $stack24) AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack42) AT LINE 392 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack99 = <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeStatus: org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeStatus WAIT_CONTAINER> AT LINE 415 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> if s != $stack99 goto $stack52 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext: java.util.Set access$500(org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext)>(d) AT LINE 415 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = newarray (java.lang.Object)[1] AT LINE 401 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: int getTimeoutInSec(org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher$DecommissioningNodeContext)>(d) AT LINE 401 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack48) AT LINE 401 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack45[0] = $stack49 AT LINE 401 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" timeout:%4ds", $stack45) AT LINE 401 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack50) AT LINE 401 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 417 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> aid = (org.apache.hadoop.yarn.api.records.ApplicationId) $stack62 AT LINE 417 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    ") AT LINE 404 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aid) AT LINE 404 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 404 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack66) AT LINE 404 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack68 = this.<org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: org.apache.hadoop.yarn.server.resourcemanager.RMContext rmContext> AT LINE 405 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack69 = interfaceinvoke $stack68.<org.apache.hadoop.yarn.server.resourcemanager.RMContext: java.util.concurrent.ConcurrentMap getRMApps()>() AT LINE 405 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack70 = interfaceinvoke $stack69.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(aid) AT LINE 405 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> rmApp = (org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp) $stack70 AT LINE 405 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> if rmApp == null goto (branch) AT LINE 406 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack72 = newarray (java.lang.Object)[4] AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack75 = interfaceinvoke rmApp.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp: org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMAppState getState()>() AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack72[0] = $stack75 AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack77 = interfaceinvoke rmApp.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp: java.lang.String getApplicationType()>() AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> if $stack77 != null goto $stack78 = interfaceinvoke rmApp.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp: java.lang.String getApplicationType()>() AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack78 = "" AT LINE 415 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> goto [?= $stack72[1] = $stack78] AT LINE 415 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack78 = interfaceinvoke rmApp.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp: java.lang.String getApplicationType()>() AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack72[1] = $stack78 AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack81 = interfaceinvoke rmApp.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp: float getProgress()>() AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack82 = (double) $stack81 AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack83 = 100.0 * $stack82 AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack84 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack83) AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack72[2] = $stack84 AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack85 = this.<org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: org.apache.hadoop.yarn.util.MonotonicClock mclock> AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack87 = virtualinvoke $stack85.<org.apache.hadoop.yarn.util.MonotonicClock: long getTime()>() AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack88 = interfaceinvoke rmApp.<org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp: long getStartTime()>() AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack89 = $stack87 - $stack88 AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack90 = $stack89 / 1000L AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack91 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack90) AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack72[3] = $stack91 AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack92 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %s %9s %5.2f%% %5ds", $stack72) AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack92) AT LINE 407 with ID []
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = <org.apache.hadoop.yarn.server.resourcemanager.DecommissioningNodesWatcher: org.apache.commons.logging.Log LOG> AT LINE 416 with ID [a0f8b938-056f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decommissioning node: ") AT LINE 416 with ID [a0f8b938-056f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 416 with ID [a0f8b938-056f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack58) AT LINE 416 with ID [a0f8b938-056f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 416 with ID [a0f8b938-056f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack56.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack60) AT LINE 416 with ID [a0f8b938-056f]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = <org.apache.hadoop.hdfs.server.namenode.FSImageFormatProtobuf$SectionName: org.apache.hadoop.hdfs.server.namenode.FSImageFormatProtobuf$SectionName STRING_TABLE> at line 1638 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: void writeStringTableSection()> has 17 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.commons.logging.Log LOG> AT LINE 1631 with ID [d1e7b94b-19a1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = <org.apache.hadoop.hdfs.server.namenode.FSImageFormatProtobuf$SectionName: org.apache.hadoop.hdfs.server.namenode.FSImageFormatProtobuf$SectionName STRING_TABLE> AT LINE 1631 with ID [d1e7b94b-19a1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<org.apache.hadoop.hdfs.server.namenode.FSImageFormatProtobuf$SectionName: java.lang.String name()>() AT LINE 1631 with ID [d1e7b94b-19a1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack45) AT LINE 1631 with ID [d1e7b94b-19a1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" writing header: {") AT LINE 1631 with ID [d1e7b94b-19a1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = staticinvoke <com.google.protobuf.TextFormat: java.lang.String printToString(com.google.protobuf.MessageOrBuilder)>(sectionHeader) AT LINE 1631 with ID [d1e7b94b-19a1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48) AT LINE 1631 with ID [d1e7b94b-19a1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") AT LINE 1631 with ID [d1e7b94b-19a1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1631 with ID [d1e7b94b-19a1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack43.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack51) AT LINE 1631 with ID [d1e7b94b-19a1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.commons.logging.Log LOG> AT LINE 1645 with ID [316c79dc-cb63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing string table entry: {") AT LINE 1645 with ID [316c79dc-cb63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = staticinvoke <com.google.protobuf.TextFormat: java.lang.String printToString(com.google.protobuf.MessageOrBuilder)>(stEntry) AT LINE 1645 with ID [316c79dc-cb63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack36) AT LINE 1645 with ID [316c79dc-cb63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") AT LINE 1645 with ID [316c79dc-cb63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1645 with ID [316c79dc-cb63]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack39) AT LINE 1645 with ID [316c79dc-cb63]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack37 != null goto $stack39 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForXAttr: org.apache.commons.logging.Log LOG> at line 96 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForXAttr: void createOriginalFSImage()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForXAttr: org.apache.commons.logging.Log LOG> AT LINE 99 with ID [f16cd054-0ee7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("original FS image file is ") AT LINE 99 with ID [f16cd054-0ee7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForXAttr: java.io.File originalFsimage> AT LINE 99 with ID [f16cd054-0ee7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack41) AT LINE 99 with ID [f16cd054-0ee7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 99 with ID [f16cd054-0ee7]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack39.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack43) AT LINE 99 with ID [f16cd054-0ee7]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.apache.hadoop.yarn.server.api.records.NodeStatus getNodeStatus(int)> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger LOG> AT LINE 466 with ID [b58edad0-aa26]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node\'s health-status : ") AT LINE 466 with ID [b58edad0-aa26]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke nodeHealthStatus.<org.apache.hadoop.yarn.server.api.records.NodeHealthStatus: boolean getIsNodeHealthy()>() AT LINE 466 with ID [b58edad0-aa26]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack29) AT LINE 466 with ID [b58edad0-aa26]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 466 with ID [b58edad0-aa26]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke nodeHealthStatus.<org.apache.hadoop.yarn.server.api.records.NodeHealthStatus: java.lang.String getHealthReport()>() AT LINE 466 with ID [b58edad0-aa26]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32) AT LINE 466 with ID [b58edad0-aa26]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 466 with ID [b58edad0-aa26]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String)>($stack34) AT LINE 466 with ID [b58edad0-aa26]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack26 > 0 goto $stack27 = nextWait * 2L at line 182 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSInotifyEventInputStream: org.apache.hadoop.hdfs.inotify.EventBatch poll(long,java.util.concurrent.TimeUnit)> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hdfs.DFSInotifyEventInputStream: org.slf4j.Logger LOG> AT LINE 183 with ID [15add504-e59a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String)>("timed poll(): timed out") AT LINE 183 with ID [15add504-e59a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.DFSInotifyEventInputStream: org.slf4j.Logger LOG> AT LINE 190 with ID [bbdf8f5c-c61c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(nextWait) AT LINE 190 with ID [bbdf8f5c-c61c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("timed poll(): poll() returned null, sleeping for {} ms", $stack31) AT LINE 190 with ID [bbdf8f5c-c61c]
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.mapreduce.lib.db.DBInputFormat: void closeConnection()>
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficControlBandwidthHandlerImpl: java.util.List teardown()> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack1 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficControlBandwidthHandlerImpl: org.slf4j.Logger LOG> AT LINE 274 with ID [56f81a18-b99b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = interfaceinvoke $stack1.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 274 with ID [56f81a18-b99b]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack2 == 0 goto return null AT LINE 274 with ID [56f81a18-b99b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficControlBandwidthHandlerImpl: org.slf4j.Logger LOG> AT LINE 275 with ID [56f81a18-b99b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("teardown(): Nothing to do") AT LINE 275 with ID [56f81a18-b99b]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack3 != 0 goto $stack4 = this.<org.apache.hadoop.hdfs.DFSInputStream: org.apache.hadoop.hdfs.DFSClient dfsClient> at line 741 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSInputStream: void close()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 742 with ID [e3253076-2a73]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String)>("DFSInputStream has been closed already") AT LINE 742 with ID [e3253076-2a73]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack24 goto return at line 236 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 != $stack13 goto $stack15 = <org.apache.hadoop.yarn.webapp.WebApp: com.google.common.base.Splitter pathSplitter> at line 225 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.webapp.Dispatcher: void setMoreParams(org.apache.hadoop.yarn.webapp.Controller$RequestContext,java.lang.String,org.apache.hadoop.yarn.webapp.Router$Dest)> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = <org.apache.hadoop.yarn.webapp.Dispatcher: org.slf4j.Logger LOG> AT LINE 229 with ID [374a0a26-33c0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = dest.<org.apache.hadoop.yarn.webapp.Router$Dest: com.google.common.collect.ImmutableList pathParams> AT LINE 229 with ID [374a0a26-33c0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("parts={}, params={}", parts, $stack20) AT LINE 229 with ID [374a0a26-33c0]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack42 == 0 goto $stack43 = interfaceinvoke path1.<java.util.List: java.lang.Object get(int)>(i) at line 141 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack26 >= 0 goto (branch) at line 129 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack18 == 0 goto return at line 125 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack23 == 0 goto (branch) at line 126 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack63 == 0 goto (branch) at line 151 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack51 == 0 goto (branch) at line 156 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if p2 >= p1 goto (branch) at line 154 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if p1 >= p2 goto (branch) at line 149 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.QueuePriorityContainerCandidateSelector: void intializePriorityDigraph()> has 19 units and 4 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.QueuePriorityContainerCandidateSelector: org.apache.commons.logging.Log LOG> AT LINE 121 with ID [f06fc76d-0ddb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = interfaceinvoke $stack13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 121 with ID [f06fc76d-0ddb]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack14 == 0 goto $stack15 = this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.QueuePriorityContainerCandidateSelector: org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.CapacitySchedulerPreemptionContext preemptionContext> AT LINE 121 with ID [f06fc76d-0ddb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack75 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.QueuePriorityContainerCandidateSelector: org.apache.commons.logging.Log LOG> AT LINE 122 with ID [f06fc76d-0ddb]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack75.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Initializing priority preemption directed graph:") AT LINE 122 with ID [f06fc76d-0ddb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack65 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.QueuePriorityContainerCandidateSelector: org.apache.commons.logging.Log LOG> AT LINE 152 with ID [be85ebc9-871b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack66 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("- Added priority ordering edge: ") AT LINE 152 with ID [be85ebc9-871b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(q2) AT LINE 152 with ID [be85ebc9-871b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >> ") AT LINE 152 with ID [be85ebc9-871b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(q1) AT LINE 152 with ID [be85ebc9-871b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 152 with ID [be85ebc9-871b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack65.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack70) AT LINE 152 with ID [be85ebc9-871b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.QueuePriorityContainerCandidateSelector: org.apache.commons.logging.Log LOG> AT LINE 157 with ID [c4b1b145-643f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("- Added priority ordering edge: ") AT LINE 157 with ID [c4b1b145-643f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(q1) AT LINE 157 with ID [c4b1b145-643f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >> ") AT LINE 157 with ID [c4b1b145-643f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(q2) AT LINE 157 with ID [c4b1b145-643f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 157 with ID [c4b1b145-643f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack53.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack58) AT LINE 157 with ID [c4b1b145-643f]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if url != null goto connection = virtualinvoke url.<java.net.URL: java.net.URLConnection openConnection()>() at line 2690 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.conf.Configuration: javax.xml.stream.XMLStreamReader parse(java.net.URL,boolean)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = <org.apache.hadoop.conf.Configuration: org.slf4j.Logger LOG> AT LINE 2687 with ID [feae2a6c-238b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing URL ") AT LINE 2687 with ID [feae2a6c-238b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(url) AT LINE 2687 with ID [feae2a6c-238b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2687 with ID [feae2a6c-238b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 2687 with ID [feae2a6c-238b]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if added == 0 goto (branch) at line 208 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack23 != 0 goto renamedIIP = virtualinvoke tx.<org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameOperation: org.apache.hadoop.hdfs.server.namenode.INodesInPath addSourceToDestination()>() at line 202 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if ignored != null goto $stack21 = fsd.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.EncryptionZoneManager ezManager> at line 183 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack19 == null goto ignored = virtualinvoke dstIIP.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getINode(int)>(-2) at line 176 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack18 == 0 goto staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp: void validateDestination(java.lang.String,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INode)>(e#3, dst, srcInode) at line 166 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack75 != 0 goto srcInode = virtualinvoke srcIIP.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getLastINode()>() at line 167 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp: org.apache.hadoop.hdfs.server.namenode.INodesInPath unprotectedRenameTo(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.hdfs.server.namenode.INodesInPath,long)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 210 with ID [465cc6cd-9cfa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* FSDirectory.unprotectedRenameTo: ") AT LINE 210 with ID [465cc6cd-9cfa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e#3) AT LINE 210 with ID [465cc6cd-9cfa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is renamed to ") AT LINE 210 with ID [465cc6cd-9cfa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dst) AT LINE 210 with ID [465cc6cd-9cfa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 210 with ID [465cc6cd-9cfa]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>($stack47) AT LINE 210 with ID [465cc6cd-9cfa]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if stat != null goto return stat at line 453 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.apache.zookeeper.data.Stat zkStat(java.lang.String)> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 446 with ID [a73328b9-ee4d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 446 with ID [a73328b9-ee4d]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack7 == 0 goto $stack8 = this.<org.apache.hadoop.registry.client.impl.zk.CuratorService: org.apache.curator.framework.CuratorFramework curator> AT LINE 446 with ID [a73328b9-ee4d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 447 with ID [a73328b9-ee4d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Stat {}", fullpath) AT LINE 447 with ID [a73328b9-ee4d]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.webapp.Router: org.apache.hadoop.yarn.webapp.Router$Dest addWithOptionalDefaultView(org.apache.hadoop.yarn.webapp.WebApp$HTTP,java.lang.String,java.lang.Class,java.lang.String,java.util.List,boolean)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.webapp.Router: org.slf4j.Logger LOG> AT LINE 98 with ID [7ac68017-f882]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = newarray (java.lang.Object)[4] AT LINE 98 with ID [7ac68017-f882]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8[0] = path AT LINE 98 with ID [7ac68017-f882]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8[1] = names AT LINE 98 with ID [7ac68017-f882]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8[2] = cls AT LINE 98 with ID [7ac68017-f882]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8[3] = action AT LINE 98 with ID [7ac68017-f882]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("adding {}({})->{}#{}", $stack8) AT LINE 98 with ID [7ac68017-f882]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = this.<org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.User user> at line 1298 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if login != null goto now = staticinvoke <org.apache.hadoop.util.Time: long now()>() at line 1294 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack10 != 0 goto login = specialinvoke this.<org.apache.hadoop.security.UserGroupInformation: javax.security.auth.login.LoginContext getLogin()>() at line 1291 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.UserGroupInformation: void reloginFromTicketCache()> has 12 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 1305 with ID [b0ba515b-6b40]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initiating logout for ") AT LINE 1305 with ID [b0ba515b-6b40]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke this.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getUserName()>() AT LINE 1305 with ID [b0ba515b-6b40]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack36) AT LINE 1305 with ID [b0ba515b-6b40]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1305 with ID [b0ba515b-6b40]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String)>($stack38) AT LINE 1305 with ID [b0ba515b-6b40]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 1317 with ID [74694b60-48ba]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initiating re-login for ") AT LINE 1317 with ID [74694b60-48ba]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke this.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getUserName()>() AT LINE 1317 with ID [74694b60-48ba]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 1317 with ID [74694b60-48ba]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1317 with ID [74694b60-48ba]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack28) AT LINE 1317 with ID [74694b60-48ba]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 95 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.federation.store.metrics.FederationStateStoreClientMetrics: void <init>()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.server.federation.store.metrics.FederationStateStoreClientMetrics: org.slf4j.Logger LOG> AT LINE 97 with ID [33c866e4-8f21]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Registering Federation StateStore Client metrics for {}", methodName) AT LINE 97 with ID [33c866e4-8f21]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataNode: org.apache.hadoop.hdfs.server.protocol.InterDatanodeProtocol createInterDataNodeProtocolProxy(org.apache.hadoop.hdfs.protocol.DatanodeID,org.apache.hadoop.conf.Configuration,int,boolean)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 1766 with ID [482e6685-ce30]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to datanode ") AT LINE 1766 with ID [482e6685-ce30]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dnAddr) AT LINE 1766 with ID [482e6685-ce30]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" addr=") AT LINE 1766 with ID [482e6685-ce30]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(addr) AT LINE 1766 with ID [482e6685-ce30]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1766 with ID [482e6685-ce30]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 1766 with ID [482e6685-ce30]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack7 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>() at line 241 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.util.ExitUtil: void halt(org.apache.hadoop.util.ExitUtil$HaltException)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.util.ExitUtil: org.slf4j.Logger LOG> AT LINE 235 with ID [7eccc01c-8471]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = newarray (java.lang.Object)[3] AT LINE 235 with ID [7eccc01c-8471]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(status) AT LINE 235 with ID [7eccc01c-8471]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11[0] = $stack15 AT LINE 235 with ID [7eccc01c-8471]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11[1] = msg AT LINE 235 with ID [7eccc01c-8471]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11[2] = ee AT LINE 235 with ID [7eccc01c-8471]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Halt with status {}: {}", $stack11) AT LINE 235 with ID [7eccc01c-8471]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DataStreamer: void initDataStreaming()> has 15 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 616 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = interfaceinvoke $stack9.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 616 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack10 == 0 goto $stack11 = new org.apache.hadoop.hdfs.DataStreamer$ResponseProcessor AT LINE 616 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 617 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = newarray (java.lang.Object)[3] AT LINE 617 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = this.<org.apache.hadoop.hdfs.DataStreamer: org.apache.hadoop.hdfs.protocol.DatanodeInfo[] nodes> AT LINE 617 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($stack16) AT LINE 617 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15[0] = $stack20 AT LINE 617 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.hdfs.DataStreamer: org.apache.hadoop.fs.StorageType[] storageTypes> AT LINE 617 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($stack21) AT LINE 617 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15[1] = $stack23 AT LINE 617 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = this.<org.apache.hadoop.hdfs.DataStreamer: java.lang.String[] storageIDs> AT LINE 617 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($stack24) AT LINE 617 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15[2] = $stack26 AT LINE 617 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("nodes {} storageTypes {} storageIDs {}", $stack15) AT LINE 617 with ID [da3cdccb-18de]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.store.driver.impl.StateStoreFileImpl: java.io.BufferedWriter getWriter(java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hdfs.server.federation.store.driver.impl.StateStoreFileImpl: org.slf4j.Logger LOG> AT LINE 120 with ID [153a6d3e-7c20]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Writing file: {}", filename) AT LINE 120 with ID [153a6d3e-7c20]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$Connection: org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto buildSaslResponse(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslState,byte[])> has 13 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 1927 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Will send ") AT LINE 1927 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(state) AT LINE 1927 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" token of size ") AT LINE 1927 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [INFO] - 	 -> if replyToken == null goto $stack24 = null AT LINE 1927 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = lengthof replyToken AT LINE 1933 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack23) AT LINE 1933 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [INFO] - 	 -> goto [?= $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24)] AT LINE 1933 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = null AT LINE 1933 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24) AT LINE 1927 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from saslServer.") AT LINE 1927 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1927 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 1927 with ID [920fd9eb-3c63]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if acl != null goto $stack16 = virtualinvoke acl.<org.apache.hadoop.security.authorize.AccessControlList: boolean isUserAllowed(org.apache.hadoop.security.UserGroupInformation)>(ugi) at line 261 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack10 = <org.apache.hadoop.mapred.QueueManager: org.apache.commons.logging.Log LOG> at line 250 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack33 != 0 goto $stack9 = virtualinvoke this.<org.apache.hadoop.mapred.QueueManager: boolean areAclsEnabled()>() at line 251 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if q != null goto $stack8 = virtualinvoke q.<org.apache.hadoop.mapred.Queue: java.util.Set getChildren()>() at line 240 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.QueueManager: boolean hasAccess(java.lang.String,org.apache.hadoop.mapred.QueueACL,org.apache.hadoop.security.UserGroupInformation)> has 10 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = <org.apache.hadoop.mapred.QueueManager: org.apache.commons.logging.Log LOG> AT LINE 255 with ID [319dc9fa-ddf8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking access for the acl ") AT LINE 255 with ID [319dc9fa-ddf8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke qACL.<org.apache.hadoop.mapred.QueueACL: java.lang.String getAclName()>() AT LINE 255 with ID [319dc9fa-ddf8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = staticinvoke <org.apache.hadoop.mapred.QueueManager: java.lang.String toFullPropertyName(java.lang.String,java.lang.String)>(queueName, $stack20) AT LINE 255 with ID [319dc9fa-ddf8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 255 with ID [319dc9fa-ddf8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ") AT LINE 255 with ID [319dc9fa-ddf8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke ugi.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getShortUserName()>() AT LINE 255 with ID [319dc9fa-ddf8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) AT LINE 255 with ID [319dc9fa-ddf8]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 255 with ID [319dc9fa-ddf8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 255 with ID [319dc9fa-ddf8]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack10 <= 0 goto $stack11 = this.<org.apache.hadoop.metrics2.impl.MetricsSystemImpl: boolean monitoring> at line 594 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack8 > 0 goto $stack9 = this.<org.apache.hadoop.metrics2.impl.MetricsSystemImpl: int refCount> at line 590 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: boolean shutdown()> has 8 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.slf4j.Logger LOG> AT LINE 589 with ID [82798364-5d30]
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("refCount=") AT LINE 589 with ID [82798364-5d30]
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = this.<org.apache.hadoop.metrics2.impl.MetricsSystemImpl: int refCount> AT LINE 589 with ID [82798364-5d30]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack5) AT LINE 589 with ID [82798364-5d30]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 589 with ID [82798364-5d30]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>($stack7) AT LINE 589 with ID [82798364-5d30]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.slf4j.Logger LOG> AT LINE 591 with ID [1be0eb47-7087]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("Redundant shutdown", $stack32) AT LINE 591 with ID [1be0eb47-7087]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.JHSDelegationTokenSecretManager: void updateStoredToken(org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier,long)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = <org.apache.hadoop.mapreduce.v2.hs.JHSDelegationTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 129 with ID [93134f90-7787]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating token ") AT LINE 129 with ID [93134f90-7787]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke tokenId.<org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 129 with ID [93134f90-7787]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack12) AT LINE 129 with ID [93134f90-7787]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 129 with ID [93134f90-7787]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 129 with ID [93134f90-7787]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 > $stack11 goto $stack13 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> at line 828 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void storeApplicationStateInternal(org.apache.hadoop.yarn.api.records.ApplicationId,org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationStateData)> has 15 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 824 with ID [8a72056a-7128]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing info for app: ") AT LINE 824 with ID [8a72056a-7128]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 824 with ID [8a72056a-7128]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at: ") AT LINE 824 with ID [8a72056a-7128]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodeCreatePath) AT LINE 824 with ID [8a72056a-7128]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 824 with ID [8a72056a-7128]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack45) AT LINE 824 with ID [8a72056a-7128]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 833 with ID [9a8948e5-6a5e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application state data size for ") AT LINE 833 with ID [9a8948e5-6a5e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 833 with ID [9a8948e5-6a5e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ") AT LINE 833 with ID [9a8948e5-6a5e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = lengthof appStateData AT LINE 833 with ID [9a8948e5-6a5e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack27) AT LINE 833 with ID [9a8948e5-6a5e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 833 with ID [9a8948e5-6a5e]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 833 with ID [9a8948e5-6a5e]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler$MetaInfo: void closeWriter()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = staticinvoke <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.commons.logging.Log access$200()>() AT LINE 1552 with ID [e2dafa9a-4106]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Closing Writer") AT LINE 1552 with ID [e2dafa9a-4106]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack34 != 0 goto return ev at line 207 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if allowEnd != 0 goto return ev at line 200 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: javax.xml.stream.events.XMLEvent expectTag(java.lang.String,boolean)> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.commons.logging.Log LOG> AT LINE 218 with ID [d7061ac9-b6a4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping XMLEvent of type ") AT LINE 218 with ID [d7061ac9-b6a4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = interfaceinvoke ev.<javax.xml.stream.events.XMLEvent: int getEventType()>() AT LINE 218 with ID [d7061ac9-b6a4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack53) AT LINE 218 with ID [d7061ac9-b6a4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") AT LINE 218 with ID [d7061ac9-b6a4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(ev) AT LINE 218 with ID [d7061ac9-b6a4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 218 with ID [d7061ac9-b6a4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 218 with ID [d7061ac9-b6a4]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack51.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack58) AT LINE 218 with ID [d7061ac9-b6a4]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if nRead#3 > 0 goto $stack14 = (long) startPosition at line 292 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.TestClientReportBadBlock: void dfsClientReadFileFromPosition(org.apache.hadoop.fs.Path)>
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery$8: void run()> has 6 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log access$300()>() AT LINE 932 with ID [11c6cc90-b512]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("slowWriter creating rbw") AT LINE 932 with ID [11c6cc90-b512]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log access$300()>() AT LINE 936 with ID [c0045156-71ef]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("slowWriter created rbw") AT LINE 936 with ID [c0045156-71ef]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log access$300()>() AT LINE 940 with ID [a5b73984-8912]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("slowWriter exiting") AT LINE 940 with ID [a5b73984-8912]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.TestEditLog: void testEditLogFailOverFromCorrupt()> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.server.namenode.TestEditLog: org.apache.commons.logging.Log LOG> AT LINE 1477 with ID [5c2ef8f2-fd8d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupting Log File: ") AT LINE 1477 with ID [5c2ef8f2-fd8d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = files[0] AT LINE 1477 with ID [5c2ef8f2-fd8d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack47) AT LINE 1477 with ID [5c2ef8f2-fd8d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" len: ") AT LINE 1477 with ID [5c2ef8f2-fd8d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileLen) AT LINE 1477 with ID [5c2ef8f2-fd8d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1477 with ID [5c2ef8f2-fd8d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack45.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack51) AT LINE 1477 with ID [5c2ef8f2-fd8d]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.SecurityUtil: void setTokenService(org.apache.hadoop.security.token.Token,java.net.InetSocketAddress)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.security.SecurityUtil: org.slf4j.Logger LOG> AT LINE 426 with ID [2d9fa929-60c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Acquired token ") AT LINE 426 with ID [2d9fa929-60c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(token) AT LINE 426 with ID [2d9fa929-60c7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 426 with ID [2d9fa929-60c7]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 426 with ID [2d9fa929-60c7]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.BlockReader getRemoteBlockReaderFromTcp()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 734 with ID [41aa9546-831e]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("{}: trying to create a remote block reader from a TCP socket", this) AT LINE 734 with ID [41aa9546-831e]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack51 != $stack50 goto $stack52 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$CachingTask: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache this$0> at line 479 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack32 >= 0 goto reservedBytes = 1 at line 440 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$CachingTask: void run()> has 25 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack159 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger access$400()>() AT LINE 499 with ID [bae94976-8ab6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack162 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$CachingTask: org.apache.hadoop.hdfs.ExtendedBlockId key> AT LINE 499 with ID [bae94976-8ab6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack160 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$CachingTask: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache this$0> AT LINE 499 with ID [bae94976-8ab6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack163 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UsedBytesCount access$800(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache)>($stack160) AT LINE 499 with ID [bae94976-8ab6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack164 = virtualinvoke $stack163.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UsedBytesCount: long get()>() AT LINE 499 with ID [bae94976-8ab6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack165 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack164) AT LINE 499 with ID [bae94976-8ab6]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack159.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Caching of {} was aborted.  We are now caching only {} bytes in total.", $stack162, $stack165) AT LINE 499 with ID [bae94976-8ab6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack113 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger access$400()>() AT LINE 499 with ID [654210c3-b9ed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack116 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$CachingTask: org.apache.hadoop.hdfs.ExtendedBlockId key> AT LINE 499 with ID [654210c3-b9ed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack114 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$CachingTask: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache this$0> AT LINE 499 with ID [654210c3-b9ed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack117 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UsedBytesCount access$800(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache)>($stack114) AT LINE 499 with ID [654210c3-b9ed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack118 = virtualinvoke $stack117.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UsedBytesCount: long get()>() AT LINE 499 with ID [654210c3-b9ed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack119 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack118) AT LINE 499 with ID [654210c3-b9ed]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack113.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Caching of {} was aborted.  We are now caching only {} bytes in total.", $stack116, $stack119) AT LINE 499 with ID [654210c3-b9ed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger access$400()>() AT LINE 486 with ID [dd140ff1-92e7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$CachingTask: org.apache.hadoop.hdfs.ExtendedBlockId key> AT LINE 486 with ID [dd140ff1-92e7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(newUsedBytes) AT LINE 486 with ID [dd140ff1-92e7]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack59.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Successfully cached {}.  We are now caching {} bytes in total.", $stack61, $stack62) AT LINE 486 with ID [dd140ff1-92e7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack75 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger access$400()>() AT LINE 499 with ID [51fedf22-1169]
2020-08-25 12:10:05 [INFO] - 	 -> $stack78 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$CachingTask: org.apache.hadoop.hdfs.ExtendedBlockId key> AT LINE 499 with ID [51fedf22-1169]
2020-08-25 12:10:05 [INFO] - 	 -> $stack76 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$CachingTask: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache this$0> AT LINE 499 with ID [51fedf22-1169]
2020-08-25 12:10:05 [INFO] - 	 -> $stack79 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UsedBytesCount access$800(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache)>($stack76) AT LINE 499 with ID [51fedf22-1169]
2020-08-25 12:10:05 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$UsedBytesCount: long get()>() AT LINE 499 with ID [51fedf22-1169]
2020-08-25 12:10:05 [INFO] - 	 -> $stack81 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack80) AT LINE 499 with ID [51fedf22-1169]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack75.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Caching of {} was aborted.  We are now caching only {} bytes in total.", $stack78, $stack81) AT LINE 499 with ID [51fedf22-1169]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if node == row goto row = row.<org.apache.hadoop.examples.dancing.DancingLinks$Node: org.apache.hadoop.examples.dancing.DancingLinks$Node up> at line 247 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if row == col goto $stack11 = col.<org.apache.hadoop.examples.dancing.DancingLinks$ColumnHeader: org.apache.hadoop.examples.dancing.DancingLinks$Node right> at line 245 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.examples.dancing.DancingLinks: void uncoverColumn(org.apache.hadoop.examples.dancing.DancingLinks$ColumnHeader)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = <org.apache.hadoop.examples.dancing.DancingLinks: org.slf4j.Logger LOG> AT LINE 243 with ID [131c50f1-4b82]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uncover ") AT LINE 243 with ID [131c50f1-4b82]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = col.<org.apache.hadoop.examples.dancing.DancingLinks$ColumnHeader: org.apache.hadoop.examples.dancing.DancingLinks$ColumnHeader head> AT LINE 243 with ID [131c50f1-4b82]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = $stack7.<org.apache.hadoop.examples.dancing.DancingLinks$ColumnHeader: java.lang.Object name> AT LINE 243 with ID [131c50f1-4b82]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8) AT LINE 243 with ID [131c50f1-4b82]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 243 with ID [131c50f1-4b82]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>($stack10) AT LINE 243 with ID [131c50f1-4b82]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirDeleteOp: long delete(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo,java.util.List,java.util.List,long)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 55 with ID [1a96d649-d6b2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* FSDirectory.delete: ") AT LINE 55 with ID [1a96d649-d6b2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke iip.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>() AT LINE 55 with ID [1a96d649-d6b2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack38) AT LINE 55 with ID [1a96d649-d6b2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 55 with ID [1a96d649-d6b2]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void debug(java.lang.String)>($stack40) AT LINE 55 with ID [1a96d649-d6b2]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.apache.hadoop.security.UserGroupInformation getActualUgi()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = <org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.slf4j.Logger LOG> AT LINE 1088 with ID [c809a492-5b2c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>("Using loginUser when Kerberos is enabled but the actual user does not have either KMS Delegation Token or Kerberos Credentials") AT LINE 1088 with ID [c809a492-5b2c]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: void addOrUpdateDelegationKey(org.apache.hadoop.security.token.delegation.DelegationKey,boolean)> has 18 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 748 with ID [1a137b72-9aa0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing ZKDTSMDelegationKey_") AT LINE 748 with ID [1a137b72-9aa0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke key.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 748 with ID [1a137b72-9aa0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack50) AT LINE 748 with ID [1a137b72-9aa0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 748 with ID [1a137b72-9aa0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack48.<org.slf4j.Logger: void debug(java.lang.String)>($stack52) AT LINE 748 with ID [1a137b72-9aa0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 756 with ID [3b674e7a-7381]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key with path [") AT LINE 756 with ID [3b674e7a-7381]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodeCreatePath) AT LINE 756 with ID [3b674e7a-7381]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] already exists.. Updating !!") AT LINE 756 with ID [3b674e7a-7381]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 756 with ID [3b674e7a-7381]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>($stack46) AT LINE 756 with ID [3b674e7a-7381]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 763 with ID [f14e5643-7809]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating non existent Key path [") AT LINE 763 with ID [f14e5643-7809]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodeCreatePath) AT LINE 763 with ID [f14e5643-7809]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].. Adding new !!") AT LINE 763 with ID [f14e5643-7809]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 763 with ID [f14e5643-7809]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void debug(java.lang.String)>($stack34) AT LINE 763 with ID [f14e5643-7809]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.util.CgroupsLCEResourcesHandler: void logLineFromTasksFile(java.io.File)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.nodemanager.util.CgroupsLCEResourcesHandler: org.slf4j.Logger LOG> AT LINE 262 with ID [95590ed3-f59b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("First line in cgroup tasks file: ") AT LINE 262 with ID [95590ed3-f59b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(cgf) AT LINE 262 with ID [95590ed3-f59b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 262 with ID [95590ed3-f59b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(str) AT LINE 262 with ID [95590ed3-f59b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 262 with ID [95590ed3-f59b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack24) AT LINE 262 with ID [95590ed3-f59b]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if contentType != null goto $stack34 = this.<org.apache.hadoop.yarn.server.nodemanager.webapp.NMWebServices: org.apache.hadoop.yarn.server.nodemanager.Context nmContext> at line 414 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.server.nodemanager.webapp.NMWebServices: javax.ws.rs.core.Response getLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: void ref(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica)> has 33 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> removedFrom = specialinvoke this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: java.lang.String removeEvictable(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica)>(replica) AT LINE 389 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(removedFrom) AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer contains ") AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(replica) AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  refCount ") AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = replica.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: int refCount> AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = $stack45 - 1 AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack46) AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ") AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = replica.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: int refCount> AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack49) AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String getStackTrace(java.lang.Thread)>($stack51) AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack52) AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack38.<org.slf4j.Logger: void trace(java.lang.String)>($stack54) AT LINE 391 with ID [6ba8d941-6f65]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": replica  refCount ") AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = replica.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: int refCount> AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = $stack23 - 1 AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24) AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ") AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = replica.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: int refCount> AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack27) AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String getStackTrace(java.lang.Thread)>($stack29) AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30) AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void trace(java.lang.String)>($stack32) AT LINE 398 with ID [641f568e-faaa]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataNode: void checkDiskError()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 3256 with ID [55626a56-d332]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>("checkDiskError encountered no failures") AT LINE 3256 with ID [55626a56-d332]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack10 != 0 goto $stack11 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot[] slots> at line 589 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = new org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot at line 584 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if slotIdx < $stack5 goto $stack6 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: java.util.BitSet allocatedSlots> at line 580 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if slotIdx >= 0 goto $stack4 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot[] slots> at line 576 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot registerSlot(int,org.apache.hadoop.hdfs.ExtendedBlockId)> has 12 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: org.slf4j.Logger LOG> AT LINE 596 with ID [efd41e62-fedd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 596 with ID [efd41e62-fedd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": registerSlot ") AT LINE 596 with ID [efd41e62-fedd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(slotIdx) AT LINE 596 with ID [efd41e62-fedd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": allocatedSlots=") AT LINE 596 with ID [efd41e62-fedd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm: java.util.BitSet allocatedSlots> AT LINE 596 with ID [efd41e62-fedd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 596 with ID [efd41e62-fedd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 596 with ID [efd41e62-fedd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String getStackTrace(java.lang.Thread)>($stack23) AT LINE 596 with ID [efd41e62-fedd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) AT LINE 596 with ID [efd41e62-fedd]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 596 with ID [efd41e62-fedd]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void trace(java.lang.String)>($stack26) AT LINE 596 with ID [efd41e62-fedd]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.security.TimelineV1DelegationTokenSecretManagerService$TimelineV1DelegationTokenSecretManager: void storeNewMasterKey(org.apache.hadoop.security.token.delegation.DelegationKey)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.yarn.server.timeline.security.TimelineV1DelegationTokenSecretManagerService$TimelineV1DelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 143 with ID [ea02d4d6-747a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing master key ") AT LINE 143 with ID [ea02d4d6-747a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke key.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 143 with ID [ea02d4d6-747a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack10) AT LINE 143 with ID [ea02d4d6-747a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 143 with ID [ea02d4d6-747a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 143 with ID [ea02d4d6-747a]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack50 goto $stack51 = virtualinvoke query.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM ") at line 98 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.db.DataDrivenDBRecordReader: java.lang.String getSelectQuery()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = <org.apache.hadoop.mapreduce.lib.db.DataDrivenDBRecordReader: org.apache.commons.logging.Log LOG> AT LINE 133 with ID [bc8edeb0-6f48]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using query: ") AT LINE 133 with ID [bc8edeb0-6f48]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke query.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 133 with ID [bc8edeb0-6f48]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33) AT LINE 133 with ID [bc8edeb0-6f48]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 133 with ID [bc8edeb0-6f48]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 133 with ID [bc8edeb0-6f48]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.blacklist.SimpleBlacklistManager: org.apache.hadoop.yarn.api.records.ResourceBlacklistRequest getBlacklistUpdates()> has 12 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = <org.apache.hadoop.yarn.server.resourcemanager.blacklist.SimpleBlacklistManager: org.apache.commons.logging.Log LOG> AT LINE 70 with ID [b60293d6-e32b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blacklist size ") AT LINE 70 with ID [b60293d6-e32b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(currentBlacklistSize) AT LINE 70 with ID [b60293d6-e32b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is less than ") AT LINE 70 with ID [b60293d6-e32b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failure threshold ratio ") AT LINE 70 with ID [b60293d6-e32b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = this.<org.apache.hadoop.yarn.server.resourcemanager.blacklist.SimpleBlacklistManager: double blacklistDisableFailureThreshold> AT LINE 70 with ID [b60293d6-e32b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($stack38) AT LINE 70 with ID [b60293d6-e32b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of total usable nodes ") AT LINE 70 with ID [b60293d6-e32b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = this.<org.apache.hadoop.yarn.server.resourcemanager.blacklist.SimpleBlacklistManager: int numberOfNodeManagerHosts> AT LINE 70 with ID [b60293d6-e32b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack41) AT LINE 70 with ID [b60293d6-e32b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 70 with ID [b60293d6-e32b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack43) AT LINE 70 with ID [b60293d6-e32b]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack64 != 0 goto specialinvoke this.<org.apache.hadoop.hdfs.server.datanode.DataXceiver: void collectThreadLocalStates()>() at line 330 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack86 > 0 goto $stack83 = this.<org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.apache.hadoop.hdfs.net.Peer peer> at line 280 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataXceiver: void run()> has 10 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 326 with ID [622cf081-03dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = this.<org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.apache.hadoop.hdfs.server.datanode.DataNode datanode> AT LINE 326 with ID [622cf081-03dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<org.apache.hadoop.hdfs.server.datanode.DataNode: java.lang.String getDisplayName()>() AT LINE 326 with ID [622cf081-03dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack54 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack53) AT LINE 326 with ID [622cf081-03dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Number of active connections is: ") AT LINE 326 with ID [622cf081-03dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack56 = this.<org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.apache.hadoop.hdfs.server.datanode.DataNode datanode> AT LINE 326 with ID [622cf081-03dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<org.apache.hadoop.hdfs.server.datanode.DataNode: int getXceiverCount()>() AT LINE 326 with ID [622cf081-03dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack58 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack57) AT LINE 326 with ID [622cf081-03dc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 326 with ID [622cf081-03dc]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack51.<org.slf4j.Logger: void debug(java.lang.String)>($stack59) AT LINE 326 with ID [622cf081-03dc]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack94 <= 0 goto $stack95 = bytesRemaining cmp 0L at line 410 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack53 == 0 goto $stack54 = newarray (java.lang.String)[0] at line 397 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack31 == 0 goto $stack32 = interfaceinvoke job.<org.apache.hadoop.mapreduce.JobContext: org.apache.hadoop.conf.Configuration getConfiguration()>() at line 394 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: java.util.List getSplits(org.apache.hadoop.mapreduce.JobContext)> has 16 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack84 = <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: org.apache.commons.logging.Log LOG> AT LINE 428 with ID [639ade8c-ea49]
2020-08-25 12:10:05 [INFO] - 	 -> $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File is not splittable so no parallelization is possible: ") AT LINE 428 with ID [639ade8c-ea49]
2020-08-25 12:10:05 [INFO] - 	 -> $stack86 = virtualinvoke file.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() AT LINE 428 with ID [639ade8c-ea49]
2020-08-25 12:10:05 [INFO] - 	 -> $stack87 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack86) AT LINE 428 with ID [639ade8c-ea49]
2020-08-25 12:10:05 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 428 with ID [639ade8c-ea49]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack84.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack88) AT LINE 428 with ID [639ade8c-ea49]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: org.apache.commons.logging.Log LOG> AT LINE 444 with ID [58195306-8607]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total # of splits generated by getSplits: ") AT LINE 444 with ID [58195306-8607]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = interfaceinvoke splits.<java.util.List: int size()>() AT LINE 444 with ID [58195306-8607]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack42) AT LINE 444 with ID [58195306-8607]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", TimeTaken: ") AT LINE 444 with ID [58195306-8607]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> AT LINE 444 with ID [58195306-8607]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke sw.<org.apache.hadoop.util.StopWatch: long now(java.util.concurrent.TimeUnit)>($stack45) AT LINE 444 with ID [58195306-8607]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack46) AT LINE 444 with ID [58195306-8607]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 444 with ID [58195306-8607]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack48) AT LINE 444 with ID [58195306-8607]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable: void put(org.apache.hadoop.yarn.api.records.Priority,java.lang.String,org.apache.hadoop.yarn.api.records.ExecutionType,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl$ResourceRequestInfo)> has 15 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = <org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable: org.apache.commons.logging.Log LOG> AT LINE 143 with ID [1e7ec70a-8728]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added priority=") AT LINE 143 with ID [1e7ec70a-8728]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(priority) AT LINE 143 with ID [1e7ec70a-8728]
2020-08-25 12:10:05 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 143 with ID [1e7ec70a-8728]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack50.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack53) AT LINE 143 with ID [1e7ec70a-8728]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = <org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable: org.apache.commons.logging.Log LOG> AT LINE 152 with ID [9cc99efb-61f3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added resourceName=") AT LINE 152 with ID [9cc99efb-61f3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourceName) AT LINE 152 with ID [9cc99efb-61f3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 152 with ID [9cc99efb-61f3]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack36.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack39) AT LINE 152 with ID [9cc99efb-61f3]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.client.api.impl.RemoteRequestsTable: org.apache.commons.logging.Log LOG> AT LINE 161 with ID [8a8b630f-3c17]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added Execution Type=") AT LINE 161 with ID [8a8b630f-3c17]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(execType) AT LINE 161 with ID [8a8b630f-3c17]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 161 with ID [8a8b630f-3c17]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 161 with ID [8a8b630f-3c17]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: void <init>(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.conf.Configuration)> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: org.apache.commons.logging.Log LOG> AT LINE 156 with ID [491caddd-82a6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("logRollPeriodMs=") AT LINE 156 with ID [491caddd-82a6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = this.<org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: long logRollPeriodMs> AT LINE 156 with ID [491caddd-82a6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack25) AT LINE 156 with ID [491caddd-82a6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sleepTime=") AT LINE 156 with ID [491caddd-82a6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = this.<org.apache.hadoop.hdfs.server.namenode.ha.EditLogTailer: long sleepTimeMs> AT LINE 156 with ID [491caddd-82a6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack28) AT LINE 156 with ID [491caddd-82a6]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 156 with ID [491caddd-82a6]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack30) AT LINE 156 with ID [491caddd-82a6]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider: void logProxyException(java.lang.Exception,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider: org.slf4j.Logger LOG> AT LINE 203 with ID [016f4b8c-8fa8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Invocation returned standby exception on [{}]", proxyInfo, ex) AT LINE 203 with ID [016f4b8c-8fa8]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= corruptBlockCount goto return at line 220 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.TestClientReportBadBlock: void createAFileWithCorruptedBlockReplicas(org.apache.hadoop.fs.Path,short,int)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = <org.apache.hadoop.hdfs.TestClientReportBadBlock: org.apache.commons.logging.Log LOG> AT LINE 224 with ID [152e6e62-89ac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupted block ") AT LINE 224 with ID [152e6e62-89ac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke block.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: java.lang.String getBlockName()>() AT LINE 224 with ID [152e6e62-89ac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33) AT LINE 224 with ID [152e6e62-89ac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on data node ") AT LINE 224 with ID [152e6e62-89ac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dninfo) AT LINE 224 with ID [152e6e62-89ac]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 224 with ID [152e6e62-89ac]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 224 with ID [152e6e62-89ac]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.LocalContainerLauncher$EventHandler: void run()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = staticinvoke <org.apache.hadoop.mapred.LocalContainerLauncher: org.apache.commons.logging.Log access$100()>() AT LINE 302 with ID [efb16554-dc71]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container completed ") AT LINE 302 with ID [efb16554-dc71]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke event.<org.apache.hadoop.mapreduce.v2.app.launcher.ContainerLauncherEvent: java.lang.String toString()>() AT LINE 302 with ID [efb16554-dc71]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37) AT LINE 302 with ID [efb16554-dc71]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 302 with ID [efb16554-dc71]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack39) AT LINE 302 with ID [efb16554-dc71]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerImpl: void handle(org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerEvent)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerImpl: org.slf4j.Logger LOG> AT LINE 2080 with ID [5f0e6948-fbb5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ") AT LINE 2080 with ID [5f0e6948-fbb5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerID) AT LINE 2080 with ID [5f0e6948-fbb5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ") AT LINE 2080 with ID [5f0e6948-fbb5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke event.<org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerEvent: java.lang.Enum getType()>() AT LINE 2080 with ID [5f0e6948-fbb5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack32) AT LINE 2080 with ID [5f0e6948-fbb5]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2080 with ID [5f0e6948-fbb5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String)>($stack34) AT LINE 2080 with ID [5f0e6948-fbb5]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.fi.ProbabilityModel: float getProbability(java.lang.String)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.fi.ProbabilityModel: org.apache.commons.logging.Log LOG> AT LINE 98 with ID [30ae2015-63cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request for ") AT LINE 98 with ID [30ae2015-63cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(newProbName) AT LINE 98 with ID [30ae2015-63cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returns=") AT LINE 98 with ID [30ae2015-63cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(ret) AT LINE 98 with ID [30ae2015-63cf]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 98 with ID [30ae2015-63cf]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 98 with ID [30ae2015-63cf]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReceiver$PacketResponder: void enqueue(long,boolean,long,org.apache.hadoop.hdfs.protocol.proto.DataTransferProtos$Status)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 1265 with ID [5e64f811-0b1f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver$PacketResponder: java.lang.String myString> AT LINE 1265 with ID [5e64f811-0b1f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 1265 with ID [5e64f811-0b1f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": enqueue ") AT LINE 1265 with ID [5e64f811-0b1f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(p) AT LINE 1265 with ID [5e64f811-0b1f]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1265 with ID [5e64f811-0b1f]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 1265 with ID [5e64f811-0b1f]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DataStreamer: void endBlock()> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 628 with ID [35940b8e-d915]
2020-08-25 12:10:05 [INFO] - 	 -> $stack1 = this.<org.apache.hadoop.hdfs.DataStreamer: org.apache.hadoop.hdfs.DataStreamer$BlockToWrite block> AT LINE 628 with ID [35940b8e-d915]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Closing old block {}", $stack1) AT LINE 628 with ID [35940b8e-d915]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.resources.ExceptionHandler: javax.ws.rs.core.Response toResponse(java.lang.Exception)> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.web.resources.ExceptionHandler: org.apache.commons.logging.Log LOG> AT LINE 72 with ID [3b39ceeb-6b73]
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = interfaceinvoke $stack4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>() AT LINE 72 with ID [3b39ceeb-6b73]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack5 == 0 goto $stack6 = this.<org.apache.hadoop.hdfs.web.resources.ExceptionHandler: javax.servlet.http.HttpServletResponse response> AT LINE 72 with ID [3b39ceeb-6b73]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.web.resources.ExceptionHandler: org.apache.commons.logging.Log LOG> AT LINE 73 with ID [3b39ceeb-6b73]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack45.<org.apache.commons.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>("GOT EXCEPITION", e) AT LINE 73 with ID [3b39ceeb-6b73]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack96 == 0 goto $stack94 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: java.nio.ByteBuffer slowReadBuff> at line 648 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if ret != -1 goto $stack53 = (long) remaining at line 688 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if ret < $stack59 goto $stack51 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: byte[] skipBuf> at line 689 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack69 == $stack68 goto $stack50 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: boolean $assertionsDisabled> at line 688 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack28 > 0 goto $stack29 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: int bytesPerChecksum> at line 652 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack23 > 0 goto $stack24 = (long) remaining at line 645 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack16 != 0 goto $stack17 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: java.nio.ByteBuffer slowReadBuff> at line 635 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack15 > 0 goto $stack16 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: boolean verifyChecksum> at line 632 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: long skip(long)> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: org.slf4j.Logger LOG> AT LINE 631 with ID [af50b5d8-fa68]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(n) AT LINE 631 with ID [af50b5d8-fa68]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("skip {}", $stack14) AT LINE 631 with ID [af50b5d8-fa68]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack3 >= minSize goto $stack4 = virtualinvoke this.<org.apache.hadoop.mapred.BackupStore$BackupRamManager: int reserve(int)>(requestedSize) at line 609 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.BackupStore$BackupRamManager: int reserve(int,int)> has 8 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = staticinvoke <org.apache.hadoop.mapred.BackupStore: org.apache.commons.logging.Log access$400()>() AT LINE 610 with ID [df879059-e33a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No space available. Available: ") AT LINE 610 with ID [df879059-e33a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.mapred.BackupStore$BackupRamManager: int availableSize> AT LINE 610 with ID [df879059-e33a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack8) AT LINE 610 with ID [df879059-e33a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MinSize: ") AT LINE 610 with ID [df879059-e33a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(minSize) AT LINE 610 with ID [df879059-e33a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 610 with ID [df879059-e33a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack12) AT LINE 610 with ID [df879059-e33a]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapred.lib.MultithreadedMapRunner: void configure(org.apache.hadoop.mapred.JobConf)> has 9 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = <org.apache.hadoop.mapred.lib.MultithreadedMapRunner: org.apache.commons.logging.Log LOG> AT LINE 75 with ID [ba9e2959-c6d0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Configuring jobConf ") AT LINE 75 with ID [ba9e2959-c6d0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke jobConf.<org.apache.hadoop.mapred.JobConf: java.lang.String getJobName()>() AT LINE 75 with ID [ba9e2959-c6d0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31) AT LINE 75 with ID [ba9e2959-c6d0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to use ") AT LINE 75 with ID [ba9e2959-c6d0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numberOfThreads) AT LINE 75 with ID [ba9e2959-c6d0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threads") AT LINE 75 with ID [ba9e2959-c6d0]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 75 with ID [ba9e2959-c6d0]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack36) AT LINE 75 with ID [ba9e2959-c6d0]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack24 == 0 goto (branch) at line 436 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack21 <= 0 goto (branch) at line 432 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 == 0 goto return at line 430 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager$CachedResolver$ExpireChecker: void run()> has 18 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: org.apache.commons.logging.Log access$200()>() AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[") AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = (java.lang.String) $stack28 AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack32 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>() AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = (org.apache.hadoop.yarn.server.resourcemanager.NodesListManager$CachedResolver$CacheEntry) $stack32 AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack34 = $stack33.<org.apache.hadoop.yarn.server.resourcemanager.NodesListManager$CachedResolver$CacheEntry: java.lang.String ip> AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] Expired after ") AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = this.<org.apache.hadoop.yarn.server.resourcemanager.NodesListManager$CachedResolver$ExpireChecker: org.apache.hadoop.yarn.server.resourcemanager.NodesListManager$CachedResolver this$0> AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = staticinvoke <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager$CachedResolver: int access$600(org.apache.hadoop.yarn.server.resourcemanager.NodesListManager$CachedResolver)>($stack37) AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = $stack38 / 1000 AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack39) AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" secs") AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack42) AT LINE 437 with ID [1fd5c829-b4f4]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.service.launcher.ServiceLauncher: int coreServiceLaunch(org.apache.hadoop.conf.Configuration,java.util.List,boolean,boolean)> has 9 units and 4 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 547 with ID [866b9af4-e682]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Launched service {}", name) AT LINE 547 with ID [866b9af4-e682]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 552 with ID [54b013ac-45f4]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack38.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Service {} implements LaunchableService", name) AT LINE 552 with ID [54b013ac-45f4]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 581 with ID [38c204cd-ce42]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(newconf#12) AT LINE 581 with ID [38c204cd-ce42]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Service {} execution returned exit code {}", name, $stack31) AT LINE 581 with ID [38c204cd-ce42]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 590 with ID [e9f80c35-f606]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String)>("waiting for service threads to terminate") AT LINE 590 with ID [e9f80c35-f606]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if grabOutput == 0 goto return null at line 186 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperationExecutor: java.lang.String executePrivilegedOperation(java.util.List,org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperation,java.io.File,java.util.Map,boolean,boolean)> has 13 units and 5 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperationExecutor: org.slf4j.Logger LOG> AT LINE 153 with ID [c3e2b626-0338, 15c9625f-b399, 7f77c97c-987a, bcf3ff64-086e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = interfaceinvoke $stack13.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 153 with ID [c3e2b626-0338, 15c9625f-b399, 7f77c97c-987a, bcf3ff64-086e]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack14 == 0 goto (branch) AT LINE 153 with ID [c3e2b626-0338, 15c9625f-b399, 7f77c97c-987a, bcf3ff64-086e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperationExecutor: org.slf4j.Logger LOG> AT LINE 154 with ID [bcf3ff64-086e]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>("command array:") AT LINE 154 with ID [bcf3ff64-086e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperationExecutor: org.slf4j.Logger LOG> AT LINE 155 with ID [7f77c97c-987a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(fullCommandArray) AT LINE 155 with ID [7f77c97c-987a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 155 with ID [7f77c97c-987a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperationExecutor: org.slf4j.Logger LOG> AT LINE 156 with ID [15c9625f-b399]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>("Privileged Execution Operation Output:") AT LINE 156 with ID [15c9625f-b399]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.privileged.PrivilegedOperationExecutor: org.slf4j.Logger LOG> AT LINE 157 with ID [c3e2b626-0338]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke exec.<org.apache.hadoop.util.Shell$ShellCommandExecutor: java.lang.String getOutput()>() AT LINE 157 with ID [c3e2b626-0338]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 157 with ID [c3e2b626-0338]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if dToken == null goto return 0 at line 1063 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.kms.KMSClientProvider: boolean containsKmsDt(org.apache.hadoop.security.UserGroupInformation)> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = <org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.slf4j.Logger LOG> AT LINE 1060 with ID [db8e7d1a-030d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = this.<org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.apache.hadoop.io.Text dtService> AT LINE 1060 with ID [db8e7d1a-030d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Searching for token that matches service: {}", $stack7) AT LINE 1060 with ID [db8e7d1a-030d]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: java.net.URL toUrl(org.apache.hadoop.hdfs.web.resources.HttpOpParam$Op,org.apache.hadoop.fs.Path,org.apache.hadoop.hdfs.web.resources.Param[])> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: org.slf4j.Logger LOG> AT LINE 613 with ID [1eca2887-b368]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("url={}", url) AT LINE 613 with ID [1eca2887-b368]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack17 == 0 goto (branch) at line 177 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack31 == 0 goto (branch) at line 218 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.PreemptableResourceCalculator: void calculateResToObtainByPartitionForLeafQueues(java.util.Set,org.apache.hadoop.yarn.api.records.Resource)> has 21 units and 4 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.PreemptableResourceCalculator: org.apache.commons.logging.Log LOG> AT LINE 170 with ID [687af5f6-42fe]
2020-08-25 12:10:05 [INFO] - 	 -> $stack64 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("skipping from queue=") AT LINE 170 with ID [687af5f6-42fe]
2020-08-25 12:10:05 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(queueName) AT LINE 170 with ID [687af5f6-42fe]
2020-08-25 12:10:05 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it\'s a non-preemptable queue") AT LINE 170 with ID [687af5f6-42fe]
2020-08-25 12:10:05 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 170 with ID [687af5f6-42fe]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack63.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack67) AT LINE 170 with ID [687af5f6-42fe]
2020-08-25 12:10:05 [INFO] - 	 -> $stack44 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.PreemptableResourceCalculator: org.apache.commons.logging.Log LOG> AT LINE 209 with ID [b16d59b5-41f2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Queue=") AT LINE 209 with ID [b16d59b5-41f2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(queueName) AT LINE 209 with ID [b16d59b5-41f2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" partition=") AT LINE 209 with ID [b16d59b5-41f2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack48 = qT.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.TempQueuePerPartition: java.lang.String partition> AT LINE 209 with ID [b16d59b5-41f2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48) AT LINE 209 with ID [b16d59b5-41f2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resource-to-obtain=") AT LINE 209 with ID [b16d59b5-41f2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(resToObtain) AT LINE 209 with ID [b16d59b5-41f2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 209 with ID [b16d59b5-41f2]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack44.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack52) AT LINE 209 with ID [b16d59b5-41f2]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.PreemptableResourceCalculator: org.apache.commons.logging.Log LOG> AT LINE 218 with ID [a848b6a3-b0db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = interfaceinvoke $stack30.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 218 with ID [a848b6a3-b0db]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack31 == 0 goto (branch) AT LINE 218 with ID [a848b6a3-b0db]
2020-08-25 12:10:05 [INFO] - 	 -> $stack33 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.PreemptableResourceCalculator: org.apache.commons.logging.Log LOG> AT LINE 219 with ID [a848b6a3-b0db]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(qT) AT LINE 219 with ID [a848b6a3-b0db]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.TestMetricsConfig: void testCommon()> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.metrics2.impl.TestMetricsConfig: org.slf4j.Logger LOG> AT LINE 55 with ID [575f3c2a-3c81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mc:") AT LINE 55 with ID [575f3c2a-3c81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mc) AT LINE 55 with ID [575f3c2a-3c81]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 55 with ID [575f3c2a-3c81]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 55 with ID [575f3c2a-3c81]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack24 == 0 goto (branch) at line 535 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack16 == 0 goto return at line 527 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void loadReservationSystemState(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState)> has 10 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack59 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 529 with ID [70e89355-4901]
2020-08-25 12:10:05 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading plan from znode: ") AT LINE 529 with ID [70e89355-4901]
2020-08-25 12:10:05 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(planName) AT LINE 529 with ID [70e89355-4901]
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 529 with ID [70e89355-4901]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack59.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack62) AT LINE 529 with ID [70e89355-4901]
2020-08-25 12:10:05 [INFO] - 	 -> $stack49 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 540 with ID [6a509a7f-a631]
2020-08-25 12:10:05 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading reservation from znode: ") AT LINE 540 with ID [6a509a7f-a631]
2020-08-25 12:10:05 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reservationNodePath) AT LINE 540 with ID [6a509a7f-a631]
2020-08-25 12:10:05 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 540 with ID [6a509a7f-a631]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack49.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack52) AT LINE 540 with ID [6a509a7f-a631]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.web.webhdfs.WebHdfsHandler: void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.hdfs.server.datanode.web.webhdfs.WebHdfsHandler: org.apache.commons.logging.Log LOG> AT LINE 185 with ID [09e47216-d693]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Error ", cause) AT LINE 185 with ID [09e47216-d693]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void removeLocalizedResource(java.lang.String,org.apache.hadoop.yarn.api.records.ApplicationId,org.apache.hadoop.fs.Path)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 841 with ID [7e57d7e3-411a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing local resource at ") AT LINE 841 with ID [7e57d7e3-411a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(localPathStr) AT LINE 841 with ID [7e57d7e3-411a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 841 with ID [7e57d7e3-411a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 841 with ID [7e57d7e3-411a]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if set != null goto limit = this.<org.apache.hadoop.hdfs.server.blockmanagement.InvalidateBlocks: int blockInvalidateLimit> at line 184 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack8 <= 0 goto $stack9 = this.<org.apache.hadoop.hdfs.server.blockmanagement.InvalidateBlocks: java.util.Map node2blocks> at line 175 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.InvalidateBlocks: java.util.List invalidateWork(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 177 with ID [bf7abd22-ed54]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Block deletion is delayed during NameNode startup. The deletion will start after ") AT LINE 177 with ID [bf7abd22-ed54]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(delay) AT LINE 177 with ID [bf7abd22-ed54]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms.") AT LINE 177 with ID [bf7abd22-ed54]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 177 with ID [bf7abd22-ed54]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String)>($stack29) AT LINE 177 with ID [bf7abd22-ed54]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$#6 >= len$ goto $stack32 = virtualinvoke line.<org.apache.commons.cli.CommandLine: boolean hasOption(java.lang.String)>("hadoopconf") at line 899 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack26 != 0 goto line = virtualinvoke arg#4.<org.apache.hadoop.util.GenericOptionsParser: org.apache.commons.cli.CommandLine getCommandLine()>() at line 885 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack21 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> at line 875 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.service.launcher.ServiceLauncher: java.util.List parseCommandArgs(org.apache.hadoop.conf.Configuration,java.util.List)> has 8 units and 4 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 878 with ID [ca716c59-00b1]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Command line: {}", argString) AT LINE 878 with ID [ca716c59-00b1]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 891 with ID [e6fbd223-3967]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Remaining arguments {}", remainingArgs) AT LINE 891 with ID [e6fbd223-3967]
2020-08-25 12:10:05 [INFO] - 	 -> $stack43 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 901 with ID [67f7585a-114c]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Configuration files {}", file) AT LINE 901 with ID [67f7585a-114c]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 909 with ID [c20ed82d-f8d8]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Configuration classes {}", filenames#7) AT LINE 909 with ID [c20ed82d-f8d8]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack95 == 0 goto $stack96 = this.<org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: int numOfLeaves> at line 319 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack82 == 0 goto i = i + 1 at line 315 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack75 goto return 0 at line 314 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack45 == 0 goto i$#13 = i$#13 + 1 at line 359 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack32 == 0 goto $stack33 = virtualinvoke i$#5.<org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: int getNumOfChildren()>() at line 354 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack29 == 0 goto $stack30 = virtualinvoke dnDescriptor.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.util.EnumSet getStorageTypes()>() at line 351 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack27 == 0 goto i$ = virtualinvoke toRemove.<java.util.EnumSet: java.util.Iterator iterator()>() at line 344 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$#5 != null goto st#6 = virtualinvoke i$#5.<org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: boolean remove(org.apache.hadoop.net.Node)>(n) at line 334 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack16 == 0 goto i#4 = virtualinvoke this.<org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: java.lang.String getNextAncestorName(org.apache.hadoop.net.Node)>(n) at line 311 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack15 != 0 goto dnDescriptor = (org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor) n at line 306 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 != 0 goto $stack15 = n instanceof org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor at line 300 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: boolean remove(org.apache.hadoop.net.Node)> has 3 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: org.slf4j.Logger LOG> AT LINE 299 with ID [0fb1793e-a8fe]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = interfaceinvoke n.<org.apache.hadoop.net.Node: java.lang.String getName()>() AT LINE 299 with ID [0fb1793e-a8fe]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("removing node {}", $stack13) AT LINE 299 with ID [0fb1793e-a8fe]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack3 != 0 goto $stack4 = this.<org.apache.hadoop.ipc.Server$Connection: java.net.Socket socket> at line 2540 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - No overhead is found at method <org.apache.hadoop.ipc.Server$Connection: void close()>
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack31 == 0 goto $stack32 = newarray (java.io.Closeable)[1] at line 645 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack25 == 0 goto suspectBlock = specialinvoke this.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.apache.hadoop.hdfs.protocol.ExtendedBlock popNextSuspectBlock()>() at line 628 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: void run()> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 613 with ID [126f763e-666e]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("{}: thread starting.", this) AT LINE 613 with ID [126f763e-666e]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 626 with ID [f57b0091-2365]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(timeout) AT LINE 626 with ID [f57b0091-2365]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: wait for {} milliseconds", this, $stack24) AT LINE 626 with ID [f57b0091-2365]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.webapp.WebServer: void serviceStop()> has 2 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack2 = <org.apache.hadoop.yarn.server.nodemanager.webapp.WebServer: org.slf4j.Logger LOG> AT LINE 129 with ID [e09bfe63-e1f5]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String)>("Stopping webapp") AT LINE 129 with ID [e09bfe63-e1f5]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.RegistryOperationsService: org.apache.hadoop.registry.client.types.RegistryPathStatus stat(java.lang.String)> has 5 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = <org.apache.hadoop.registry.client.impl.zk.RegistryOperationsService: org.slf4j.Logger LOG> AT LINE 145 with ID [d1a75c0d-a99d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = interfaceinvoke $stack12.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 145 with ID [d1a75c0d-a99d]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack13 == 0 goto return status AT LINE 145 with ID [d1a75c0d-a99d]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = <org.apache.hadoop.registry.client.impl.zk.RegistryOperationsService: org.slf4j.Logger LOG> AT LINE 146 with ID [d1a75c0d-a99d]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Stat {} => {}", path, status) AT LINE 146 with ID [d1a75c0d-a99d]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if e != null goto count = count + 1 at line 585 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack18 goto (branch) at line 598 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i >= $stack14 goto i = virtualinvoke e.<org.apache.hadoop.hdfs.server.namenode.FsImageProto$INodeDirectorySection$DirEntry: int getChildrenCount()>() at line 593 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: void buildNamespace(java.io.InputStream,java.util.List)> has 8 units and 3 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: org.slf4j.Logger LOG> AT LINE 589 with ID [4f53f87d-7290]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = interfaceinvoke $stack11.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 589 with ID [4f53f87d-7290]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack12 == 0 goto parentId = virtualinvoke e.<org.apache.hadoop.hdfs.server.namenode.FsImageProto$INodeDirectorySection$DirEntry: long getParent()>() AT LINE 589 with ID [4f53f87d-7290]
2020-08-25 12:10:05 [INFO] - 	 -> $stack35 = count % 10000 AT LINE 593 with ID [4f53f87d-7290]
2020-08-25 12:10:05 [INFO] - 	 -> if $stack35 != 0 goto parentId = virtualinvoke e.<org.apache.hadoop.hdfs.server.namenode.FsImageProto$INodeDirectorySection$DirEntry: long getParent()>() AT LINE 593 with ID [4f53f87d-7290]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: org.slf4j.Logger LOG> AT LINE 590 with ID [4f53f87d-7290]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(count) AT LINE 590 with ID [4f53f87d-7290]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack38.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scanned {} directories.", $stack40) AT LINE 590 with ID [4f53f87d-7290]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack23 = virtualinvoke targetIIP.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: int getLatestSnapshotId()>() at line 246 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack60 != 0 goto $stack14 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> at line 246 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirConcatOp: void unprotectedConcat(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.hdfs.server.namenode.INodeFile[],long)> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack36 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 231 with ID [354dc40b-4510]
2020-08-25 12:10:05 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* FSNamesystem.concat to ") AT LINE 231 with ID [354dc40b-4510]
2020-08-25 12:10:05 [INFO] - 	 -> $stack38 = virtualinvoke targetIIP.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>() AT LINE 231 with ID [354dc40b-4510]
2020-08-25 12:10:05 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack38) AT LINE 231 with ID [354dc40b-4510]
2020-08-25 12:10:05 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 231 with ID [354dc40b-4510]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void debug(java.lang.String)>($stack40) AT LINE 231 with ID [354dc40b-4510]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: boolean truncate(java.lang.String,long,java.lang.String)> has 7 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.slf4j.Logger stateChangeLog> AT LINE 1038 with ID [48ef4bea-debb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*DIR* NameNode.truncate: ") AT LINE 1038 with ID [48ef4bea-debb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 1038 with ID [48ef4bea-debb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 1038 with ID [48ef4bea-debb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(newLength) AT LINE 1038 with ID [48ef4bea-debb]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1038 with ID [48ef4bea-debb]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 1038 with ID [48ef4bea-debb]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = new org.apache.hadoop.conf.Configuration at line 185 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataTransferSaslUtil: org.apache.hadoop.security.SaslPropertiesResolver getSaslPropertiesResolver(org.apache.hadoop.conf.Configuration)> has 9 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataTransferSaslUtil: org.slf4j.Logger LOG> AT LINE 182 with ID [2b2b3f94-453b]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("DataTransferProtocol not using SaslPropertiesResolver, no QOP found in configuration for {}", "dfs.data.transfer.protection") AT LINE 182 with ID [2b2b3f94-453b]
2020-08-25 12:10:05 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.DataTransferSaslUtil: org.slf4j.Logger LOG> AT LINE 199 with ID [91a65261-9a21]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12 = newarray (java.lang.Object)[4] AT LINE 199 with ID [91a65261-9a21]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12[0] = "dfs.data.transfer.protection" AT LINE 199 with ID [91a65261-9a21]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12[1] = qops AT LINE 199 with ID [91a65261-9a21]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12[2] = "dfs.data.transfer.saslproperties.resolver.class" AT LINE 199 with ID [91a65261-9a21]
2020-08-25 12:10:05 [INFO] - 	 -> $stack12[3] = resolverClass AT LINE 199 with ID [91a65261-9a21]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("DataTransferProtocol using SaslPropertiesResolver, configured QOP {} = {}, configured class {} = {}", $stack12) AT LINE 199 with ID [91a65261-9a21]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if handler == null goto $stack11 = new java.lang.Exception at line 200 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.event.AsyncDispatcher: void dispatch(org.apache.hadoop.yarn.event.Event)> has 10 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.event.AsyncDispatcher: org.apache.commons.logging.Log LOG> AT LINE 192 with ID [76d8af06-4975]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dispatching the event ") AT LINE 192 with ID [76d8af06-4975]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke event.<java.lang.Object: java.lang.Class getClass()>() AT LINE 192 with ID [76d8af06-4975]
2020-08-25 12:10:05 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.Class: java.lang.String getName()>() AT LINE 192 with ID [76d8af06-4975]
2020-08-25 12:10:05 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20) AT LINE 192 with ID [76d8af06-4975]
2020-08-25 12:10:05 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") AT LINE 192 with ID [76d8af06-4975]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = interfaceinvoke event.<org.apache.hadoop.yarn.event.Event: java.lang.String toString()>() AT LINE 192 with ID [76d8af06-4975]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 192 with ID [76d8af06-4975]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 192 with ID [76d8af06-4975]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack25) AT LINE 192 with ID [76d8af06-4975]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.sharedcachemanager.metrics.SharedCacheUploaderMetrics: void <init>()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.server.sharedcachemanager.metrics.SharedCacheUploaderMetrics: org.slf4j.Logger LOG> AT LINE 47 with ID [3061113e-475a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initialized ") AT LINE 47 with ID [3061113e-475a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack5 = this.<org.apache.hadoop.yarn.server.sharedcachemanager.metrics.SharedCacheUploaderMetrics: org.apache.hadoop.metrics2.lib.MetricsRegistry registry> AT LINE 47 with ID [3061113e-475a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack5) AT LINE 47 with ID [3061113e-475a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 47 with ID [3061113e-475a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>($stack7) AT LINE 47 with ID [3061113e-475a]
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void storeContainerPaused(org.apache.hadoop.yarn.api.records.ContainerId)> has 5 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 392 with ID [1d47ad72-fa85]
2020-08-25 12:10:05 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storeContainerPaused: containerId=") AT LINE 392 with ID [1d47ad72-fa85]
2020-08-25 12:10:05 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 392 with ID [1d47ad72-fa85]
2020-08-25 12:10:05 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 392 with ID [1d47ad72-fa85]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 392 with ID [1d47ad72-fa85]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack16 != 0 goto return at line 286 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack15 = virtualinvoke id.<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier: java.util.EnumSet getAccessModes()>() at line 282 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = virtualinvoke id.<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier: long getExpiryDate()>() at line 278 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack10 = virtualinvoke id.<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier: long getBlockId()>() at line 274 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack50 != 0 goto $stack7 = virtualinvoke id.<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier: java.lang.String getBlockPoolId()>() at line 275 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.security.token.block.BlockTokenSecretManager: void checkAccess(org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier,java.lang.String,org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode)> has 12 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack62 = <org.apache.hadoop.hdfs.security.token.block.BlockTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 267 with ID [9a890938-97d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking access for user=") AT LINE 267 with ID [9a890938-97d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(userId) AT LINE 267 with ID [9a890938-97d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", block=") AT LINE 267 with ID [9a890938-97d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 267 with ID [9a890938-97d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", access mode=") AT LINE 267 with ID [9a890938-97d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mode) AT LINE 267 with ID [9a890938-97d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ") AT LINE 267 with ID [9a890938-97d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack70 = virtualinvoke id.<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier: java.lang.String toString()>() AT LINE 267 with ID [9a890938-97d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack71 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack70) AT LINE 267 with ID [9a890938-97d7]
2020-08-25 12:10:05 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 267 with ID [9a890938-97d7]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack62.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack72) AT LINE 267 with ID [9a890938-97d7]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack12 == 0 goto return null at line 44 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack21 == 0 goto (branch) at line 53 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack18 == 0 goto (branch) at line 49 don't merge! Need manual examination!
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if service != null goto $stack6 = <org.apache.hadoop.mapreduce.v2.security.client.ClientHSTokenSelector: org.apache.commons.logging.Log LOG> at line 40 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.security.client.ClientHSTokenSelector: org.apache.hadoop.security.token.Token selectToken(org.apache.hadoop.io.Text,java.util.Collection)> has 16 units and 2 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack6 = <org.apache.hadoop.mapreduce.v2.security.client.ClientHSTokenSelector: org.apache.commons.logging.Log LOG> AT LINE 43 with ID [14e0f1cb-8eed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking for a token with service ") AT LINE 43 with ID [14e0f1cb-8eed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack8 = virtualinvoke service.<org.apache.hadoop.io.Text: java.lang.String toString()>() AT LINE 43 with ID [14e0f1cb-8eed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 43 with ID [14e0f1cb-8eed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 43 with ID [14e0f1cb-8eed]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack10) AT LINE 43 with ID [14e0f1cb-8eed]
2020-08-25 12:10:05 [INFO] - 	 -> $stack23 = <org.apache.hadoop.mapreduce.v2.security.client.ClientHSTokenSelector: org.apache.commons.logging.Log LOG> AT LINE 46 with ID [f2bc1cc2-158a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token kind is ") AT LINE 46 with ID [f2bc1cc2-158a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack25 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getKind()>() AT LINE 46 with ID [f2bc1cc2-158a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<org.apache.hadoop.io.Text: java.lang.String toString()>() AT LINE 46 with ID [f2bc1cc2-158a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack27 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 46 with ID [f2bc1cc2-158a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and the token\'s service name is ") AT LINE 46 with ID [f2bc1cc2-158a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack29 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 46 with ID [f2bc1cc2-158a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack29) AT LINE 46 with ID [f2bc1cc2-158a]
2020-08-25 12:10:05 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 46 with ID [f2bc1cc2-158a]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack31) AT LINE 46 with ID [f2bc1cc2-158a]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack64 != null goto $stack66 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForContentSummary: org.apache.commons.logging.Log LOG> at line 110 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForContentSummary: void createOriginalFSImage()> has 6 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack66 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForContentSummary: org.apache.commons.logging.Log LOG> AT LINE 113 with ID [376fab33-d131]
2020-08-25 12:10:05 [INFO] - 	 -> $stack67 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("original FS image file is ") AT LINE 113 with ID [376fab33-d131]
2020-08-25 12:10:05 [INFO] - 	 -> $stack68 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForContentSummary: java.io.File originalFsimage> AT LINE 113 with ID [376fab33-d131]
2020-08-25 12:10:05 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack68) AT LINE 113 with ID [376fab33-d131]
2020-08-25 12:10:05 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 113 with ID [376fab33-d131]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack66.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack70) AT LINE 113 with ID [376fab33-d131]
2020-08-25 12:10:05 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack6 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica replica> at line 670 don't merge! Need manual examination!
2020-08-25 12:10:05 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.apache.hadoop.hdfs.shortcircuit.ClientMmap getClientMmap(java.util.EnumSet)> has 4 units and 1 lines
2020-08-25 12:10:05 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.slf4j.Logger LOG> AT LINE 671 with ID [52883c71-a5fc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack15 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 671 with ID [52883c71-a5fc]
2020-08-25 12:10:05 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocal: java.lang.String filename> AT LINE 671 with ID [52883c71-a5fc]
2020-08-25 12:10:05 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("can\'t get an mmap for {} of {} since SKIP_CHECKSUMS was not given, we aren\'t skipping checksums, and the block is not mlocked.", $stack15, $stack14) AT LINE 671 with ID [52883c71-a5fc]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSClient: void <init>(java.net.URI,org.apache.hadoop.hdfs.protocol.ClientProtocol,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.FileSystem$Statistics)> has 19 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack142 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 313 with ID [9a447ebe-93a9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack143 = virtualinvoke $stack141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sets dfs.client.block.write.replace-datanode-on-failure.min-replication to ") AT LINE 313 with ID [9a447ebe-93a9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack144 = this.<org.apache.hadoop.hdfs.DFSClient: short dtpReplaceDatanodeOnFailureReplication> AT LINE 313 with ID [9a447ebe-93a9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack145 = virtualinvoke $stack143.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack144) AT LINE 313 with ID [9a447ebe-93a9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack146 = virtualinvoke $stack145.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 313 with ID [9a447ebe-93a9]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack142.<org.slf4j.Logger: void debug(java.lang.String)>($stack146) AT LINE 313 with ID [9a447ebe-93a9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack100 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack101 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using local interfaces [") AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(char)>(44) AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack103 = virtualinvoke $stack102.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object[])>(localInterfaces) AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack104 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack103) AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack105 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] with addresses [") AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack106 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(char)>(44) AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack107 = this.<org.apache.hadoop.hdfs.DFSClient: java.net.SocketAddress[] localInterfaceAddrs> AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack108 = virtualinvoke $stack106.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object[])>($stack107) AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack109 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack108) AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack110 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack111 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack100.<org.slf4j.Logger: void debug(java.lang.String)>($stack111) AT LINE 361 with ID [1c3f593f-8fba]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if newiip != null goto $stack19 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> at line 494 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: org.apache.hadoop.hdfs.server.namenode.INodesInPath addFile(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath,byte[],org.apache.hadoop.fs.permission.PermissionStatus,short,long,java.lang.String,java.lang.String)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 501 with ID [6a01714b-6054]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* addFile: ") AT LINE 501 with ID [6a01714b-6054]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = staticinvoke <org.apache.hadoop.hdfs.DFSUtil: java.lang.String bytes2String(byte[])>(localName) AT LINE 501 with ID [6a01714b-6054]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) AT LINE 501 with ID [6a01714b-6054]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is added") AT LINE 501 with ID [6a01714b-6054]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 501 with ID [6a01714b-6054]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String)>($stack27) AT LINE 501 with ID [6a01714b-6054]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack11 != 0 goto $stack12 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.namenode.Namesystem namesystem> at line 3286 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack52 != 0 goto storedBlock = virtualinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getStoredBlock(org.apache.hadoop.hdfs.protocol.Block)>(block) at line 3286 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void removeStoredBlock(org.apache.hadoop.hdfs.protocol.Block,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 25 units and 11 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 3279 with ID [ce5d67a8-6903]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* removeStoredBlock: {} from {}", block, node) AT LINE 3279 with ID [ce5d67a8-6903]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 3284 with ID [ec8a80e4-d304]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* removeStoredBlock: {} has already been removed from node {}", block, node) AT LINE 3284 with ID [ec8a80e4-d304]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.namenode.Namesystem namesystem> AT LINE 3289 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = interfaceinvoke $stack12.<org.apache.hadoop.hdfs.server.namenode.Namesystem: org.apache.hadoop.hdfs.server.namenode.CacheManager getCacheManager()>() AT LINE 3289 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<org.apache.hadoop.hdfs.server.namenode.CacheManager: org.apache.hadoop.util.GSet getCachedBlocks()>() AT LINE 3289 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = interfaceinvoke $stack14.<org.apache.hadoop.util.GSet: java.lang.Object get(java.lang.Object)>($stack15) AT LINE 3289 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> cblock = (org.apache.hadoop.hdfs.server.namenode.CachedBlock) $stack17 AT LINE 3289 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> if cblock == null goto $stack18 = virtualinvoke storedBlock.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: boolean isDeleted()>() AT LINE 3291 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> removed = 0 AT LINE 3292 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = virtualinvoke node.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$CachedBlocksList getPendingCached()>() AT LINE 3293 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$CachedBlocksList: boolean remove(java.lang.Object)>(cblock) AT LINE 3293 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> removed = removed | $stack41 AT LINE 3293 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = virtualinvoke node.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$CachedBlocksList getCached()>() AT LINE 3294 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$CachedBlocksList: boolean remove(java.lang.Object)>(cblock) AT LINE 3294 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> removed = removed | $stack43 AT LINE 3294 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke node.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$CachedBlocksList getPendingUncached()>() AT LINE 3295 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$CachedBlocksList: boolean remove(java.lang.Object)>(cblock) AT LINE 3295 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> removed = removed | $stack45 AT LINE 3295 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> if removed == 0 goto $stack18 = virtualinvoke storedBlock.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: boolean isDeleted()>() AT LINE 3296 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 3297 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* removeStoredBlock: {} removed from caching related lists on node {}", block, node) AT LINE 3297 with ID [a1c98f22-ce2f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 3322 with ID [1ecfca9c-d7c2]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("BLOCK* removeStoredBlock: {} is removed from excessBlocks", block) AT LINE 3322 with ID [1ecfca9c-d7c2]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if cmd != $stack30 goto $stack31 = new java.io.IOException at line 148 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if cmd != $stack28 goto $stack29 = <org.apache.hadoop.mapred.pipes.BinaryProtocol$MessageType: org.apache.hadoop.mapred.pipes.BinaryProtocol$MessageType DONE> at line 148 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if cmd != $stack26 goto $stack27 = <org.apache.hadoop.mapred.pipes.BinaryProtocol$MessageType: org.apache.hadoop.mapred.pipes.BinaryProtocol$MessageType INCREMENT_COUNTER> at line 148 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if cmd != $stack24 goto $stack25 = <org.apache.hadoop.mapred.pipes.BinaryProtocol$MessageType: org.apache.hadoop.mapred.pipes.BinaryProtocol$MessageType REGISTER_COUNTER> at line 146 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if cmd != $stack22 goto $stack23 = <org.apache.hadoop.mapred.pipes.BinaryProtocol$MessageType: org.apache.hadoop.mapred.pipes.BinaryProtocol$MessageType PROGRESS> at line 139 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if cmd != $stack20 goto $stack21 = <org.apache.hadoop.mapred.pipes.BinaryProtocol$MessageType: org.apache.hadoop.mapred.pipes.BinaryProtocol$MessageType STATUS> at line 139 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if cmd != $stack18 goto $stack19 = <org.apache.hadoop.mapred.pipes.BinaryProtocol$MessageType: org.apache.hadoop.mapred.pipes.BinaryProtocol$MessageType PARTITIONED_OUTPUT> at line 135 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.pipes.BinaryProtocol$UplinkReaderThread: void run()> has 7 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = staticinvoke <org.apache.hadoop.mapred.pipes.BinaryProtocol: org.apache.commons.logging.Log access$000()>() AT LINE 127 with ID [991448ff-5e12]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Handling uplink command ") AT LINE 127 with ID [991448ff-5e12]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(cmd) AT LINE 127 with ID [991448ff-5e12]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 127 with ID [991448ff-5e12]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 127 with ID [991448ff-5e12]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = staticinvoke <org.apache.hadoop.mapred.pipes.BinaryProtocol: org.apache.commons.logging.Log access$000()>() AT LINE 158 with ID [55044c1e-a708]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack36.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Pipe child done") AT LINE 158 with ID [55044c1e-a708]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.pipes.Application: void <init>(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.mapred.RecordReader,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter,java.lang.Class,java.lang.Class)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack73 = <org.apache.hadoop.mapred.pipes.Application: org.apache.commons.logging.Log LOG> AT LINE 151 with ID [20da578d-f979]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack73.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Authentication succeeded") AT LINE 151 with ID [20da578d-f979]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: long updateNonSequentialWriteInMemory(long)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 214 with ID [f1716a3d-e2bc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update nonSequentialWriteInMemory by ") AT LINE 214 with ID [f1716a3d-e2bc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(count) AT LINE 214 with ID [f1716a3d-e2bc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new value: ") AT LINE 214 with ID [f1716a3d-e2bc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(newValue) AT LINE 214 with ID [f1716a3d-e2bc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 214 with ID [f1716a3d-e2bc]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 214 with ID [f1716a3d-e2bc]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack13 == 0 goto return config at line 62 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.service.launcher.AbstractLaunchableService: org.apache.hadoop.conf.Configuration bindArgs(org.apache.hadoop.conf.Configuration,java.util.List)> has 16 units and 6 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = <org.apache.hadoop.service.launcher.AbstractLaunchableService: org.slf4j.Logger LOG> AT LINE 60 with ID [135e3ee9-034c, 40e6b565-539c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = interfaceinvoke $stack5.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 60 with ID [135e3ee9-034c, 40e6b565-539c]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack6 == 0 goto return config AT LINE 60 with ID [135e3ee9-034c, 40e6b565-539c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.service.launcher.AbstractLaunchableService: org.slf4j.Logger LOG> AT LINE 61 with ID [40e6b565-539c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke this.<org.apache.hadoop.service.launcher.AbstractLaunchableService: java.lang.String getName()>() AT LINE 61 with ID [40e6b565-539c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = interfaceinvoke args.<java.util.List: int size()>() AT LINE 61 with ID [40e6b565-539c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack10) AT LINE 61 with ID [40e6b565-539c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Service {} passed in {} arguments:", $stack9, $stack11) AT LINE 61 with ID [40e6b565-539c]
2020-08-25 12:10:06 [INFO] - 	 -> i$ = interfaceinvoke args.<java.util.List: java.util.Iterator iterator()>() AT LINE 62 with ID [135e3ee9-034c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>() AT LINE 62 with ID [135e3ee9-034c]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack13 == 0 goto return config AT LINE 62 with ID [135e3ee9-034c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 66 with ID [135e3ee9-034c]
2020-08-25 12:10:06 [INFO] - 	 -> arg = (java.lang.String) $stack15 AT LINE 66 with ID [135e3ee9-034c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = <org.apache.hadoop.service.launcher.AbstractLaunchableService: org.slf4j.Logger LOG> AT LINE 63 with ID [135e3ee9-034c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>(arg) AT LINE 63 with ID [135e3ee9-034c]
2020-08-25 12:10:06 [INFO] - 	 -> goto [?= $stack13 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] AT LINE 64 with ID [135e3ee9-034c]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService: void removeTokenMasterKey(org.apache.hadoop.security.token.delegation.DelegationKey)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = <org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService: org.apache.commons.logging.Log LOG> AT LINE 205 with ID [82e62dc7-0edd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing master key ") AT LINE 205 with ID [82e62dc7-0edd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke key.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 205 with ID [82e62dc7-0edd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15) AT LINE 205 with ID [82e62dc7-0edd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 205 with ID [82e62dc7-0edd]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack17) AT LINE 205 with ID [82e62dc7-0edd]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack12 == 0 goto return at line 905 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: void scanIntermediateDirectory()> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log LOG> AT LINE 904 with ID [1eac2d90-4ccb]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Scanning intermediate dirs") AT LINE 904 with ID [1eac2d90-4ccb]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl: void addCredentials()> has 12 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl: org.slf4j.Logger LOG> AT LINE 371 with ID [b291db57-b14b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding new framework-token for ") AT LINE 371 with ID [b291db57-b14b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl: org.apache.hadoop.yarn.api.records.ApplicationId appId> AT LINE 371 with ID [b291db57-b14b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack13) AT LINE 371 with ID [b291db57-b14b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for log-aggregation: ") AT LINE 371 with ID [b291db57-b14b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke systemCredentials.<org.apache.hadoop.security.Credentials: java.util.Collection getAllTokens()>() AT LINE 371 with ID [b291db57-b14b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack16) AT LINE 371 with ID [b291db57-b14b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; userUgi=") AT LINE 371 with ID [b291db57-b14b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl: org.apache.hadoop.security.UserGroupInformation userUgi> AT LINE 371 with ID [b291db57-b14b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 371 with ID [b291db57-b14b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 371 with ID [b291db57-b14b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 371 with ID [b291db57-b14b]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.web.DelegationTokenManager: long renewToken(org.apache.hadoop.security.token.Token,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenManager: org.slf4j.Logger LOG> AT LINE 194 with ID [a70d3f3b-a406]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Renewing token:{} with renewer:{}.", token, renewer) AT LINE 194 with ID [a70d3f3b-a406]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataNode: void checkBlockToken(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.security.token.Token,org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier$AccessMode)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 1925 with ID [2b2d86e0-0a65]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got: ") AT LINE 1925 with ID [2b2d86e0-0a65]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke id.<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier: java.lang.String toString()>() AT LINE 1925 with ID [2b2d86e0-0a65]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 1925 with ID [2b2d86e0-0a65]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1925 with ID [2b2d86e0-0a65]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 1925 with ID [2b2d86e0-0a65]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if nodeToUnreserve != null goto $stack15 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> at line 831 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if idToUnreserve != null goto $stack12 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceScheduler scheduler> at line 822 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer findNodeToUnreserve(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode,org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,org.apache.hadoop.yarn.api.records.Resource)> has 18 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 823 with ID [c05d02e7-bec2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = interfaceinvoke $stack47.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 823 with ID [c05d02e7-bec2]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack48 == 0 goto $stack49 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock> AT LINE 823 with ID [c05d02e7-bec2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 824 with ID [c05d02e7-bec2]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack50.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("checked to see if could unreserve for app but nothing reserved that matches for this app") AT LINE 824 with ID [c05d02e7-bec2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.commons.logging.Log LOG> AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unreserving for app: ") AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack26) AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on nodeId: ") AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(idToUnreserve) AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in order to replace reserved application and place it on node: ") AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.api.records.NodeId getNodeID()>() AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31) AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" needing: ") AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(minimumUnreservedResource) AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 836 with ID [ccf40895-f157]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector: void enterNeutralMode()> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 1009 with ID [96286aeb-f368]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entering neutral mode for ") AT LINE 1009 with ID [96286aeb-f368]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 1009 with ID [96286aeb-f368]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1009 with ID [96286aeb-f368]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack11) AT LINE 1009 with ID [96286aeb-f368]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if acls != null goto return acls at line 477 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.CuratorService: java.util.List zkGetACLS(java.lang.String)> has 5 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 470 with ID [37d6bcf9-cbae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 470 with ID [37d6bcf9-cbae]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack7 == 0 goto $stack8 = this.<org.apache.hadoop.registry.client.impl.zk.CuratorService: org.apache.curator.framework.CuratorFramework curator> AT LINE 470 with ID [37d6bcf9-cbae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 471 with ID [37d6bcf9-cbae]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("GetACLS {}", fullpath) AT LINE 471 with ID [37d6bcf9-cbae]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack17 <= 0 goto (branch) at line 317 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack11 == 0 goto return results at line 316 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.registry.client.binding.RegistryUtils: java.util.Map extractServiceRecords(org.apache.hadoop.registry.client.api.RegistryOperations,java.lang.String,java.util.Collection)>
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSImage: void reloadFromImageFile(java.io.File,org.apache.hadoop.hdfs.server.namenode.FSNamesystem)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.commons.logging.Log LOG> AT LINE 635 with ID [ff449bb9-a8c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reloading namespace from ") AT LINE 635 with ID [ff449bb9-a8c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(file) AT LINE 635 with ID [ff449bb9-a8c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 635 with ID [ff449bb9-a8c3]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack7) AT LINE 635 with ID [ff449bb9-a8c3]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack22 != 0 goto $stack15 = specialinvoke this.<org.apache.hadoop.mapred.BackupStore$FileCache: org.apache.hadoop.mapred.IFile$Writer createSpillFile()>() at line 544 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.BackupStore$FileCache: void write(org.apache.hadoop.io.DataInputBuffer,org.apache.hadoop.io.DataInputBuffer)> has 9 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = staticinvoke <org.apache.hadoop.mapred.BackupStore: org.apache.commons.logging.Log access$400()>() AT LINE 543 with ID [e535c947-46cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ID: ") AT LINE 543 with ID [e535c947-46cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.mapred.BackupStore$FileCache: org.apache.hadoop.mapred.BackupStore this$0> AT LINE 543 with ID [e535c947-46cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = $stack8.<org.apache.hadoop.mapred.BackupStore: java.util.List segmentList> AT LINE 543 with ID [e535c947-46cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = interfaceinvoke $stack9.<java.util.List: int size()>() AT LINE 543 with ID [e535c947-46cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack10) AT LINE 543 with ID [e535c947-46cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WRITE TO DISK") AT LINE 543 with ID [e535c947-46cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 543 with ID [e535c947-46cd]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 543 with ID [e535c947-46cd]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= $stack15 goto $stack16 = this.<org.apache.hadoop.yarn.server.router.clientrm.FederationClientInterceptor: org.apache.hadoop.yarn.server.router.RouterMetrics routerMetrics> at line 234 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if response == null goto interfaceinvoke subClustersActive.<java.util.Map: java.lang.Object remove(java.lang.Object)>(subClusterId) at line 248 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.router.clientrm.FederationClientInterceptor: org.apache.hadoop.yarn.api.protocolrecords.GetNewApplicationResponse getNewApplication(org.apache.hadoop.yarn.api.protocolrecords.GetNewApplicationRequest)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = <org.apache.hadoop.yarn.server.router.clientrm.FederationClientInterceptor: org.slf4j.Logger LOG> AT LINE 236 with ID [be281710-a14f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getNewApplication try #") AT LINE 236 with ID [be281710-a14f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i) AT LINE 236 with ID [be281710-a14f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on SubCluster ") AT LINE 236 with ID [be281710-a14f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(subClusterId) AT LINE 236 with ID [be281710-a14f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 236 with ID [be281710-a14f]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String)>($stack26) AT LINE 236 with ID [be281710-a14f]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.server.KerberosAuthenticationHandler: org.apache.hadoop.security.authentication.server.AuthenticationToken runWithPrincipal(java.lang.String,byte[],org.apache.commons.codec.binary.Base64,javax.servlet.http.HttpServletResponse)> has 6 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = <org.apache.hadoop.security.authentication.server.KerberosAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 319 with ID [a2c48e14-02f0]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("SPNEGO initiated with server principal [{}]", serverPrincipal) AT LINE 319 with ID [a2c48e14-02f0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = <org.apache.hadoop.security.authentication.server.KerberosAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 339 with ID [bcd11697-a3ce]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void trace(java.lang.String)>("SPNEGO in progress") AT LINE 339 with ID [bcd11697-a3ce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = <org.apache.hadoop.security.authentication.server.KerberosAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 346 with ID [de34f9b8-858c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("SPNEGO completed for client principal [{}]", authenticate) AT LINE 346 with ID [de34f9b8-858c]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.webproxy.WebAppProxyServlet: java.net.URI getTrackingUri(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,org.apache.hadoop.yarn.server.webproxy.AppReportFetcher$AppReportSource)> has 12 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = <org.apache.hadoop.yarn.server.webproxy.WebAppProxyServlet: org.slf4j.Logger LOG> AT LINE 521 with ID [f500d874-a120]
2020-08-25 12:10:06 [INFO] - 	 -> if originalUri != null goto $stack31 = originalUri AT LINE 521 with ID [f500d874-a120]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = "NULL" AT LINE 541 with ID [f500d874-a120]
2020-08-25 12:10:06 [INFO] - 	 -> goto [?= interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Original tracking url is \'{}\'. Redirecting to RM app page", $stack31)] AT LINE 541 with ID [f500d874-a120]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = originalUri AT LINE 541 with ID [f500d874-a120]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Original tracking url is \'{}\'. Redirecting to RM app page", $stack31) AT LINE 521 with ID [f500d874-a120]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.webproxy.WebAppProxyServlet: org.slf4j.Logger LOG> AT LINE 528 with ID [67a6b43f-1a78]
2020-08-25 12:10:06 [INFO] - 	 -> if originalUri != null goto $stack17 = originalUri AT LINE 528 with ID [67a6b43f-1a78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = "NULL" AT LINE 541 with ID [67a6b43f-1a78]
2020-08-25 12:10:06 [INFO] - 	 -> goto [?= interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Original tracking url is \'{}\'. Redirecting to AHS app page", $stack17)] AT LINE 541 with ID [67a6b43f-1a78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = originalUri AT LINE 541 with ID [67a6b43f-1a78]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Original tracking url is \'{}\'. Redirecting to AHS app page", $stack17) AT LINE 528 with ID [67a6b43f-1a78]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= len goto return at line 86 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestCachingStrategy$Stats: void fadvise(int,int,int)> has 10 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.TestCachingStrategy: org.apache.commons.logging.Log access$100()>() AT LINE 83 with ID [f1cc0137-e2ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("got fadvise(offset=") AT LINE 83 with ID [f1cc0137-e2ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(offset) AT LINE 83 with ID [f1cc0137-e2ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", len=") AT LINE 83 with ID [f1cc0137-e2ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(len) AT LINE 83 with ID [f1cc0137-e2ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",flags=") AT LINE 83 with ID [f1cc0137-e2ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(flags) AT LINE 83 with ID [f1cc0137-e2ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 83 with ID [f1cc0137-e2ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 83 with ID [f1cc0137-e2ee]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 83 with ID [f1cc0137-e2ee]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack6 != 0 goto isFenced = 0 at line 346 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$UpdateAppAttemptTransition: org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMStateStoreState transition(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore,org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStoreEvent)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore: org.apache.commons.logging.Log LOG> AT LINE 356 with ID [84169a3f-6a3a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating info for attempt: ") AT LINE 356 with ID [84169a3f-6a3a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke attemptState.<org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationAttemptStateData: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getAttemptId()>() AT LINE 356 with ID [84169a3f-6a3a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 356 with ID [84169a3f-6a3a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 356 with ID [84169a3f-6a3a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 356 with ID [84169a3f-6a3a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack20 = virtualinvoke node.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor$LeavingServiceStatus getLeavingServiceStatus()>() at line 270 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: void startMaintenance(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,long)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.server.blockmanagement.DatanodeAdminManager: org.slf4j.Logger LOG> AT LINE 280 with ID [4edc1206-49aa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startMaintenance: Node {} in {}, nothing to do.") AT LINE 280 with ID [4edc1206-49aa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(node) AT LINE 280 with ID [4edc1206-49aa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 280 with ID [4edc1206-49aa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke node.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates getAdminState()>() AT LINE 280 with ID [4edc1206-49aa]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>($stack13, $stack14) AT LINE 280 with ID [4edc1206-49aa]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void storeContainerLaunched(org.apache.hadoop.yarn.api.records.ContainerId)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 441 with ID [364cf62b-7b80]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("storeContainerLaunched: containerId=") AT LINE 441 with ID [364cf62b-7b80]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 441 with ID [364cf62b-7b80]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 441 with ID [364cf62b-7b80]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 441 with ID [364cf62b-7b80]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void updateRMDelegationTokenState(org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier,java.lang.Long)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 1114 with ID [54a8f199-c0ea]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating RMDelegationToken_") AT LINE 1114 with ID [54a8f199-c0ea]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke rmDTIdentifier.<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 1114 with ID [54a8f199-c0ea]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack20) AT LINE 1114 with ID [54a8f199-c0ea]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1114 with ID [54a8f199-c0ea]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 1114 with ID [54a8f199-c0ea]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack23 == 0 goto interfaceinvoke removeList.<java.util.List: boolean add(java.lang.Object)>(log) at line 806 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack17 == 0 goto (branch) at line 804 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = this.<org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs: java.util.List detailLogs> at line 801 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs: void loadDetailLog(org.apache.hadoop.yarn.server.timeline.TimelineDataManager,org.apache.hadoop.yarn.api.records.timeline.TimelineEntityGroupId)> has 5 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 802 with ID [4fefacf6-9605]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke log.<org.apache.hadoop.yarn.server.timeline.LogInfo: java.lang.String getFilename()>() AT LINE 802 with ID [4fefacf6-9605]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Try refresh logs for {}", $stack16) AT LINE 802 with ID [4fefacf6-9605]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 807 with ID [232c204c-d743]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Refresh logs for cache id {}", groupId) AT LINE 807 with ID [232c204c-d743]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack41 == 0 goto i$#9 = i$#9 + 1 at line 2351 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 2348 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack21 == 0 goto return at line 2340 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack57 != 0 goto $stack18 = virtualinvoke block.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getGenerationStamp()>() at line 2348 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void markBlockReplicasAsCorrupt(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,long,long,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[])> has 3 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 2359 with ID [29628c17-0370]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke storage.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor getDatanodeDescriptor()>() AT LINE 2359 with ID [29628c17-0370]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* markBlockReplicasAsCorrupt: mark block replica {} on {} as corrupt because the dn is not in the new committed storage list.", b, $stack36) AT LINE 2359 with ID [29628c17-0370]
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo chooseFromNextRack(org.apache.hadoop.net.Node,java.util.Set,long,int,java.util.List,boolean,java.util.EnumMap)>
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticationFilter: void doFilter(javax.servlet.FilterChain,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack9 = new java.util.concurrent.CountDownLatch at line 249 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.TestSinkQueue: org.apache.hadoop.metrics2.impl.SinkQueue newSleepingConsumerQueue(int,int[])> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.metrics2.impl.TestSinkQueue: org.slf4j.Logger LOG> AT LINE 275 with ID [fbfa65fd-b9c1]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>("Returning new sleeping consumer queue") AT LINE 275 with ID [fbfa65fd-b9c1]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack9 >= 0 goto return 1 at line 88 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker$CheckedVolume: boolean isResourceAvailable()> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker: org.apache.commons.logging.Log access$100()>() AT LINE 85 with ID [5442e812-42dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Space available on volume \'") AT LINE 85 with ID [5442e812-42dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = this.<org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker$CheckedVolume: java.lang.String volume> AT LINE 85 with ID [5442e812-42dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 85 with ID [5442e812-42dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is ") AT LINE 85 with ID [5442e812-42dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(availableSpace) AT LINE 85 with ID [5442e812-42dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 85 with ID [5442e812-42dc]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 85 with ID [5442e812-42dc]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack15 == 0 goto (branch) at line 52 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack12 == 0 goto (branch) at line 48 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack6 == 0 goto return null at line 43 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if service != null goto i$ = interfaceinvoke tokens.<java.util.Collection: java.util.Iterator iterator()>() at line 40 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.security.NMTokenSelector: org.apache.hadoop.security.token.Token selectToken(org.apache.hadoop.io.Text,java.util.Collection)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.security.NMTokenSelector: org.apache.commons.logging.Log LOG> AT LINE 45 with ID [0947bbc0-ae71]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking for service: ") AT LINE 45 with ID [0947bbc0-ae71]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(service) AT LINE 45 with ID [0947bbc0-ae71]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Current token is ") AT LINE 45 with ID [0947bbc0-ae71]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(token) AT LINE 45 with ID [0947bbc0-ae71]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 45 with ID [0947bbc0-ae71]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 45 with ID [0947bbc0-ae71]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if redirected_from_node == 0 goto $stack51 = new java.lang.StringBuilder at line 446 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack31 == 0 goto $stack32 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_FOUND> at line 414 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack29 == 0 goto $stack30 = virtualinvoke appInfo.<org.apache.hadoop.yarn.server.webapp.dao.AppInfo: org.apache.hadoop.yarn.api.records.YarnApplicationState getAppState()>() at line 408 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.server.applicationhistoryservice.webapp.AHSWebServices: javax.ws.rs.core.Response getLogs(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack48 == 0 goto uc = virtualinvoke oldBlock.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature getUnderConstructionFeature()>() at line 266 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack92 != 0 goto $stack20 = virtualinvoke fsn.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager getLeaseManager()>() at line 220 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack98 != 0 goto $stack15 = virtualinvoke iip.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getLastINode()>() at line 217 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirTruncateOp: org.apache.hadoop.hdfs.protocol.Block prepareFileForTruncate(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.INodesInPath,java.lang.String,java.lang.String,long,org.apache.hadoop.hdfs.protocol.Block)> has 13 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack72 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 241 with ID [25a0bbea-c58c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack71 = newarray (java.lang.Object)[3] AT LINE 241 with ID [25a0bbea-c58c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack75 = virtualinvoke truncatedBlockUC.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getNumBytes()>() AT LINE 241 with ID [25a0bbea-c58c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack76 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack75) AT LINE 241 with ID [25a0bbea-c58c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack71[0] = $stack76 AT LINE 241 with ID [25a0bbea-c58c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack71[1] = newBlock AT LINE 241 with ID [25a0bbea-c58c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack71[2] = oldBlock AT LINE 241 with ID [25a0bbea-c58c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack72.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* prepareFileForTruncate: Scheduling copy-on-truncate to new size {}  new block {} old block {}", $stack71) AT LINE 241 with ID [25a0bbea-c58c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 257 with ID [e05e06e3-8456]
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = virtualinvoke uc.<org.apache.hadoop.hdfs.server.blockmanagement.BlockUnderConstructionFeature: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getTruncateBlock()>() AT LINE 257 with ID [e05e06e3-8456]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getNumBytes()>() AT LINE 257 with ID [e05e06e3-8456]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack43) AT LINE 257 with ID [e05e06e3-8456]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack40.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* prepareFileForTruncate: {} Scheduling in-place block truncate to new size {}", uc, $stack44) AT LINE 257 with ID [e05e06e3-8456]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack21 == 0 goto $stack22 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> at line 301 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.nfs.NfsExports$ExactMatch: boolean isIncluded(java.lang.String,java.lang.String)> has 24 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> AT LINE 298 with ID [9539710d-da47]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ExactMatcher \'") AT LINE 298 with ID [9539710d-da47]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = this.<org.apache.hadoop.nfs.NfsExports$ExactMatch: java.lang.String ipOrHost> AT LINE 298 with ID [9539710d-da47]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10) AT LINE 298 with ID [9539710d-da47]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', allowing client ") AT LINE 298 with ID [9539710d-da47]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 298 with ID [9539710d-da47]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(address) AT LINE 298 with ID [9539710d-da47]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'") AT LINE 298 with ID [9539710d-da47]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(hostname) AT LINE 298 with ID [9539710d-da47]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 298 with ID [9539710d-da47]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 298 with ID [9539710d-da47]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 298 with ID [9539710d-da47]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> AT LINE 304 with ID [0aba8b67-dc9d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ExactMatcher \'") AT LINE 304 with ID [0aba8b67-dc9d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = this.<org.apache.hadoop.nfs.NfsExports$ExactMatch: java.lang.String ipOrHost> AT LINE 304 with ID [0aba8b67-dc9d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27) AT LINE 304 with ID [0aba8b67-dc9d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', denying client ") AT LINE 304 with ID [0aba8b67-dc9d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 304 with ID [0aba8b67-dc9d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(address) AT LINE 304 with ID [0aba8b67-dc9d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'") AT LINE 304 with ID [0aba8b67-dc9d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(hostname) AT LINE 304 with ID [0aba8b67-dc9d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 304 with ID [0aba8b67-dc9d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 304 with ID [0aba8b67-dc9d]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String)>($stack35) AT LINE 304 with ID [0aba8b67-dc9d]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack24 <= 0 goto $stack25 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> at line 578 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: float internalGetLabeledQueueCapacity(java.lang.String,java.lang.String,java.lang.String,float)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: org.apache.commons.logging.Log LOG> AT LINE 583 with ID [1d0aff05-c02a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSConf - getCapacityOfLabel: prefix=") AT LINE 583 with ID [1d0aff05-c02a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacitySchedulerConfiguration: java.lang.String getNodeLabelPrefix(java.lang.String,java.lang.String)>(queue, label) AT LINE 583 with ID [1d0aff05-c02a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30) AT LINE 583 with ID [1d0aff05-c02a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", capacity=") AT LINE 583 with ID [1d0aff05-c02a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(capacity) AT LINE 583 with ID [1d0aff05-c02a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 583 with ID [1d0aff05-c02a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 583 with ID [1d0aff05-c02a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack38 == 0 goto virtualinvoke this.<org.apache.hadoop.hdfs.tools.federation.RouterAdmin: void printUsage()>() at line 194 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack86 >= 2 goto $stack20 = virtualinvoke this.<org.apache.hadoop.hdfs.tools.federation.RouterAdmin: org.apache.hadoop.conf.Configuration getConf()>() at line 136 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack67 >= 3 goto $stack20 = virtualinvoke this.<org.apache.hadoop.hdfs.tools.federation.RouterAdmin: org.apache.hadoop.conf.Configuration getConf()>() at line 148 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack80 >= 2 goto $stack20 = virtualinvoke this.<org.apache.hadoop.hdfs.tools.federation.RouterAdmin: org.apache.hadoop.conf.Configuration getConf()>() at line 142 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack92 >= 4 goto $stack20 = virtualinvoke this.<org.apache.hadoop.hdfs.tools.federation.RouterAdmin: org.apache.hadoop.conf.Configuration getConf()>() at line 130 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack98 >= 4 goto $stack20 = virtualinvoke this.<org.apache.hadoop.hdfs.tools.federation.RouterAdmin: org.apache.hadoop.conf.Configuration getConf()>() at line 124 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack8 >= 1 goto exitCode = -1 at line 112 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.federation.RouterAdmin: int run(java.lang.String[])> has 4 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> address#72 = null AT LINE 171 with ID [5018e65c-f355]
2020-08-25 12:10:06 [INFO] - 	 -> if address#72 == null goto return exitCode AT LINE 230 with ID [5018e65c-f355]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = <org.apache.hadoop.hdfs.tools.federation.RouterAdmin: org.slf4j.Logger LOG> AT LINE 231 with ID [5018e65c-f355]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("Exception encountered", address#72) AT LINE 231 with ID [5018e65c-f355]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if bytesToWrite <= 0 goto return ret at line 134 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.TestPipelines: byte[] writeData(org.apache.hadoop.fs.FSDataOutputStream,int)> has 9 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> written = 0 AT LINE 132 with ID [4eed4d81-f1ae]
2020-08-25 12:10:06 [INFO] - 	 -> written = written + bytesToWriteNext AT LINE 140 with ID [4eed4d81-f1ae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.TestPipelines: org.apache.commons.logging.Log LOG> AT LINE 142 with ID [4eed4d81-f1ae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Written: ") AT LINE 142 with ID [4eed4d81-f1ae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(bytesToWriteNext) AT LINE 142 with ID [4eed4d81-f1ae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Total: ") AT LINE 142 with ID [4eed4d81-f1ae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(written) AT LINE 142 with ID [4eed4d81-f1ae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 142 with ID [4eed4d81-f1ae]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 142 with ID [4eed4d81-f1ae]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$ConnectionManager: boolean close(org.apache.hadoop.ipc.Server$Connection)> has 11 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 3361 with ID [16968d08-3479]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 3361 with ID [16968d08-3479]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.Thread: java.lang.String getName()>() AT LINE 3361 with ID [16968d08-3479]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 3361 with ID [16968d08-3479]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": disconnecting client ") AT LINE 3361 with ID [16968d08-3479]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(connection) AT LINE 3361 with ID [16968d08-3479]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Number of active connections: ") AT LINE 3361 with ID [16968d08-3479]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke this.<org.apache.hadoop.ipc.Server$ConnectionManager: int size()>() AT LINE 3361 with ID [16968d08-3479]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack19) AT LINE 3361 with ID [16968d08-3479]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3361 with ID [16968d08-3479]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 3361 with ID [16968d08-3479]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.ClientServiceDelegate: org.apache.hadoop.mapreduce.v2.api.MRClientProtocol instantiateAMProxy(java.net.InetSocketAddress)> has 10 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = <org.apache.hadoop.mapred.ClientServiceDelegate: org.apache.commons.logging.Log LOG> AT LINE 297 with ID [26db9313-ef68]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to ApplicationMaster at: ") AT LINE 297 with ID [26db9313-ef68]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(serviceAddr) AT LINE 297 with ID [26db9313-ef68]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 297 with ID [26db9313-ef68]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack8) AT LINE 297 with ID [26db9313-ef68]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = <org.apache.hadoop.mapred.ClientServiceDelegate: org.apache.commons.logging.Log LOG> AT LINE 303 with ID [271091df-2581]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connected to ApplicationMaster at: ") AT LINE 303 with ID [271091df-2581]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(serviceAddr) AT LINE 303 with ID [271091df-2581]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 303 with ID [271091df-2581]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack18) AT LINE 303 with ID [271091df-2581]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack7 != 0 goto $stack8 = (org.apache.hadoop.crypto.key.KeyProviderDelegationTokenExtension$DelegationTokenExtension) keyProvider at line 204 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.kms.KMSClientProvider$KMSTokenRenewer: void cancel(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = <org.apache.hadoop.crypto.key.kms.KMSClientProvider$KMSTokenRenewer: org.slf4j.Logger LOG> AT LINE 200 with ID [36f6ad7e-f387]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Canceling delegation token {}", token) AT LINE 200 with ID [36f6ad7e-f387]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack15 = this.<org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs: java.util.List summaryLogs> at line 696 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack26 == 0 goto interfaceinvoke recentLogModTime#7.<java.util.List: boolean add(java.lang.Object)>(log) at line 697 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs: void parseSummaryLogs(org.apache.hadoop.yarn.server.timeline.TimelineDataManager)> has 4 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 682 with ID [f24f8f48-0705]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = this.<org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs: org.apache.hadoop.yarn.api.records.ApplicationId appId> AT LINE 682 with ID [f24f8f48-0705]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = this.<org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs: org.apache.hadoop.fs.Path appDirPath> AT LINE 682 with ID [f24f8f48-0705]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Try to parse summary log for log {} in {}", $stack46, $stack45) AT LINE 682 with ID [f24f8f48-0705]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: void internalReleaseResource(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode,org.apache.hadoop.yarn.api.records.Resource)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.ParentQueue: org.apache.commons.logging.Log LOG> AT LINE 800 with ID [033961f9-c28f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("completedContainer ") AT LINE 800 with ID [033961f9-c28f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 800 with ID [033961f9-c28f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", cluster=") AT LINE 800 with ID [033961f9-c28f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clusterResource) AT LINE 800 with ID [033961f9-c28f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 800 with ID [033961f9-c28f]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 800 with ID [033961f9-c28f]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack14 != 0 goto parent = virtualinvoke targetNode.<org.apache.hadoop.hdfs.server.namenode.INode: org.apache.hadoop.hdfs.server.namenode.INodeDirectory getParent()>() at line 253 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if targetNode != null goto latestSnapshot = virtualinvoke iip.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: int getLatestSnapshotId()>() at line 243 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack28 != 0 goto targetNode = virtualinvoke iip.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: org.apache.hadoop.hdfs.server.namenode.INode getLastINode()>() at line 244 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirDeleteOp: boolean unprotectedDelete(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.hdfs.server.namenode.INode$ReclaimContext,long)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 269 with ID [61e0d296-98ec]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* FSDirectory.unprotectedDelete: ") AT LINE 269 with ID [61e0d296-98ec]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke iip.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>() AT LINE 269 with ID [61e0d296-98ec]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 269 with ID [61e0d296-98ec]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is removed") AT LINE 269 with ID [61e0d296-98ec]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 269 with ID [61e0d296-98ec]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String)>($stack26) AT LINE 269 with ID [61e0d296-98ec]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if prevValue == null goto $stack17 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: java.util.HashMap mappableBlockMap> at line 299 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: void cacheBlock(long,java.lang.String,java.lang.String,long,long,java.util.concurrent.Executor)> has 11 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger LOG> AT LINE 300 with ID [10632d81-63fb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = newarray (java.lang.Object)[3] AT LINE 300 with ID [10632d81-63fb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(blockId) AT LINE 300 with ID [10632d81-63fb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23[0] = $stack27 AT LINE 300 with ID [10632d81-63fb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23[1] = bpid AT LINE 300 with ID [10632d81-63fb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = prevValue.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$Value: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache$State state> AT LINE 300 with ID [10632d81-63fb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23[2] = $stack28 AT LINE 300 with ID [10632d81-63fb]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Block with id {}, pool {} already exists in the FsDatasetCache with state {}", $stack23) AT LINE 300 with ID [10632d81-63fb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetCache: org.slf4j.Logger LOG> AT LINE 309 with ID [ff1fc673-1e11]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(blockId) AT LINE 309 with ID [ff1fc673-1e11]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Initiating caching for Block with id {}, pool {}", $stack22, bpid) AT LINE 309 with ID [ff1fc673-1e11]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if len >= 28 goto return 1 at line 50 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.oncrpc.RegistrationClient$RegistrationClientHandler: boolean validMessageLength(int)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = <org.apache.hadoop.oncrpc.RegistrationClient$RegistrationClientHandler: org.slf4j.Logger LOG> AT LINE 52 with ID [e22a8f55-8e09]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Portmap mapping registration failed, the response size is less than 28 bytes:") AT LINE 52 with ID [e22a8f55-8e09]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(len) AT LINE 52 with ID [e22a8f55-8e09]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 52 with ID [e22a8f55-8e09]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>($stack8) AT LINE 52 with ID [e22a8f55-8e09]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.pipes.BinaryProtocol: void authenticate(java.lang.String,java.lang.String)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = <org.apache.hadoop.mapred.pipes.BinaryProtocol: org.apache.commons.logging.Log LOG> AT LINE 272 with ID [2679d225-e5de]
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending AUTHENTICATION_REQ, digest=") AT LINE 272 with ID [2679d225-e5de]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(digest) AT LINE 272 with ID [2679d225-e5de]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", challenge=") AT LINE 272 with ID [2679d225-e5de]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(challenge) AT LINE 272 with ID [2679d225-e5de]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 272 with ID [2679d225-e5de]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack9) AT LINE 272 with ID [2679d225-e5de]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack17 < 0 goto exitmonitor l1 at line 302 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack8 >= 0 goto l1 = this at line 284 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack4 != 0 goto $stack5 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nonSequentialWriteInMemory> at line 277 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: void waitForDump()> has 10 units and 4 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 278 with ID [17f24a38-a0a1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = interfaceinvoke $stack28.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 278 with ID [17f24a38-a0a1]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack29 == 0 goto return AT LINE 278 with ID [17f24a38-a0a1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 279 with ID [17f24a38-a0a1]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Do nothing, dump is disabled.") AT LINE 279 with ID [17f24a38-a0a1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 291 with ID [9f56993d-8742]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = interfaceinvoke $stack20.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 291 with ID [9f56993d-8742]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack21 == 0 goto $stack22 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.hadoop.util.Daemon dumpThread> AT LINE 291 with ID [9f56993d-8742]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 292 with ID [9f56993d-8742]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Asking dumper to dump...") AT LINE 292 with ID [9f56993d-8742]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if myStatus != $stack40 goto return at line 1646 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack82 != $stack83 goto $stack22 = new org.apache.hadoop.hdfs.protocol.datatransfer.PipelineAck at line 1635 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if h1 >= h#5 goto (branch) at line 1605 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReceiver$PacketResponder: void sendAckUpstreamUnprotected(org.apache.hadoop.hdfs.protocol.datatransfer.PipelineAck,long,long,long,int)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 1640 with ID [7be87c3a-fc82]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver$PacketResponder: java.lang.String myString> AT LINE 1640 with ID [7be87c3a-fc82]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44) AT LINE 1640 with ID [7be87c3a-fc82]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", replyAck=") AT LINE 1640 with ID [7be87c3a-fc82]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(h#25) AT LINE 1640 with ID [7be87c3a-fc82]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1640 with ID [7be87c3a-fc82]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void debug(java.lang.String)>($stack48) AT LINE 1640 with ID [7be87c3a-fc82]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack72 == 0 goto (branch) at line 247 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack50 <= 0 goto $stack49 = this.<org.apache.hadoop.yarn.server.federation.policies.amrmproxy.LocalityMulticastAMRMProxyPolicy: org.apache.hadoop.yarn.server.federation.policies.amrmproxy.LocalityMulticastAMRMProxyPolicy$AllocationBookkeeper bookkeeper> at line 279 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack37 == 0 goto (branch) at line 273 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack35 == 0 goto $stack36 = <org.apache.hadoop.yarn.server.federation.policies.amrmproxy.LocalityMulticastAMRMProxyPolicy: org.slf4j.Logger LOG> at line 266 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.federation.policies.amrmproxy.LocalityMulticastAMRMProxyPolicy: java.util.Map splitResourceRequests(java.util.List)> has 18 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack57 = <org.apache.hadoop.yarn.server.federation.policies.amrmproxy.LocalityMulticastAMRMProxyPolicy: org.slf4j.Logger LOG> AT LINE 260 with ID [a9bece4c-1db3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR resolving sub-cluster for resourceName: ") AT LINE 260 with ID [a9bece4c-1db3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack59 = virtualinvoke rr.<org.apache.hadoop.yarn.api.records.ResourceRequest: java.lang.String getResourceName()>() AT LINE 260 with ID [a9bece4c-1db3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack59) AT LINE 260 with ID [a9bece4c-1db3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" we are falling back to homeSubCluster:") AT LINE 260 with ID [a9bece4c-1db3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62 = this.<org.apache.hadoop.yarn.server.federation.policies.amrmproxy.LocalityMulticastAMRMProxyPolicy: org.apache.hadoop.yarn.server.federation.store.records.SubClusterId homeSubcluster> AT LINE 260 with ID [a9bece4c-1db3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack62) AT LINE 260 with ID [a9bece4c-1db3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 260 with ID [a9bece4c-1db3]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack57.<org.slf4j.Logger: void debug(java.lang.String)>($stack64) AT LINE 260 with ID [a9bece4c-1db3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = <org.apache.hadoop.yarn.server.federation.policies.amrmproxy.LocalityMulticastAMRMProxyPolicy: org.slf4j.Logger LOG> AT LINE 274 with ID [ec5e9512-64d2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The homeSubCluster (") AT LINE 274 with ID [ec5e9512-64d2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = this.<org.apache.hadoop.yarn.server.federation.policies.amrmproxy.LocalityMulticastAMRMProxyPolicy: org.apache.hadoop.yarn.server.federation.store.records.SubClusterId homeSubcluster> AT LINE 274 with ID [ec5e9512-64d2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack42) AT LINE 274 with ID [ec5e9512-64d2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") we are ") AT LINE 274 with ID [ec5e9512-64d2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("defaulting to is not active, the ResourceRequest ") AT LINE 274 with ID [ec5e9512-64d2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("will be ignored.") AT LINE 274 with ID [ec5e9512-64d2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 274 with ID [ec5e9512-64d2]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack40.<org.slf4j.Logger: void debug(java.lang.String)>($stack47) AT LINE 274 with ID [ec5e9512-64d2]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if pInfo == null goto (branch) at line 251 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack54 == null goto (branch) at line 249 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if pInfo == null goto (branch) at line 265 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack39 == 0 goto return at line 264 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack31 == 0 goto $stack32 = <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: org.apache.commons.logging.Log LOG> at line 247 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack74 != 0 goto (branch) at line 217 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack27 != 0 goto $stack28 = this.<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: java.util.Map processTree> at line 238 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack24 = new java.util.LinkedList at line 215 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if sid#19 == null goto (branch) at line 229 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack95 == 0 goto (branch) at line 203 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack91 == null goto (branch) at line 201 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if me != null goto $stack21 = interfaceinvoke allProcessInfo.<java.util.Map: java.util.Set entrySet()>() at line 210 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack20 == 0 goto (branch) at line 198 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void updateProcessTree()> has 6 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: org.apache.commons.logging.Log LOG> AT LINE 257 with ID [f53addd8-2494]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = interfaceinvoke $stack32.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 257 with ID [f53addd8-2494]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack33 == 0 goto $stack34 = this.<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: boolean smapsEnabled> AT LINE 257 with ID [f53addd8-2494]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: org.apache.commons.logging.Log LOG> AT LINE 259 with ID [f53addd8-2494]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = virtualinvoke this.<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: java.lang.String toString()>() AT LINE 259 with ID [f53addd8-2494]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack48.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack49) AT LINE 259 with ID [f53addd8-2494]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack18 != 0 goto $stack19 = new java.io.InputStreamReader at line 784 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void constructProcessSMAPInfo(org.apache.hadoop.yarn.util.ProcfsBasedProcessTree$ProcessTreeSmapMemInfo,java.lang.String)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = <org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: org.apache.commons.logging.Log LOG> AT LINE 807 with ID [de45f534-e121]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MemInfo : ") AT LINE 807 with ID [de45f534-e121]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 807 with ID [de45f534-e121]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : Value  : ") AT LINE 807 with ID [de45f534-e121]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value) AT LINE 807 with ID [de45f534-e121]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 807 with ID [de45f534-e121]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack43.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack48) AT LINE 807 with ID [de45f534-e121]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TaskLog: java.io.File getUserLogDir()> has 8 units and 4 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack1 = <org.apache.hadoop.mapred.TaskLog: java.io.File LOG_DIR> AT LINE 645 with ID [8fbe2b04-e6d3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack2 = virtualinvoke $stack1.<java.io.File: boolean exists()>() AT LINE 645 with ID [8fbe2b04-e6d3]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack2 != 0 goto $stack3 = <org.apache.hadoop.mapred.TaskLog: java.io.File LOG_DIR> AT LINE 645 with ID [8fbe2b04-e6d3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = <org.apache.hadoop.mapred.TaskLog: java.io.File LOG_DIR> AT LINE 646 with ID [8fbe2b04-e6d3]
2020-08-25 12:10:06 [INFO] - 	 -> b = virtualinvoke $stack4.<java.io.File: boolean mkdirs()>() AT LINE 646 with ID [8fbe2b04-e6d3]
2020-08-25 12:10:06 [INFO] - 	 -> if b != 0 goto $stack3 = <org.apache.hadoop.mapred.TaskLog: java.io.File LOG_DIR> AT LINE 647 with ID [8fbe2b04-e6d3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = <org.apache.hadoop.mapred.TaskLog: org.apache.commons.logging.Log LOG> AT LINE 648 with ID [8fbe2b04-e6d3]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("mkdirs failed. Ignoring.") AT LINE 648 with ID [8fbe2b04-e6d3]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$EntityLogScanner: void run()> has 9 units and 4 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 859 with ID [381052b5-b5ce]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("Active scan starting") AT LINE 859 with ID [381052b5-b5ce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = this.<org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$EntityLogScanner: org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore this$0> AT LINE 861 with ID [9449a935-4b8e]
2020-08-25 12:10:06 [INFO] - 	 -> scanned = virtualinvoke $stack4.<org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: int scanActiveLogs()>() AT LINE 861 with ID [9449a935-4b8e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 862 with ID [9449a935-4b8e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(scanned) AT LINE 862 with ID [9449a935-4b8e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scanned {} active applications", $stack8) AT LINE 862 with ID [9449a935-4b8e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 871 with ID [198dcc6f-0a64]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>("Active scan complete") AT LINE 871 with ID [198dcc6f-0a64]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if l9 == null goto virtualinvoke fsIn.<java.io.DataInputStream: void close()>() at line 609 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if fsIn == null goto (branch) at line 608 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void loadRMDelegationKeyState(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState)> has 9 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 604 with ID [edc19249-c217]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded delegation key: keyId=") AT LINE 604 with ID [edc19249-c217]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke key.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 604 with ID [edc19249-c217]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack35) AT LINE 604 with ID [edc19249-c217]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expirationDate=") AT LINE 604 with ID [edc19249-c217]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = virtualinvoke key.<org.apache.hadoop.security.token.delegation.DelegationKey: long getExpiryDate()>() AT LINE 604 with ID [edc19249-c217]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack38) AT LINE 604 with ID [edc19249-c217]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 604 with ID [edc19249-c217]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack40) AT LINE 604 with ID [edc19249-c217]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.timelineservice.NMTimelinePublisher: void putEntity(org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity,org.apache.hadoop.yarn.api.records.ApplicationId)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = <org.apache.hadoop.yarn.server.nodemanager.timelineservice.NMTimelinePublisher: org.apache.commons.logging.Log LOG> AT LINE 290 with ID [c788c7a3-d36a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Publishing the entity ") AT LINE 290 with ID [c788c7a3-d36a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(entity) AT LINE 290 with ID [c788c7a3-d36a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", JSON-style content: ") AT LINE 290 with ID [c788c7a3-d36a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = staticinvoke <org.apache.hadoop.yarn.util.timeline.TimelineUtils: java.lang.String dumpTimelineRecordtoJSON(java.lang.Object)>(entity) AT LINE 290 with ID [c788c7a3-d36a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 290 with ID [c788c7a3-d36a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 290 with ID [c788c7a3-d36a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 290 with ID [c788c7a3-d36a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if reportedState != $stack24 goto (branch) at line 2440 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack56 == 0 goto i$ = virtualinvoke report.<org.apache.hadoop.hdfs.protocol.BlockListAsLongs: java.util.Iterator iterator()>() at line 2393 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack60 != 0 goto $stack11 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean $assertionsDisabled> at line 2385 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if report != null goto $stack10 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean $assertionsDisabled> at line 2381 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void processFirstBlockReport(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo,org.apache.hadoop.hdfs.protocol.BlockListAsLongs)> has 14 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initial report of block ") AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke iblk.<org.apache.hadoop.hdfs.protocol.BlockListAsLongs$BlockReportReplica: java.lang.String getBlockName()>() AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44) AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ") AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke storageInfo.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor getDatanodeDescriptor()>() AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack47) AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size ") AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke iblk.<org.apache.hadoop.hdfs.protocol.BlockListAsLongs$BlockReportReplica: long getNumBytes()>() AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack50) AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" replicaState = ") AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(reportedState) AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>($stack54) AT LINE 2389 with ID [e88d60a6-746e]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i != $stack16 goto virtualinvoke s.<org.apache.hadoop.mapred.Merger$Segment: void close()>() at line 163 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack31 != 0 goto $stack27 = this.<org.apache.hadoop.mapred.BackupStore: int readSegmentIndex> at line 161 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack35 != 0 goto $stack26 = <org.apache.hadoop.mapred.BackupStore: boolean $assertionsDisabled> at line 161 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.BackupStore: void mark()> has 8 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = <org.apache.hadoop.mapred.BackupStore: org.apache.commons.logging.Log LOG> AT LINE 169 with ID [1009d73b-f998]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Dropping a segment") AT LINE 169 with ID [1009d73b-f998]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.mapred.BackupStore: org.apache.commons.logging.Log LOG> AT LINE 178 with ID [c75311c8-8250]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the FirsSegmentOffset to ") AT LINE 178 with ID [c75311c8-8250]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.mapred.BackupStore: int currentKVOffset> AT LINE 178 with ID [c75311c8-8250]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack12) AT LINE 178 with ID [c75311c8-8250]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 178 with ID [c75311c8-8250]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 178 with ID [c75311c8-8250]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack10 != null goto $stack11 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> at line 1131 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack6 == $stack7 goto login = specialinvoke this.<org.apache.hadoop.security.UserGroupInformation: javax.security.auth.login.LoginContext getLogin()>() at line 1127 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.UserGroupInformation: void logoutUserFromKeytab()> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 1136 with ID [2f93d821-d767]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initiating logout for ") AT LINE 1136 with ID [2f93d821-d767]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke this.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getUserName()>() AT LINE 1136 with ID [2f93d821-d767]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 1136 with ID [2f93d821-d767]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1136 with ID [2f93d821-d767]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack28) AT LINE 1136 with ID [2f93d821-d767]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack38 < 0 goto $stack39 = this.<org.apache.hadoop.hdfs.DataStreamer: java.util.LinkedList dataQueue> at line 879 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DataStreamer: void waitForAckedSeqno(long)> has 3 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 873 with ID [fad98b42-8653]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(seqno) AT LINE 873 with ID [fad98b42-8653]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Waiting for ack for: {}", $stack17) AT LINE 873 with ID [fad98b42-8653]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.nativeio.NativeIO$POSIX: void <clinit>()> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.io.nativeio.NativeIO$POSIX: org.slf4j.Logger LOG> AT LINE 195 with ID [13b98770-8a04]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initialized cache for IDs to User/Group mapping with a  cache timeout of ") AT LINE 195 with ID [13b98770-8a04]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = <org.apache.hadoop.io.nativeio.NativeIO$POSIX: long cacheTimeout> AT LINE 195 with ID [13b98770-8a04]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = $stack14 / 1000L AT LINE 195 with ID [13b98770-8a04]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack15) AT LINE 195 with ID [13b98770-8a04]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds.") AT LINE 195 with ID [13b98770-8a04]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 195 with ID [13b98770-8a04]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 195 with ID [13b98770-8a04]
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.ha.ZKFailoverController: boolean confirmFormat()>
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void removeApplication(org.apache.hadoop.yarn.api.records.ApplicationId)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 638 with ID [0a545b59-8058]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeApplication: appId=") AT LINE 638 with ID [0a545b59-8058]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 638 with ID [0a545b59-8058]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 638 with ID [0a545b59-8058]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 638 with ID [0a545b59-8058]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.service.CompositeService: void serviceStop()> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.service.CompositeService: org.slf4j.Logger LOG> AT LINE 130 with ID [52366291-17c9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke this.<org.apache.hadoop.service.CompositeService: java.lang.String getName()>() AT LINE 130 with ID [52366291-17c9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 130 with ID [52366291-17c9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": stopping services, size=") AT LINE 130 with ID [52366291-17c9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numOfServicesToStop) AT LINE 130 with ID [52366291-17c9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 130 with ID [52366291-17c9]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 130 with ID [52366291-17c9]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.oncrpc.SimpleTcpClientHandler: void channelConnected(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelStateEvent)> has 5 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = <org.apache.hadoop.oncrpc.SimpleTcpClientHandler: org.slf4j.Logger LOG> AT LINE 44 with ID [61ece8a9-d9cf]
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = interfaceinvoke $stack4.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 44 with ID [61ece8a9-d9cf]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack5 == 0 goto $stack6 = this.<org.apache.hadoop.oncrpc.SimpleTcpClientHandler: org.apache.hadoop.oncrpc.XDR request> AT LINE 44 with ID [61ece8a9-d9cf]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.oncrpc.SimpleTcpClientHandler: org.slf4j.Logger LOG> AT LINE 45 with ID [61ece8a9-d9cf]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>("sending PRC request") AT LINE 45 with ID [61ece8a9-d9cf]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack2 == 0 goto $stack3 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> at line 324 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: boolean addDigestACL(org.apache.zookeeper.data.ACL)> has 12 units and 4 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 325 with ID [14b08656-a0cf]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = interfaceinvoke $stack9.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 325 with ID [14b08656-a0cf]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack10 == 0 goto $stack11 = this.<org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.util.List digestACLs> AT LINE 325 with ID [14b08656-a0cf]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 326 with ID [14b08656-a0cf]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = staticinvoke <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.lang.String aclToString(org.apache.zookeeper.data.ACL)>(acl) AT LINE 326 with ID [14b08656-a0cf]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Added ACL {}", $stack15) AT LINE 326 with ID [14b08656-a0cf]
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 331 with ID [e34768c4-01ef]
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = interfaceinvoke $stack3.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 331 with ID [e34768c4-01ef]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack4 == 0 goto return 0 AT LINE 331 with ID [e34768c4-01ef]
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: org.slf4j.Logger LOG> AT LINE 332 with ID [e34768c4-01ef]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = staticinvoke <org.apache.hadoop.registry.client.impl.zk.RegistrySecurity: java.lang.String aclToString(org.apache.zookeeper.data.ACL)>(acl) AT LINE 332 with ID [e34768c4-01ef]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Ignoring added ACL - registry is insecure{}", $stack7) AT LINE 332 with ID [e34768c4-01ef]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.security.BaseNMTokenSecretManager: byte[] retrivePasswordInternal(org.apache.hadoop.yarn.security.NMTokenIdentifier,org.apache.hadoop.yarn.server.security.MasterKeyData)> has 12 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.security.BaseNMTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 103 with ID [2ebc8b83-a2ce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("creating password for ") AT LINE 103 with ID [2ebc8b83-a2ce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 103 with ID [2ebc8b83-a2ce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack11) AT LINE 103 with ID [2ebc8b83-a2ce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ") AT LINE 103 with ID [2ebc8b83-a2ce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.NMTokenIdentifier: java.lang.String getApplicationSubmitter()>() AT LINE 103 with ID [2ebc8b83-a2ce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 103 with ID [2ebc8b83-a2ce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to run on NM ") AT LINE 103 with ID [2ebc8b83-a2ce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.yarn.api.records.NodeId getNodeId()>() AT LINE 103 with ID [2ebc8b83-a2ce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack17) AT LINE 103 with ID [2ebc8b83-a2ce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 103 with ID [2ebc8b83-a2ce]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 103 with ID [2ebc8b83-a2ce]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.portmap.RpcProgramPortmap: org.apache.hadoop.oncrpc.XDR getport(int,org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.XDR)> has 14 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = <org.apache.hadoop.portmap.RpcProgramPortmap: org.slf4j.Logger LOG> AT LINE 128 with ID [03ad80e4-dab8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Portmap GETPORT key=") AT LINE 128 with ID [03ad80e4-dab8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 128 with ID [03ad80e4-dab8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 128 with ID [03ad80e4-dab8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mapping) AT LINE 128 with ID [03ad80e4-dab8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 128 with ID [03ad80e4-dab8]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String)>($stack39) AT LINE 128 with ID [03ad80e4-dab8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = <org.apache.hadoop.portmap.RpcProgramPortmap: org.slf4j.Logger LOG> AT LINE 135 with ID [3a8be868-315b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found mapping for key: ") AT LINE 135 with ID [3a8be868-315b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 135 with ID [3a8be868-315b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" port:") AT LINE 135 with ID [3a8be868-315b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(res) AT LINE 135 with ID [3a8be868-315b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 135 with ID [3a8be868-315b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String)>($stack32) AT LINE 135 with ID [3a8be868-315b]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall: boolean isDone()> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = <org.apache.hadoop.io.retry.AsyncCallHandler: org.slf4j.Logger LOG> AT LINE 242 with ID [f541d6a7-2494]
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = virtualinvoke this.<org.apache.hadoop.io.retry.AsyncCallHandler$AsyncCall: int getCallId()>() AT LINE 242 with ID [f541d6a7-2494]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack5) AT LINE 242 with ID [f541d6a7-2494]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = virtualinvoke r.<org.apache.hadoop.io.retry.CallReturn: org.apache.hadoop.io.retry.CallReturn$State getState()>() AT LINE 242 with ID [f541d6a7-2494]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("#{}: {}", $stack6, $stack7) AT LINE 242 with ID [f541d6a7-2494]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback: void <init>()> has 10 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack2 = <org.apache.hadoop.util.PerformanceAdvisory: org.slf4j.Logger LOG> AT LINE 41 with ID [1615001c-0159]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String)>("Falling back to shell based") AT LINE 41 with ID [1615001c-0159]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback: org.slf4j.Logger LOG> AT LINE 45 with ID [136245df-246a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group mapping impl=") AT LINE 45 with ID [136245df-246a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback: org.apache.hadoop.security.GroupMappingServiceProvider impl> AT LINE 45 with ID [136245df-246a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.Object: java.lang.Class getClass()>() AT LINE 45 with ID [136245df-246a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.Class: java.lang.String getName()>() AT LINE 45 with ID [136245df-246a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 45 with ID [136245df-246a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 45 with ID [136245df-246a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack13) AT LINE 45 with ID [136245df-246a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack46 == 0 goto (branch) at line 121 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if msg == null goto (branch) at line 116 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack25 == 0 goto $stack26 = <org.apache.hadoop.hdfs.qjournal.server.GetJournalEditServlet: org.apache.commons.logging.Log LOG> at line 126 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack22 == 0 goto $stack23 = staticinvoke <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getLoginUser()>() at line 113 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if remotePrincipal != null goto $stack11 = <org.apache.hadoop.hdfs.qjournal.server.GetJournalEditServlet: org.apache.commons.logging.Log LOG> at line 80 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.qjournal.server.GetJournalEditServlet: boolean isValidRequestor(javax.servlet.http.HttpServletRequest,org.apache.hadoop.conf.Configuration)> has 30 units and 5 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack62 = <org.apache.hadoop.hdfs.qjournal.server.GetJournalEditServlet: org.apache.commons.logging.Log LOG> AT LINE 87 with ID [ae9d7a10-f3f6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Validating request made by ") AT LINE 87 with ID [ae9d7a10-f3f6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(remotePrincipal) AT LINE 87 with ID [ae9d7a10-f3f6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ") AT LINE 87 with ID [ae9d7a10-f3f6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(remoteShortName) AT LINE 87 with ID [ae9d7a10-f3f6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". This user is: ") AT LINE 87 with ID [ae9d7a10-f3f6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack68 = staticinvoke <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getLoginUser()>() AT LINE 87 with ID [ae9d7a10-f3f6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack68) AT LINE 87 with ID [ae9d7a10-f3f6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 87 with ID [ae9d7a10-f3f6]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack62.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack70) AT LINE 87 with ID [ae9d7a10-f3f6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack56 = <org.apache.hadoop.hdfs.qjournal.server.GetJournalEditServlet: org.apache.commons.logging.Log LOG> AT LINE 115 with ID [4045b089-30cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isValidRequestor is comparing to valid requestor: ") AT LINE 115 with ID [4045b089-30cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg) AT LINE 115 with ID [4045b089-30cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 115 with ID [4045b089-30cd]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack56.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack59) AT LINE 115 with ID [4045b089-30cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = <org.apache.hadoop.hdfs.qjournal.server.GetJournalEditServlet: org.apache.commons.logging.Log LOG> AT LINE 118 with ID [0a4a92a8-305b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isValidRequestor is allowing: ") AT LINE 118 with ID [0a4a92a8-305b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(remotePrincipal) AT LINE 118 with ID [0a4a92a8-305b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 118 with ID [0a4a92a8-305b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack50.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack53) AT LINE 118 with ID [0a4a92a8-305b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = <org.apache.hadoop.hdfs.qjournal.server.GetJournalEditServlet: org.apache.commons.logging.Log LOG> AT LINE 129 with ID [accadbbd-f3ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isValidRequestor is allowing other JN principal: ") AT LINE 129 with ID [accadbbd-f3ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(remotePrincipal) AT LINE 129 with ID [accadbbd-f3ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 129 with ID [accadbbd-f3ab]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack40) AT LINE 129 with ID [accadbbd-f3ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.qjournal.server.GetJournalEditServlet: org.apache.commons.logging.Log LOG> AT LINE 135 with ID [7f1f6f3a-c00a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isValidRequestor is rejecting: ") AT LINE 135 with ID [7f1f6f3a-c00a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(remotePrincipal) AT LINE 135 with ID [7f1f6f3a-c00a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 135 with ID [7f1f6f3a-c00a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 135 with ID [7f1f6f3a-c00a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack73 != dsStatus goto $stack75 = <org.apache.hadoop.yarn.applications.distributedshell.Client: org.apache.commons.logging.Log LOG> at line 835 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack64 <= 0 goto (branch) at line 854 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack59 != state goto $stack60 = staticinvoke <java.lang.System: long currentTimeMillis()>() at line 851 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack47 != state goto $stack48 = <org.apache.hadoop.yarn.api.records.YarnApplicationState: org.apache.hadoop.yarn.api.records.YarnApplicationState KILLED> at line 834 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.applications.distributedshell.Client: boolean monitorApplication(org.apache.hadoop.yarn.api.records.ApplicationId)>
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.AsyncDataService: void writeAsync(org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.nfs.nfs3.AsyncDataService: org.apache.commons.logging.Log LOG> AT LINE 99 with ID [532db0d5-bae8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling write back task for fileId: ") AT LINE 99 with ID [532db0d5-bae8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke openFileCtx.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes getLatestAttr()>() AT LINE 99 with ID [532db0d5-bae8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes: long getFileId()>() AT LINE 99 with ID [532db0d5-bae8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack10) AT LINE 99 with ID [532db0d5-bae8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 99 with ID [532db0d5-bae8]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack12) AT LINE 99 with ID [532db0d5-bae8]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack11 != $stack13 goto $stack14 = virtualinvoke task.<org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: org.apache.hadoop.mapreduce.v2.app.job.TaskStateInternal getInternalState()>() at line 1019 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl$KillWaitAttemptKilledTransition: org.apache.hadoop.mapreduce.v2.app.job.TaskStateInternal transition(org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl,org.apache.hadoop.mapreduce.v2.app.job.event.TaskEvent)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = staticinvoke <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: org.apache.commons.logging.Log access$1700()>() AT LINE 1026 with ID [28725a21-88f2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not generating HistoryFinish event since start event not generated for task: ") AT LINE 1026 with ID [28725a21-88f2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke task.<org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: org.apache.hadoop.mapreduce.v2.api.records.TaskId getID()>() AT LINE 1026 with ID [28725a21-88f2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 1026 with ID [28725a21-88f2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1026 with ID [28725a21-88f2]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 1026 with ID [28725a21-88f2]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.WebHdfsFileSystem$ReadRunner: java.io.InputStream initializeInputStream(java.net.HttpURLConnection)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: org.slf4j.Logger LOG> AT LINE 2257 with ID [dc12b5d1-19cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("open file: ") AT LINE 2257 with ID [dc12b5d1-19cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke conn.<java.net.HttpURLConnection: java.net.URL getURL()>() AT LINE 2257 with ID [dc12b5d1-19cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack29) AT LINE 2257 with ID [dc12b5d1-19cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2257 with ID [dc12b5d1-19cd]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String)>($stack31) AT LINE 2257 with ID [dc12b5d1-19cd]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if storage != null goto $stack13 = new org.apache.hadoop.hdfs.server.blockmanagement.BlockToMarkCorrupt at line 1410 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if node != null goto storage = null at line 1396 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if storedBlock != null goto $stack11 = virtualinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager getDatanodeManager()>() at line 1386 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack34 != 0 goto $stack9 = virtualinvoke blk.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: org.apache.hadoop.hdfs.protocol.Block getLocalBlock()>() at line 1392 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void findAndMarkBlockAsCorrupt(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.protocol.DatanodeInfo,java.lang.String,java.lang.String)> has 4 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1391 with ID [106f23f2-7ce4]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("BLOCK* findAndMarkBlockAsCorrupt: {} not found", blk) AT LINE 1391 with ID [106f23f2-7ce4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1411 with ID [03baccbb-debd]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* findAndMarkBlockAsCorrupt: {} not found on {}", blk, dn) AT LINE 1411 with ID [03baccbb-debd]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if mapOutput != null goto $stack36 = <org.apache.hadoop.mapreduce.task.reduce.Fetcher: org.apache.commons.logging.Log LOG> at line 541 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack29 != 0 goto $stack30 = <org.apache.hadoop.mapreduce.task.reduce.Fetcher: org.apache.commons.logging.Log LOG> at line 520 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.task.reduce.Fetcher: org.apache.hadoop.mapreduce.TaskAttemptID[] copyMapOutput(org.apache.hadoop.mapreduce.task.reduce.MapHost,java.io.DataInputStream,java.util.Set,boolean)> has 9 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack66 = <org.apache.hadoop.mapreduce.task.reduce.Fetcher: org.apache.commons.logging.Log LOG> AT LINE 526 with ID [b18a92c6-02bd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack67 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("header: ") AT LINE 526 with ID [b18a92c6-02bd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mapId) AT LINE 526 with ID [b18a92c6-02bd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", len: ") AT LINE 526 with ID [b18a92c6-02bd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(compressedLength) AT LINE 526 with ID [b18a92c6-02bd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", decomp len: ") AT LINE 526 with ID [b18a92c6-02bd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(decompressedLength) AT LINE 526 with ID [b18a92c6-02bd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 526 with ID [b18a92c6-02bd]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack66.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack73) AT LINE 526 with ID [b18a92c6-02bd]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack8 <= 0 goto (branch) at line 370 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack6 == 0 goto return at line 369 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.LocalitySchedulingPlacementSet: void showRequests()> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.LocalitySchedulingPlacementSet: org.apache.commons.logging.Log LOG> AT LINE 371 with ID [a0aebd98-df82]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tRequest=") AT LINE 371 with ID [a0aebd98-df82]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(request) AT LINE 371 with ID [a0aebd98-df82]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 371 with ID [a0aebd98-df82]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 371 with ID [a0aebd98-df82]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if conf != null goto $stack2 = this.<org.apache.hadoop.io.compress.zlib.ZlibCompressor: long stream> at line 285 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.compress.zlib.ZlibCompressor: void reinit(org.apache.hadoop.conf.Configuration)> has 5 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.io.compress.zlib.ZlibCompressor: org.slf4j.Logger LOG> AT LINE 294 with ID [c569dd40-7dfa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = interfaceinvoke $stack12.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 294 with ID [c569dd40-7dfa]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack13 == 0 goto return AT LINE 294 with ID [c569dd40-7dfa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = <org.apache.hadoop.io.compress.zlib.ZlibCompressor: org.slf4j.Logger LOG> AT LINE 295 with ID [c569dd40-7dfa]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>("Reinit compressor with new compression configuration") AT LINE 295 with ID [c569dd40-7dfa]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack24 != 0 goto $stack25 = this.<org.apache.hadoop.hdfs.server.federation.router.NamenodeHeartbeatService: org.apache.hadoop.conf.Configuration conf> at line 257 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.NamenodeHeartbeatService: org.apache.hadoop.hdfs.server.federation.resolver.NamenodeStatusReport getNamenodeStatusReport()> has 3 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.server.federation.router.NamenodeHeartbeatService: org.slf4j.Logger LOG> AT LINE 243 with ID [dd285c85-746c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = this.<org.apache.hadoop.hdfs.server.federation.router.NamenodeHeartbeatService: java.lang.String serviceAddress> AT LINE 243 with ID [dd285c85-746c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Probing NN at service address: {}", $stack13) AT LINE 243 with ID [dd285c85-746c]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.application.ApplicationImpl: void handle(org.apache.hadoop.yarn.server.nodemanager.containermanager.application.ApplicationEvent)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.application.ApplicationImpl: org.slf4j.Logger LOG> AT LINE 642 with ID [34224fdd-fa4e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ") AT LINE 642 with ID [34224fdd-fa4e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationID) AT LINE 642 with ID [34224fdd-fa4e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of type ") AT LINE 642 with ID [34224fdd-fa4e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke event.<org.apache.hadoop.yarn.server.nodemanager.containermanager.application.ApplicationEvent: java.lang.Enum getType()>() AT LINE 642 with ID [34224fdd-fa4e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack32) AT LINE 642 with ID [34224fdd-fa4e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 642 with ID [34224fdd-fa4e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String)>($stack34) AT LINE 642 with ID [34224fdd-fa4e]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack35 == 0 goto $stack36 = <org.apache.hadoop.hdfs.net.DFSNetworkTopology: org.slf4j.Logger LOG> at line 215 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack34 == 0 goto $stack35 = excludedNode instanceof org.apache.hadoop.hdfs.protocol.DatanodeInfo at line 212 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack33 == 0 goto $stack34 = excludedNode instanceof org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl at line 209 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack19 != 0 goto $stack20 = <org.apache.hadoop.hdfs.net.DFSNetworkTopology: org.slf4j.Logger LOG> at line 246 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if availableCount > 0 goto i$#21 = specialinvoke this.<org.apache.hadoop.hdfs.net.DFSNetworkTopology: org.apache.hadoop.net.Node chooseRandomWithStorageTypeAndExcludeRoot(org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl,org.apache.hadoop.net.Node,org.apache.hadoop.fs.StorageType)>(root, excludeRoot, type) at line 229 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack30 == 0 goto (branch) at line 208 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack14 != 0 goto root = (org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl) node at line 189 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if node != null goto $stack14 = node instanceof org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl at line 185 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack76 == 0 goto $stack77 = virtualinvoke excludedScope.<java.lang.String: boolean startsWith(java.lang.String)>(scope) at line 177 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.net.DFSNetworkTopology: org.apache.hadoop.net.Node chooseRandomWithStorageType(java.lang.String,java.lang.String,java.util.Collection,org.apache.hadoop.fs.StorageType)> has 6 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack75 = <org.apache.hadoop.hdfs.net.DFSNetworkTopology: org.slf4j.Logger LOG> AT LINE 186 with ID [61223318-ec67]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack75.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Invalid scope {}, non-existing node", scope) AT LINE 186 with ID [61223318-ec67]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.net.DFSNetworkTopology: org.slf4j.Logger LOG> AT LINE 242 with ID [418486d4-7d18]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Node {} is excluded, continuing.", i$#21) AT LINE 242 with ID [418486d4-7d18]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.net.DFSNetworkTopology: org.slf4j.Logger LOG> AT LINE 245 with ID [a0e4ad3a-f6b9]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("chooseRandom returning {}", i$#21) AT LINE 245 with ID [a0e4ad3a-f6b9]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack8 != 0 goto return at line 371 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler$1: void run()> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = staticinvoke <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.commons.logging.Log access$200()>() AT LINE 366 with ID [474fab6c-4957]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Event handling interrupted") AT LINE 366 with ID [474fab6c-4957]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DataStreamer: java.net.Socket createSocketForPipeline(org.apache.hadoop.hdfs.protocol.DatanodeInfo,int,org.apache.hadoop.hdfs.DFSClient)> has 6 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 255 with ID [83959051-6d7e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Connecting to datanode {}", dnAddr) AT LINE 255 with ID [83959051-6d7e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 267 with ID [ff2b9f84-f4de]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke sock.<java.net.Socket: int getSendBufferSize()>() AT LINE 267 with ID [ff2b9f84-f4de]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack22) AT LINE 267 with ID [ff2b9f84-f4de]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Send buf size {}", $stack23) AT LINE 267 with ID [ff2b9f84-f4de]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack21 != $stack24 goto $stack16 = new org.apache.hadoop.security.token.SecretManager$InvalidToken at line 263 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack11 != $stack14 goto $stack15 = this.<org.apache.hadoop.yarn.server.resourcemanager.security.AMRMTokenSecretManager: org.apache.hadoop.yarn.server.security.MasterKeyData nextMasterKey> at line 253 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack10 != 0 goto $stack11 = virtualinvoke identifier.<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: int getKeyId()>() at line 249 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.security.AMRMTokenSecretManager: byte[] retrievePassword(org.apache.hadoop.yarn.security.AMRMTokenIdentifier)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = <org.apache.hadoop.yarn.server.resourcemanager.security.AMRMTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 247 with ID [46999dd3-5bf7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to retrieve password for ") AT LINE 247 with ID [46999dd3-5bf7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationAttemptId) AT LINE 247 with ID [46999dd3-5bf7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 247 with ID [46999dd3-5bf7]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack43.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack46) AT LINE 247 with ID [46999dd3-5bf7]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack18 == 0 goto return defaultLoader at line 249 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack23 == 0 goto (branch) at line 231 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if len <= 0 goto $stack17 = this.<org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.commons.configuration.Configuration parent> at line 227 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if purls != null goto $stack14 = <org.apache.hadoop.metrics2.impl.MetricsConfig: com.google.common.base.Splitter SPLITTER> at line 224 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack9 == null goto $stack10 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() at line 221 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.ClassLoader getPluginLoader()> has 8 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.slf4j.Logger LOG> AT LINE 232 with ID [f7e84db0-2898]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>(jar) AT LINE 232 with ID [f7e84db0-2898]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.slf4j.Logger LOG> AT LINE 240 with ID [531c5b98-fbdb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using plugin jars: ") AT LINE 240 with ID [531c5b98-fbdb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = staticinvoke <com.google.common.collect.Iterables: java.lang.String toString(java.lang.Iterable)>(jars) AT LINE 240 with ID [531c5b98-fbdb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33) AT LINE 240 with ID [531c5b98-fbdb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 240 with ID [531c5b98-fbdb]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String)>($stack35) AT LINE 240 with ID [531c5b98-fbdb]
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.client.api.impl.TimelineConnector: org.apache.hadoop.security.authentication.client.ConnectionConfigurator getConnConfigurator(org.apache.hadoop.security.ssl.SSLFactory)>
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack15 == 0 goto (branch) at line 126 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack37 == 0 goto (branch) at line 115 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack25 == 0 goto $stack27 = <org.apache.hadoop.hdfs.DFSInotifyEventInputStream: org.slf4j.Logger LOG> at line 106 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack11 != 0 goto $stack12 = this.<org.apache.hadoop.hdfs.DFSInotifyEventInputStream: java.util.Iterator it> at line 99 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSInotifyEventInputStream: org.apache.hadoop.hdfs.inotify.EventBatch poll()> has 6 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = <org.apache.hadoop.hdfs.DFSInotifyEventInputStream: org.slf4j.Logger LOG> AT LINE 100 with ID [05a65631-5b2b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>("poll(): lastReadTxid is -1, reading current txid from NN") AT LINE 100 with ID [05a65631-5b2b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hdfs.DFSInotifyEventInputStream: org.slf4j.Logger LOG> AT LINE 120 with ID [c2c49f2f-e8f5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = this.<org.apache.hadoop.hdfs.DFSInotifyEventInputStream: long lastReadTxid> AT LINE 120 with ID [c2c49f2f-e8f5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack26) AT LINE 120 with ID [c2c49f2f-e8f5]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("poll(): read no edits from the NN when requesting edits after txid {}", $stack29) AT LINE 120 with ID [c2c49f2f-e8f5]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack12 != 0 goto $stack13 = <org.apache.hadoop.ipc.Client: org.apache.hadoop.ipc.Client$ClientExecutorServiceFactory clientExcecutorFactory> at line 1337 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = this.<org.apache.hadoop.ipc.Client: java.util.concurrent.ConcurrentMap connections> at line 1331 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack6 != 0 goto $stack7 = this.<org.apache.hadoop.ipc.Client: java.util.concurrent.ConcurrentMap connections> at line 1326 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Client: void stop()> has 5 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 1322 with ID [69b7c7dd-5ae9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = interfaceinvoke $stack3.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 1322 with ID [69b7c7dd-5ae9]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack4 == 0 goto $stack5 = this.<org.apache.hadoop.ipc.Client: java.util.concurrent.atomic.AtomicBoolean running> AT LINE 1322 with ID [69b7c7dd-5ae9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 1323 with ID [69b7c7dd-5ae9]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>("Stopping client") AT LINE 1323 with ID [69b7c7dd-5ae9]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack103 != 0 goto (branch) at line 535 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack31 == 0 goto $stack33 = this.<org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager> at line 533 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack20 == 0 goto return at line 522 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack45 == 0 goto (branch) at line 606 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack44 == 0 goto (branch) at line 522 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if neededCached != 0 goto (branch) at line 596 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack52 == 0 goto $stack39 = interfaceinvoke it#14.<java.util.List: int size()>() at line 572 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack75 == 0 goto (branch) at line 557 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack124 <= 0 goto $stack125 = virtualinvoke blockInfo.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: long getNumBytes()>() at line 511 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack17 == 0 goto $stack18 = this.<org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.apache.hadoop.util.GSet cachedBlocks> at line 496 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack116 == 0 goto (branch) at line 499 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: void rescanCachedBlockMap()> has 52 units and 7 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack137 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 506 with ID [2ef44de7-6570]
2020-08-25 12:10:06 [INFO] - 	 -> $stack139 = virtualinvoke cblock.<org.apache.hadoop.hdfs.server.namenode.CachedBlock: long getBlockId()>() AT LINE 506 with ID [2ef44de7-6570]
2020-08-25 12:10:06 [INFO] - 	 -> $stack140 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack139) AT LINE 506 with ID [2ef44de7-6570]
2020-08-25 12:10:06 [INFO] - 	 -> $stack141 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 506 with ID [2ef44de7-6570]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack137.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Block {}: cannot be found in block manager and hence skipped from calculation for node {}.", $stack140, $stack141) AT LINE 506 with ID [2ef44de7-6570]
2020-08-25 12:10:06 [INFO] - 	 -> $stack128 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 512 with ID [9a3313fe-0e1b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack127 = newarray (java.lang.Object)[3] AT LINE 512 with ID [9a3313fe-0e1b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack131 = virtualinvoke cblock.<org.apache.hadoop.hdfs.server.namenode.CachedBlock: long getBlockId()>() AT LINE 512 with ID [9a3313fe-0e1b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack132 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack131) AT LINE 512 with ID [9a3313fe-0e1b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack127[0] = $stack132 AT LINE 512 with ID [9a3313fe-0e1b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack134 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 512 with ID [9a3313fe-0e1b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack127[1] = $stack134 AT LINE 512 with ID [9a3313fe-0e1b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack136 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(remaining) AT LINE 512 with ID [9a3313fe-0e1b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack127[2] = $stack136 AT LINE 512 with ID [9a3313fe-0e1b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack128.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Block {}: removing from PENDING_CACHED for node {} because it cannot fit in remaining cache size {}.", $stack127) AT LINE 512 with ID [9a3313fe-0e1b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack105 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 536 with ID [3d77bcb1-ab6e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack107 = virtualinvoke dn#12.<org.apache.hadoop.hdfs.server.namenode.CachedBlock: long getBlockId()>() AT LINE 536 with ID [3d77bcb1-ab6e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack108 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack107) AT LINE 536 with ID [3d77bcb1-ab6e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack109 = virtualinvoke blockInfo#16.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 536 with ID [3d77bcb1-ab6e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack105.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Block {}: removing from PENDING_UNCACHED for node {} because the DataNode uncached it.", $stack108, $stack109) AT LINE 536 with ID [3d77bcb1-ab6e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack94 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 548 with ID [93a062a0-b310]
2020-08-25 12:10:06 [INFO] - 	 -> $stack96 = virtualinvoke dn#12.<org.apache.hadoop.hdfs.server.namenode.CachedBlock: long getBlockId()>() AT LINE 548 with ID [93a062a0-b310]
2020-08-25 12:10:06 [INFO] - 	 -> $stack97 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack96) AT LINE 548 with ID [93a062a0-b310]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack94.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Block {}: can\'t cache block because it is {}", $stack97, blockInfo#18) AT LINE 548 with ID [93a062a0-b310]
2020-08-25 12:10:06 [INFO] - 	 -> $stack82 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 561 with ID [ceefc268-dfd3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81 = newarray (java.lang.Object)[4] AT LINE 561 with ID [ceefc268-dfd3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack85 = virtualinvoke dn#12.<org.apache.hadoop.hdfs.server.namenode.CachedBlock: long getBlockId()>() AT LINE 561 with ID [ceefc268-dfd3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack86 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack85) AT LINE 561 with ID [ceefc268-dfd3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81[0] = $stack86 AT LINE 561 with ID [ceefc268-dfd3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack88 = virtualinvoke datanode.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 561 with ID [ceefc268-dfd3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81[1] = $stack88 AT LINE 561 with ID [ceefc268-dfd3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack90 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(numCached) AT LINE 561 with ID [ceefc268-dfd3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81[2] = $stack90 AT LINE 561 with ID [ceefc268-dfd3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack92 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(neededCached) AT LINE 561 with ID [ceefc268-dfd3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81[3] = $stack92 AT LINE 561 with ID [ceefc268-dfd3]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack82.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("Block {}: removing from PENDING_CACHED for node {} because we already have {} cached replicas and we only need {}", $stack81) AT LINE 561 with ID [ceefc268-dfd3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 576 with ID [fcc029be-e0e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack61 = newarray (java.lang.Object)[4] AT LINE 576 with ID [fcc029be-e0e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack65 = virtualinvoke dn#12.<org.apache.hadoop.hdfs.server.namenode.CachedBlock: long getBlockId()>() AT LINE 576 with ID [fcc029be-e0e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack66 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack65) AT LINE 576 with ID [fcc029be-e0e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack61[0] = $stack66 AT LINE 576 with ID [fcc029be-e0e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack68 = virtualinvoke datanode.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 576 with ID [fcc029be-e0e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack61[1] = $stack68 AT LINE 576 with ID [fcc029be-e0e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack70 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(numCached) AT LINE 576 with ID [fcc029be-e0e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack61[2] = $stack70 AT LINE 576 with ID [fcc029be-e0e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(neededCached) AT LINE 576 with ID [fcc029be-e0e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack61[3] = $stack72 AT LINE 576 with ID [fcc029be-e0e1]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack62.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("Block {}: removing from PENDING_UNCACHED for node {} because we only have {} cached replicas and we need {}", $stack61) AT LINE 576 with ID [fcc029be-e0e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 600 with ID [795fb87a-5c0c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke dn#12.<org.apache.hadoop.hdfs.server.namenode.CachedBlock: long getBlockId()>() AT LINE 600 with ID [795fb87a-5c0c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack48) AT LINE 600 with ID [795fb87a-5c0c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Block {}: removing from cachedBlocks, since neededCached == 0, and pendingUncached and pendingCached are empty.", $stack49) AT LINE 600 with ID [795fb87a-5c0c]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack52 == 0 goto return at line 187 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack23 != 1 goto orderedByPriority = specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoIntraQueuePreemptionPlugin: java.util.PriorityQueue createTempAppForResCalculation(org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.TempQueuePerPartition,java.util.Collection,org.apache.hadoop.yarn.api.records.Resource,java.util.Map)>(tq, apps, clusterResource, perUserAMUsed) at line 137 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoIntraQueuePreemptionPlugin: void computeAppsIdealAllocation(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.TempQueuePerPartition,java.util.Map,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.api.records.Resource,float)> has 18 units and 5 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoIntraQueuePreemptionPlugin: org.apache.commons.logging.Log LOG> AT LINE 186 with ID [69bc1cb6-173f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Queue Name:") AT LINE 186 with ID [69bc1cb6-173f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = tq.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.TempQueuePerPartition: java.lang.String queueName> AT LINE 186 with ID [69bc1cb6-173f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44) AT LINE 186 with ID [69bc1cb6-173f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", partition:") AT LINE 186 with ID [69bc1cb6-173f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = tq.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.TempQueuePerPartition: java.lang.String partition> AT LINE 186 with ID [69bc1cb6-173f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack47) AT LINE 186 with ID [69bc1cb6-173f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 186 with ID [69bc1cb6-173f]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack49) AT LINE 186 with ID [69bc1cb6-173f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke tq.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.TempQueuePerPartition: java.util.Collection getApps()>() AT LINE 187 with ID [195ee1e0-258c]
2020-08-25 12:10:06 [INFO] - 	 -> i$ = interfaceinvoke $stack50.<java.util.Collection: java.util.Iterator iterator()>() AT LINE 187 with ID [195ee1e0-258c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>() AT LINE 187 with ID [195ee1e0-258c]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack52 == 0 goto return AT LINE 187 with ID [195ee1e0-258c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack53 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 191 with ID [195ee1e0-258c]
2020-08-25 12:10:06 [INFO] - 	 -> tmpApp = (org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.TempAppPerPartition) $stack53 AT LINE 191 with ID [195ee1e0-258c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack54 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.FifoIntraQueuePreemptionPlugin: org.apache.commons.logging.Log LOG> AT LINE 188 with ID [195ee1e0-258c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack54.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(tmpApp) AT LINE 188 with ID [195ee1e0-258c]
2020-08-25 12:10:06 [INFO] - 	 -> goto [?= $stack52 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] AT LINE 189 with ID [195ee1e0-258c]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if newNode != null goto $stack24 = virtualinvoke fsd.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>() at line 117 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if parent != null goto userName = virtualinvoke dirPerms.<org.apache.hadoop.fs.permission.PermissionStatus: java.lang.String getUserName()>() at line 105 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirSymlinkOp: org.apache.hadoop.hdfs.server.namenode.INodeSymlink addSymlink(org.apache.hadoop.hdfs.server.namenode.FSDirectory,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodesInPath,java.lang.String,org.apache.hadoop.fs.permission.PermissionStatus,boolean,boolean)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 125 with ID [871d3612-0a13]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addSymlink: ") AT LINE 125 with ID [871d3612-0a13]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 125 with ID [871d3612-0a13]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is added") AT LINE 125 with ID [871d3612-0a13]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 125 with ID [871d3612-0a13]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String)>($stack32) AT LINE 125 with ID [871d3612-0a13]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.util.LightWeightGSet: void <init>(int)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.util.LightWeightGSet: org.slf4j.Logger LOG> AT LINE 90 with ID [e5f4022e-a4a5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("recommended=") AT LINE 90 with ID [e5f4022e-a4a5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(recommended_length) AT LINE 90 with ID [e5f4022e-a4a5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", actual=") AT LINE 90 with ID [e5f4022e-a4a5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(actual) AT LINE 90 with ID [e5f4022e-a4a5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 90 with ID [e5f4022e-a4a5]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 90 with ID [e5f4022e-a4a5]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if cls != null goto return cls at line 123 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack18 == 0 goto $stack7 = <org.apache.hadoop.security.token.Token: java.util.Map tokenKindMap> at line 117 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.token.Token: java.lang.Class getClassForIdentifier(org.apache.hadoop.io.Text)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.security.token.Token: org.slf4j.Logger LOG> AT LINE 124 with ID [3255e108-450f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find class for token kind ") AT LINE 124 with ID [3255e108-450f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(kind) AT LINE 124 with ID [3255e108-450f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 124 with ID [3255e108-450f]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 124 with ID [3255e108-450f]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.ShuffleHandler$Shuffle: org.apache.hadoop.mapred.ShuffleHandler$Shuffle$MapOutputInfo getMapOutputInfo(java.lang.String,int,java.lang.String,java.lang.String)> has 20 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() AT LINE 1118 with ID [dee8419b-2824]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retrieved pathInfo for ") AT LINE 1118 with ID [dee8419b-2824]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(identifier) AT LINE 1118 with ID [dee8419b-2824]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" check for corresponding loaded messages to determine whether") AT LINE 1118 with ID [dee8419b-2824]
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" it was loaded or cached") AT LINE 1118 with ID [dee8419b-2824]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1118 with ID [dee8419b-2824]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack43) AT LINE 1118 with ID [dee8419b-2824]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getMapOutputInfo: jobId=") AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(jobId) AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mapId=") AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(mapId) AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dataFile=") AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler$AttemptPathInfo: org.apache.hadoop.fs.Path access$700(org.apache.hadoop.mapred.ShuffleHandler$AttemptPathInfo)>(pathInfo) AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack27) AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", indexFile=") AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler$AttemptPathInfo: org.apache.hadoop.fs.Path access$600(org.apache.hadoop.mapred.ShuffleHandler$AttemptPathInfo)>(pathInfo) AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack30) AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 1134 with ID [d264fbcf-c7e8]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testRWRReplicas()> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 480 with ID [ff431311-7271]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 480 with ID [ff431311-7271]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 480 with ID [ff431311-7271]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27) AT LINE 480 with ID [ff431311-7271]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 480 with ID [ff431311-7271]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 480 with ID [ff431311-7271]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.VolumeScanner$ScanResultHandler: void setup(org.apache.hadoop.hdfs.server.datanode.VolumeScanner)> has 4 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 263 with ID [56be1f6b-e267]
2020-08-25 12:10:06 [INFO] - 	 -> $stack2 = scanner.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi volume> AT LINE 263 with ID [56be1f6b-e267]
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = interfaceinvoke $stack2.<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi: java.lang.String getBasePath()>() AT LINE 263 with ID [56be1f6b-e267]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Starting VolumeScanner {}", $stack5) AT LINE 263 with ID [56be1f6b-e267]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.security.UserGroupInformation,com.sun.jersey.api.client.Client,java.net.URI)> has 38 units and 4 lines
2020-08-25 12:10:06 [INFO] - 	 -> debugMSG = $stack41 AT LINE 173 with ID [6c1c2e64-20ba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("yarn.timeline-service.client.fd-flush-interval-secs=") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = this.<org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: long flushIntervalSecs> AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack44) AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("yarn.timeline-service.client.fd-clean-interval-secs") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = this.<org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: long cleanIntervalSecs> AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack49) AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("yarn.timeline-service.client.fd-retain-secs") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack54 = this.<org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: long ttl> AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack54) AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("yarn.timeline-service.entity-file.fs-support-append") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack59 = this.<org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: boolean isAppendSupported> AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack59) AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("yarn.timeline-service.entity-group-fs-store.with-user-dir") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(storeInsideUserDir) AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("yarn.timeline-service.entity-group-fs-store.active-dir") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=") AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack68 = this.<org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: org.apache.hadoop.fs.Path activePath> AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack68) AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> virtualinvoke debugMSG.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack70) AT LINE 174 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", yarn.timeline-service.entity-group-fs-store.summary-entity-types = ") AT LINE 189 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack80 = this.<org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: java.util.Set summaryEntityTypes> AT LINE 189 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack81 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack80) AT LINE 189 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 189 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> virtualinvoke debugMSG.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack82) AT LINE 189 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack73 = <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: org.apache.commons.logging.Log LOG> AT LINE 193 with ID [6c1c2e64-20ba]
2020-08-25 12:10:06 [INFO] - 	 -> $stack74 = virtualinvoke debugMSG.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 193 with ID [6c1c2e64-20ba]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack73.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack74) AT LINE 193 with ID [6c1c2e64-20ba]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack9 == 0 goto return loaded at line 416 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack17 != 0 goto loaded = loaded + 1 at line 420 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.service.launcher.ServiceLauncher: int loadConfigurationClasses()>
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack53 > 0 goto $stack43 = maxSize cmp 0L at line 643 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= $stack29 goto $stack30 = virtualinvoke fs#5.<java.util.ArrayList: int size()>() at line 614 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat$OneFileInfo: void <init>(org.apache.hadoop.fs.FileStatus,org.apache.hadoop.conf.Configuration,boolean,java.util.HashMap,java.util.HashMap,java.util.HashMap,java.util.HashMap,long)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack98 = staticinvoke <org.apache.hadoop.mapreduce.lib.input.CombineFileInputFormat: org.apache.commons.logging.Log access$000()>() AT LINE 604 with ID [4e6483a9-45fa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File is not splittable so no parallelization is possible: ") AT LINE 604 with ID [4e6483a9-45fa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack101 = virtualinvoke stat.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() AT LINE 604 with ID [4e6483a9-45fa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack101) AT LINE 604 with ID [4e6483a9-45fa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack103 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 604 with ID [4e6483a9-45fa]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack98.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack103) AT LINE 604 with ID [4e6483a9-45fa]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack3 == 0 goto return null at line 1710 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSClient: org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey newDataEncryptionKey()> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1714 with ID [e323e1df-4656]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>("Getting new encryption token from NN") AT LINE 1714 with ID [e323e1df-4656]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if localMachine != null goto localRack = interfaceinvoke localMachine.<org.apache.hadoop.net.Node: java.lang.String getNetworkLocation()>() at line 616 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo chooseLocalRack(org.apache.hadoop.net.Node,java.util.Set,long,int,java.util.List,boolean,java.util.EnumMap)>
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack24 <= 0 goto $stack25 = <org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto: org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcResponseHeaderProto$RpcStatusProto SUCCESS> at line 1190 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack12 == 0 goto specialinvoke this.<org.apache.hadoop.ipc.Client$Connection: void touch()>() at line 1167 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Client$Connection: void receiveRpcResponse()> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack57 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 1181 with ID [5d5c891d-a3fe]
2020-08-25 12:10:06 [INFO] - 	 -> $stack58 = virtualinvoke this.<org.apache.hadoop.ipc.Client$Connection: java.lang.String getName()>() AT LINE 1181 with ID [5d5c891d-a3fe]
2020-08-25 12:10:06 [INFO] - 	 -> $stack59 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack58) AT LINE 1181 with ID [5d5c891d-a3fe]
2020-08-25 12:10:06 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got value #") AT LINE 1181 with ID [5d5c891d-a3fe]
2020-08-25 12:10:06 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(callId) AT LINE 1181 with ID [5d5c891d-a3fe]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1181 with ID [5d5c891d-a3fe]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack57.<org.slf4j.Logger: void debug(java.lang.String)>($stack62) AT LINE 1181 with ID [5d5c891d-a3fe]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if renamedIIP == null goto (branch) at line 422 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack36 != 0 goto staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp: void verifyFsLimitsForRename(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.hdfs.server.namenode.INodesInPath)>(fsd, srcIIP, dstIIP) at line 394 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if dstParent != null goto $stack36 = virtualinvoke dstParent.<org.apache.hadoop.hdfs.server.namenode.INode: boolean isDirectory()>() at line 388 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack30 != 1 goto bsps = virtualinvoke fsd.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: org.apache.hadoop.hdfs.server.blockmanagement.BlockStoragePolicySuite getBlockStoragePolicySuite()>() at line 371 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack29 == 0 goto staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp: void validateDestination(java.lang.String,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INode)>(src, dst, srcInode) at line 365 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack147 != 0 goto (branch) at line 365 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult unprotectedRenameTo(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.hdfs.server.namenode.INodesInPath,long,org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo,org.apache.hadoop.fs.Options$Rename[])> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack83 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 425 with ID [7ddbde55-ba5c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack84 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* FSDirectory.unprotectedRenameTo: ") AT LINE 425 with ID [7ddbde55-ba5c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack85 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 425 with ID [7ddbde55-ba5c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is renamed to ") AT LINE 425 with ID [7ddbde55-ba5c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dst) AT LINE 425 with ID [7ddbde55-ba5c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 425 with ID [7ddbde55-ba5c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack83.<org.slf4j.Logger: void debug(java.lang.String)>($stack88) AT LINE 425 with ID [7ddbde55-ba5c]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i#2 >= 21 goto $stack35 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>() at line 64 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TestSortedRanges: void testAdd()> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = <org.apache.hadoop.mapred.TestSortedRanges: org.apache.commons.logging.Log LOG> AT LINE 59 with ID [fc77511d-50a2]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(sr) AT LINE 59 with ID [fc77511d-50a2]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack8 != 0 goto $stack9 = <org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider: org.slf4j.Logger LOG> at line 283 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider: void flush()> has 4 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = <org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 284 with ID [6b26fa7d-b718]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>("Keystore hasn\'t changed, returning.") AT LINE 284 with ID [6b26fa7d-b718]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = <org.apache.hadoop.security.alias.AbstractJavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 287 with ID [5815195e-ff29]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>("Writing out keystore.") AT LINE 287 with ID [5815195e-ff29]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack5 == 0 goto staticinvoke <java.lang.System: void exit(int)>(status) at line 212 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.util.ExitUtil: void terminate(org.apache.hadoop.util.ExitUtil$ExitException)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.util.ExitUtil: org.slf4j.Logger LOG> AT LINE 209 with ID [855f9bbd-247a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = newarray (java.lang.Object)[3] AT LINE 209 with ID [855f9bbd-247a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(status) AT LINE 209 with ID [855f9bbd-247a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9[0] = $stack13 AT LINE 209 with ID [855f9bbd-247a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9[1] = msg AT LINE 209 with ID [855f9bbd-247a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9[2] = ee AT LINE 209 with ID [855f9bbd-247a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Exiting with status {}: {}", $stack9) AT LINE 209 with ID [855f9bbd-247a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack44 == 0 goto $stack19 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> at line 1537 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack16 == 0 goto amountNeededToUnreserve = 1 at line 1531 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if user != null goto $stack13 = staticinvoke <org.apache.hadoop.yarn.util.resource.Resources: org.apache.hadoop.yarn.api.records.Resource none()>() at line 1520 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: boolean canAssignToUser(org.apache.hadoop.yarn.api.records.Resource,java.lang.String,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp,java.lang.String,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits)> has 37 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack79 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 1522 with ID [7d5964f0-dfe6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ") AT LINE 1522 with ID [7d5964f0-dfe6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(userName) AT LINE 1522 with ID [7d5964f0-dfe6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has been removed!") AT LINE 1522 with ID [7d5964f0-dfe6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1522 with ID [7d5964f0-dfe6]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack79.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack83) AT LINE 1522 with ID [7d5964f0-dfe6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ") AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(userName) AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in queue ") AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack55 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: java.lang.String getQueueName()>() AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack55) AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" will exceed limit based on reservations - ") AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" consumed: ") AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack59 = virtualinvoke user.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager$User: org.apache.hadoop.yarn.api.records.Resource getUsed()>() AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack59) AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reserved: ") AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.api.records.Resource getCurrentReservation()>() AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack62) AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" limit: ") AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(limit) AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack51.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack66) AT LINE 1542 with ID [aca26c8f-7fad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ") AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(userName) AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in queue ") AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: java.lang.String getQueueName()>() AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27) AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" will exceed limit - ") AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" consumed: ") AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke user.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager$User: org.apache.hadoop.yarn.api.records.Resource getUsed(java.lang.String)>(nodePartition) AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31) AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" limit: ") AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(limit) AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 1557 with ID [6bff29aa-2dc8]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if scanner == null goto $stack11 = <org.apache.hadoop.hdfs.server.datanode.BlockScanner: org.slf4j.Logger LOG> at line 216 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack7 != 0 goto $stack8 = this.<org.apache.hadoop.hdfs.server.datanode.BlockScanner: java.util.TreeMap scanners> at line 210 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockScanner: void addVolumeScanner(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeReference)> has 7 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hdfs.server.datanode.BlockScanner: org.slf4j.Logger LOG> AT LINE 211 with ID [7e04188e-0a8d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = interfaceinvoke volume.<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi: java.lang.String getBasePath()>() AT LINE 211 with ID [7e04188e-0a8d]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Not adding volume scanner for {}, because the block scanner is disabled.", $stack28) AT LINE 211 with ID [7e04188e-0a8d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.server.datanode.BlockScanner: org.slf4j.Logger LOG> AT LINE 221 with ID [1877b46e-0383]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = interfaceinvoke volume.<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi: java.lang.String getBasePath()>() AT LINE 221 with ID [1877b46e-0383]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = interfaceinvoke volume.<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi: java.lang.String getStorageID()>() AT LINE 221 with ID [1877b46e-0383]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Adding scanner for volume {} (StorageID {})", $stack13, $stack14) AT LINE 221 with ID [1877b46e-0383]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.jobcontrol.JobControl: void run()> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = <org.apache.hadoop.mapreduce.lib.jobcontrol.JobControl: org.apache.commons.logging.Log LOG> AT LINE 228 with ID [ef169323-784c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking state of job ") AT LINE 228 with ID [ef169323-784c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(j) AT LINE 228 with ID [ef169323-784c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 228 with ID [ef169323-784c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 228 with ID [ef169323-784c]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.ShellBasedIdMapping: boolean updateMapInternal(com.google.common.collect.BiMap,java.lang.String,java.lang.String,java.lang.String,java.util.Map)> has 19 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = <org.apache.hadoop.security.ShellBasedIdMapping: org.slf4j.Logger LOG> AT LINE 233 with ID [ec23732c-887c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add to ") AT LINE 233 with ID [ec23732c-887c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(mapName) AT LINE 233 with ID [ec23732c-887c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("map:") AT LINE 233 with ID [ec23732c-887c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = nameId[0] AT LINE 233 with ID [ec23732c-887c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack46) AT LINE 233 with ID [ec23732c-887c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id:") AT LINE 233 with ID [ec23732c-887c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = nameId[1] AT LINE 233 with ID [ec23732c-887c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack49) AT LINE 233 with ID [ec23732c-887c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 233 with ID [ec23732c-887c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 233 with ID [ec23732c-887c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = <org.apache.hadoop.security.ShellBasedIdMapping: org.slf4j.Logger LOG> AT LINE 258 with ID [1ec49161-a064]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updated ") AT LINE 258 with ID [1ec49161-a064]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(mapName) AT LINE 258 with ID [1ec49161-a064]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" map size: ") AT LINE 258 with ID [1ec49161-a064]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = interfaceinvoke map.<com.google.common.collect.BiMap: int size()>() AT LINE 258 with ID [1ec49161-a064]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack28) AT LINE 258 with ID [1ec49161-a064]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 258 with ID [1ec49161-a064]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack30) AT LINE 258 with ID [1ec49161-a064]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: void unreference()> has 10 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 221 with ID [0ba98518-957f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decrease reference count <= 0 on ") AT LINE 221 with ID [0ba98518-957f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 221 with ID [0ba98518-957f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>("\n") AT LINE 221 with ID [0ba98518-957f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 221 with ID [0ba98518-957f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>() AT LINE 221 with ID [0ba98518-957f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack15.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object[])>($stack17) AT LINE 221 with ID [0ba98518-957f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 221 with ID [0ba98518-957f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 221 with ID [0ba98518-957f]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 221 with ID [0ba98518-957f]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack32 == 0 goto (branch) at line 431 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs getAndSetAppLogs(org.apache.hadoop.yarn.api.records.ApplicationId)> has 4 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 413 with ID [d4a84664-6a82]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Looking for app logs mapped for app id {}", applicationId) AT LINE 413 with ID [d4a84664-6a82]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger LOG> AT LINE 439 with ID [bab7e54f-29f4]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Create and try to add new appLogs to appIdLogMap for {}", applicationId) AT LINE 439 with ID [bab7e54f-29f4]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack62 == 0 goto staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSEditLog: void closeAllStreams(java.lang.Iterable)>(inspector#25) at line 330 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if stream != null goto $stack33 = virtualinvoke this.<org.apache.hadoop.hdfs.server.namenode.BackupImage: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>() at line 305 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack111 == 0 goto (branch) at line 279 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack24 == 0 goto stream = null at line 288 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack18 >= 0 goto target#23 = this at line 264 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack101 == 0 goto $stack102 = virtualinvoke this.<org.apache.hadoop.hdfs.server.namenode.BackupImage: org.apache.hadoop.hdfs.server.namenode.FSNamesystem getNamesystem()>() at line 278 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.BackupImage: boolean tryConvergeJournalSpool()> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack80 = <org.apache.hadoop.hdfs.server.namenode.BackupImage: org.apache.commons.logging.Log LOG> AT LINE 289 with ID [fe292203-9917]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack80.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Logs rolled while catching up to current segment") AT LINE 289 with ID [fe292203-9917]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack31 == 0 goto $stack15 = virtualinvoke e#2.<java.io.IOException: java.lang.String getMessage()>() at line 530 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack12 != null goto e#2 = staticinvoke <org.apache.hadoop.hdfs.web.JsonUtilClient: org.apache.hadoop.ipc.RemoteException toRemoteException(java.util.Map)>(m) at line 509 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if m != null goto $stack10 = class "Lorg/apache/hadoop/ipc/RemoteException;" at line 505 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if code == $stack8 goto return null at line 495 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if code != 401 goto $stack8 = interfaceinvoke op.<org.apache.hadoop.hdfs.web.resources.HttpOpParam$Op: int getExpectedHttpResponseCode()>() at line 491 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: java.util.Map validateResponse(org.apache.hadoop.hdfs.web.resources.HttpOpParam$Op,java.net.HttpURLConnection,boolean)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: org.slf4j.Logger LOG> AT LINE 518 with ID [2490a11e-152d]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>("Detected StandbyException", e#2) AT LINE 518 with ID [2490a11e-152d]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: void deactivateApplication(java.lang.String,org.apache.hadoop.yarn.api.records.ApplicationId)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.commons.logging.Log LOG> AT LINE 906 with ID [e1106f6d-e6ae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User ") AT LINE 906 with ID [e1106f6d-e6ae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 906 with ID [e1106f6d-e6ae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" removed from activeUsers, currently: ") AT LINE 906 with ID [e1106f6d-e6ae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: java.util.concurrent.atomic.AtomicInteger activeUsers> AT LINE 906 with ID [e1106f6d-e6ae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24) AT LINE 906 with ID [e1106f6d-e6ae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 906 with ID [e1106f6d-e6ae]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 906 with ID [e1106f6d-e6ae]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack10 == 0 goto return lowVolumes at line 196 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker: java.util.Collection getVolumesLowOnSpace()> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker: org.apache.commons.logging.Log LOG> AT LINE 193 with ID [de3e729d-668b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Going to check the following volumes disk space: ") AT LINE 193 with ID [de3e729d-668b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.hdfs.server.namenode.NameNodeResourceChecker: java.util.Map volumes> AT LINE 193 with ID [de3e729d-668b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack18) AT LINE 193 with ID [de3e729d-668b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 193 with ID [de3e729d-668b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 193 with ID [de3e729d-668b]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.security.TimelineV1DelegationTokenSecretManagerService$TimelineV1DelegationTokenSecretManager: void updateStoredToken(org.apache.hadoop.yarn.security.client.TimelineDelegationTokenIdentifier,long)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.timeline.security.TimelineV1DelegationTokenSecretManagerService$TimelineV1DelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 202 with ID [c83f9008-4bd4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating token ") AT LINE 202 with ID [c83f9008-4bd4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke tokenId.<org.apache.hadoop.yarn.security.client.TimelineDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 202 with ID [c83f9008-4bd4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack13) AT LINE 202 with ID [c83f9008-4bd4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 202 with ID [c83f9008-4bd4]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 202 with ID [c83f9008-4bd4]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ipc.metrics.RpcDetailedMetrics: void <init>(int)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.ipc.metrics.RpcDetailedMetrics: org.slf4j.Logger LOG> AT LINE 48 with ID [193fd436-4e06]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.ipc.metrics.RpcDetailedMetrics: org.apache.hadoop.metrics2.lib.MetricsRegistry registry> AT LINE 48 with ID [193fd436-4e06]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<org.apache.hadoop.metrics2.lib.MetricsRegistry: org.apache.hadoop.metrics2.MetricsInfo info()>() AT LINE 48 with ID [193fd436-4e06]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.Object: java.lang.String toString()>() AT LINE 48 with ID [193fd436-4e06]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 48 with ID [193fd436-4e06]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack10 = interfaceinvoke invocation.<org.mockito.invocation.InvocationOnMock: java.lang.reflect.Method getMethod()>() at line 70 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.test.MetricsAsserts$1: java.lang.Object answer(org.mockito.invocation.InvocationOnMock)> has 20 units and 7 lines
2020-08-25 12:10:06 [INFO] - 	 -> args = interfaceinvoke invocation.<org.mockito.invocation.InvocationOnMock: java.lang.Object[] getArguments()>() AT LINE 68 with ID [UNKNOWN_ID]
2020-08-25 12:10:06 [INFO] - 	 -> sb = $stack9 AT LINE 69 with ID [fe1b3954-5eeb]
2020-08-25 12:10:06 [INFO] - 	 -> arr$ = args AT LINE 70 with ID [UNKNOWN_ID]
2020-08-25 12:10:06 [INFO] - 	 -> len$ = lengthof arr$ AT LINE 70 with ID [UNKNOWN_ID]
2020-08-25 12:10:06 [INFO] - 	 -> i$ = 0 AT LINE 70 with ID [UNKNOWN_ID]
2020-08-25 12:10:06 [INFO] - 	 -> if i$ >= len$ goto $stack10 = interfaceinvoke invocation.<org.mockito.invocation.InvocationOnMock: java.lang.reflect.Method getMethod()>() AT LINE 70 with ID [UNKNOWN_ID]
2020-08-25 12:10:06 [INFO] - 	 -> o = arr$[i$] AT LINE 76 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke sb.<java.lang.StringBuilder: int length()>() AT LINE 71 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> if $stack23 <= 0 goto $stack24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(o) AT LINE 71 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 70 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(o) AT LINE 72 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) AT LINE 72 with ID []
2020-08-25 12:10:06 [INFO] - 	 -> i$ = i$ + 1 AT LINE 70 with ID [UNKNOWN_ID]
2020-08-25 12:10:06 [INFO] - 	 -> goto [?= (branch)] AT LINE 70 with ID [UNKNOWN_ID]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = <org.apache.hadoop.test.MetricsAsserts: org.slf4j.Logger LOG> AT LINE 75 with ID [fe1b3954-5eeb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(arr$#3) AT LINE 75 with ID [fe1b3954-5eeb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 75 with ID [fe1b3954-5eeb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(sb) AT LINE 75 with ID [fe1b3954-5eeb]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 75 with ID [fe1b3954-5eeb]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 75 with ID [fe1b3954-5eeb]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= $stack31 goto $stack20 = <org.apache.hadoop.ipc.metrics.RpcMetrics: org.slf4j.Logger LOG> at line 66 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ipc.metrics.RpcMetrics: void <init>(org.apache.hadoop.ipc.Server,org.apache.hadoop.conf.Configuration)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = <org.apache.hadoop.ipc.metrics.RpcMetrics: org.slf4j.Logger LOG> AT LINE 80 with ID [f5d1f157-3354]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initialized ") AT LINE 80 with ID [f5d1f157-3354]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.ipc.metrics.RpcMetrics: org.apache.hadoop.metrics2.lib.MetricsRegistry registry> AT LINE 80 with ID [f5d1f157-3354]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack22) AT LINE 80 with ID [f5d1f157-3354]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 80 with ID [f5d1f157-3354]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack24) AT LINE 80 with ID [f5d1f157-3354]
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.io.nativeio.NativeIO: void <clinit>()>
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: void loadNodeChildren(org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$Node,java.lang.String,java.lang.String[])> has 11 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor: org.apache.commons.logging.Log LOG> AT LINE 420 with ID [c7ea543b-d624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loadNodeChildren(expected=") AT LINE 420 with ID [c7ea543b-d624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expected) AT LINE 420 with ID [c7ea543b-d624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", terminators=[") AT LINE 420 with ID [c7ea543b-d624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String join(java.lang.CharSequence,java.lang.String[])>(",", terminators) AT LINE 420 with ID [c7ea543b-d624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 420 with ID [c7ea543b-d624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]):") AT LINE 420 with ID [c7ea543b-d624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke parent.<org.apache.hadoop.hdfs.tools.offlineImageViewer.OfflineImageReconstructor$Node: java.lang.String dump()>() AT LINE 420 with ID [c7ea543b-d624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 420 with ID [c7ea543b-d624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 420 with ID [c7ea543b-d624]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack16) AT LINE 420 with ID [c7ea543b-d624]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.file.tfile.Compression$Algorithm: void returnCompressor(org.apache.hadoop.io.compress.Compressor)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = <org.apache.hadoop.io.file.tfile.Compression: org.slf4j.Logger LOG> AT LINE 305 with ID [d3bdaf05-cf13]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Return a compressor: ") AT LINE 305 with ID [d3bdaf05-cf13]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = virtualinvoke compressor.<java.lang.Object: int hashCode()>() AT LINE 305 with ID [d3bdaf05-cf13]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack7) AT LINE 305 with ID [d3bdaf05-cf13]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 305 with ID [d3bdaf05-cf13]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>($stack9) AT LINE 305 with ID [d3bdaf05-cf13]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.BackupImage: void setState(org.apache.hadoop.hdfs.server.namenode.BackupImage$BNState)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hdfs.server.namenode.BackupImage: org.apache.commons.logging.Log LOG> AT LINE 338 with ID [30feaf3b-ab3f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("State transition ") AT LINE 338 with ID [30feaf3b-ab3f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = this.<org.apache.hadoop.hdfs.server.namenode.BackupImage: org.apache.hadoop.hdfs.server.namenode.BackupImage$BNState bnState> AT LINE 338 with ID [30feaf3b-ab3f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack7) AT LINE 338 with ID [30feaf3b-ab3f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ") AT LINE 338 with ID [30feaf3b-ab3f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(newState) AT LINE 338 with ID [30feaf3b-ab3f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 338 with ID [30feaf3b-ab3f]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 338 with ID [30feaf3b-ab3f]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.JobResourceUploader: void copyLog4jPropertyFile(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path,short)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = <org.apache.hadoop.mapreduce.JobResourceUploader: org.apache.commons.logging.Log LOG> AT LINE 794 with ID [2e2ece5e-38e7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("default FileSystem: ") AT LINE 794 with ID [2e2ece5e-38e7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = this.<org.apache.hadoop.mapreduce.JobResourceUploader: org.apache.hadoop.fs.FileSystem jtFs> AT LINE 794 with ID [2e2ece5e-38e7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<org.apache.hadoop.fs.FileSystem: java.net.URI getUri()>() AT LINE 794 with ID [2e2ece5e-38e7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack18) AT LINE 794 with ID [2e2ece5e-38e7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 794 with ID [2e2ece5e-38e7]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 794 with ID [2e2ece5e-38e7]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.util.ByteArrayManager: void logDebugMessage()> has 3 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = <org.apache.hadoop.hdfs.util.ByteArrayManager: org.slf4j.Logger LOG> AT LINE 48 with ID [19705593-ae97]
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = virtualinvoke b.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 48 with ID [19705593-ae97]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>($stack4) AT LINE 48 with ID [19705593-ae97]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack12 == 0 goto return null at line 55 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack28 == 0 goto (branch) at line 62 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack26 == 0 goto (branch) at line 58 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if service != null goto $stack6 = <org.apache.hadoop.yarn.security.client.RMDelegationTokenSelector: org.apache.commons.logging.Log LOG> at line 51 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.security.client.RMDelegationTokenSelector: org.apache.hadoop.security.token.Token selectToken(org.apache.hadoop.io.Text,java.util.Collection)> has 16 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.security.client.RMDelegationTokenSelector: org.apache.commons.logging.Log LOG> AT LINE 54 with ID [3190371b-c40d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking for a token with service ") AT LINE 54 with ID [3190371b-c40d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke service.<org.apache.hadoop.io.Text: java.lang.String toString()>() AT LINE 54 with ID [3190371b-c40d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 54 with ID [3190371b-c40d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 54 with ID [3190371b-c40d]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack10) AT LINE 54 with ID [3190371b-c40d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.security.client.RMDelegationTokenSelector: org.apache.commons.logging.Log LOG> AT LINE 56 with ID [8d28c0a8-0644]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token kind is ") AT LINE 56 with ID [8d28c0a8-0644]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getKind()>() AT LINE 56 with ID [8d28c0a8-0644]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<org.apache.hadoop.io.Text: java.lang.String toString()>() AT LINE 56 with ID [8d28c0a8-0644]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 56 with ID [8d28c0a8-0644]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and the token\'s service name is ") AT LINE 56 with ID [8d28c0a8-0644]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 56 with ID [8d28c0a8-0644]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 56 with ID [8d28c0a8-0644]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 56 with ID [8d28c0a8-0644]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 56 with ID [8d28c0a8-0644]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService: void updateNodeLabelsFromNMReport(java.util.Set,org.apache.hadoop.yarn.api.records.NodeId)> has 9 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService: org.apache.commons.logging.Log LOG> AT LINE 756 with ID [837853ea-4a22]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node Labels {") AT LINE 756 with ID [837853ea-4a22]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", nodeLabels) AT LINE 756 with ID [837853ea-4a22]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 756 with ID [837853ea-4a22]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} from Node ") AT LINE 756 with ID [837853ea-4a22]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nodeId) AT LINE 756 with ID [837853ea-4a22]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" were Accepted from RM") AT LINE 756 with ID [837853ea-4a22]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 756 with ID [837853ea-4a22]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 756 with ID [837853ea-4a22]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack25 == 0 goto $stack26 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.apache.hadoop.hdfs.server.datanode.DataNode datanode> at line 2063 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: java.io.File validateBlockFile(java.lang.String,long)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 2072 with ID [0b6d4a15-b389]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blockId=") AT LINE 2072 with ID [0b6d4a15-b389]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(blockId) AT LINE 2072 with ID [0b6d4a15-b389]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", f=") AT LINE 2072 with ID [0b6d4a15-b389]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f) AT LINE 2072 with ID [0b6d4a15-b389]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2072 with ID [0b6d4a15-b389]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack23) AT LINE 2072 with ID [0b6d4a15-b389]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if proto#42 == null goto return proto#21 at line 1108 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if result#23 >= $stack37 goto $stack38 = interfaceinvoke proto#21.<java.util.Map: boolean isEmpty()>() at line 1067 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if standby == 0 goto interfaceinvoke location#7.<java.util.List: boolean add(java.lang.Object)>(proto#10) at line 1025 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack30 == 0 goto $stack31 = this.<org.apache.hadoop.hdfs.server.federation.router.RouterRpcClient: org.apache.hadoop.hdfs.server.federation.router.RouterRpcMonitor rpcMonitor> at line 1019 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack68 == 0 goto (branch) at line 1027 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack26 != 1 goto $stack27 = new java.util.LinkedList at line 1005 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack25 == 0 goto $stack26 = interfaceinvoke locations.<java.util.Collection: int size()>() at line 1003 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.federation.router.RouterRpcClient: java.util.Map invokeConcurrent(java.util.Collection,org.apache.hadoop.hdfs.server.federation.router.RemoteMethod,boolean,boolean,long,java.lang.Class)>
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack17 == 0 goto return at line 216 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack14 == 0 goto exitmonitor i$ at line 207 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: void cleanAll()> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: org.apache.commons.logging.Log LOG> AT LINE 204 with ID [093ab3a0-01db]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("openFileMap size:") AT LINE 204 with ID [093ab3a0-01db]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtxCache: int size()>() AT LINE 204 with ID [093ab3a0-01db]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack27) AT LINE 204 with ID [093ab3a0-01db]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 204 with ID [093ab3a0-01db]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack29) AT LINE 204 with ID [093ab3a0-01db]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.retry.RetryUtils$WrapperRetryPolicy: org.apache.hadoop.io.retry.RetryPolicy$RetryAction shouldRetry(java.lang.Exception,int,int,boolean)> has 11 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = <org.apache.hadoop.io.retry.RetryUtils: org.slf4j.Logger LOG> AT LINE 128 with ID [896ee687-219b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RETRY ") AT LINE 128 with ID [896ee687-219b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(retries) AT LINE 128 with ID [896ee687-219b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") policy=") AT LINE 128 with ID [896ee687-219b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke cause#9.<java.lang.Object: java.lang.Class getClass()>() AT LINE 128 with ID [896ee687-219b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 128 with ID [896ee687-219b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 128 with ID [896ee687-219b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", exception=") AT LINE 128 with ID [896ee687-219b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e) AT LINE 128 with ID [896ee687-219b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 128 with ID [896ee687-219b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 128 with ID [896ee687-219b]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.LeaseRenewer$1: void run()> has 22 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: org.slf4j.Logger LOG> AT LINE 304 with ID [316e133a-c916]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lease renewer daemon for ") AT LINE 304 with ID [316e133a-c916]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.hdfs.client.impl.LeaseRenewer$1: org.apache.hadoop.hdfs.client.impl.LeaseRenewer this$0> AT LINE 304 with ID [316e133a-c916]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = staticinvoke <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: java.lang.String access$500(org.apache.hadoop.hdfs.client.impl.LeaseRenewer)>($stack31) AT LINE 304 with ID [316e133a-c916]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32) AT LINE 304 with ID [316e133a-c916]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with renew id ") AT LINE 304 with ID [316e133a-c916]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = this.<org.apache.hadoop.hdfs.client.impl.LeaseRenewer$1: int val$id> AT LINE 304 with ID [316e133a-c916]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack35) AT LINE 304 with ID [316e133a-c916]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" started") AT LINE 304 with ID [316e133a-c916]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 304 with ID [316e133a-c916]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String)>($stack38) AT LINE 304 with ID [316e133a-c916]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: org.slf4j.Logger LOG> AT LINE 315 with ID [a7e2f770-302a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lease renewer daemon for ") AT LINE 315 with ID [a7e2f770-302a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = this.<org.apache.hadoop.hdfs.client.impl.LeaseRenewer$1: org.apache.hadoop.hdfs.client.impl.LeaseRenewer this$0> AT LINE 315 with ID [a7e2f770-302a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = staticinvoke <org.apache.hadoop.hdfs.client.impl.LeaseRenewer: java.lang.String access$500(org.apache.hadoop.hdfs.client.impl.LeaseRenewer)>($stack20) AT LINE 315 with ID [a7e2f770-302a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 315 with ID [a7e2f770-302a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with renew id ") AT LINE 315 with ID [a7e2f770-302a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = this.<org.apache.hadoop.hdfs.client.impl.LeaseRenewer$1: int val$id> AT LINE 315 with ID [a7e2f770-302a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24) AT LINE 315 with ID [a7e2f770-302a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exited") AT LINE 315 with ID [a7e2f770-302a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 315 with ID [a7e2f770-302a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack27) AT LINE 315 with ID [a7e2f770-302a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack126 == 0 goto interfaceinvoke expired.<java.util.Set: boolean add(java.lang.Object)>(reservationId) at line 128 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack81 == 0 goto resQueue#55 = 1.0F - i$#37 at line 156 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack57 == 0 goto $stack58 = interfaceinvoke plan.<org.apache.hadoop.yarn.server.resourcemanager.reservation.Plan: boolean getMoveOnExpiry()>() at line 125 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if planQueue != null goto $stack38 = this.<org.apache.hadoop.yarn.server.resourcemanager.reservation.AbstractSchedulerPlanFollower: org.apache.hadoop.yarn.server.resourcemanager.scheduler.YarnScheduler scheduler> at line 86 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.reservation.AbstractSchedulerPlanFollower: void synchronizePlan(org.apache.hadoop.yarn.server.resourcemanager.reservation.Plan,boolean)> has 27 units and 6 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack140 = <org.apache.hadoop.yarn.server.resourcemanager.reservation.AbstractSchedulerPlanFollower: org.slf4j.Logger LOG> AT LINE 77 with ID [8b7cf333-e303]
2020-08-25 12:10:06 [INFO] - 	 -> $stack141 = virtualinvoke $stack139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running plan follower edit policy for plan: ") AT LINE 77 with ID [8b7cf333-e303]
2020-08-25 12:10:06 [INFO] - 	 -> $stack142 = virtualinvoke $stack141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(planQueueName) AT LINE 77 with ID [8b7cf333-e303]
2020-08-25 12:10:06 [INFO] - 	 -> $stack143 = virtualinvoke $stack142.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 77 with ID [8b7cf333-e303]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack140.<org.slf4j.Logger: void debug(java.lang.String)>($stack143) AT LINE 77 with ID [8b7cf333-e303]
2020-08-25 12:10:06 [INFO] - 	 -> numRes = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.reservation.AbstractSchedulerPlanFollower: int getReservedResources(long,java.util.Set,java.util.Set,org.apache.hadoop.yarn.api.records.Resource)>(now, currentReservations, curReservationNames, reservedResources) AT LINE 98 with ID [499f5731-6875]
2020-08-25 12:10:06 [INFO] - 	 -> $stack92 = <org.apache.hadoop.yarn.server.resourcemanager.reservation.AbstractSchedulerPlanFollower: org.slf4j.Logger LOG> AT LINE 174 with ID [50724d12-3550]
2020-08-25 12:10:06 [INFO] - 	 -> $stack93 = interfaceinvoke $stack92.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 174 with ID [50724d12-3550]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack93 == 0 goto maxCapacity = 1.0F AT LINE 174 with ID [50724d12-3550]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102 = <org.apache.hadoop.yarn.server.resourcemanager.reservation.AbstractSchedulerPlanFollower: org.slf4j.Logger LOG> AT LINE 175 with ID [50724d12-3550]
2020-08-25 12:10:06 [INFO] - 	 -> $stack101 = newarray (java.lang.Object)[3] AT LINE 175 with ID [50724d12-3550]
2020-08-25 12:10:06 [INFO] - 	 -> $stack101[0] = capToAssign AT LINE 175 with ID [50724d12-3550]
2020-08-25 12:10:06 [INFO] - 	 -> $stack101[1] = currResId AT LINE 175 with ID [50724d12-3550]
2020-08-25 12:10:06 [INFO] - 	 -> $stack105 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(targetCapacity) AT LINE 175 with ID [50724d12-3550]
2020-08-25 12:10:06 [INFO] - 	 -> $stack101[2] = $stack105 AT LINE 175 with ID [50724d12-3550]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack102.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Assigning capacity of {} to queue {} with target capacity {}", $stack101) AT LINE 175 with ID [50724d12-3550]
2020-08-25 12:10:06 [INFO] - 	 -> $stack59 = <org.apache.hadoop.yarn.server.resourcemanager.reservation.AbstractSchedulerPlanFollower: org.slf4j.Logger LOG> AT LINE 198 with ID [499f5731-6875]
2020-08-25 12:10:06 [INFO] - 	 -> $stack60 = interfaceinvoke $stack59.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 198 with ID [499f5731-6875]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack60 == 0 goto virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.reservation.AbstractSchedulerPlanFollower: void setQueueEntitlement(java.lang.String,java.lang.String,float,float)>(planQueueName, defReservationQueue, resQueue#55, 1.0F) AT LINE 198 with ID [499f5731-6875]
2020-08-25 12:10:06 [INFO] - 	 -> $stack67 = <org.apache.hadoop.yarn.server.resourcemanager.reservation.AbstractSchedulerPlanFollower: org.slf4j.Logger LOG> AT LINE 199 with ID [499f5731-6875]
2020-08-25 12:10:06 [INFO] - 	 -> $stack66 = newarray (java.lang.Object)[3] AT LINE 199 with ID [499f5731-6875]
2020-08-25 12:10:06 [INFO] - 	 -> $stack66[0] = planResources AT LINE 199 with ID [499f5731-6875]
2020-08-25 12:10:06 [INFO] - 	 -> $stack70 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(numRes) AT LINE 199 with ID [499f5731-6875]
2020-08-25 12:10:06 [INFO] - 	 -> $stack66[1] = $stack70 AT LINE 199 with ID [499f5731-6875]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(resQueue#55) AT LINE 199 with ID [499f5731-6875]
2020-08-25 12:10:06 [INFO] - 	 -> $stack66[2] = $stack72 AT LINE 199 with ID [499f5731-6875]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack67.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("PlanFollowerEditPolicyTask: total Plan Capacity: {} currReservation: {} default-queue capacity: {}", $stack66) AT LINE 199 with ID [499f5731-6875]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if null != ps goto $stack35 = new org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl at line 747 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if container != null goto $stack10 = virtualinvoke allocationResult.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.ContainerAllocation: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.AllocationState getAllocationState()>() at line 725 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.ContainerAllocation doAllocation(org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.ContainerAllocation,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode,org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer)> has 5 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 774 with ID [e41582d5-08d8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = interfaceinvoke $stack18.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 774 with ID [e41582d5-08d8]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack19 == 0 goto $stack21 = allocationResult.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.ContainerAllocation: org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType containerNodeType> AT LINE 774 with ID [e41582d5-08d8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 775 with ID [e41582d5-08d8]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Resetting scheduling opportunities") AT LINE 775 with ID [e41582d5-08d8]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if dn != null goto $stack19 = staticinvoke <org.apache.hadoop.security.UserGroupInformation: boolean isSecurityEnabled()>() at line 503 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.RouterWebHdfsMethods: java.net.URI redirectURI(org.apache.hadoop.hdfs.server.federation.router.Router,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.hdfs.web.resources.DelegationParam,org.apache.hadoop.hdfs.web.resources.UserParam,org.apache.hadoop.hdfs.web.resources.DoAsParam,java.lang.String,org.apache.hadoop.hdfs.web.resources.HttpOpParam$Op,long,java.lang.String,org.apache.hadoop.hdfs.web.resources.Param[])> has 5 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = <org.apache.hadoop.hdfs.server.federation.router.RouterWebHdfsMethods: org.slf4j.Logger LOG> AT LINE 532 with ID [4cf5b48d-74c2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack53 = interfaceinvoke $stack52.<org.slf4j.Logger: boolean isTraceEnabled()>() AT LINE 532 with ID [4cf5b48d-74c2]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack53 == 0 goto return uri AT LINE 532 with ID [4cf5b48d-74c2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack54 = <org.apache.hadoop.hdfs.server.federation.router.RouterWebHdfsMethods: org.slf4j.Logger LOG> AT LINE 533 with ID [4cf5b48d-74c2]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack54.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("redirectURI={}", uri) AT LINE 533 with ID [4cf5b48d-74c2]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$Connection: void authorizeConnection()> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 2480 with ID [00999df8-d01a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Successfully authorized ") AT LINE 2480 with ID [00999df8-d01a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.ipc.Server$Connection: org.apache.hadoop.ipc.protobuf.IpcConnectionContextProtos$IpcConnectionContextProto connectionContext> AT LINE 2480 with ID [00999df8-d01a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack14) AT LINE 2480 with ID [00999df8-d01a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2480 with ID [00999df8-d01a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 2480 with ID [00999df8-d01a]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: boolean replaceExpiredDelegationToken()> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: org.slf4j.Logger LOG> AT LINE 384 with ID [f3aaaad6-ad6a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Replaced expired token: {}", token) AT LINE 384 with ID [f3aaaad6-ad6a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= $stack10 goto virtualinvoke writer.<org.apache.hadoop.io.ArrayFile$Writer: void close()>() at line 90 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.TestArrayFile: void writeTest(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.io.RandomDatum[],java.lang.String)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = <org.apache.hadoop.io.TestArrayFile: org.slf4j.Logger LOG> AT LINE 86 with ID [8defea03-edff]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("creating with ") AT LINE 86 with ID [8defea03-edff]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = lengthof data AT LINE 86 with ID [8defea03-edff]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack17) AT LINE 86 with ID [8defea03-edff]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" debug") AT LINE 86 with ID [8defea03-edff]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 86 with ID [8defea03-edff]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 86 with ID [8defea03-edff]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if postOpDirAttr != null goto $stack29 = new org.apache.hadoop.nfs.nfs3.FileHandle at line 539 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if postOpObjAttr != null goto $stack27 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.security.IdMappingServiceProvider iug> at line 526 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.LOOKUP3Request: org.apache.hadoop.nfs.nfs3.request.LOOKUP3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 502 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack15 != 0 goto $stack16 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache clientCache> at line 496 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.LOOKUP3Response lookup(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 19 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack61 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 518 with ID [3ee20707-81ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS LOOKUP dir fileId: ") AT LINE 518 with ID [3ee20707-81ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack63 = virtualinvoke e#2.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 518 with ID [3ee20707-81ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack64 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack63) AT LINE 518 with ID [3ee20707-81ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name: ") AT LINE 518 with ID [3ee20707-81ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) AT LINE 518 with ID [3ee20707-81ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 518 with ID [3ee20707-81ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 518 with ID [3ee20707-81ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 518 with ID [3ee20707-81ab]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack61.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack69) AT LINE 518 with ID [3ee20707-81ab]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 528 with ID [57880f34-7c7b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS LOOKUP fileId: ") AT LINE 528 with ID [57880f34-7c7b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke e#2.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 528 with ID [57880f34-7c7b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack47) AT LINE 528 with ID [57880f34-7c7b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name: ") AT LINE 528 with ID [57880f34-7c7b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) AT LINE 528 with ID [57880f34-7c7b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist") AT LINE 528 with ID [57880f34-7c7b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 528 with ID [57880f34-7c7b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack45.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack52) AT LINE 528 with ID [57880f34-7c7b]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void removeReservationState(java.lang.String,java.lang.String)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 1191 with ID [2fe7b633-239a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing reservationallocation ") AT LINE 1191 with ID [2fe7b633-239a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reservationIdName) AT LINE 1191 with ID [2fe7b633-239a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for") AT LINE 1191 with ID [2fe7b633-239a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" plan ") AT LINE 1191 with ID [2fe7b633-239a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(planName) AT LINE 1191 with ID [2fe7b633-239a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1191 with ID [2fe7b633-239a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 1191 with ID [2fe7b633-239a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack22 == 0 goto (branch) at line 1188 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack19 != 0 goto interfaceinvoke batch.<org.iq80.leveldb.WriteBatch: org.iq80.leveldb.WriteBatch delete(byte[])>(key) at line 1184 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void cleanupKeysWithPrefix(java.lang.String)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 1189 with ID [f898488f-a783]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cleanup ") AT LINE 1189 with ID [f898488f-a783]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(keyStr) AT LINE 1189 with ID [f898488f-a783]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from leveldb") AT LINE 1189 with ID [f898488f-a783]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1189 with ID [f898488f-a783]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String)>($stack29) AT LINE 1189 with ID [f898488f-a783]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataNode$DataTransfer: void <init>(org.apache.hadoop.hdfs.server.datanode.DataNode,org.apache.hadoop.hdfs.protocol.DatanodeInfo[],org.apache.hadoop.fs.StorageType[],org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.protocol.datatransfer.BlockConstructionStage,java.lang.String)> has 25 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.protocol.datatransfer.DataTransferProtocol: org.slf4j.Logger LOG> AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(b) AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (numBytes=") AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke b.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getNumBytes()>() AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack27) AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", stage=") AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(stage) AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clientname=") AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(clientname) AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", targets=") AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(targets) AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack35) AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", target storage types=") AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> if targetStorageTypes != null goto $stack38 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(targetStorageTypes) AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = "[]" AT LINE 2395 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> goto [?= $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack38)] AT LINE 2395 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(targetStorageTypes) AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack38) AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack40) AT LINE 2378 with ID [ab4b919b-0f28]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack22 == 0 goto (branch) at line 407 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack8 == 0 goto return at line 421 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$Dumper: void run()> has 16 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 398 with ID [b96506ce-4520]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = interfaceinvoke $stack37.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 398 with ID [b96506ce-4520]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack38 == 0 goto (branch) AT LINE 398 with ID [b96506ce-4520]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 399 with ID [b96506ce-4520]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack39.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Dumper woke up") AT LINE 399 with ID [b96506ce-4520]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 408 with ID [65fe5367-ac0c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dumper checking OpenFileCtx activeState: ") AT LINE 408 with ID [65fe5367-ac0c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$Dumper: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx this$0> AT LINE 408 with ID [65fe5367-ac0c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = staticinvoke <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: boolean access$600(org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx)>($stack27) AT LINE 408 with ID [65fe5367-ac0c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack28) AT LINE 408 with ID [65fe5367-ac0c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enabledDump: ") AT LINE 408 with ID [65fe5367-ac0c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$Dumper: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx this$0> AT LINE 408 with ID [65fe5367-ac0c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = staticinvoke <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: boolean access$200(org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx)>($stack31) AT LINE 408 with ID [65fe5367-ac0c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack32) AT LINE 408 with ID [65fe5367-ac0c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 408 with ID [65fe5367-ac0c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 408 with ID [65fe5367-ac0c]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.util.ShutdownHookManager: void shutdownExecutor(org.apache.hadoop.conf.Configuration)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = <org.apache.hadoop.util.ShutdownHookManager: org.slf4j.Logger LOG> AT LINE 154 with ID [801cfd9a-d568]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>("ShutdownHookManger completed shutdown.") AT LINE 154 with ID [801cfd9a-d568]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: void nodeUpdate(org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode)> has 19 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: org.apache.commons.logging.Log LOG> AT LINE 1083 with ID [50da6ee0-297d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nodeUpdate: ") AT LINE 1083 with ID [50da6ee0-297d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nm) AT LINE 1083 with ID [50da6ee0-297d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cluster capacity: ") AT LINE 1083 with ID [50da6ee0-297d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: org.apache.hadoop.yarn.api.records.Resource getClusterResource()>() AT LINE 1083 with ID [50da6ee0-297d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack42) AT LINE 1083 with ID [50da6ee0-297d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1083 with ID [50da6ee0-297d]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack44) AT LINE 1083 with ID [50da6ee0-297d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler: org.apache.commons.logging.Log LOG> AT LINE 1118 with ID [c49a879e-5a78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node being looked for scheduling ") AT LINE 1118 with ID [c49a879e-5a78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nm) AT LINE 1118 with ID [c49a879e-5a78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" availableResource: ") AT LINE 1118 with ID [c49a879e-5a78]
2020-08-25 12:10:06 [INFO] - 	 -> if schedulerNode != null goto $stack23 = virtualinvoke schedulerNode.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: org.apache.hadoop.yarn.api.records.Resource getUnallocatedResource()>() AT LINE 1118 with ID [c49a879e-5a78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = "unknown (decomissioned)" AT LINE 1123 with ID [c49a879e-5a78]
2020-08-25 12:10:06 [INFO] - 	 -> goto [?= $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack23)] AT LINE 1123 with ID [c49a879e-5a78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke schedulerNode.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: org.apache.hadoop.yarn.api.records.Resource getUnallocatedResource()>() AT LINE 1118 with ID [c49a879e-5a78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack23) AT LINE 1118 with ID [c49a879e-5a78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1118 with ID [c49a879e-5a78]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack25) AT LINE 1118 with ID [c49a879e-5a78]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i$#16 != null goto $stack49 = <org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase: org.apache.hadoop.hdfs.server.namenode.startupprogress.Phase LOADING_FSIMAGE> at line 736 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack45 == 0 goto $stack46 = interfaceinvoke editStreams.<java.lang.Iterable: java.util.Iterator iterator()>() at line 713 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack43 == 0 goto i$ = interfaceinvoke editStreams.<java.lang.Iterable: java.util.Iterator iterator()>() at line 709 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSImage: boolean loadFSImage(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption,org.apache.hadoop.hdfs.server.namenode.MetaRecoveryContext)> has 7 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack77 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 721 with ID [2dcbdf7a-9359]
2020-08-25 12:10:06 [INFO] - 	 -> elis = (org.apache.hadoop.hdfs.server.namenode.EditLogInputStream) $stack77 AT LINE 721 with ID [2dcbdf7a-9359]
2020-08-25 12:10:06 [INFO] - 	 -> $stack79 = <org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.commons.logging.Log LOG> AT LINE 714 with ID [2dcbdf7a-9359]
2020-08-25 12:10:06 [INFO] - 	 -> $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Planning to load edit log stream: ") AT LINE 714 with ID [2dcbdf7a-9359]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(elis) AT LINE 714 with ID [2dcbdf7a-9359]
2020-08-25 12:10:06 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 714 with ID [2dcbdf7a-9359]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack79.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack82) AT LINE 714 with ID [2dcbdf7a-9359]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if layoutVersion == $stack71 goto $stack28 = this.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage storage> at line 271 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if startOpt != $stack26 goto (branch) at line 241 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if startOpt == $stack111 goto $stack24 = this.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage storage> at line 241 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if startOpt == $stack18 goto $stack19 = new java.util.HashMap at line 217 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if startOpt != $stack128 goto $stack13 = this.<org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.hadoop.hdfs.server.namenode.NNStorage storage> at line 228 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSImage: boolean recoverTransitionRead(org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption,org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.MetaRecoveryContext)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack114 = <org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.commons.logging.Log LOG> AT LINE 229 with ID [e739dee7-54d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack115 = virtualinvoke $stack113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data dir states:\n  ") AT LINE 229 with ID [e739dee7-54d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack116 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>("\n  ") AT LINE 229 with ID [e739dee7-54d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack117 = virtualinvoke $stack116.<com.google.common.base.Joiner: com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String)>(": ") AT LINE 229 with ID [e739dee7-54d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack118 = virtualinvoke $stack117.<com.google.common.base.Joiner$MapJoiner: java.lang.String join(java.util.Map)>(dataDirStates) AT LINE 229 with ID [e739dee7-54d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack119 = virtualinvoke $stack115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack118) AT LINE 229 with ID [e739dee7-54d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack120 = virtualinvoke $stack119.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 229 with ID [e739dee7-54d1]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack114.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack120) AT LINE 229 with ID [e739dee7-54d1]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack35 == 0 goto storageInfo#13 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNode: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics getNameNodeMetrics()>() at line 2191 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack90 != 0 goto $stack30 = virtualinvoke storageInfo.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo: int getBlockReportCount()>() at line 2166 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack94 <= 0 goto (branch) at line 2188 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack25 != 0 goto $stack26 = virtualinvoke storage.<org.apache.hadoop.hdfs.server.protocol.DatanodeStorage: java.lang.String getStorageID()>() at line 2144 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean processReport(org.apache.hadoop.hdfs.protocol.DatanodeID,org.apache.hadoop.hdfs.server.protocol.DatanodeStorage,org.apache.hadoop.hdfs.protocol.BlockListAsLongs,org.apache.hadoop.hdfs.server.protocol.BlockReportContext)> has 15 units and 4 lines
2020-08-25 12:10:06 [INFO] - 	 -> storageInfo#11 = interfaceinvoke invalidatedBlocks.<java.util.Collection: java.util.Iterator iterator()>() AT LINE 2191 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = interfaceinvoke storageInfo#11.<java.util.Iterator: boolean hasNext()>() AT LINE 2191 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack35 == 0 goto storageInfo#13 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NameNode: org.apache.hadoop.hdfs.server.namenode.metrics.NameNodeMetrics getNameNodeMetrics()>() AT LINE 2191 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> $stack71 = interfaceinvoke storageInfo#11.<java.util.Iterator: java.lang.Object next()>() AT LINE 2207 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> b#12 = (org.apache.hadoop.hdfs.protocol.Block) $stack71 AT LINE 2207 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> $stack73 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 2192 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72 = newarray (java.lang.Object)[4] AT LINE 2192 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72[0] = strBlockReportId AT LINE 2192 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72[1] = b#12 AT LINE 2192 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72[2] = node AT LINE 2192 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> $stack76 = virtualinvoke b#12.<org.apache.hadoop.hdfs.protocol.Block: long getNumBytes()>() AT LINE 2192 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> $stack77 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack76) AT LINE 2192 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72[3] = $stack77 AT LINE 2192 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack73.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* processReport 0x{}: {} on node {} size {} does not belong to any file", $stack72) AT LINE 2192 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - 	 -> goto [?= $stack35 = interfaceinvoke storageInfo#11.<java.util.Iterator: boolean hasNext()>()] AT LINE 2194 with ID [79a76edd-d516]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector: void createConnection()> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 852 with ID [f1cda4d4-993b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created new connection for ") AT LINE 852 with ID [f1cda4d4-993b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 852 with ID [f1cda4d4-993b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 852 with ID [f1cda4d4-993b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack10) AT LINE 852 with ID [f1cda4d4-993b]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack17 >= 0 goto pc = virtualinvoke this.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>() at line 2055 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: boolean truncate(java.lang.String,long,java.lang.String,java.lang.String,long)> has 3 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 2053 with ID [21ffd822-6109]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(newLength) AT LINE 2053 with ID [21ffd822-6109]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("DIR* NameSystem.truncate: src={} newLength={}", src, $stack16) AT LINE 2053 with ID [21ffd822-6109]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack17 == 0 goto return at line 919 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if incomingCollectorsMap != null goto $stack12 = this.<org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl$1: org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl this$0> at line 910 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl$1: void updateTimelineCollectorData(org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatResponse)> has 14 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack57 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger access$1300()>() AT LINE 911 with ID [fa93ae31-0dc2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack58 = interfaceinvoke $stack57.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 911 with ID [fa93ae31-0dc2]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack58 == 0 goto return AT LINE 911 with ID [fa93ae31-0dc2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack59 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger access$1300()>() AT LINE 912 with ID [fa93ae31-0dc2]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack59.<org.slf4j.Logger: void debug(java.lang.String)>("No collectors to update RM") AT LINE 912 with ID [fa93ae31-0dc2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: org.slf4j.Logger access$1300()>() AT LINE 930 with ID [7daea203-fdb2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sync a new collector address: ") AT LINE 930 with ID [7daea203-fdb2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = virtualinvoke collectorData.<org.apache.hadoop.yarn.server.api.records.AppCollectorData: java.lang.String getCollectorAddr()>() AT LINE 930 with ID [7daea203-fdb2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack49) AT LINE 930 with ID [7daea203-fdb2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for application: ") AT LINE 930 with ID [7daea203-fdb2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 930 with ID [7daea203-fdb2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from RM.") AT LINE 930 with ID [7daea203-fdb2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 930 with ID [7daea203-fdb2]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String)>($stack54) AT LINE 930 with ID [7daea203-fdb2]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: void removeReservationState(java.lang.String,java.lang.String)> has 9 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 699 with ID [ab613e6e-b2aa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing state for reservation ") AT LINE 699 with ID [ab613e6e-b2aa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reservationIdName) AT LINE 699 with ID [ab613e6e-b2aa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" plan ") AT LINE 699 with ID [ab613e6e-b2aa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(planName) AT LINE 699 with ID [ab613e6e-b2aa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ") AT LINE 699 with ID [ab613e6e-b2aa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reservationKey) AT LINE 699 with ID [ab613e6e-b2aa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 699 with ID [ab613e6e-b2aa]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 699 with ID [ab613e6e-b2aa]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack14 == 0 goto return at line 353 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = virtualinvoke state.<org.apache.hadoop.yarn.server.nodemanager.recovery.NMStateStoreService$LocalResourceTrackerState: java.util.Map getInProgressResources()>() at line 341 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: void recoverTrackerResources(org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalResourcesTracker,org.apache.hadoop.yarn.server.nodemanager.recovery.NMStateStoreService$LocalResourceTrackerState)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: org.slf4j.Logger LOG> AT LINE 345 with ID [40c00acc-7587]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recovering localized resource ") AT LINE 345 with ID [40c00acc-7587]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(req) AT LINE 345 with ID [40c00acc-7587]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ") AT LINE 345 with ID [40c00acc-7587]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = virtualinvoke proto.<org.apache.hadoop.yarn.proto.YarnServerNodemanagerRecoveryProtos$LocalizedResourceProto: java.lang.String getLocalPath()>() AT LINE 345 with ID [40c00acc-7587]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack49) AT LINE 345 with ID [40c00acc-7587]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 345 with ID [40c00acc-7587]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 345 with ID [40c00acc-7587]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack6 == 0 goto return 1 at line 92 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.CleanupQueue: boolean deletePath(org.apache.hadoop.mapred.CleanupQueue$PathDeletionContext)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.mapred.CleanupQueue: org.apache.commons.logging.Log LOG> AT LINE 90 with ID [496a9dc5-8e5c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to delete ") AT LINE 90 with ID [496a9dc5-8e5c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = context.<org.apache.hadoop.mapred.CleanupQueue$PathDeletionContext: java.lang.String fullPath> AT LINE 90 with ID [496a9dc5-8e5c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 90 with ID [496a9dc5-8e5c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 90 with ID [496a9dc5-8e5c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 90 with ID [496a9dc5-8e5c]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: void removeContainerPaused(org.apache.hadoop.yarn.api.records.ContainerId)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.slf4j.Logger LOG> AT LINE 408 with ID [93673b82-0f91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeContainerPaused: containerId=") AT LINE 408 with ID [93673b82-0f91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 408 with ID [93673b82-0f91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 408 with ID [93673b82-0f91]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 408 with ID [93673b82-0f91]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if status != null goto $stack24 = timeKillIssued + killTimeOut at line 892 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack27 != 0 goto (branch) at line 903 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack16 == $stack17 goto $stack18 = this.<org.apache.hadoop.mapred.YARNRunner: org.apache.hadoop.mapred.ClientCache clientCache> at line 869 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if status != null goto $stack16 = virtualinvoke status.<org.apache.hadoop.mapreduce.JobStatus: org.apache.hadoop.mapreduce.JobStatus$State getState()>() at line 864 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.mapred.YARNRunner: void killJob(org.apache.hadoop.mapreduce.JobID)>
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack7 != 0 goto $stack8 = this.<org.apache.hadoop.hdfs.server.federation.router.PeriodicService$1: org.apache.hadoop.hdfs.server.federation.router.PeriodicService this$0> at line 175 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.PeriodicService$1: void run()> has 4 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack2 = staticinvoke <org.apache.hadoop.hdfs.server.federation.router.PeriodicService: org.slf4j.Logger access$100()>() AT LINE 173 with ID [21b4432f-a4f1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = this.<org.apache.hadoop.hdfs.server.federation.router.PeriodicService$1: org.apache.hadoop.hdfs.server.federation.router.PeriodicService this$0> AT LINE 173 with ID [21b4432f-a4f1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = staticinvoke <org.apache.hadoop.hdfs.server.federation.router.PeriodicService: java.lang.String access$000(org.apache.hadoop.hdfs.server.federation.router.PeriodicService)>($stack3) AT LINE 173 with ID [21b4432f-a4f1]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Running {} update task", $stack5) AT LINE 173 with ID [21b4432f-a4f1]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack17 == 0 goto virtualinvoke this.<java.lang.Object: void wait(long)>(1000L) at line 199 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = this.<org.apache.hadoop.hdfs.server.namenode.FSEditLogAsync: java.util.concurrent.Semaphore overflowMutex> at line 191 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSEditLogAsync: void enqueueEdit(org.apache.hadoop.hdfs.server.namenode.FSEditLogAsync$Edit)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = <org.apache.hadoop.hdfs.server.namenode.FSEditLogAsync: org.apache.commons.logging.Log LOG> AT LINE 182 with ID [bf083b15-e421]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("logEdit ") AT LINE 182 with ID [bf083b15-e421]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(edit) AT LINE 182 with ID [bf083b15-e421]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 182 with ID [bf083b15-e421]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 182 with ID [bf083b15-e421]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack5 == 0 goto return at line 1203 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack10 == 0 goto (branch) at line 1205 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: void removeFinishedContainersFromCache(java.util.List)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.FederationInterceptor: org.slf4j.Logger LOG> AT LINE 1204 with ID [8176f6cb-8c5a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Completed container {}", container) AT LINE 1204 with ID [8176f6cb-8c5a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack17 = interfaceinvoke entitiesToSummaryCache.<java.util.List: boolean isEmpty()>() at line 217 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if appAttemptId != null goto $stack12 = new java.util.ArrayList at line 206 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: org.apache.hadoop.yarn.api.records.timeline.TimelinePutResponse putEntities(org.apache.hadoop.yarn.api.records.ApplicationAttemptId,org.apache.hadoop.yarn.api.records.timeline.TimelineEntityGroupId,org.apache.hadoop.yarn.api.records.timeline.TimelineEntity[])> has 16 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack69 = <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: org.apache.commons.logging.Log LOG> AT LINE 233 with ID [b5c1356a-f0dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing summary log for ") AT LINE 233 with ID [b5c1356a-f0dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack71 = virtualinvoke appAttemptId.<org.apache.hadoop.yarn.api.records.ApplicationAttemptId: java.lang.String toString()>() AT LINE 233 with ID [b5c1356a-f0dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack71) AT LINE 233 with ID [b5c1356a-f0dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 233 with ID [b5c1356a-f0dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(arr$#3) AT LINE 233 with ID [b5c1356a-f0dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 233 with ID [b5c1356a-f0dc]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack69.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack75) AT LINE 233 with ID [b5c1356a-f0dc]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: org.apache.commons.logging.Log LOG> AT LINE 244 with ID [1b7eefbe-4235]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing entity log for ") AT LINE 244 with ID [1b7eefbe-4235]
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = virtualinvoke groupId.<org.apache.hadoop.yarn.api.records.timeline.TimelineEntityGroupId: java.lang.String toString()>() AT LINE 244 with ID [1b7eefbe-4235]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack42) AT LINE 244 with ID [1b7eefbe-4235]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 244 with ID [1b7eefbe-4235]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(arr$#3) AT LINE 244 with ID [1b7eefbe-4235]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 244 with ID [1b7eefbe-4235]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack46) AT LINE 244 with ID [1b7eefbe-4235]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.BackupStore$BackupRamManager: void unreserve(int)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = staticinvoke <org.apache.hadoop.mapred.BackupStore: org.apache.commons.logging.Log access$400()>() AT LINE 620 with ID [61c7875d-27b9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unreserving: ") AT LINE 620 with ID [61c7875d-27b9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(requestedSize) AT LINE 620 with ID [61c7875d-27b9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Available: ") AT LINE 620 with ID [61c7875d-27b9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.mapred.BackupStore$BackupRamManager: int availableSize> AT LINE 620 with ID [61c7875d-27b9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack9) AT LINE 620 with ID [61c7875d-27b9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 620 with ID [61c7875d-27b9]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 620 with ID [61c7875d-27b9]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack6 != 0 goto value = null at line 863 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$RpcCall: java.lang.Void run()> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 883 with ID [f5426af2-4415]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deferring response for callId: ") AT LINE 883 with ID [f5426af2-4415]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.ipc.Server$RpcCall: int callId> AT LINE 883 with ID [f5426af2-4415]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack21) AT LINE 883 with ID [f5426af2-4415]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 883 with ID [f5426af2-4415]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack23) AT LINE 883 with ID [f5426af2-4415]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack24 == 0 goto needFallback = 1 at line 194 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.client.KerberosAuthenticator: void authenticate(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token)> has 6 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = <org.apache.hadoop.security.authentication.client.KerberosAuthenticator: org.slf4j.Logger LOG> AT LINE 190 with ID [e93f4218-94a0]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>("JDK performed authentication on our behalf.") AT LINE 190 with ID [e93f4218-94a0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = <org.apache.hadoop.security.authentication.client.KerberosAuthenticator: org.slf4j.Logger LOG> AT LINE 200 with ID [3b19d886-09aa]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String)>("Performing our own SPNEGO sequence.") AT LINE 200 with ID [3b19d886-09aa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.security.authentication.client.KerberosAuthenticator: org.slf4j.Logger LOG> AT LINE 203 with ID [6ac50b57-ca34]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>("Using fallback authenticator sequence.") AT LINE 203 with ID [6ac50b57-ca34]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.JobHistory: java.util.Map getAllJobs(org.apache.hadoop.yarn.api.records.ApplicationId)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = <org.apache.hadoop.mapreduce.v2.hs.JobHistory: org.apache.commons.logging.Log LOG> AT LINE 225 with ID [b7caa45b-804f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Called getAllJobs(AppId): ") AT LINE 225 with ID [b7caa45b-804f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appID) AT LINE 225 with ID [b7caa45b-804f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 225 with ID [b7caa45b-804f]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 225 with ID [b7caa45b-804f]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.TestLocalRunner$StressMapper: void cleanup(org.apache.hadoop.mapreduce.Mapper$Context)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack2 = staticinvoke <org.apache.hadoop.mapreduce.TestLocalRunner: org.apache.commons.logging.Log access$000()>() AT LINE 104 with ID [b70edee2-5e71]
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Busy loop counter: ") AT LINE 104 with ID [b70edee2-5e71]
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = this.<org.apache.hadoop.mapreduce.TestLocalRunner$StressMapper: long exposedState> AT LINE 104 with ID [b70edee2-5e71]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack5) AT LINE 104 with ID [b70edee2-5e71]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 104 with ID [b70edee2-5e71]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack7) AT LINE 104 with ID [b70edee2-5e71]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if packet != null goto $stack5 = staticinvoke <org.apache.htrace.core.Tracer: org.apache.htrace.core.SpanId getCurrentSpanId()>() at line 1959 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DataStreamer: void queuePacket(org.apache.hadoop.hdfs.DFSPacket)> has 4 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 1963 with ID [1860257f-242d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke packet.<org.apache.hadoop.hdfs.DFSPacket: long getSeqno()>() AT LINE 1963 with ID [1860257f-242d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack10) AT LINE 1963 with ID [1860257f-242d]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Queued packet {}", $stack11) AT LINE 1963 with ID [1860257f-242d]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= $stack122 goto $stack123 = mStream#31 cmp 0L at line 3499 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack34 == 0 goto $stack35 = new org.apache.hadoop.fs.Path at line 3511 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if numSegments > $stack32 goto mStream#31 = 0L at line 3495 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if mStream#24 >= $stack30 goto $stack31 = this.<org.apache.hadoop.io.SequenceFile$Sorter$MergeQueue: org.apache.hadoop.io.SequenceFile$Sorter this$0> at line 3490 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack141 != 0 goto $stack142 = this.<org.apache.hadoop.io.SequenceFile$Sorter$MergeQueue: org.apache.hadoop.io.SequenceFile$Sorter this$0> at line 3490 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= $stack26 goto $stack27 = this.<org.apache.hadoop.io.SequenceFile$Sorter$MergeQueue: org.apache.hadoop.io.SequenceFile$Sorter this$0> at line 3467 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.SequenceFile$Sorter$MergeQueue: org.apache.hadoop.io.SequenceFile$Sorter$RawKeyValueIterator merge()> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack84 = staticinvoke <org.apache.hadoop.io.SequenceFile: org.slf4j.Logger access$500()>() AT LINE 3523 with ID [c43f8d79-1a28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writing intermediate results to ") AT LINE 3523 with ID [c43f8d79-1a28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(s#37) AT LINE 3523 with ID [c43f8d79-1a28]
2020-08-25 12:10:06 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3523 with ID [c43f8d79-1a28]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack84.<org.slf4j.Logger: void debug(java.lang.String)>($stack88) AT LINE 3523 with ID [c43f8d79-1a28]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack17 <= 0 goto virtualinvoke j#3.<org.apache.hadoop.fs.FSDataInputStream: void close()>() at line 127 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if k >= thisread goto $stack21 = <org.apache.hadoop.hdfs.TestLargeBlock: org.apache.commons.logging.Log LOG> at line 140 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if j >= readSize goto j#3 = virtualinvoke fs.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path)>(name) at line 120 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if readSize <= 2147483647 goto b = newarray (byte)[readSize] at line 109 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.TestLargeBlock: void checkFullFile(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,long)> has 16 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = (long) readSize AT LINE 129 with ID [bda9b84f-f94a, UNKNOWN_ID, 394d518c-759d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = staticinvoke <java.lang.Math: long min(long,long)>($stack18, bytesToRead) AT LINE 129 with ID [bda9b84f-f94a, UNKNOWN_ID, 394d518c-759d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.TestLargeBlock: org.apache.commons.logging.Log LOG> AT LINE 146 with ID [394d518c-759d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Before update: to read: ") AT LINE 146 with ID [394d518c-759d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(bytesToRead) AT LINE 146 with ID [394d518c-759d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; read already: ") AT LINE 146 with ID [394d518c-759d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(thisread) AT LINE 146 with ID [394d518c-759d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 146 with ID [394d518c-759d]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 146 with ID [394d518c-759d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.TestLargeBlock: org.apache.commons.logging.Log LOG> AT LINE 149 with ID [bda9b84f-f94a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("After  update: to read: ") AT LINE 149 with ID [bda9b84f-f94a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(bytesToRead) AT LINE 149 with ID [bda9b84f-f94a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; read already: ") AT LINE 149 with ID [bda9b84f-f94a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(thisread) AT LINE 149 with ID [bda9b84f-f94a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 149 with ID [bda9b84f-f94a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 149 with ID [bda9b84f-f94a]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void startActiveServices()> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack86 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 1198 with ID [f8356a8d-0de0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack87 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NameNode metadata after re-processing replication and invalidation queues during failover:\n") AT LINE 1198 with ID [f8356a8d-0de0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack88 = specialinvoke this.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String metaSaveAsString()>() AT LINE 1198 with ID [f8356a8d-0de0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack89 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack88) AT LINE 1198 with ID [f8356a8d-0de0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1198 with ID [f8356a8d-0de0]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack86.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack90) AT LINE 1198 with ID [f8356a8d-0de0]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.kms.KMSClientProvider: long renewDelegationToken(org.apache.hadoop.security.token.Token)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.slf4j.Logger LOG> AT LINE 928 with ID [8b76c43a-f691]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = newarray (java.lang.Object)[3] AT LINE 928 with ID [8b76c43a-f691]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9[0] = token AT LINE 928 with ID [8b76c43a-f691]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9[1] = url AT LINE 928 with ID [8b76c43a-f691]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9[2] = doAsUser AT LINE 928 with ID [8b76c43a-f691]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Renewing delegation token {} with url:{}, as:{}", $stack9) AT LINE 928 with ID [8b76c43a-f691]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if reader == null goto $stack12 = <org.apache.hadoop.hdfs.DFSInputStream: boolean tcpReadsDisabledForTesting> at line 376 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if reader == null goto $stack11 = virtualinvoke scConf.<org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf: boolean isDomainSocketDataTraffic()>() at line 362 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if reader == null goto $stack11 = virtualinvoke scConf.<org.apache.hadoop.hdfs.client.impl.DfsClientConf$ShortCircuitConf: boolean isDomainSocketDataTraffic()>() at line 368 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if reader == null goto $stack8 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.client.impl.DfsClientConf conf> at line 355 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.BlockReader build()> has 8 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 363 with ID [bf923b83-1a88]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("{}: returning new legacy block reader local.", this) AT LINE 363 with ID [bf923b83-1a88]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 369 with ID [d0419346-2362]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("{}: returning new block reader local.", this) AT LINE 369 with ID [d0419346-2362]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 377 with ID [9ebad0c7-81c4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory$PathInfo pathInfo> AT LINE 377 with ID [9ebad0c7-81c4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<org.apache.hadoop.hdfs.shortcircuit.DomainSocketFactory$PathInfo: java.lang.String getPath()>() AT LINE 377 with ID [9ebad0c7-81c4]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: returning new remote block reader using UNIX domain socket on {}", this, $stack21) AT LINE 377 with ID [9ebad0c7-81c4]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= $stack15 goto $stack17 = <org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: org.slf4j.Logger LOG> at line 117 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.security.UserGroupInformation,int,int,java.lang.Class)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: org.slf4j.Logger LOG> AT LINE 121 with ID [10fbf6af-5ca0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = this.<org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: org.apache.hadoop.hdfs.server.federation.router.ConnectionPoolId connectionPoolId> AT LINE 121 with ID [10fbf6af-5ca0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = this.<org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: int minSize> AT LINE 121 with ID [10fbf6af-5ca0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack16) AT LINE 121 with ID [10fbf6af-5ca0]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Created connection pool \"{}\" with {} connections", $stack19, $stack20) AT LINE 121 with ID [10fbf6af-5ca0]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if dswLoadingFailure == null goto $stack16 = new org.apache.hadoop.net.unix.DomainSocketWatcher at line 177 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if interruptCheck > 0 goto shmPaths = virtualinvoke conf.<org.apache.hadoop.conf.Configuration: java.lang.String[] getTrimmedStrings(java.lang.String)>("dfs.datanode.shared.file.descriptor.paths") at line 163 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: void <init>(org.apache.hadoop.conf.Configuration)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: org.apache.commons.logging.Log LOG> AT LINE 183 with ID [bdf898a7-e1e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("created new ShortCircuitRegistry with interruptCheck=") AT LINE 183 with ID [bdf898a7-e1e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(interruptCheck) AT LINE 183 with ID [bdf898a7-e1e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", shmPath=") AT LINE 183 with ID [bdf898a7-e1e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke shmFactory.<org.apache.hadoop.io.nativeio.SharedFileDescriptorFactory: java.lang.String getPath()>() AT LINE 183 with ID [bdf898a7-e1e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) AT LINE 183 with ID [bdf898a7-e1e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 183 with ID [bdf898a7-e1e9]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 183 with ID [bdf898a7-e1e9]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 441 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack14 == 0 goto isDir = virtualinvoke f.<java.io.File: boolean isDirectory()>() at line 406 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.util.FSDownload: void changePermissions(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = <org.apache.hadoop.yarn.util.FSDownload: org.apache.commons.logging.Log LOG> AT LINE 424 with ID [a2e1c17d-d619]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Changing permissions for path ") AT LINE 424 with ID [a2e1c17d-d619]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(path) AT LINE 424 with ID [a2e1c17d-d619]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to perm ") AT LINE 424 with ID [a2e1c17d-d619]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(perm) AT LINE 424 with ID [a2e1c17d-d619]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 424 with ID [a2e1c17d-d619]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 424 with ID [a2e1c17d-d619]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ha.SshFenceByTcpPort: int execCommand(com.jcraft.jsch.Session,java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = <org.apache.hadoop.ha.SshFenceByTcpPort: org.slf4j.Logger LOG> AT LINE 179 with ID [89d619d2-d6ad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running cmd: ") AT LINE 179 with ID [89d619d2-d6ad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(cmd) AT LINE 179 with ID [89d619d2-d6ad]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 179 with ID [89d619d2-d6ad]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 179 with ID [89d619d2-d6ad]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack15 != 0 goto $stack16 = rmState.<org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState: java.util.Map appState> at line 696 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void loadRMAppStateFromAppNode(org.apache.hadoop.yarn.server.resourcemanager.recovery.RMStateStore$RMState,java.lang.String,java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 691 with ID [05a1bbba-f9e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading application from znode: ") AT LINE 691 with ID [05a1bbba-f9e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(appNodePath) AT LINE 691 with ID [05a1bbba-f9e1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 691 with ID [05a1bbba-f9e1]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack23) AT LINE 691 with ID [05a1bbba-f9e1]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack16 = new java.lang.StringBuilder at line 490 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack15 = e instanceof java.io.IOException at line 487 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = e instanceof org.apache.hadoop.registry.client.exceptions.InvalidRecordException at line 484 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = e instanceof org.apache.hadoop.security.AccessControlException at line 481 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = e instanceof org.apache.hadoop.registry.client.exceptions.NoPathPermissionsException at line 478 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = e instanceof org.apache.hadoop.registry.client.exceptions.AuthenticationFailedException at line 475 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = e instanceof org.apache.hadoop.registry.client.exceptions.NoRecordException at line 472 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = e instanceof org.apache.hadoop.fs.PathNotFoundException at line 469 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.registry.cli.RegistryCli: java.lang.String analyzeException(java.lang.String,java.lang.Exception,java.util.List)> has 10 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = <org.apache.hadoop.registry.cli.RegistryCli: org.slf4j.Logger LOG> AT LINE 465 with ID [db9dec3c-7eb8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 465 with ID [db9dec3c-7eb8]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack7 == 0 goto $stack8 = e instanceof org.apache.hadoop.registry.client.exceptions.InvalidPathnameException AT LINE 465 with ID [db9dec3c-7eb8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack63 = <org.apache.hadoop.registry.cli.RegistryCli: org.slf4j.Logger LOG> AT LINE 466 with ID [db9dec3c-7eb8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62 = newarray (java.lang.Object)[4] AT LINE 466 with ID [db9dec3c-7eb8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62[0] = operation AT LINE 466 with ID [db9dec3c-7eb8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62[1] = pathArg AT LINE 466 with ID [db9dec3c-7eb8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62[2] = e AT LINE 466 with ID [db9dec3c-7eb8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62[3] = e AT LINE 466 with ID [db9dec3c-7eb8]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack63.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Operation {} on path {} failed with exception {}", $stack62) AT LINE 466 with ID [db9dec3c-7eb8]
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.security.JniBasedUnixGroupsMapping: java.util.List getGroups(java.lang.String)>
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair getEncryptedStreams(java.net.InetAddress,java.io.OutputStream,java.io.InputStream,org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey)> has 3 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferClient: org.slf4j.Logger LOG> AT LINE 292 with ID [4ca80af0-c299]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = encryptionKey.<org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey: java.lang.String encryptionAlgorithm> AT LINE 292 with ID [4ca80af0-c299]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Client using encryption algorithm {}", $stack11) AT LINE 292 with ID [4ca80af0-c299]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if deleted != 0 goto (branch) at line 318 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.util.CgroupsLCEResourcesHandler: boolean deleteCgroup(java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = <org.apache.hadoop.yarn.server.nodemanager.util.CgroupsLCEResourcesHandler: org.slf4j.Logger LOG> AT LINE 306 with ID [a28dcbdc-c3e6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleteCgroup: ") AT LINE 306 with ID [a28dcbdc-c3e6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(cgroupPath) AT LINE 306 with ID [a28dcbdc-c3e6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 306 with ID [a28dcbdc-c3e6]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String)>($stack36) AT LINE 306 with ID [a28dcbdc-c3e6]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = this.<org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.apache.hadoop.hdfs.server.datanode.DNConf dnConf> at line 162 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.apache.hadoop.hdfs.protocol.datatransfer.IOStreamPair getEncryptedStreams(org.apache.hadoop.hdfs.net.Peer,java.io.OutputStream,java.io.InputStream)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.slf4j.Logger LOG> AT LINE 169 with ID [3b05f5aa-1e87]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server using encryption algorithm ") AT LINE 169 with ID [3b05f5aa-1e87]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = this.<org.apache.hadoop.hdfs.protocol.datatransfer.sasl.SaslDataTransferServer: org.apache.hadoop.hdfs.server.datanode.DNConf dnConf> AT LINE 169 with ID [3b05f5aa-1e87]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<org.apache.hadoop.hdfs.server.datanode.DNConf: java.lang.String getEncryptionAlgorithm()>() AT LINE 169 with ID [3b05f5aa-1e87]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) AT LINE 169 with ID [3b05f5aa-1e87]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 169 with ID [3b05f5aa-1e87]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String)>($stack26) AT LINE 169 with ID [3b05f5aa-1e87]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator: boolean hasDelegationToken(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token)> has 8 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> if hasDt == 0 goto (branch) AT LINE 123 with ID [e81c6116-2365]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator: org.slf4j.Logger LOG> AT LINE 124 with ID [e81c6116-2365]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = (org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL$Token) token AT LINE 124 with ID [e81c6116-2365]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticatedURL$Token: org.apache.hadoop.security.token.Token getDelegationToken()>() AT LINE 124 with ID [e81c6116-2365]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Delegation token found: {}", $stack21) AT LINE 124 with ID [e81c6116-2365]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator: org.slf4j.Logger LOG> AT LINE 132 with ID [3b740f09-f996]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(hasDt) AT LINE 132 with ID [3b740f09-f996]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("hasDt={}, queryStr={}", $stack9, queryStr) AT LINE 132 with ID [3b740f09-f996]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: void <init>(org.apache.hadoop.yarn.api.records.ApplicationAttemptId,org.apache.hadoop.yarn.server.resourcemanager.RMContext,org.apache.hadoop.yarn.server.resourcemanager.scheduler.YarnScheduler,org.apache.hadoop.yarn.server.resourcemanager.ApplicationMasterService,org.apache.hadoop.yarn.api.records.ApplicationSubmissionContext,org.apache.hadoop.conf.Configuration,java.util.List,org.apache.hadoop.yarn.server.resourcemanager.rmapp.RMApp,org.apache.hadoop.yarn.server.resourcemanager.blacklist.BlacklistManager)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = <org.apache.hadoop.yarn.server.resourcemanager.rmapp.attempt.RMAppAttemptImpl: org.apache.commons.logging.Log LOG> AT LINE 536 with ID [44bdeab6-6f1e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("yarn.app.attempt.diagnostics.limit.kc : ") AT LINE 536 with ID [44bdeab6-6f1e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(diagnosticsLimitKC) AT LINE 536 with ID [44bdeab6-6f1e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 536 with ID [44bdeab6-6f1e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 536 with ID [44bdeab6-6f1e]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack38 >= 0 goto (branch) at line 115 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack9 == 0 goto startIndex = virtualinvoke range.<org.apache.hadoop.mapred.SortedRanges$Range: long getStartIndex()>() at line 81 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.SortedRanges: void add(org.apache.hadoop.mapred.SortedRanges$Range)> has 14 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = <org.apache.hadoop.mapred.SortedRanges: org.apache.commons.logging.Log LOG> AT LINE 91 with ID [b83967b0-26d7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("previousRange ") AT LINE 91 with ID [b83967b0-26d7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(previousRange) AT LINE 91 with ID [b83967b0-26d7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 91 with ID [b83967b0-26d7]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack43.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack46) AT LINE 91 with ID [b83967b0-26d7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = <org.apache.hadoop.mapred.SortedRanges: org.apache.commons.logging.Log LOG> AT LINE 108 with ID [cef4bf30-9cdd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nextRange ") AT LINE 108 with ID [cef4bf30-9cdd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nextRange) AT LINE 108 with ID [cef4bf30-9cdd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   startIndex:") AT LINE 108 with ID [cef4bf30-9cdd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(startIndex) AT LINE 108 with ID [cef4bf30-9cdd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  endIndex:") AT LINE 108 with ID [cef4bf30-9cdd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(endIndex) AT LINE 108 with ID [cef4bf30-9cdd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 108 with ID [cef4bf30-9cdd]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 108 with ID [cef4bf30-9cdd]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server: void wrapWithSasl(org.apache.hadoop.ipc.Server$RpcCall)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 2965 with ID [e7aa5a5d-614a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding saslServer wrapped token of size ") AT LINE 2965 with ID [e7aa5a5d-614a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = lengthof token AT LINE 2965 with ID [e7aa5a5d-614a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack35) AT LINE 2965 with ID [e7aa5a5d-614a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as call response.") AT LINE 2965 with ID [e7aa5a5d-614a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2965 with ID [e7aa5a5d-614a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String)>($stack38) AT LINE 2965 with ID [e7aa5a5d-614a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = new java.io.ByteArrayOutputStream at line 184 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService: void storeTokenMasterKey(org.apache.hadoop.security.token.delegation.DelegationKey)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = <org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService: org.apache.commons.logging.Log LOG> AT LINE 179 with ID [3752a9bd-67db]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing master key ") AT LINE 179 with ID [3752a9bd-67db]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke key.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 179 with ID [3752a9bd-67db]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack30) AT LINE 179 with ID [3752a9bd-67db]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 179 with ID [3752a9bd-67db]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 179 with ID [3752a9bd-67db]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if allocationState != $stack31 goto $stack32 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment getCSAssignmentFromAllocateResult(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.ContainerAllocation,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode)>(clusterResource, result, null, node) at line 877 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack22 == 0 goto $stack24 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.activities.ActivitiesManager activitiesManager> at line 871 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack18 != 0 goto $stack19 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp application> at line 857 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if reservedContainer != null goto $stack12 = interfaceinvoke reservedContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey getReservedSchedulerKey()>() at line 855 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CSAssignment assignContainers(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer)> has 13 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip app_attempt=") AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp application> AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack45) AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", because it doesn\'t need more resource, schedulingMode=") AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke schedulingMode.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode: java.lang.String name()>() AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48) AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node-label=") AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = interfaceinvoke ps.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet: java.lang.String getPartition()>() AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack51) AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack53) AT LINE 860 with ID [6d132a99-9d92]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.CuratorService: byte[] zkRead(java.lang.String)> has 5 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 715 with ID [711d9942-f410]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = interfaceinvoke $stack5.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 715 with ID [711d9942-f410]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack6 == 0 goto $stack7 = this.<org.apache.hadoop.registry.client.impl.zk.CuratorService: org.apache.curator.framework.CuratorFramework curator> AT LINE 715 with ID [711d9942-f410]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 716 with ID [711d9942-f410]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Reading {}", fullpath) AT LINE 716 with ID [711d9942-f410]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack19 == 0 goto i$#3 = null at line 398 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: void recoverApplication(org.apache.hadoop.yarn.proto.YarnServerNodemanagerRecoveryProtos$ContainerManagerApplicationProto)> has 14 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack73 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: org.slf4j.Logger LOG> AT LINE 415 with ID [9d14df4f-0e79]
2020-08-25 12:10:06 [INFO] - 	 -> $stack74 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recovering Flow context: ") AT LINE 415 with ID [9d14df4f-0e79]
2020-08-25 12:10:06 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aclProto#6) AT LINE 415 with ID [9d14df4f-0e79]
2020-08-25 12:10:06 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for an application ") AT LINE 415 with ID [9d14df4f-0e79]
2020-08-25 12:10:06 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 415 with ID [9d14df4f-0e79]
2020-08-25 12:10:06 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 415 with ID [9d14df4f-0e79]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack73.<org.slf4j.Logger: void debug(java.lang.String)>($stack78) AT LINE 415 with ID [9d14df4f-0e79]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: org.slf4j.Logger LOG> AT LINE 424 with ID [fe51b0f3-503d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No prior existing flow context found. Using default Flow context: ") AT LINE 424 with ID [fe51b0f3-503d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(aclProto#6) AT LINE 424 with ID [fe51b0f3-503d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for an application ") AT LINE 424 with ID [fe51b0f3-503d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 424 with ID [fe51b0f3-503d]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 424 with ID [fe51b0f3-503d]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void debug(java.lang.String)>($stack48) AT LINE 424 with ID [fe51b0f3-503d]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() at line 335 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter$EntityLogFD: void writeEntities(java.util.List)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = staticinvoke <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: org.apache.commons.logging.Log access$000()>() AT LINE 333 with ID [e5666650-f891]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing entity list of size ") AT LINE 333 with ID [e5666650-f891]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = interfaceinvoke entities.<java.util.List: int size()>() AT LINE 333 with ID [e5666650-f891]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack17) AT LINE 333 with ID [e5666650-f891]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 333 with ID [e5666650-f891]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 333 with ID [e5666650-f891]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataXceiver: void <init>(org.apache.hadoop.hdfs.net.Peer,org.apache.hadoop.hdfs.server.datanode.DataNode,org.apache.hadoop.hdfs.server.datanode.DataXceiverServer)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 150 with ID [fae3e209-f7b2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number of active connections is: ") AT LINE 150 with ID [fae3e209-f7b2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke datanode.<org.apache.hadoop.hdfs.server.datanode.DataNode: int getXceiverCount()>() AT LINE 150 with ID [fae3e209-f7b2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack26) AT LINE 150 with ID [fae3e209-f7b2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 150 with ID [fae3e209-f7b2]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack28) AT LINE 150 with ID [fae3e209-f7b2]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if notIncluded == 0 goto return 0 at line 1000 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.balancer.Dispatcher: boolean shouldIgnore(org.apache.hadoop.hdfs.protocol.DatanodeInfo)> has 11 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.server.balancer.Dispatcher: org.apache.commons.logging.Log LOG> AT LINE 1001 with ID [292339df-e047]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Excluding datanode ") AT LINE 1001 with ID [292339df-e047]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dn) AT LINE 1001 with ID [292339df-e047]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": outOfService=") AT LINE 1001 with ID [292339df-e047]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(outOfService) AT LINE 1001 with ID [292339df-e047]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", excluded=") AT LINE 1001 with ID [292339df-e047]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(excluded) AT LINE 1001 with ID [292339df-e047]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", notIncluded=") AT LINE 1001 with ID [292339df-e047]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(notIncluded) AT LINE 1001 with ID [292339df-e047]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1001 with ID [292339df-e047]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack22) AT LINE 1001 with ID [292339df-e047]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack42 != null goto $stack15 = this.<org.apache.hadoop.net.NetworkTopologyWithNodeGroup: org.apache.hadoop.net.InnerNode clusterMap> at line 205 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack5 == 0 goto $stack6 = this.<org.apache.hadoop.net.NetworkTopologyWithNodeGroup: java.util.concurrent.locks.ReadWriteLock netlock> at line 179 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if node != null goto $stack5 = node instanceof org.apache.hadoop.net.InnerNode at line 178 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.net.NetworkTopologyWithNodeGroup: void add(org.apache.hadoop.net.Node)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = <org.apache.hadoop.net.NetworkTopologyWithNodeGroup: org.slf4j.Logger LOG> AT LINE 217 with ID [31c1f002-e13b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NetworkTopology became:\n") AT LINE 217 with ID [31c1f002-e13b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke this.<org.apache.hadoop.net.NetworkTopologyWithNodeGroup: java.lang.String toString()>() AT LINE 217 with ID [31c1f002-e13b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) AT LINE 217 with ID [31c1f002-e13b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 217 with ID [31c1f002-e13b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String)>($stack26) AT LINE 217 with ID [31c1f002-e13b]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack16 == 0 goto exitmonitor l4 at line 278 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.balancer.Dispatcher$PendingMove: boolean markMovedIfGoodBlock(org.apache.hadoop.hdfs.server.balancer.Dispatcher$DBlock,org.apache.hadoop.fs.StorageType)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = <org.apache.hadoop.hdfs.server.balancer.Dispatcher: org.apache.commons.logging.Log LOG> AT LINE 281 with ID [dc667d9a-6d44]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decided to move ") AT LINE 281 with ID [dc667d9a-6d44]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 281 with ID [dc667d9a-6d44]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 281 with ID [dc667d9a-6d44]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 281 with ID [dc667d9a-6d44]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec: void setConf(org.apache.hadoop.conf.Configuration)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec: org.slf4j.Logger LOG> AT LINE 65 with ID [5d2173f7-0f60]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using ") AT LINE 65 with ID [5d2173f7-0f60]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke klass.<java.lang.Class: java.lang.String getName()>() AT LINE 65 with ID [5d2173f7-0f60]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 65 with ID [5d2173f7-0f60]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as random number generator.") AT LINE 65 with ID [5d2173f7-0f60]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 65 with ID [5d2173f7-0f60]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 65 with ID [5d2173f7-0f60]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void addOrUpdateReservationState(org.apache.hadoop.yarn.proto.YarnProtos$ReservationAllocationStateProto,java.lang.String,java.lang.String,org.apache.hadoop.util.curator.ZKCuratorManager$SafeTransaction,boolean)> has 25 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 1226 with ID [4d7c8c58-8cfa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating plan node: ") AT LINE 1226 with ID [4d7c8c58-8cfa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(planName) AT LINE 1226 with ID [4d7c8c58-8cfa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at: ") AT LINE 1226 with ID [4d7c8c58-8cfa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(planCreatePath) AT LINE 1226 with ID [4d7c8c58-8cfa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1226 with ID [4d7c8c58-8cfa]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack52.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack57) AT LINE 1226 with ID [4d7c8c58-8cfa]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 1234 with ID [81b85a55-34d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updating reservation: ") AT LINE 1234 with ID [81b85a55-34d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reservationIdName) AT LINE 1234 with ID [81b85a55-34d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in plan:") AT LINE 1234 with ID [81b85a55-34d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(planName) AT LINE 1234 with ID [81b85a55-34d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at: ") AT LINE 1234 with ID [81b85a55-34d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reservationPath) AT LINE 1234 with ID [81b85a55-34d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1234 with ID [81b85a55-34d6]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack41) AT LINE 1234 with ID [81b85a55-34d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 1240 with ID [86fe8bf3-ba91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing reservation: ") AT LINE 1240 with ID [86fe8bf3-ba91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reservationIdName) AT LINE 1240 with ID [86fe8bf3-ba91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in plan:") AT LINE 1240 with ID [86fe8bf3-ba91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(planName) AT LINE 1240 with ID [86fe8bf3-ba91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at: ") AT LINE 1240 with ID [86fe8bf3-ba91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reservationPath) AT LINE 1240 with ID [86fe8bf3-ba91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1240 with ID [86fe8bf3-ba91]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 1240 with ID [86fe8bf3-ba91]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if addUnavailable != 0 goto (branch) at line 350 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack21 != $stack22 goto (branch) at line 354 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = new java.util.ArrayList at line 350 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if addExpired != 0 goto $stack21 = virtualinvoke membership.<org.apache.hadoop.hdfs.server.federation.store.records.MembershipState: org.apache.hadoop.hdfs.server.federation.resolver.FederationNamenodeServiceState getState()>() at line 357 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.resolver.MembershipNamenodeResolver: java.util.List getRecentRegistrationForQuery(org.apache.hadoop.hdfs.server.federation.store.protocol.GetNamenodeRegistrationsRequest,boolean,boolean)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.federation.resolver.MembershipNamenodeResolver: org.slf4j.Logger LOG> AT LINE 364 with ID [abf31939-e940]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Selected most recent NN {} for query", iterator#6) AT LINE 364 with ID [abf31939-e940]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSClient: org.apache.hadoop.hdfs.DFSOutputStream callAppend(java.lang.String,java.util.EnumSet,org.apache.hadoop.util.Progressable,java.lang.String[])> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1341 with ID [ba3733ca-80c8]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("NameNode is on an older version, request file info with additional RPC call for file: {}", src) AT LINE 1341 with ID [ba3733ca-80c8]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= count goto return data at line 74 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.TestArrayFile: org.apache.hadoop.io.RandomDatum[] generate(int)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.io.TestArrayFile: org.slf4j.Logger LOG> AT LINE 70 with ID [168b4e67-90af]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("generating ") AT LINE 70 with ID [168b4e67-90af]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 70 with ID [168b4e67-90af]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" records in debug") AT LINE 70 with ID [168b4e67-90af]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 70 with ID [168b4e67-90af]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 70 with ID [168b4e67-90af]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.resolver.order.HashResolver: java.lang.String getFirstNamespace(java.lang.String,org.apache.hadoop.hdfs.server.federation.resolver.PathLocation)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.server.federation.resolver.order.HashResolver: org.slf4j.Logger LOG> AT LINE 88 with ID [73603b3a-a9ec]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = newarray (java.lang.Object)[3] AT LINE 88 with ID [73603b3a-a9ec]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12[0] = path AT LINE 88 with ID [73603b3a-a9ec]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12[1] = finalPath AT LINE 88 with ID [73603b3a-a9ec]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12[2] = hashedSubcluster AT LINE 88 with ID [73603b3a-a9ec]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Namespace for {} ({}) is {}", $stack12) AT LINE 88 with ID [73603b3a-a9ec]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: void addApplicationAttempt(org.apache.hadoop.yarn.api.records.ApplicationAttemptId,boolean,boolean)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.commons.logging.Log LOG> AT LINE 436 with ID [2a2bb8ef-c42a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appAttemptId) AT LINE 436 with ID [2a2bb8ef-c42a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is recovering. Skipping notifying ATTEMPT_ADDED") AT LINE 436 with ID [2a2bb8ef-c42a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 436 with ID [2a2bb8ef-c42a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 436 with ID [2a2bb8ef-c42a]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.security.NMTokenIdentifier: void write(java.io.DataOutput)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.commons.logging.Log LOG> AT LINE 96 with ID [44a1acc7-3044]
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing NMTokenIdentifier to RPC layer: ") AT LINE 96 with ID [44a1acc7-3044]
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 96 with ID [44a1acc7-3044]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 96 with ID [44a1acc7-3044]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack6) AT LINE 96 with ID [44a1acc7-3044]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.util.RolloverSignerSecretProvider: void rollSecret()> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = <org.apache.hadoop.security.authentication.util.RolloverSignerSecretProvider: org.slf4j.Logger LOG> AT LINE 122 with ID [78c7e8c6-edd6]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("rolling secret") AT LINE 122 with ID [78c7e8c6-edd6]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if scanner != null goto virtualinvoke scanner.<org.apache.hadoop.hdfs.server.datanode.VolumeScanner: void markSuspectBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock)>(block) at line 337 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack4 != 0 goto $stack5 = this.<org.apache.hadoop.hdfs.server.datanode.BlockScanner: java.util.TreeMap scanners> at line 331 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockScanner: void markSuspectBlock(java.lang.String,org.apache.hadoop.hdfs.protocol.ExtendedBlock)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.server.datanode.BlockScanner: org.slf4j.Logger LOG> AT LINE 332 with ID [72057e66-97bc]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Not scanning suspicious block {} on {}, because the block scanner is disabled.", block, storageId) AT LINE 332 with ID [72057e66-97bc]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.WriteManager: int commitBeforeRead(org.apache.hadoop.hdfs.DFSClient,org.apache.hadoop.nfs.nfs3.FileHandle,long)> has 9 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hdfs.nfs.nfs3.WriteManager: org.apache.commons.logging.Log LOG> AT LINE 223 with ID [83023dd3-d602]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No opened stream for fileId: ") AT LINE 223 with ID [83023dd3-d602]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke fileHandle.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 223 with ID [83023dd3-d602]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack32) AT LINE 223 with ID [83023dd3-d602]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" commitOffset=") AT LINE 223 with ID [83023dd3-d602]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(commitOffset) AT LINE 223 with ID [83023dd3-d602]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Return success in this case.") AT LINE 223 with ID [83023dd3-d602]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 223 with ID [83023dd3-d602]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 223 with ID [83023dd3-d602]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if multipleLinearRandomRetry != null goto $stack10 = new org.apache.hadoop.io.retry.RetryUtils$WrapperRetryPolicy at line 79 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.retry.RetryUtils: org.apache.hadoop.io.retry.RetryPolicy getDefaultRetryPolicy(org.apache.hadoop.conf.Configuration,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = <org.apache.hadoop.io.retry.RetryUtils: org.slf4j.Logger LOG> AT LINE 76 with ID [abf5124d-6a32]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipleLinearRandomRetry = ") AT LINE 76 with ID [abf5124d-6a32]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(multipleLinearRandomRetry) AT LINE 76 with ID [abf5124d-6a32]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 76 with ID [abf5124d-6a32]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 76 with ID [abf5124d-6a32]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink: void init(org.apache.commons.configuration.SubsetConfiguration)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = this.<org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink: org.slf4j.Logger LOG> AT LINE 116 with ID [9d83282b-6409]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("Initializing the GangliaSink for Ganglia metrics.") AT LINE 116 with ID [9d83282b-6409]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: void storeApplicationAttemptStateInternal(org.apache.hadoop.yarn.api.records.ApplicationAttemptId,org.apache.hadoop.yarn.server.resourcemanager.recovery.records.ApplicationAttemptStateData)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 608 with ID [0a770975-ab67]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing state for attempt ") AT LINE 608 with ID [0a770975-ab67]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(attemptId) AT LINE 608 with ID [0a770975-ab67]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ") AT LINE 608 with ID [0a770975-ab67]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 608 with ID [0a770975-ab67]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 608 with ID [0a770975-ab67]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 608 with ID [0a770975-ab67]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack66 == 0 goto (branch) at line 225 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack58 == 0 goto $stack59 = new java.lang.StringBuffer at line 224 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack53 == 0 goto $stack54 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficController: org.slf4j.Logger LOG> at line 221 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficController: boolean checkIfAlreadyBootstrapped(java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack69 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.TrafficController: org.slf4j.Logger LOG> AT LINE 226 with ID [21e8a739-2e83]
2020-08-25 12:10:06 [INFO] - 	 -> $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Matched regex: ") AT LINE 226 with ID [21e8a739-2e83]
2020-08-25 12:10:06 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(regex) AT LINE 226 with ID [21e8a739-2e83]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 226 with ID [21e8a739-2e83]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack69.<org.slf4j.Logger: void debug(java.lang.String)>($stack72) AT LINE 226 with ID [21e8a739-2e83]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ipc.DecayRpcScheduler: void addResponseTime(java.lang.String,int,int,int)> has 13 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.ipc.DecayRpcScheduler: org.slf4j.Logger LOG> AT LINE 600 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = interfaceinvoke $stack11.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 600 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack12 == 0 goto return AT LINE 600 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = <org.apache.hadoop.ipc.DecayRpcScheduler: org.slf4j.Logger LOG> AT LINE 601 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = newarray (java.lang.Object)[4] AT LINE 601 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13[0] = name AT LINE 601 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(priorityLevel) AT LINE 601 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13[1] = $stack17 AT LINE 601 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(queueTime) AT LINE 601 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13[2] = $stack19 AT LINE 601 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(processingTime) AT LINE 601 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13[3] = $stack21 AT LINE 601 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("addResponseTime for call: {}  priority: {} queueTime: {} processingTime: {} ", $stack13) AT LINE 601 with ID [660ae14c-7c49]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack16 = interfaceinvoke ask.<java.util.List: boolean isEmpty()>() at line 359 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack13 != 0 goto virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: void normalizeRequests(java.util.List)>(ask) at line 343 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if application != null goto $stack12 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() at line 332 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.hadoop.yarn.server.resourcemanager.scheduler.Allocation allocate(org.apache.hadoop.yarn.api.records.ApplicationAttemptId,java.util.List,java.util.List,java.util.List,java.util.List,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ContainerUpdates)> has 22 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.commons.logging.Log LOG> AT LINE 366 with ID [d5b50a17-e2b4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: pre-update applicationId=") AT LINE 366 with ID [d5b50a17-e2b4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationAttemptId) AT LINE 366 with ID [d5b50a17-e2b4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" application=") AT LINE 366 with ID [d5b50a17-e2b4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(application) AT LINE 366 with ID [d5b50a17-e2b4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 366 with ID [d5b50a17-e2b4]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack31) AT LINE 366 with ID [d5b50a17-e2b4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.commons.logging.Log LOG> AT LINE 374 with ID [f619918e-da91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: post-update applicationId=") AT LINE 374 with ID [f619918e-da91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationAttemptId) AT LINE 374 with ID [f619918e-da91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" application=") AT LINE 374 with ID [f619918e-da91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(application) AT LINE 374 with ID [f619918e-da91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 374 with ID [f619918e-da91]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack39) AT LINE 374 with ID [f619918e-da91]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.commons.logging.Log LOG> AT LINE 379 with ID [5a8d226c-328e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: applicationId=") AT LINE 379 with ID [5a8d226c-328e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(applicationAttemptId) AT LINE 379 with ID [5a8d226c-328e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #ask=") AT LINE 379 with ID [5a8d226c-328e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = interfaceinvoke ask.<java.util.List: int size()>() AT LINE 379 with ID [5a8d226c-328e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack45) AT LINE 379 with ID [5a8d226c-328e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 379 with ID [5a8d226c-328e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack41.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack47) AT LINE 379 with ID [5a8d226c-328e]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 162 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.nfs.NfsExports: void <init>(int,long,java.lang.String)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> AT LINE 164 with ID [d20459c0-c008]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing match string \'") AT LINE 164 with ID [d20459c0-c008]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(mStr) AT LINE 164 with ID [d20459c0-c008]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 164 with ID [d20459c0-c008]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 164 with ID [d20459c0-c008]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack28) AT LINE 164 with ID [d20459c0-c008]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor: void init()> has 12 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = <org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor: org.slf4j.Logger LOG> AT LINE 309 with ID [ff9fac60-72c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource handler chain enabled = ") AT LINE 309 with ID [ff9fac60-72c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor: org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.ResourceHandler resourceHandlerChain> AT LINE 309 with ID [ff9fac60-72c3]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack22 == null goto $stack26 = 0 AT LINE 309 with ID [ff9fac60-72c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = 1 AT LINE 312 with ID [ff9fac60-72c3]
2020-08-25 12:10:06 [INFO] - 	 -> goto [?= $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack26)] AT LINE 312 with ID [ff9fac60-72c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = 0 AT LINE 312 with ID [ff9fac60-72c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack26) AT LINE 309 with ID [ff9fac60-72c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 309 with ID [ff9fac60-72c3]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack24) AT LINE 309 with ID [ff9fac60-72c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor: org.slf4j.Logger LOG> AT LINE 313 with ID [f95e3f1f-dfbc]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>("Bootstrapping resource handler chain") AT LINE 313 with ID [f95e3f1f-dfbc]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack6 == 0 goto return null at line 47 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack15 == 0 goto (branch) at line 56 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack12 == 0 goto (branch) at line 52 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if service != null goto i$ = interfaceinvoke tokens.<java.util.Collection: java.util.Iterator iterator()>() at line 44 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.security.ContainerTokenSelector: org.apache.hadoop.security.token.Token selectToken(org.apache.hadoop.io.Text,java.util.Collection)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.security.ContainerTokenSelector: org.apache.commons.logging.Log LOG> AT LINE 49 with ID [ed02284d-8df0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking for service: ") AT LINE 49 with ID [ed02284d-8df0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(service) AT LINE 49 with ID [ed02284d-8df0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Current token is ") AT LINE 49 with ID [ed02284d-8df0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(token) AT LINE 49 with ID [ed02284d-8df0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 49 with ID [ed02284d-8df0]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 49 with ID [ed02284d-8df0]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if numOfReplicas <= 0 goto return firstChosen at line 809 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if chosenNode == null goto (branch) at line 751 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i$#13 == null goto (branch) at line 784 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack51 == 0 goto (branch) at line 770 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if chosenNode != null goto $stack41 = interfaceinvoke excludedNodes.<java.util.Set: boolean add(java.lang.Object)>(chosenNode) at line 760 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo chooseRandom(int,java.lang.String,java.util.Set,long,int,java.util.List,boolean,java.util.EnumMap)> has 4 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke includeType#42.<java.lang.String: int length()>() AT LINE 816 with ID [de1f6eba-3e67]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack35 <= 1 goto includeType#42 = "" AT LINE 816 with ID [de1f6eba-3e67]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: org.slf4j.Logger LOG> AT LINE 819 with ID [de1f6eba-3e67]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void debug(java.lang.String)>(includeType#42) AT LINE 819 with ID [de1f6eba-3e67]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack84 != 0 goto $stack86 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> at line 314 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack49 == 0 goto $stack50 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> at line 307 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack80 == 0 goto (branch) at line 311 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack130 != 0 goto (branch) at line 294 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack42 == 0 goto $stack43 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> at line 298 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack40 == 2 goto newRemoveIndex#2 = interfaceinvoke removedIndex.<java.util.List: java.util.Iterator iterator()>() at line 292 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: void blockReport_02()> has 18 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack110 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 303 with ID [6b139772-03f1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack111 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number of blocks allocated ") AT LINE 303 with ID [6b139772-03f1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack112 = interfaceinvoke lBlocks.<java.util.List: int size()>() AT LINE 303 with ID [6b139772-03f1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack113 = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack112) AT LINE 303 with ID [6b139772-03f1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack114 = virtualinvoke $stack113.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 303 with ID [6b139772-03f1]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack110.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack114) AT LINE 303 with ID [6b139772-03f1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack99 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 309 with ID [7cda73a8-abc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack100 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing the block ") AT LINE 309 with ID [7cda73a8-abc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack101 = virtualinvoke b.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: java.lang.String getBlockName()>() AT LINE 309 with ID [7cda73a8-abc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack101) AT LINE 309 with ID [7cda73a8-abc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack103 = virtualinvoke $stack102.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 309 with ID [7cda73a8-abc8]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack99.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack103) AT LINE 309 with ID [7cda73a8-abc8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack86 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 317 with ID [277b2d48-5fd9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack87 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleted file ") AT LINE 317 with ID [277b2d48-5fd9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack88 = virtualinvoke f.<java.io.File: java.lang.String toString()>() AT LINE 317 with ID [277b2d48-5fd9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack89 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack88) AT LINE 317 with ID [277b2d48-5fd9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 317 with ID [277b2d48-5fd9]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack86.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack90) AT LINE 317 with ID [277b2d48-5fd9]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if maxReduceThreads >= 1 goto $stack5 = this.<org.apache.hadoop.mapred.LocalJobRunner$Job: int numReduceTasks> at line 445 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.LocalJobRunner$Job: java.util.concurrent.ExecutorService createReduceExecutor()> has 13 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = <org.apache.hadoop.mapred.LocalJobRunner: org.apache.commons.logging.Log LOG> AT LINE 452 with ID [4a1cd858-da02]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Starting reduce thread pool executor.") AT LINE 452 with ID [4a1cd858-da02]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.mapred.LocalJobRunner: org.apache.commons.logging.Log LOG> AT LINE 453 with ID [f007e2e2-c0fd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Max local threads: ") AT LINE 453 with ID [f007e2e2-c0fd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(maxReduceThreads) AT LINE 453 with ID [f007e2e2-c0fd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 453 with ID [f007e2e2-c0fd]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 453 with ID [f007e2e2-c0fd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = <org.apache.hadoop.mapred.LocalJobRunner: org.apache.commons.logging.Log LOG> AT LINE 454 with ID [efbd599d-9725]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reduce tasks to process: ") AT LINE 454 with ID [efbd599d-9725]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = this.<org.apache.hadoop.mapred.LocalJobRunner$Job: int numReduceTasks> AT LINE 454 with ID [efbd599d-9725]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack17) AT LINE 454 with ID [efbd599d-9725]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 454 with ID [efbd599d-9725]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 454 with ID [efbd599d-9725]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockScanner$Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.server.datanode.BlockScanner: org.slf4j.Logger LOG> AT LINE 372 with ID [454f96ee-4b92]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Returned Servlet info {}", resp) AT LINE 372 with ID [454f96ee-4b92]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void checkRemoveParentZnode(java.lang.String,int)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 803 with ID [1c8dd18c-6193]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No leaf znode exists. Removing parent node ") AT LINE 803 with ID [1c8dd18c-6193]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(parentZnode) AT LINE 803 with ID [1c8dd18c-6193]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 803 with ID [1c8dd18c-6193]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 803 with ID [1c8dd18c-6193]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = staticinvoke <org.apache.hadoop.ipc.Client$ConnectionId: org.apache.hadoop.conf.Configuration access$600(org.apache.hadoop.ipc.Client$ConnectionId)>(remoteId) at line 449 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Client$Connection: void <init>(org.apache.hadoop.ipc.Client,org.apache.hadoop.ipc.Client$ConnectionId,int)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack61 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 488 with ID [cc9a3394-49ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The ping interval is ") AT LINE 488 with ID [cc9a3394-49ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack63 = this.<org.apache.hadoop.ipc.Client$Connection: int pingInterval> AT LINE 488 with ID [cc9a3394-49ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack64 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack63) AT LINE 488 with ID [cc9a3394-49ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms.") AT LINE 488 with ID [cc9a3394-49ee]
2020-08-25 12:10:06 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 488 with ID [cc9a3394-49ee]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack61.<org.slf4j.Logger: void debug(java.lang.String)>($stack66) AT LINE 488 with ID [cc9a3394-49ee]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = <org.apache.hadoop.security.LdapGroupsMapping: java.lang.Boolean LDAP_USE_SSL_DEFAULT> at line 607 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.LdapGroupsMapping: void setConf(org.apache.hadoop.conf.Configuration)> has 12 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack107 = <org.apache.hadoop.security.LdapGroupsMapping: org.slf4j.Logger LOG> AT LINE 627 with ID [02f01dea-9bda]
2020-08-25 12:10:06 [INFO] - 	 -> $stack108 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Usersearch baseDN: ") AT LINE 627 with ID [02f01dea-9bda]
2020-08-25 12:10:06 [INFO] - 	 -> $stack109 = this.<org.apache.hadoop.security.LdapGroupsMapping: java.lang.String userbaseDN> AT LINE 627 with ID [02f01dea-9bda]
2020-08-25 12:10:06 [INFO] - 	 -> $stack110 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack109) AT LINE 627 with ID [02f01dea-9bda]
2020-08-25 12:10:06 [INFO] - 	 -> $stack111 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 627 with ID [02f01dea-9bda]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack107.<org.slf4j.Logger: void debug(java.lang.String)>($stack111) AT LINE 627 with ID [02f01dea-9bda]
2020-08-25 12:10:06 [INFO] - 	 -> $stack91 = <org.apache.hadoop.security.LdapGroupsMapping: org.slf4j.Logger LOG> AT LINE 633 with ID [f5522957-f69a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack92 = virtualinvoke $stack90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Groupsearch baseDN: ") AT LINE 633 with ID [f5522957-f69a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack93 = this.<org.apache.hadoop.security.LdapGroupsMapping: java.lang.String userbaseDN> AT LINE 633 with ID [f5522957-f69a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack94 = virtualinvoke $stack92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack93) AT LINE 633 with ID [f5522957-f69a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack95 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 633 with ID [f5522957-f69a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack91.<org.slf4j.Logger: void debug(java.lang.String)>($stack95) AT LINE 633 with ID [f5522957-f69a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack5 == 0 goto $stack6 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> at line 345 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.registry.server.services.RegistryAdminService: void verifyRealmValidity()> has 5 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> AT LINE 348 with ID [a615ee1f-4ffe]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 348 with ID [a615ee1f-4ffe]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack7 == 0 goto return AT LINE 348 with ID [a615ee1f-4ffe]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger LOG> AT LINE 349 with ID [a615ee1f-4ffe]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Started Registry operations in realm {}", realm) AT LINE 349 with ID [a615ee1f-4ffe]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.federation.store.impl.SQLFederationStateStore: org.apache.hadoop.yarn.server.federation.store.records.GetApplicationHomeSubClusterResponse getApplicationHomeSubCluster(org.apache.hadoop.yarn.server.federation.store.records.GetApplicationHomeSubClusterRequest)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = <org.apache.hadoop.yarn.server.federation.store.impl.SQLFederationStateStore: org.slf4j.Logger LOG> AT LINE 704 with ID [50ae6e12-f609]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got the information about the specified application  ") AT LINE 704 with ID [50ae6e12-f609]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke request.<org.apache.hadoop.yarn.server.federation.store.records.GetApplicationHomeSubClusterRequest: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 704 with ID [50ae6e12-f609]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack39) AT LINE 704 with ID [50ae6e12-f609]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". The AM is running in ") AT LINE 704 with ID [50ae6e12-f609]
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(homeRM) AT LINE 704 with ID [50ae6e12-f609]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 704 with ID [50ae6e12-f609]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack37.<org.slf4j.Logger: void debug(java.lang.String)>($stack43) AT LINE 704 with ID [50ae6e12-f609]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack36 == 0 goto (branch) at line 208 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack31 == 0 goto record = specialinvoke this.<org.apache.hadoop.hdfs.server.federation.store.driver.impl.StateStoreFileBaseImpl: org.apache.hadoop.hdfs.server.federation.store.records.BaseRecord getRecord(java.lang.String,java.lang.Class)>(pathRecord, clazz) at line 206 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack18 == 0 goto (branch) at line 204 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.store.driver.impl.StateStoreFileBaseImpl: org.apache.hadoop.hdfs.server.federation.store.records.QueryResult get(java.lang.Class)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hdfs.server.federation.store.driver.impl.StateStoreFileBaseImpl: org.slf4j.Logger LOG> AT LINE 207 with ID [01dc6942-767c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("There is a temporary file {} in {}", child, path) AT LINE 207 with ID [01dc6942-767c]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack10 = (org.apache.hadoop.crypto.key.KeyProviderDelegationTokenExtension$DelegationTokenExtension) keyProvider at line 182 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.kms.KMSClientProvider$KMSTokenRenewer: long renew(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.crypto.key.kms.KMSClientProvider$KMSTokenRenewer: org.slf4j.Logger LOG> AT LINE 178 with ID [1c2d3f3f-e7f3]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Renewing delegation token {}", token) AT LINE 178 with ID [1c2d3f3f-e7f3]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.balancer.Dispatcher$Source: void dispatchBlocks(long)> has 20 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack70 = <org.apache.hadoop.hdfs.server.balancer.Dispatcher: org.apache.commons.logging.Log LOG> AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack71 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" blocksToReceive=") AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack73 = this.<org.apache.hadoop.hdfs.server.balancer.Dispatcher$Source: long blocksToReceive> AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack74 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack73) AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", scheduledSize=") AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack76 = virtualinvoke this.<org.apache.hadoop.hdfs.server.balancer.Dispatcher$Source: long getScheduledSize()>() AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack76) AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", srcBlocks#=") AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack79 = this.<org.apache.hadoop.hdfs.server.balancer.Dispatcher$Source: java.util.List srcBlocks> AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack80 = interfaceinvoke $stack79.<java.util.List: int size()>() AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack80) AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack70.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack82) AT LINE 833 with ID [2a8c3725-1080]
2020-08-25 12:10:06 [INFO] - 	 -> $stack61 = <org.apache.hadoop.hdfs.server.balancer.Dispatcher: org.apache.commons.logging.Log LOG> AT LINE 854 with ID [dfb3ee88-48a7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sleeping ") AT LINE 854 with ID [dfb3ee88-48a7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(delay) AT LINE 854 with ID [dfb3ee88-48a7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  msec.") AT LINE 854 with ID [dfb3ee88-48a7]
2020-08-25 12:10:06 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 854 with ID [dfb3ee88-48a7]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack61.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack65) AT LINE 854 with ID [dfb3ee88-48a7]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack37 != 0 goto i = i + 1 at line 105 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack27 != 0 goto i = i + -1 at line 111 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i < 0 goto $stack14 = <org.apache.hadoop.io.TestArrayFile: org.slf4j.Logger LOG> at line 109 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= $stack12 goto $stack13 = lengthof data at line 103 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.TestArrayFile: void readTest(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.io.RandomDatum[],java.lang.String,org.apache.hadoop.conf.Configuration)> has 14 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = <org.apache.hadoop.io.TestArrayFile: org.slf4j.Logger LOG> AT LINE 99 with ID [fed774e5-2417]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reading ") AT LINE 99 with ID [fed774e5-2417]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = lengthof data AT LINE 99 with ID [fed774e5-2417]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack48) AT LINE 99 with ID [fed774e5-2417]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" debug") AT LINE 99 with ID [fed774e5-2417]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 99 with ID [fed774e5-2417]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 99 with ID [fed774e5-2417]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = <org.apache.hadoop.io.TestArrayFile: org.slf4j.Logger LOG> AT LINE 116 with ID [8c6ead5e-6d49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("done reading ") AT LINE 116 with ID [8c6ead5e-6d49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = lengthof data AT LINE 116 with ID [8c6ead5e-6d49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack19) AT LINE 116 with ID [8c6ead5e-6d49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" debug") AT LINE 116 with ID [8c6ead5e-6d49]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 116 with ID [8c6ead5e-6d49]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 116 with ID [8c6ead5e-6d49]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSClient: boolean primitiveMkdir(java.lang.String,org.apache.hadoop.fs.permission.FsPermission,boolean)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 2470 with ID [cb3aa84e-68a9]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: masked={}", src, absPermission) AT LINE 2470 with ID [cb3aa84e-68a9]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem$Cache CACHE> at line 465 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack24 == null goto $stack7 = newarray (java.lang.Object)[1] at line 465 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if authority != null goto (branch) at line 461 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(java.net.URI,org.apache.hadoop.conf.Configuration)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.fs.FileSystem: org.slf4j.Logger LOGGER> AT LINE 466 with ID [3c52b1bc-1fce]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Bypassing cache to create filesystem {}", uri) AT LINE 466 with ID [3c52b1bc-1fce]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.webapp.Controller: void renderText(java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack2 = <org.apache.hadoop.yarn.webapp.Controller: org.slf4j.Logger LOG> AT LINE 241 with ID [18c49d1f-e49d]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{}: {}", "text/plain; charset=UTF-8", s) AT LINE 241 with ID [18c49d1f-e49d]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.client.KerberosAuthenticator: void doSpnegoSequence(org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token)> has 7 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.security.authentication.client.KerberosAuthenticator: org.slf4j.Logger LOG> AT LINE 274 with ID [960b02b3-3f58]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>("No subject in context, logging in") AT LINE 274 with ID [960b02b3-3f58]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = <org.apache.hadoop.security.authentication.client.KerberosAuthenticator: org.slf4j.Logger LOG> AT LINE 282 with ID [f039a644-5491]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using subject: ") AT LINE 282 with ID [f039a644-5491]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(subject) AT LINE 282 with ID [f039a644-5491]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 282 with ID [f039a644-5491]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 282 with ID [f039a644-5491]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= count goto virtualinvoke reader.<org.apache.hadoop.io.SequenceFile$Reader: void close()>() at line 234 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack34 != 0 goto (branch) at line 256 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack33 != 0 goto $stack34 = virtualinvoke v.<org.apache.hadoop.io.RandomDatum: boolean equals(java.lang.Object)>(value) at line 254 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.TestSequenceFile: void readTest(org.apache.hadoop.fs.FileSystem,int,int,org.apache.hadoop.fs.Path)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = <org.apache.hadoop.io.TestSequenceFile: org.slf4j.Logger LOG> AT LINE 225 with ID [8dc8abc1-3624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reading ") AT LINE 225 with ID [8dc8abc1-3624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 225 with ID [8dc8abc1-3624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" records") AT LINE 225 with ID [8dc8abc1-3624]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 225 with ID [8dc8abc1-3624]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 225 with ID [8dc8abc1-3624]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack16 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> at line 321 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = node.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData: long leaseId> at line 316 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack12 != 0 goto $stack13 = specialinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: boolean pruneIfExpired(long,org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData)>(monotonicNowMs, node) at line 310 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if node != null goto $stack11 = node.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager$NodeData: long leaseId> at line 305 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack7 != 0 goto $stack8 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: java.util.HashMap nodes> at line 299 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: boolean checkLease(org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,long,long)> has 10 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> AT LINE 300 with ID [001e5b36-2af0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 300 with ID [001e5b36-2af0]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Datanode {} is using BR lease id 0x0 to bypass rate-limiting.", $stack47) AT LINE 300 with ID [001e5b36-2af0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> AT LINE 327 with ID [d88c0dbb-e3cf]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = interfaceinvoke $stack16.<org.slf4j.Logger: boolean isTraceEnabled()>() AT LINE 327 with ID [d88c0dbb-e3cf]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack17 == 0 goto return 1 AT LINE 327 with ID [d88c0dbb-e3cf]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockReportLeaseManager: org.slf4j.Logger LOG> AT LINE 328 with ID [d88c0dbb-e3cf]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(id) AT LINE 328 with ID [d88c0dbb-e3cf]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke dn.<org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor: java.lang.String getDatanodeUuid()>() AT LINE 328 with ID [d88c0dbb-e3cf]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("BR lease 0x{} is valid for DN {}.", $stack20, $stack21) AT LINE 328 with ID [d88c0dbb-e3cf]
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.DelegatingLinuxContainerRuntime: boolean useWhitelistEnv(java.util.Map)>
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.service.AbstractService: void serviceInit(org.apache.hadoop.conf.Configuration)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = <org.apache.hadoop.service.AbstractService: org.slf4j.Logger LOG> AT LINE 321 with ID [3e3d992b-2270]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("Config has been overridden during init") AT LINE 321 with ID [3e3d992b-2270]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if result != 0 goto $stack44 = new org.apache.hadoop.nfs.nfs3.response.REMOVE3Response at line 1219 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack39 == 0 goto result = virtualinvoke dfsClient.<org.apache.hadoop.hdfs.DFSClient: boolean delete(java.lang.String,boolean)>(fileIdPath, 0) at line 1211 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if fstat != null goto $stack39 = virtualinvoke fstat.<org.apache.hadoop.hdfs.protocol.HdfsFileStatus: boolean isDir()>() at line 1208 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack32 != 0 goto $stack33 = new java.lang.StringBuilder at line 1202 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if preOpDirAttr != null goto $stack29 = new org.apache.hadoop.nfs.nfs3.response.WccData at line 1195 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.REMOVE3Request: org.apache.hadoop.nfs.nfs3.request.REMOVE3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 1171 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.REMOVE3Response remove(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 10 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack57 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 1186 with ID [d234d205-3f25]
2020-08-25 12:10:06 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS REMOVE dir fileId: ") AT LINE 1186 with ID [d234d205-3f25]
2020-08-25 12:10:06 [INFO] - 	 -> $stack59 = virtualinvoke e#2.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 1186 with ID [d234d205-3f25]
2020-08-25 12:10:06 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack59) AT LINE 1186 with ID [d234d205-3f25]
2020-08-25 12:10:06 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fileName: ") AT LINE 1186 with ID [d234d205-3f25]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) AT LINE 1186 with ID [d234d205-3f25]
2020-08-25 12:10:06 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 1186 with ID [d234d205-3f25]
2020-08-25 12:10:06 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 1186 with ID [d234d205-3f25]
2020-08-25 12:10:06 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1186 with ID [d234d205-3f25]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack57.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack65) AT LINE 1186 with ID [d234d205-3f25]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if codec == null goto return null at line 279 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.file.tfile.Compression$Algorithm: org.apache.hadoop.io.compress.Compressor getCompressor()> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.io.file.tfile.Compression: org.slf4j.Logger LOG> AT LINE 288 with ID [bd4f77f6-7204]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a compressor: ") AT LINE 288 with ID [bd4f77f6-7204]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke compressor.<java.lang.Object: int hashCode()>() AT LINE 288 with ID [bd4f77f6-7204]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack12) AT LINE 288 with ID [bd4f77f6-7204]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 288 with ID [bd4f77f6-7204]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 288 with ID [bd4f77f6-7204]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = specialinvoke this.<org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService: byte[] buildTokenData(org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier,java.lang.Long)>(tokenId, renewDate) at line 133 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService: void storeToken(org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier,java.lang.Long)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = <org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService: org.apache.commons.logging.Log LOG> AT LINE 129 with ID [768d87cf-c581]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing token ") AT LINE 129 with ID [768d87cf-c581]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke tokenId.<org.apache.hadoop.mapreduce.v2.api.MRDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 129 with ID [768d87cf-c581]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack18) AT LINE 129 with ID [768d87cf-c581]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 129 with ID [768d87cf-c581]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 129 with ID [768d87cf-c581]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if clientRMAddress != null goto $stack40 = this.<org.apache.hadoop.yarn.server.federation.store.impl.SQLFederationStateStore: java.util.Calendar utcCalendar> at line 449 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.federation.store.impl.SQLFederationStateStore: org.apache.hadoop.yarn.server.federation.store.records.GetSubClusterInfoResponse getSubCluster(org.apache.hadoop.yarn.server.federation.store.records.GetSubClusterInfoRequest)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack53 = <org.apache.hadoop.yarn.server.federation.store.impl.SQLFederationStateStore: org.slf4j.Logger LOG> AT LINE 440 with ID [29f628b7-1f7b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got the information about the specified SubCluster ") AT LINE 440 with ID [29f628b7-1f7b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack55 = virtualinvoke subClusterInfo.<org.apache.hadoop.yarn.server.federation.store.records.SubClusterInfo: java.lang.String toString()>() AT LINE 440 with ID [29f628b7-1f7b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack55) AT LINE 440 with ID [29f628b7-1f7b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 440 with ID [29f628b7-1f7b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack53.<org.slf4j.Logger: void debug(java.lang.String)>($stack57) AT LINE 440 with ID [29f628b7-1f7b]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.api.records.Resource getUserAMResourceLimitPerPartition(java.lang.String,java.lang.String)> has 12 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack69 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 717 with ID [a31b2741-85f5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Effective user AM limit for \"") AT LINE 717 with ID [a31b2741-85f5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(userName) AT LINE 717 with ID [a31b2741-85f5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\":") AT LINE 717 with ID [a31b2741-85f5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(preWeighteduserAMLimit) AT LINE 717 with ID [a31b2741-85f5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ") AT LINE 717 with ID [a31b2741-85f5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Effective weighted user AM limit: ") AT LINE 717 with ID [a31b2741-85f5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(userAMLimit) AT LINE 717 with ID [a31b2741-85f5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". User weight: ") AT LINE 717 with ID [a31b2741-85f5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(userWeight) AT LINE 717 with ID [a31b2741-85f5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 717 with ID [a31b2741-85f5]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack69.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack79) AT LINE 717 with ID [a31b2741-85f5]
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.blockmanagement.SlowPeerTracker: java.lang.String getJson()>
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if attrs != null goto fsProperty = 24 at line 1974 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.FSINFO3Request: org.apache.hadoop.nfs.nfs3.request.FSINFO3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 1942 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack15 != 0 goto $stack16 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache clientCache> at line 1936 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.FSINFO3Response fsinfo(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 1957 with ID [9d92cd1e-b008]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS FSINFO fileId: ") AT LINE 1957 with ID [9d92cd1e-b008]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke e#2.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 1957 with ID [9d92cd1e-b008]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack48) AT LINE 1957 with ID [9d92cd1e-b008]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 1957 with ID [9d92cd1e-b008]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 1957 with ID [9d92cd1e-b008]
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1957 with ID [9d92cd1e-b008]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack46.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack52) AT LINE 1957 with ID [9d92cd1e-b008]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.timelineservice.NMTimelinePublisher: void publishLocalizationEvent(org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.event.LocalizationEvent)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.server.nodemanager.timelineservice.NMTimelinePublisher: org.apache.commons.logging.Log LOG> AT LINE 366 with ID [587bfd5a-45da]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke event.<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.event.LocalizationEvent: java.lang.Enum getType()>() AT LINE 366 with ID [587bfd5a-45da]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack13) AT LINE 366 with ID [587bfd5a-45da]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a desired LocalizationEvent which needs to be published") AT LINE 366 with ID [587bfd5a-45da]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by NMTimelinePublisher") AT LINE 366 with ID [587bfd5a-45da]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 366 with ID [587bfd5a-45da]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack17) AT LINE 366 with ID [587bfd5a-45da]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack10 == 0 goto (branch) at line 735 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack7 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> at line 733 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: void disableBlockPoolId(java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 736 with ID [3ab945ca-3770]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: disabling scanning on block pool {}", this, bpid) AT LINE 736 with ID [3ab945ca-3770]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack62 == 0 goto $stack64 = <org.apache.hadoop.mapred.TestCombineTextInputFormat: org.apache.commons.logging.Log LOG> at line 112 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= 3 goto return at line 92 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TestCombineTextInputFormat: void testFormat()> has 10 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack56 = <org.apache.hadoop.mapred.TestCombineTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 107 with ID [b81f8a28-ddc5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("split= ") AT LINE 107 with ID [b81f8a28-ddc5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(split) AT LINE 107 with ID [b81f8a28-ddc5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 107 with ID [b81f8a28-ddc5]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack56.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack59) AT LINE 107 with ID [b81f8a28-ddc5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack79 = <org.apache.hadoop.mapred.TestCombineTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 114 with ID [6c0e3805-b511]
2020-08-25 12:10:06 [INFO] - 	 -> $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read ") AT LINE 114 with ID [6c0e3805-b511]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v) AT LINE 114 with ID [6c0e3805-b511]
2020-08-25 12:10:06 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 114 with ID [6c0e3805-b511]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack79.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack82) AT LINE 114 with ID [6c0e3805-b511]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack31 == 0 goto $stack32 = virtualinvoke dsResp.<org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateResponse: org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse getAllocateResponse()>() at line 251 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.scheduler.DistributedScheduler: org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateResponse allocateForDistributedScheduling(org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateRequest)> has 5 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.nodemanager.scheduler.DistributedScheduler: org.slf4j.Logger LOG> AT LINE 240 with ID [d78cdd7a-d4ff]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = interfaceinvoke $stack23.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 240 with ID [d78cdd7a-d4ff]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack24 == 0 goto $stack25 = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.scheduler.DistributedScheduler: org.apache.hadoop.yarn.server.nodemanager.amrmproxy.RequestInterceptor getNextInterceptor()>() AT LINE 240 with ID [d78cdd7a-d4ff]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = <org.apache.hadoop.yarn.server.nodemanager.scheduler.DistributedScheduler: org.slf4j.Logger LOG> AT LINE 241 with ID [d78cdd7a-d4ff]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack38.<org.slf4j.Logger: void debug(java.lang.String)>("Forwarding allocate request to theDistributed Scheduler Service on YARN RM") AT LINE 241 with ID [d78cdd7a-d4ff]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.util.TestMetricsCache: void testGet()> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = <org.apache.hadoop.metrics2.util.TestMetricsCache: org.slf4j.Logger LOG> AT LINE 88 with ID [e4405120-7284]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tags=") AT LINE 88 with ID [e4405120-7284]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = interfaceinvoke mr.<org.apache.hadoop.metrics2.MetricsRecord: java.util.Collection tags()>() AT LINE 88 with ID [e4405120-7284]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31) AT LINE 88 with ID [e4405120-7284]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cr=") AT LINE 88 with ID [e4405120-7284]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(cr) AT LINE 88 with ID [e4405120-7284]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 88 with ID [e4405120-7284]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String)>($stack35) AT LINE 88 with ID [e4405120-7284]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.ShuffleHandler$Shuffle$1: org.apache.hadoop.mapred.ShuffleHandler$AttemptPathInfo load(org.apache.hadoop.mapred.ShuffleHandler$AttemptPathIdentifier)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = staticinvoke <org.apache.hadoop.mapred.ShuffleHandler: org.apache.commons.logging.Log access$000()>() AT LINE 884 with ID [579c4fb1-ebb9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded : ") AT LINE 884 with ID [579c4fb1-ebb9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(key) AT LINE 884 with ID [579c4fb1-ebb9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" via loader") AT LINE 884 with ID [579c4fb1-ebb9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 884 with ID [579c4fb1-ebb9]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack36.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack41) AT LINE 884 with ID [579c4fb1-ebb9]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = newarray (java.io.Closeable)[1] at line 291 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if volume != null goto volumeReference = interfaceinvoke volume.<org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi: org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeReference obtainReference()>() at line 276 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.checker.DatasetVolumeChecker: boolean checkVolume(org.apache.hadoop.hdfs.server.datanode.fsdataset.FsVolumeSpi,org.apache.hadoop.hdfs.server.datanode.checker.DatasetVolumeChecker$Callback)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.server.datanode.checker.DatasetVolumeChecker: org.slf4j.Logger LOG> AT LINE 277 with ID [f6cde88c-9f73]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>("Cannot schedule check on null volume") AT LINE 277 with ID [f6cde88c-9f73]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.JHSDelegationTokenSecretManager: void storeNewMasterKey(org.apache.hadoop.security.token.delegation.DelegationKey)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.mapreduce.v2.hs.JHSDelegationTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 78 with ID [00adf1ca-6b29]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing master key ") AT LINE 78 with ID [00adf1ca-6b29]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke key.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 78 with ID [00adf1ca-6b29]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack9) AT LINE 78 with ID [00adf1ca-6b29]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 78 with ID [00adf1ca-6b29]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 78 with ID [00adf1ca-6b29]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = new org.apache.hadoop.yarn.exceptions.YarnException at line 168 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor: org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateResponse allocateForDistributedScheduling(org.apache.hadoop.yarn.server.api.protocolrecords.DistributedSchedulingAllocateRequest)> has 5 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor: org.slf4j.Logger LOG> AT LINE 164 with ID [c9309dab-1f63]
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = interfaceinvoke $stack3.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 164 with ID [c9309dab-1f63]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack4 == 0 goto $stack5 = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor: org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyApplicationContext getApplicationContext()>() AT LINE 164 with ID [c9309dab-1f63]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor: org.slf4j.Logger LOG> AT LINE 165 with ID [c9309dab-1f63]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>("Forwarding allocateForDistributedScheduling requestto the real YARN RM") AT LINE 165 with ID [c9309dab-1f63]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack129 == 0 goto $stack131 = <org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: org.slf4j.Logger LOG> at line 295 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if pidFile == null goto $stack105 = <org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: org.slf4j.Logger LOG> at line 265 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack60 == 0 goto virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: void createContainerLogDirs(java.lang.String,java.lang.String,java.util.List,java.lang.String)>(appIdStr, containerIdStr, logDirs, userName) at line 206 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: int launchContainer(org.apache.hadoop.yarn.server.nodemanager.executor.ContainerStartContext)> has 14 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack182 = <org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: org.slf4j.Logger LOG> AT LINE 187 with ID [9a01891d-99e4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack183 = virtualinvoke $stack181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("containerImageName from launchContext: ") AT LINE 187 with ID [9a01891d-99e4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack184 = virtualinvoke $stack183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerImageName) AT LINE 187 with ID [9a01891d-99e4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack185 = virtualinvoke $stack184.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 187 with ID [9a01891d-99e4]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack182.<org.slf4j.Logger: void debug(java.lang.String)>($stack185) AT LINE 187 with ID [9a01891d-99e4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack141 = <org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: org.slf4j.Logger LOG> AT LINE 286 with ID [91eb5321-526e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack142 = virtualinvoke $stack140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("launchContainer: ") AT LINE 286 with ID [91eb5321-526e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack143 = virtualinvoke $stack142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(commandStr) AT LINE 286 with ID [91eb5321-526e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack144 = virtualinvoke $stack143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 286 with ID [91eb5321-526e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack145 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(" ") AT LINE 286 with ID [91eb5321-526e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack146 = virtualinvoke $stack145.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object[])>(command) AT LINE 286 with ID [91eb5321-526e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack147 = virtualinvoke $stack144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack146) AT LINE 286 with ID [91eb5321-526e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack148 = virtualinvoke $stack147.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 286 with ID [91eb5321-526e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack141.<org.slf4j.Logger: void debug(java.lang.String)>($stack148) AT LINE 286 with ID [91eb5321-526e]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack72 == 0 goto (branch) at line 115 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.FileDeletionTask: void run()> has 30 units and 6 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.FileDeletionTask: org.slf4j.Logger LOG> AT LINE 98 with ID [38ae4db0-c194]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 98 with ID [38ae4db0-c194]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack7 == 0 goto msg#2 = 0 AT LINE 98 with ID [38ae4db0-c194]
2020-08-25 12:10:06 [INFO] - 	 -> $stack89 = newarray (java.lang.Object)[1] AT LINE 99 with ID [38ae4db0-c194]
2020-08-25 12:10:06 [INFO] - 	 -> $stack92 = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.FileDeletionTask: java.lang.String toString()>() AT LINE 99 with ID [38ae4db0-c194]
2020-08-25 12:10:06 [INFO] - 	 -> $stack89[0] = $stack92 AT LINE 99 with ID [38ae4db0-c194]
2020-08-25 12:10:06 [INFO] - 	 -> msg = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Running DeletionTask : %s", $stack89) AT LINE 99 with ID [38ae4db0-c194]
2020-08-25 12:10:06 [INFO] - 	 -> $stack94 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.FileDeletionTask: org.slf4j.Logger LOG> AT LINE 100 with ID [38ae4db0-c194]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack94.<org.slf4j.Logger: void debug(java.lang.String)>(msg) AT LINE 100 with ID [38ae4db0-c194]
2020-08-25 12:10:06 [INFO] - 	 -> $stack61 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.FileDeletionTask: org.slf4j.Logger LOG> AT LINE 106 with ID [949f10f6-cd07]
2020-08-25 12:10:06 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NM deleting absolute path : ") AT LINE 106 with ID [949f10f6-cd07]
2020-08-25 12:10:06 [INFO] - 	 -> $stack63 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.FileDeletionTask: org.apache.hadoop.fs.Path subDir> AT LINE 106 with ID [949f10f6-cd07]
2020-08-25 12:10:06 [INFO] - 	 -> $stack64 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack63) AT LINE 106 with ID [949f10f6-cd07]
2020-08-25 12:10:06 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 106 with ID [949f10f6-cd07]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack61.<org.slf4j.Logger: void debug(java.lang.String)>($stack65) AT LINE 106 with ID [949f10f6-cd07]
2020-08-25 12:10:06 [INFO] - 	 -> $stack83 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.FileDeletionTask: org.slf4j.Logger LOG> AT LINE 118 with ID [321f1e3d-663b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack84 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NM deleting path : ") AT LINE 118 with ID [321f1e3d-663b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack85 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(del) AT LINE 118 with ID [321f1e3d-663b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 118 with ID [321f1e3d-663b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack83.<org.slf4j.Logger: void debug(java.lang.String)>($stack86) AT LINE 118 with ID [321f1e3d-663b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.FileDeletionTask: org.slf4j.Logger LOG> AT LINE 131 with ID [24d28924-f4e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting path: [") AT LINE 131 with ID [24d28924-f4e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.FileDeletionTask: org.apache.hadoop.fs.Path subDir> AT LINE 131 with ID [24d28924-f4e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack45) AT LINE 131 with ID [24d28924-f4e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] as user: [") AT LINE 131 with ID [24d28924-f4e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.FileDeletionTask: java.lang.String getUser()>() AT LINE 131 with ID [24d28924-f4e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48) AT LINE 131 with ID [24d28924-f4e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") AT LINE 131 with ID [24d28924-f4e9]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 131 with ID [24d28924-f4e9]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 131 with ID [24d28924-f4e9]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack11 != 0 goto virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor: void killContainer(java.lang.String,org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal)>(pid, signal) at line 555 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor: boolean signalContainer(org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext)> has 11 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> user = virtualinvoke ctx.<org.apache.hadoop.yarn.server.nodemanager.executor.ContainerSignalContext: java.lang.String getUser()>() AT LINE 548 with ID [9bfa4df3-84b3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor: org.slf4j.Logger LOG> AT LINE 552 with ID [9bfa4df3-84b3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending signal ") AT LINE 552 with ID [9bfa4df3-84b3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke signal.<org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal: int getValue()>() AT LINE 552 with ID [9bfa4df3-84b3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15) AT LINE 552 with ID [9bfa4df3-84b3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to pid ") AT LINE 552 with ID [9bfa4df3-84b3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(pid) AT LINE 552 with ID [9bfa4df3-84b3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as user ") AT LINE 552 with ID [9bfa4df3-84b3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 552 with ID [9bfa4df3-84b3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 552 with ID [9bfa4df3-84b3]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 552 with ID [9bfa4df3-84b3]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack2 != null goto $stack3 = <org.apache.hadoop.hdfs.nfs.nfs3.AsyncDataService: org.apache.commons.logging.Log LOG> at line 66 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.AsyncDataService: void execute(java.lang.Runnable)> has 16 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.nfs.nfs3.AsyncDataService: org.apache.commons.logging.Log LOG> AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current active thread number: ") AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.hdfs.nfs.nfs3.AsyncDataService: java.util.concurrent.ThreadPoolExecutor executor> AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.util.concurrent.ThreadPoolExecutor: int getActiveCount()>() AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack10) AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" queue size: ") AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = this.<org.apache.hadoop.hdfs.nfs.nfs3.AsyncDataService: java.util.concurrent.ThreadPoolExecutor executor> AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()>() AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = interfaceinvoke $stack14.<java.util.concurrent.BlockingQueue: int size()>() AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15) AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scheduled task number: ") AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.hdfs.nfs.nfs3.AsyncDataService: java.util.concurrent.ThreadPoolExecutor executor> AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.util.concurrent.ThreadPoolExecutor: long getTaskCount()>() AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack19) AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 70 with ID [c05d23fb-689b]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack11 == 0 goto return at line 441 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if op != $stack8 goto $stack9 = this.<org.apache.hadoop.hdfs.server.federation.router.RouterRpcServer: org.apache.hadoop.hdfs.server.federation.router.Router router> at line 429 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.RouterRpcServer: void checkOperation(org.apache.hadoop.hdfs.server.namenode.NameNode$OperationCategory)> has 6 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.server.federation.router.RouterRpcServer: org.slf4j.Logger LOG> AT LINE 419 with ID [28465abe-167a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = interfaceinvoke $stack4.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 419 with ID [28465abe-167a]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack5 == 0 goto $stack6 = this.<org.apache.hadoop.hdfs.server.federation.router.RouterRpcServer: java.lang.ThreadLocal opCategory> AT LINE 419 with ID [28465abe-167a]
2020-08-25 12:10:06 [INFO] - 	 -> methodName = staticinvoke <org.apache.hadoop.hdfs.server.federation.router.RouterRpcServer: java.lang.String getMethodName()>() AT LINE 420 with ID [28465abe-167a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hdfs.server.federation.router.RouterRpcServer: org.slf4j.Logger LOG> AT LINE 421 with ID [28465abe-167a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Proxying operation: {}", methodName) AT LINE 421 with ID [28465abe-167a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: java.util.concurrent.locks.Lock readLock> at line 313 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: java.util.List nonRunnableApps> at line 309 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: void updateDemand()> has 21 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: org.apache.commons.logging.Log LOG> AT LINE 323 with ID [d87b22e3-cda5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The updated demand for ") AT LINE 323 with ID [d87b22e3-cda5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: java.lang.String getName()>() AT LINE 323 with ID [d87b22e3-cda5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 323 with ID [d87b22e3-cda5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ") AT LINE 323 with ID [d87b22e3-cda5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: org.apache.hadoop.yarn.api.records.Resource demand> AT LINE 323 with ID [d87b22e3-cda5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24) AT LINE 323 with ID [d87b22e3-cda5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; the max is ") AT LINE 323 with ID [d87b22e3-cda5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: org.apache.hadoop.yarn.api.records.Resource getMaxShare()>() AT LINE 323 with ID [d87b22e3-cda5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack27) AT LINE 323 with ID [d87b22e3-cda5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 323 with ID [d87b22e3-cda5]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 323 with ID [d87b22e3-cda5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: org.apache.commons.logging.Log LOG> AT LINE 325 with ID [1396b61f-6573]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The updated fairshare for ") AT LINE 325 with ID [1396b61f-6573]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: java.lang.String getName()>() AT LINE 325 with ID [1396b61f-6573]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33) AT LINE 325 with ID [1396b61f-6573]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ") AT LINE 325 with ID [1396b61f-6573]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: org.apache.hadoop.yarn.api.records.Resource getFairShare()>() AT LINE 325 with ID [1396b61f-6573]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack36) AT LINE 325 with ID [1396b61f-6573]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 325 with ID [1396b61f-6573]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack38) AT LINE 325 with ID [1396b61f-6573]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack13 == 0 goto return at line 1935 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.UserGroupInformation: void logUserInfo(org.slf4j.Logger,java.lang.String,org.apache.hadoop.security.UserGroupInformation)> has 11 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(caption) AT LINE 1934 with ID [72eb6be7-bdce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" UGI: ") AT LINE 1934 with ID [72eb6be7-bdce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(ugi) AT LINE 1934 with ID [72eb6be7-bdce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1934 with ID [72eb6be7-bdce]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke log.<org.slf4j.Logger: void debug(java.lang.String)>($stack10) AT LINE 1934 with ID [72eb6be7-bdce]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 1939 with ID [1b1daf38-935a]
2020-08-25 12:10:06 [INFO] - 	 -> token = (org.apache.hadoop.security.token.Token) $stack14 AT LINE 1939 with ID [1b1daf38-935a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+token:") AT LINE 1936 with ID [1b1daf38-935a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(token) AT LINE 1936 with ID [1b1daf38-935a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1936 with ID [1b1daf38-935a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke log.<org.slf4j.Logger: void debug(java.lang.String)>($stack18) AT LINE 1936 with ID [1b1daf38-935a]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if len <= $stack293 goto partialCrc = null at line 731 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if checksumReceivedLen == now#63 goto (branch) at line 652 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack377 == 0 goto $stack63 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver: java.io.DataOutputStream mirrorOut> at line 583 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack51 >= 0 goto offsetInBlock = virtualinvoke header.<org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader: long getOffsetInBlock()>() at line 542 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack50 <= 0 goto $stack51 = virtualinvoke header.<org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader: int getDataLen()>() at line 537 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: int receivePacket()> has 30 units and 4 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack425 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 532 with ID [5d35cd77-2ff2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack426 = virtualinvoke $stack424.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiving one packet for block ") AT LINE 532 with ID [5d35cd77-2ff2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack427 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 532 with ID [5d35cd77-2ff2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack428 = virtualinvoke $stack426.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack427) AT LINE 532 with ID [5d35cd77-2ff2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack429 = virtualinvoke $stack428.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 532 with ID [5d35cd77-2ff2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack430 = virtualinvoke $stack429.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(header) AT LINE 532 with ID [5d35cd77-2ff2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack431 = virtualinvoke $stack430.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 532 with ID [5d35cd77-2ff2]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack425.<org.slf4j.Logger: void debug(java.lang.String)>($stack431) AT LINE 532 with ID [5d35cd77-2ff2]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 612 with ID [1bc3199c-ac0a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack103 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Receiving an empty packet or the end of the block ") AT LINE 612 with ID [1bc3199c-ac0a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack104 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 612 with ID [1bc3199c-ac0a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack105 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack104) AT LINE 612 with ID [1bc3199c-ac0a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 612 with ID [1bc3199c-ac0a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack102.<org.slf4j.Logger: void debug(java.lang.String)>($stack106) AT LINE 612 with ID [1bc3199c-ac0a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack278 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 708 with ID [e00b303b-2ac8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack279 = virtualinvoke $stack277.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("receivePacket for ") AT LINE 708 with ID [e00b303b-2ac8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack280 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.apache.hadoop.hdfs.protocol.ExtendedBlock block> AT LINE 708 with ID [e00b303b-2ac8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack281 = virtualinvoke $stack279.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack280) AT LINE 708 with ID [e00b303b-2ac8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack282 = virtualinvoke $stack281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": previous write did not end at the chunk boundary.") AT LINE 708 with ID [e00b303b-2ac8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack283 = virtualinvoke $stack282.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" onDiskLen=") AT LINE 708 with ID [e00b303b-2ac8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack284 = virtualinvoke $stack283.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(onDiskLen#95) AT LINE 708 with ID [e00b303b-2ac8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack285 = virtualinvoke $stack284.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 708 with ID [e00b303b-2ac8]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack278.<org.slf4j.Logger: void debug(java.lang.String)>($stack285) AT LINE 708 with ID [e00b303b-2ac8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack215 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 771 with ID [3a6ca20b-51c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack216 = virtualinvoke $stack214.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing out partial crc for data len ") AT LINE 771 with ID [3a6ca20b-51c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack217 = virtualinvoke $stack216.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(len) AT LINE 771 with ID [3a6ca20b-51c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack218 = virtualinvoke $stack217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", skip=") AT LINE 771 with ID [3a6ca20b-51c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack219 = virtualinvoke $stack218.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(skip) AT LINE 771 with ID [3a6ca20b-51c3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack220 = virtualinvoke $stack219.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 771 with ID [3a6ca20b-51c3]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack215.<org.slf4j.Logger: void debug(java.lang.String)>($stack220) AT LINE 771 with ID [3a6ca20b-51c3]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if shouldSetTime == 0 goto (branch) at line 752 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack41 == 0 goto (branch) at line 733 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs: long scanForLogs()> has 12 units and 4 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 718 with ID [84f8fbae-e34b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore$AppLogs: org.apache.hadoop.fs.Path appDirPath> AT LINE 718 with ID [84f8fbae-e34b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("scanForLogs on {}", $stack11) AT LINE 718 with ID [84f8fbae-e34b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 723 with ID [256ef8f1-08c1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke statAttempt.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() AT LINE 723 with ID [256ef8f1-08c1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<org.apache.hadoop.fs.Path: java.lang.String getName()>() AT LINE 723 with ID [256ef8f1-08c1]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("scanForLogs on {}", $stack27) AT LINE 723 with ID [256ef8f1-08c1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 727 with ID [3e739007-a8f0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke statAttempt.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() AT LINE 727 with ID [3e739007-a8f0]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scanner skips for unknown dir/file {}", $stack31) AT LINE 727 with ID [3e739007-a8f0]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = staticinvoke <org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore: org.slf4j.Logger access$100()>() AT LINE 741 with ID [edb7569b-d7dc]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("scan for log file: {}", filename) AT LINE 741 with ID [edb7569b-d7dc]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.hadoop.oncrpc.XDR nullOp(org.apache.hadoop.oncrpc.XDR,int,java.net.InetAddress)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hdfs.nfs.mount.RpcProgramMountd: org.apache.commons.logging.Log LOG> AT LINE 101 with ID [c289eddc-19da]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MOUNT NULLOP :  client: ") AT LINE 101 with ID [c289eddc-19da]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(client) AT LINE 101 with ID [c289eddc-19da]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 101 with ID [c289eddc-19da]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 101 with ID [c289eddc-19da]
2020-08-25 12:10:06 [WARN] - No overhead is found at method <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: int incrementDelegationTokenSeqNum()>
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if length31#4 != null goto success = 0 at line 1950 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack43 > 0 goto length = (int) length31 at line 1933 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack27 > 0 goto $stack29 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> at line 1915 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSInputStream: java.nio.ByteBuffer tryReadZeroCopy(int,java.util.EnumSet)> has 66 units and 6 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack103 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102 = newarray (java.lang.Object)[6] AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack106 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curPos) AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102[0] = $stack106 AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack107 = this.<org.apache.hadoop.hdfs.DFSInputStream: java.lang.String src> AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102[1] = $stack107 AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack109 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(length63) AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102[2] = $stack109 AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack111 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(blockPos) AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102[3] = $stack111 AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack113 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curPos) AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102[4] = $stack113 AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack115 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curEnd) AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102[5] = $stack115 AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack103.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Unable to perform a zero-copy read from offset {} of {}; {} bytes left in block. blockPos={}; curPos={};curEnd={}", $stack102) AT LINE 1916 with ID [8996a8c0-e48c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = newarray (java.lang.Object)[5] AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(maxLength) AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28[0] = $stack32 AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(length63) AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28[1] = $stack34 AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(blockPos) AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28[2] = $stack36 AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curPos) AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28[3] = $stack38 AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curEnd) AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28[4] = $stack40 AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Reducing read length from {} to {} to avoid going more than one byte past the end of the block.  blockPos={};  curPos={}; curEnd={}", $stack28) AT LINE 1922 with ID [d1de1123-392e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack90 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1939 with ID [ca30a4be-c6c6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack89 = newarray (java.lang.Object)[4] AT LINE 1939 with ID [ca30a4be-c6c6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack93 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curPos) AT LINE 1939 with ID [ca30a4be-c6c6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack89[0] = $stack93 AT LINE 1939 with ID [ca30a4be-c6c6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack94 = this.<org.apache.hadoop.hdfs.DFSInputStream: java.lang.String src> AT LINE 1939 with ID [ca30a4be-c6c6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack89[1] = $stack94 AT LINE 1939 with ID [ca30a4be-c6c6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack96 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(blockPos) AT LINE 1939 with ID [ca30a4be-c6c6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack89[2] = $stack96 AT LINE 1939 with ID [ca30a4be-c6c6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack98 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curEnd) AT LINE 1939 with ID [ca30a4be-c6c6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack89[3] = $stack98 AT LINE 1939 with ID [ca30a4be-c6c6]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack90.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Unable to perform a zero-copy read from offset {}  of {}; 31-bit MappedByteBuffer limit exceeded.  blockPos={}, curEnd={}", $stack89) AT LINE 1939 with ID [ca30a4be-c6c6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = newarray (java.lang.Object)[5] AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(maxLength) AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44[0] = $stack48 AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(length) AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44[1] = $stack50 AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(blockPos) AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44[2] = $stack52 AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> $stack54 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curPos) AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44[3] = $stack54 AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> $stack56 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curEnd) AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44[4] = $stack56 AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Reducing read length from {} to {} to avoid 31-bit limit.  blockPos={}; curPos={}; curEnd={}", $stack44) AT LINE 1945 with ID [7b6b4585-60be]
2020-08-25 12:10:06 [INFO] - 	 -> $stack85 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1951 with ID [effb3e5b-5d0a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack87 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curPos) AT LINE 1951 with ID [effb3e5b-5d0a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack88 = this.<org.apache.hadoop.hdfs.DFSInputStream: java.lang.String src> AT LINE 1951 with ID [effb3e5b-5d0a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack85.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("unable to perform a zero-copy read from offset {} of {}; BlockReader#getClientMmap returned null.", $stack87, $stack88) AT LINE 1951 with ID [effb3e5b-5d0a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack75 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1966 with ID [4ba01b0d-ed3b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack74 = newarray (java.lang.Object)[3] AT LINE 1966 with ID [4ba01b0d-ed3b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(length) AT LINE 1966 with ID [4ba01b0d-ed3b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack74[0] = $stack78 AT LINE 1966 with ID [4ba01b0d-ed3b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack80 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curPos) AT LINE 1966 with ID [4ba01b0d-ed3b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack74[1] = $stack80 AT LINE 1966 with ID [4ba01b0d-ed3b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81 = this.<org.apache.hadoop.hdfs.DFSInputStream: long blockEnd> AT LINE 1966 with ID [4ba01b0d-ed3b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack83 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack81) AT LINE 1966 with ID [4ba01b0d-ed3b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack74[2] = $stack83 AT LINE 1966 with ID [4ba01b0d-ed3b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack75.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("readZeroCopy read {} bytes from offset {} via the zero-copy read path.  blockEnd = {}", $stack74) AT LINE 1966 with ID [4ba01b0d-ed3b]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if existingReservations < numAllowedReservations goto return 0 at line 734 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: boolean reservationExceedsThreshold(org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode,org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType)> has 18 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reservation Exceeds Allowed number of nodes: app_id=") AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack28) AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" existingReservations=") AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(existingReservations) AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" totalAvailableNodes=") AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(totalAvailNodes) AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reservableNodesRatio=") AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler scheduler> AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: float getReservableNodesRatio()>() AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = (double) $stack36 AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = virtualinvoke df.<java.text.DecimalFormat: java.lang.String format(double)>($stack37) AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack38) AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numAllowedReservations=") AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numAllowedReservations) AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack42) AT LINE 738 with ID [b497b81b-b750]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack3 != null goto $stack4 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> at line 858 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector: void terminateConnection()> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 862 with ID [55317dd5-5538]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Terminating ZK connection for ") AT LINE 862 with ID [55317dd5-5538]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 862 with ID [55317dd5-5538]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 862 with ID [55317dd5-5538]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack11) AT LINE 862 with ID [55317dd5-5538]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack32 != 0 goto $stack33 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.commons.logging.Log LOG> at line 74 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack25 != 0 goto $stack26 = interfaceinvoke reservedContainer.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.Container getContainer()>() at line 64 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: void reserveResource(org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt,org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer)> has 24 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.commons.logging.Log LOG> AT LINE 85 with ID [de6dcc0e-9441]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Updated reserved container ") AT LINE 85 with ID [de6dcc0e-9441]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = interfaceinvoke container.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.Container getContainer()>() AT LINE 85 with ID [de6dcc0e-9441]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.ContainerId getId()>() AT LINE 85 with ID [de6dcc0e-9441]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack39) AT LINE 85 with ID [de6dcc0e-9441]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on node ") AT LINE 85 with ID [de6dcc0e-9441]
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 85 with ID [de6dcc0e-9441]
2020-08-25 12:10:06 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for application attempt ") AT LINE 85 with ID [de6dcc0e-9441]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 85 with ID [de6dcc0e-9441]
2020-08-25 12:10:06 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack44) AT LINE 85 with ID [de6dcc0e-9441]
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 85 with ID [de6dcc0e-9441]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack36.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack46) AT LINE 85 with ID [de6dcc0e-9441]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.commons.logging.Log LOG> AT LINE 92 with ID [f79c1b69-c606]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reserved container ") AT LINE 92 with ID [f79c1b69-c606]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = interfaceinvoke container.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.Container getContainer()>() AT LINE 92 with ID [f79c1b69-c606]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.ContainerId getId()>() AT LINE 92 with ID [f79c1b69-c606]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack12) AT LINE 92 with ID [f79c1b69-c606]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on node ") AT LINE 92 with ID [f79c1b69-c606]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 92 with ID [f79c1b69-c606]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for application attempt ") AT LINE 92 with ID [f79c1b69-c606]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 92 with ID [f79c1b69-c606]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack17) AT LINE 92 with ID [f79c1b69-c606]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 92 with ID [f79c1b69-c606]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 92 with ID [f79c1b69-c606]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack19 != null goto $stack4 = this.<org.apache.hadoop.service.AbstractService: org.apache.hadoop.service.ServiceStateModel stateModel> at line 458 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.service.AbstractService: org.apache.hadoop.service.Service$STATE enterState(org.apache.hadoop.service.Service$STATE)> has 9 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.service.AbstractService: org.slf4j.Logger LOG> AT LINE 453 with ID [dba9025f-b642]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service: ") AT LINE 453 with ID [dba9025f-b642]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke this.<org.apache.hadoop.service.AbstractService: java.lang.String getName()>() AT LINE 453 with ID [dba9025f-b642]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 453 with ID [dba9025f-b642]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entered state ") AT LINE 453 with ID [dba9025f-b642]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke this.<org.apache.hadoop.service.AbstractService: org.apache.hadoop.service.Service$STATE getServiceState()>() AT LINE 453 with ID [dba9025f-b642]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack15) AT LINE 453 with ID [dba9025f-b642]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 453 with ID [dba9025f-b642]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 453 with ID [dba9025f-b642]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack39 == 0 goto (branch) at line 1135 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack37 != 0 goto (branch) at line 1130 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack28 == 0 goto (branch) at line 1110 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if found <= 1 goto $stack22 = newarray (java.lang.String)[2] at line 1137 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSUtil: java.lang.String[] getSuffixIDs(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.hdfs.DFSUtil$AddressMatcher)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = <org.apache.hadoop.hdfs.DFSUtil: org.apache.commons.logging.Log LOG> AT LINE 1112 with ID [92c76f5c-0cc3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = newarray (java.lang.Object)[3] AT LINE 1112 with ID [92c76f5c-0cc3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50[0] = addressKey AT LINE 1112 with ID [92c76f5c-0cc3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50[1] = nsId AT LINE 1112 with ID [92c76f5c-0cc3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50[2] = nnId AT LINE 1112 with ID [92c76f5c-0cc3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("addressKey: %s nsId: %s nnId: %s", $stack50) AT LINE 1112 with ID [92c76f5c-0cc3]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack51.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack52) AT LINE 1112 with ID [92c76f5c-0cc3]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if deleted != 0 goto (branch) at line 546 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandlerImpl: void deleteCGroup(org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandler$CGroupController,java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.CGroupsHandlerImpl: org.slf4j.Logger LOG> AT LINE 532 with ID [ed98738e-054e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleteCGroup: ") AT LINE 532 with ID [ed98738e-054e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(cGroupPath) AT LINE 532 with ID [ed98738e-054e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 532 with ID [ed98738e-054e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String)>($stack36) AT LINE 532 with ID [ed98738e-054e]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= $stack6 goto return newList at line 827 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: java.util.ArrayList locatedToBlocks(java.util.List,java.util.List)> has 5 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 830 with ID [62980433-dd60]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i) AT LINE 830 with ID [62980433-dd60]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" block to be omitted") AT LINE 830 with ID [62980433-dd60]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 830 with ID [62980433-dd60]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 830 with ID [62980433-dd60]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack14 == 0 goto return null at line 391 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if accessor != null goto $stack46 = new org.apache.hadoop.hdfs.client.impl.ExternalBlockReader at line 412 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.apache.hadoop.hdfs.BlockReader tryToCreateExternalBlockReader()> has 3 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = <org.apache.hadoop.hdfs.client.impl.BlockReaderFactory: org.slf4j.Logger LOG> AT LINE 413 with ID [a84e445e-6481]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke cls.<java.lang.Class: java.lang.String getName()>() AT LINE 413 with ID [a84e445e-6481]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack48.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: No ReplicaAccessor created by {}", this, $stack50) AT LINE 413 with ID [a84e445e-6481]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo: void delete()> has 9 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = staticinvoke <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log access$000()>() AT LINE 492 with ID [2def0197-23d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deleting ") AT LINE 492 with ID [2def0197-23d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo: org.apache.hadoop.fs.Path historyFile> AT LINE 492 with ID [2def0197-23d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 492 with ID [2def0197-23d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") AT LINE 492 with ID [2def0197-23d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = this.<org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo: org.apache.hadoop.fs.Path confFile> AT LINE 492 with ID [2def0197-23d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24) AT LINE 492 with ID [2def0197-23d6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 492 with ID [2def0197-23d6]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 492 with ID [2def0197-23d6]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: java.io.OutputStream getOutputStreamForKeystore()> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 69 with ID [7a7cd161-b71f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using \'") AT LINE 69 with ID [7a7cd161-b71f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: java.io.File file> AT LINE 69 with ID [7a7cd161-b71f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack9) AT LINE 69 with ID [7a7cd161-b71f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for output stream.") AT LINE 69 with ID [7a7cd161-b71f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 69 with ID [7a7cd161-b71f]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 69 with ID [7a7cd161-b71f]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: void handleEvent(org.apache.hadoop.mapreduce.jobhistory.JobHistoryEvent)> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack111 = <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.commons.logging.Log LOG> AT LINE 625 with ID [08d68f5c-c11e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack112 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("In HistoryEventHandler ") AT LINE 625 with ID [08d68f5c-c11e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack113 = virtualinvoke event.<org.apache.hadoop.mapreduce.jobhistory.JobHistoryEvent: org.apache.hadoop.mapreduce.jobhistory.HistoryEvent getHistoryEvent()>() AT LINE 625 with ID [08d68f5c-c11e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack114 = interfaceinvoke $stack113.<org.apache.hadoop.mapreduce.jobhistory.HistoryEvent: org.apache.hadoop.mapreduce.jobhistory.EventType getEventType()>() AT LINE 625 with ID [08d68f5c-c11e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack115 = virtualinvoke $stack112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack114) AT LINE 625 with ID [08d68f5c-c11e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack116 = virtualinvoke $stack115.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 625 with ID [08d68f5c-c11e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack111.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack116) AT LINE 625 with ID [08d68f5c-c11e]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack15 <= 0 goto (branch) at line 632 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if ps == null goto (branch) at line 625 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock> at line 623 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: void showRequests()> has 14 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: org.apache.commons.logging.Log LOG> AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("showRequests: application=") AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" headRoom=") AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: org.apache.hadoop.yarn.api.records.Resource getHeadroom()>() AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack22) AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" currentConsumption=") AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage attemptResourceUsage> AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getUsed()>() AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<org.apache.hadoop.yarn.api.records.Resource: long getMemorySize()>() AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack27) AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 627 with ID [b277425e-8d46]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if key != null goto $stack7 = this.<org.apache.hadoop.hdfs.security.token.block.BlockTokenSecretManager: org.apache.hadoop.util.Timer timer> at line 355 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.security.token.block.BlockTokenSecretManager: byte[] createPassword(org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.security.token.block.BlockTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 360 with ID [a928d8f0-36cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Generating block token for ") AT LINE 360 with ID [a928d8f0-36cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke identifier.<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier: java.lang.String toString()>() AT LINE 360 with ID [a928d8f0-36cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20) AT LINE 360 with ID [a928d8f0-36cd]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 360 with ID [a928d8f0-36cd]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 360 with ID [a928d8f0-36cd]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: void flush()> has 7 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = <org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: org.slf4j.Logger LOG> AT LINE 154 with ID [0349639f-ff32]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resetting permissions to \'") AT LINE 154 with ID [0349639f-ff32]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.security.alias.LocalJavaKeyStoreProvider: java.util.Set permissions> AT LINE 154 with ID [0349639f-ff32]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack22) AT LINE 154 with ID [0349639f-ff32]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 154 with ID [0349639f-ff32]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 154 with ID [0349639f-ff32]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 154 with ID [0349639f-ff32]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testNotMatchedReplicaID()> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 656 with ID [a01c611d-ab89]
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 656 with ID [a01c611d-ab89]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 656 with ID [a01c611d-ab89]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48) AT LINE 656 with ID [a01c611d-ab89]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 656 with ID [a01c611d-ab89]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack46.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack50) AT LINE 656 with ID [a01c611d-ab89]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack42 <= 0 goto (branch) at line 134 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack36 == 0 goto return slowResources at line 133 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack12 >= 0 goto $stack13 = new java.util.ArrayList at line 110 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.metrics.OutlierDetector: java.util.Map getOutliers(java.util.Map)> has 13 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack47 = <org.apache.hadoop.hdfs.server.datanode.metrics.OutlierDetector: org.slf4j.Logger LOG> AT LINE 111 with ID [a86b8ba9-1c78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = interfaceinvoke stats.<java.util.Map: int size()>() AT LINE 111 with ID [a86b8ba9-1c78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack49) AT LINE 111 with ID [a86b8ba9-1c78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = this.<org.apache.hadoop.hdfs.server.datanode.metrics.OutlierDetector: long minNumResources> AT LINE 111 with ID [a86b8ba9-1c78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack51) AT LINE 111 with ID [a86b8ba9-1c78]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Skipping statistical outlier detection as we don\'t have latency data for enough resources. Have {}, need at least {}", $stack50, $stack52) AT LINE 111 with ID [a86b8ba9-1c78]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = <org.apache.hadoop.hdfs.server.datanode.metrics.OutlierDetector: org.slf4j.Logger LOG> AT LINE 128 with ID [f5a4c7ec-69e5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = newarray (java.lang.Object)[4] AT LINE 128 with ID [f5a4c7ec-69e5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32[0] = sorted AT LINE 128 with ID [f5a4c7ec-69e5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32[1] = median AT LINE 128 with ID [f5a4c7ec-69e5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32[2] = mad AT LINE 128 with ID [f5a4c7ec-69e5]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32[3] = upperLimitLatency AT LINE 128 with ID [f5a4c7ec-69e5]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("getOutliers: List={}, MedianLatency={}, MedianAbsoluteDeviation={}, upperLimitLatency={}", $stack32) AT LINE 128 with ID [f5a4c7ec-69e5]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack3 == 0 goto return null at line 115 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.balancer.KeyManager: org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey newDataEncryptionKey()> has 11 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.server.balancer.KeyManager: org.slf4j.Logger LOG> AT LINE 133 with ID [a727a7f6-612c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Generating new data encryption key because current key ") AT LINE 133 with ID [a727a7f6-612c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = "is null." AT LINE 138 with ID [a727a7f6-612c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expired on ") AT LINE 133 with ID [a727a7f6-612c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.hdfs.server.balancer.KeyManager: org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey encryptionKey> AT LINE 133 with ID [a727a7f6-612c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = $stack12.<org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey: long expiryDate> AT LINE 133 with ID [a727a7f6-612c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack13) AT LINE 133 with ID [a727a7f6-612c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 133 with ID [a727a7f6-612c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 133 with ID [a727a7f6-612c]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 133 with ID [a727a7f6-612c]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 133 with ID [a727a7f6-612c]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack19 <= 0 goto responseTimes#4 = responseTimes#4 + 1 at line 584 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= $stack31 goto responseTimes#4 = 0 at line 577 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.ipc.DecayRpcScheduler: boolean shouldBackOff(org.apache.hadoop.ipc.Schedulable)> has 27 units and 5 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack10 = <org.apache.hadoop.ipc.DecayRpcScheduler: org.slf4j.Logger LOG> AT LINE 572 with ID [1b183d01-a828, UNKNOWN_ID, 96219829-5ad4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = interfaceinvoke $stack10.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 572 with ID [1b183d01-a828, UNKNOWN_ID, 96219829-5ad4]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack11 == 0 goto responseTimes#4 = 0 AT LINE 572 with ID [1b183d01-a828, UNKNOWN_ID, 96219829-5ad4]
2020-08-25 12:10:06 [INFO] - 	 -> responseTimes = virtualinvoke this.<org.apache.hadoop.ipc.DecayRpcScheduler: double[] getAverageResponseTime()>() AT LINE 573 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = <org.apache.hadoop.ipc.DecayRpcScheduler: org.slf4j.Logger LOG> AT LINE 574 with ID [96219829-5ad4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = interfaceinvoke obj.<org.apache.hadoop.ipc.Schedulable: org.apache.hadoop.security.UserGroupInformation getUserGroupInformation()>() AT LINE 574 with ID [96219829-5ad4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<org.apache.hadoop.security.UserGroupInformation: java.lang.String getUserName()>() AT LINE 574 with ID [96219829-5ad4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = interfaceinvoke obj.<org.apache.hadoop.ipc.Schedulable: int getPriorityLevel()>() AT LINE 574 with ID [96219829-5ad4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack29) AT LINE 574 with ID [96219829-5ad4]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Current Caller: {}  Priority: {} ", $stack28, $stack30) AT LINE 574 with ID [96219829-5ad4]
2020-08-25 12:10:06 [INFO] - 	 -> i = 0 AT LINE 577 with ID [1b183d01-a828, UNKNOWN_ID]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.ipc.DecayRpcScheduler: int numLevels> AT LINE 577 with ID [1b183d01-a828, UNKNOWN_ID]
2020-08-25 12:10:06 [INFO] - 	 -> if i >= $stack31 goto responseTimes#4 = 0 AT LINE 577 with ID [1b183d01-a828, UNKNOWN_ID]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = <org.apache.hadoop.ipc.DecayRpcScheduler: org.slf4j.Logger LOG> AT LINE 578 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = newarray (java.lang.Object)[3] AT LINE 578 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i) AT LINE 578 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33[0] = $stack37 AT LINE 578 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = responseTimes[i] AT LINE 578 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack38) AT LINE 578 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33[1] = $stack40 AT LINE 578 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = this.<org.apache.hadoop.ipc.DecayRpcScheduler: long[] backOffResponseTimeThresholds> AT LINE 578 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = $stack41[i] AT LINE 578 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> $stack44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack42) AT LINE 578 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33[2] = $stack44 AT LINE 578 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Queue: {} responseTime: {} backoffThreshold: {}", $stack33) AT LINE 578 with ID [1b183d01-a828]
2020-08-25 12:10:06 [INFO] - 	 -> i = i + 1 AT LINE 577 with ID [1b183d01-a828, UNKNOWN_ID]
2020-08-25 12:10:06 [INFO] - 	 -> goto [?= $stack31 = this.<org.apache.hadoop.ipc.DecayRpcScheduler: int numLevels>] AT LINE 577 with ID [1b183d01-a828, UNKNOWN_ID]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack35 == 0 goto exitmonitor tmp at line 105 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack16 == null goto $stack18 = <org.apache.hadoop.mapred.IndexCache: org.apache.commons.logging.Log LOG> at line 103 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.IndexCache: org.apache.hadoop.mapred.IndexCache$IndexInformation readIndexFileToCache(org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)> has 12 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = <org.apache.hadoop.mapred.IndexCache: org.apache.commons.logging.Log LOG> AT LINE 113 with ID [2b661c0b-56b4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IndexCache HIT: MapId ") AT LINE 113 with ID [2b661c0b-56b4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(mapId) AT LINE 113 with ID [2b661c0b-56b4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found") AT LINE 113 with ID [2b661c0b-56b4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 113 with ID [2b661c0b-56b4]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack42) AT LINE 113 with ID [2b661c0b-56b4]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = <org.apache.hadoop.mapred.IndexCache: org.apache.commons.logging.Log LOG> AT LINE 116 with ID [87361f46-34e6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IndexCache MISS: MapId ") AT LINE 116 with ID [87361f46-34e6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(mapId) AT LINE 116 with ID [87361f46-34e6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found") AT LINE 116 with ID [87361f46-34e6]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 116 with ID [87361f46-34e6]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 116 with ID [87361f46-34e6]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: void trimWrite(int)> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: org.apache.commons.logging.Log LOG> AT LINE 108 with ID [ee86aa13-0236]
2020-08-25 12:10:06 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trim write request by delta:") AT LINE 108 with ID [ee86aa13-0236]
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(delta) AT LINE 108 with ID [ee86aa13-0236]
2020-08-25 12:10:06 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 108 with ID [ee86aa13-0236]
2020-08-25 12:10:06 [INFO] - 	 -> $stack17 = virtualinvoke this.<org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: java.lang.String toString()>() AT LINE 108 with ID [ee86aa13-0236]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17) AT LINE 108 with ID [ee86aa13-0236]
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 108 with ID [ee86aa13-0236]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 108 with ID [ee86aa13-0236]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if arr$#36 != null goto $stack80 = this.<org.apache.hadoop.net.unix.DomainSocketWatcher$2: org.apache.hadoop.net.unix.DomainSocketWatcher this$0> at line 533 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack76 == 0 goto $stack77 = this.<org.apache.hadoop.net.unix.DomainSocketWatcher$2: org.apache.hadoop.net.unix.DomainSocketWatcher this$0> at line 523 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack67 == 0 goto virtualinvoke entries.<java.util.TreeMap: void clear()>() at line 513 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if arr$#36 != null goto $stack33 = this.<org.apache.hadoop.net.unix.DomainSocketWatcher$2: org.apache.hadoop.net.unix.DomainSocketWatcher this$0> at line 479 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack29 == 0 goto $stack30 = this.<org.apache.hadoop.net.unix.DomainSocketWatcher$2: org.apache.hadoop.net.unix.DomainSocketWatcher this$0> at line 463 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack23 = this.<org.apache.hadoop.net.unix.DomainSocketWatcher$2: org.apache.hadoop.net.unix.DomainSocketWatcher this$0> at line 457 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack44 == 0 goto $stack45 = this.<org.apache.hadoop.net.unix.DomainSocketWatcher$2: org.apache.hadoop.net.unix.DomainSocketWatcher this$0> at line 497 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack43 == 0 goto $stack44 = staticinvoke <java.lang.Thread: boolean interrupted()>() at line 489 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.net.unix.DomainSocketWatcher$2: void run()> has 21 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack164 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> AT LINE 447 with ID [5c6d9d9b-62e3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack165 = virtualinvoke $stack163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 447 with ID [5c6d9d9b-62e3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack166 = virtualinvoke $stack165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": starting with interruptCheckPeriodMs = ") AT LINE 447 with ID [5c6d9d9b-62e3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack167 = this.<org.apache.hadoop.net.unix.DomainSocketWatcher$2: org.apache.hadoop.net.unix.DomainSocketWatcher this$0> AT LINE 447 with ID [5c6d9d9b-62e3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack168 = staticinvoke <org.apache.hadoop.net.unix.DomainSocketWatcher: int access$300(org.apache.hadoop.net.unix.DomainSocketWatcher)>($stack167) AT LINE 447 with ID [5c6d9d9b-62e3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack169 = virtualinvoke $stack166.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack168) AT LINE 447 with ID [5c6d9d9b-62e3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack170 = virtualinvoke $stack169.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 447 with ID [5c6d9d9b-62e3]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack164.<org.slf4j.Logger: void debug(java.lang.String)>($stack170) AT LINE 447 with ID [5c6d9d9b-62e3]
2020-08-25 12:10:06 [INFO] - 	 -> $stack144 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> AT LINE 472 with ID [2da280fd-d78f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack145 = virtualinvoke $stack143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 472 with ID [2da280fd-d78f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack146 = virtualinvoke $stack145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": adding fd ") AT LINE 472 with ID [2da280fd-d78f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack147 = i$#33.<org.apache.hadoop.net.unix.DomainSocket: int fd> AT LINE 472 with ID [2da280fd-d78f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack148 = virtualinvoke $stack146.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack147) AT LINE 472 with ID [2da280fd-d78f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack149 = virtualinvoke $stack148.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 472 with ID [2da280fd-d78f]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack144.<org.slf4j.Logger: void trace(java.lang.String)>($stack149) AT LINE 472 with ID [2da280fd-d78f]
2020-08-25 12:10:06 [INFO] - 	 -> $stack118 = <org.apache.hadoop.net.unix.DomainSocketWatcher: org.slf4j.Logger LOG> AT LINE 491 with ID [77c61ea9-cd23]
2020-08-25 12:10:06 [INFO] - 	 -> $stack119 = virtualinvoke this.<java.lang.Object: java.lang.String toString()>() AT LINE 491 with ID [77c61ea9-cd23]
2020-08-25 12:10:06 [INFO] - 	 -> $stack120 = virtualinvoke $stack117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack119) AT LINE 491 with ID [77c61ea9-cd23]
2020-08-25 12:10:06 [INFO] - 	 -> $stack121 = virtualinvoke $stack120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" thread terminating.") AT LINE 491 with ID [77c61ea9-cd23]
2020-08-25 12:10:06 [INFO] - 	 -> $stack122 = virtualinvoke $stack121.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 491 with ID [77c61ea9-cd23]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack118.<org.slf4j.Logger: void debug(java.lang.String)>($stack122) AT LINE 491 with ID [77c61ea9-cd23]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.io.compress.CodecPool: org.apache.hadoop.io.compress.Decompressor getDecompressor(org.apache.hadoop.io.compress.CompressionCodec)> has 5 units and 2 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = <org.apache.hadoop.io.compress.CodecPool: org.slf4j.Logger LOG> AT LINE 186 with ID [efc382ac-ba2e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = interfaceinvoke $stack5.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 186 with ID [efc382ac-ba2e]
2020-08-25 12:10:06 [INFO] - 	 -> if $stack6 == 0 goto (branch) AT LINE 186 with ID [efc382ac-ba2e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack11 = <org.apache.hadoop.io.compress.CodecPool: org.slf4j.Logger LOG> AT LINE 187 with ID [efc382ac-ba2e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>("Got recycled decompressor") AT LINE 187 with ID [efc382ac-ba2e]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.kms.KMSClientProvider$3: java.lang.Void run()> has 8 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack5 = staticinvoke <org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.slf4j.Logger access$800()>() AT LINE 960 with ID [92dd508a-004b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6 = newarray (java.lang.Object)[3] AT LINE 960 with ID [92dd508a-004b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack7 = this.<org.apache.hadoop.crypto.key.kms.KMSClientProvider$3: org.apache.hadoop.security.token.Token val$dToken> AT LINE 960 with ID [92dd508a-004b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6[0] = $stack7 AT LINE 960 with ID [92dd508a-004b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6[1] = url AT LINE 960 with ID [92dd508a-004b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.crypto.key.kms.KMSClientProvider$3: java.lang.String val$doAsUser> AT LINE 960 with ID [92dd508a-004b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack6[2] = $stack8 AT LINE 960 with ID [92dd508a-004b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Cancelling delegation token {} with url:{}, as:{}", $stack6) AT LINE 960 with ID [92dd508a-004b]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyService$ApplicationEventHandler: void handle(org.apache.hadoop.yarn.server.nodemanager.containermanager.application.ApplicationEvent)> has 6 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.amrmproxy.AMRMProxyService: org.slf4j.Logger access$100()>() AT LINE 760 with ID [1cf7866a-0656]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AMRMProxy is ignoring event: ") AT LINE 760 with ID [1cf7866a-0656]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke event.<org.apache.hadoop.yarn.server.nodemanager.containermanager.application.ApplicationEvent: java.lang.Enum getType()>() AT LINE 760 with ID [1cf7866a-0656]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack35) AT LINE 760 with ID [1cf7866a-0656]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 760 with ID [1cf7866a-0656]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String)>($stack37) AT LINE 760 with ID [1cf7866a-0656]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.federation.store.utils.FederationStateStoreUtils: void setProperty(com.zaxxer.hikari.HikariDataSource,java.lang.String,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.server.federation.store.utils.FederationStateStoreUtils: org.slf4j.Logger LOG> AT LINE 178 with ID [28c49e71-7f45]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Setting property {} with value {}", property, value) AT LINE 178 with ID [28c49e71-7f45]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack45 == 0 goto (branch) at line 1042 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack91 == 0 goto $stack44 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> at line 1050 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.Resource assignContainer(org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode,boolean)> has 67 units and 5 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack194 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 940 with ID [c40439c3-246b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack195 = virtualinvoke $stack193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node offered to app: ") AT LINE 940 with ID [c40439c3-246b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack196 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: java.lang.String getName()>() AT LINE 940 with ID [c40439c3-246b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack197 = virtualinvoke $stack195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack196) AT LINE 940 with ID [c40439c3-246b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack198 = virtualinvoke $stack197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reserved: ") AT LINE 940 with ID [c40439c3-246b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack199 = virtualinvoke $stack198.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(reserved) AT LINE 940 with ID [c40439c3-246b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack200 = virtualinvoke $stack199.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 940 with ID [c40439c3-246b]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack194.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack200) AT LINE 940 with ID [c40439c3-246b]
2020-08-25 12:10:06 [INFO] - 	 -> $stack139 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack140 = virtualinvoke $stack138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assign container on ") AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack141 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode: java.lang.String getNodeName()>() AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack142 = virtualinvoke $stack140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack141) AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack143 = virtualinvoke $stack142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node, assignType: NODE_LOCAL") AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack144 = virtualinvoke $stack143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", allowedLocality: ") AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack145 = virtualinvoke $stack144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(allowedLocality) AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack146 = virtualinvoke $stack145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", priority: ") AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack147 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack148 = virtualinvoke $stack146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack147) AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack149 = virtualinvoke $stack148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", app attempt id: ") AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack150 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId attemptId> AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack151 = virtualinvoke $stack149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack150) AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack152 = virtualinvoke $stack151.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack139.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack152) AT LINE 995 with ID [12736e5c-961a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack100 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack101 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assign container on ") AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack102 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode: java.lang.String getNodeName()>() AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack103 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack102) AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack104 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node, assignType: RACK_LOCAL") AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack105 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", allowedLocality: ") AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(allowedLocality) AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", priority: ") AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack108 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack109 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack108) AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack110 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", app attempt id: ") AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack111 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId attemptId> AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack112 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack111) AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack113 = virtualinvoke $stack112.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack100.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack113) AT LINE 1012 with ID [9c74a09a-f991]
2020-08-25 12:10:06 [INFO] - 	 -> $stack69 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assign container on ") AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack71 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode: java.lang.String getNodeName()>() AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack71) AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node, assignType: OFF_SWITCH") AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", allowedLocality: ") AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(allowedLocality) AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", priority: ") AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack77 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack78 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack77) AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", app attempt id: ") AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack80 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId attemptId> AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack80) AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack69.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack82) AT LINE 1031 with ID [0e73067c-6125]
2020-08-25 12:10:06 [INFO] - 	 -> $stack48 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t assign container on ") AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack50 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode: java.lang.String getNodeName()>() AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack50) AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" node, allowedLocality: ") AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(allowedLocality) AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", priority: ") AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack55 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack55) AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", app attempt id: ") AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack58 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId attemptId> AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack58) AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack48.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack60) AT LINE 1043 with ID [0be4c2d8-afae]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if mi == null goto (branch) at line 429 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack32 == 0 goto $stack33 = this.<org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.hadoop.yarn.client.api.TimelineClient timelineClient> at line 449 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack45 == 0 goto $stack29 = <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: java.util.Map fileMap> at line 426 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack50 == 0 goto (branch) at line 445 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack27 == 0 goto $stack28 = this.<org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: boolean forceJobCompletion> at line 417 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack24 == 0 goto $stack25 = this.<org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: java.util.concurrent.BlockingQueue eventQueue> at line 403 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: void serviceStop()> has 11 units and 4 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack88 = <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.commons.logging.Log LOG> AT LINE 385 with ID [c9c3d12a-a848]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack88.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Interrupting Event Handling thread") AT LINE 385 with ID [c9c3d12a-a848]
2020-08-25 12:10:06 [INFO] - 	 -> $stack18 = <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.commons.logging.Log LOG> AT LINE 388 with ID [75c1660c-5e47]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Null event handling thread") AT LINE 388 with ID [75c1660c-5e47]
2020-08-25 12:10:06 [INFO] - 	 -> $stack86 = <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.commons.logging.Log LOG> AT LINE 394 with ID [329fd376-425e]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack86.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Waiting for Event Handling thread to complete") AT LINE 394 with ID [329fd376-425e]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81 = <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.commons.logging.Log LOG> AT LINE 406 with ID [3dac510b-0ef8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack82 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Shutting down timer for ") AT LINE 406 with ID [3dac510b-0ef8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mi) AT LINE 406 with ID [3dac510b-0ef8]
2020-08-25 12:10:06 [INFO] - 	 -> $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 406 with ID [3dac510b-0ef8]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack81.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack84) AT LINE 406 with ID [3dac510b-0ef8]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack78 == 0 goto (branch) at line 249 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if j >= $stack60 goto $stack62 = (long) 250000 at line 243 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack43 >= 0 goto return at line 231 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if i >= 250000 goto virtualinvoke writer.<java.io.Writer: void close()>() at line 221 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TestTextInputFormat: void testSplitableCodecs2()> has 23 units and 3 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack68 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 244 with ID [4f745cc3-f291]
2020-08-25 12:10:06 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("split[") AT LINE 244 with ID [4f745cc3-f291]
2020-08-25 12:10:06 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j) AT LINE 244 with ID [4f745cc3-f291]
2020-08-25 12:10:06 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]= ") AT LINE 244 with ID [4f745cc3-f291]
2020-08-25 12:10:06 [INFO] - 	 -> $stack72 = splits[j] AT LINE 244 with ID [4f745cc3-f291]
2020-08-25 12:10:06 [INFO] - 	 -> $stack73 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack72) AT LINE 244 with ID [4f745cc3-f291]
2020-08-25 12:10:06 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 244 with ID [4f745cc3-f291]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack68.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack74) AT LINE 244 with ID [4f745cc3-f291]
2020-08-25 12:10:06 [INFO] - 	 -> $stack105 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 251 with ID [2466481f-410a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack106 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read ") AT LINE 251 with ID [2466481f-410a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v) AT LINE 251 with ID [2466481f-410a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack108 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 251 with ID [2466481f-410a]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack105.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack108) AT LINE 251 with ID [2466481f-410a]
2020-08-25 12:10:06 [INFO] - 	 -> $stack80 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 263 with ID [67047ce3-11d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack81 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splits[") AT LINE 263 with ID [67047ce3-11d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j) AT LINE 263 with ID [67047ce3-11d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=") AT LINE 263 with ID [67047ce3-11d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack84 = splits[j] AT LINE 263 with ID [67047ce3-11d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack84) AT LINE 263 with ID [67047ce3-11d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=") AT LINE 263 with ID [67047ce3-11d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(counter) AT LINE 263 with ID [67047ce3-11d1]
2020-08-25 12:10:06 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 263 with ID [67047ce3-11d1]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack80.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack88) AT LINE 263 with ID [67047ce3-11d1]
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AppSchedulingInfo: void updateMetricsForAllocatedContainer(org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType,org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode,org.apache.hadoop.yarn.api.records.Container)> has 21 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.AppSchedulingInfo: org.apache.commons.logging.Log LOG> AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: applicationId=") AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.AppSchedulingInfo: org.apache.hadoop.yarn.api.records.ApplicationId applicationId> AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" container=") AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack24 = virtualinvoke containerAllocated.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.ContainerId getId()>() AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24) AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" host=") AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack27 = virtualinvoke containerAllocated.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.NodeId getNodeId()>() AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<org.apache.hadoop.yarn.api.records.NodeId: java.lang.String toString()>() AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack29 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28) AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" user=") AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.AppSchedulingInfo: java.lang.String user> AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31) AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resource=") AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack34 = virtualinvoke containerAllocated.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.Resource getResource()>() AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack34) AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type=") AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(type) AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack38) AT LINE 606 with ID [6261c60b-3006]
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack17 != 0 goto (branch) at line 72 don't merge! Need manual examination!
2020-08-25 12:10:06 [WARN] - Both branch of IfStmt if $stack13 != 0 goto (branch) at line 96 don't merge! Need manual examination!
2020-08-25 12:10:06 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.task.reduce.EventFetcher: void run()> has 2 units and 1 lines
2020-08-25 12:10:06 [INFO] - 	 -> $stack15 = <org.apache.hadoop.mapreduce.task.reduce.EventFetcher: org.apache.commons.logging.Log LOG> AT LINE 71 with ID [a72823a2-5dc9]
2020-08-25 12:10:06 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("GetMapEventsThread about to sleep for 1000") AT LINE 71 with ID [a72823a2-5dc9]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if logVersion > -40 goto $stack455 = virtualinvoke oldFile.<org.apache.hadoop.hdfs.server.namenode.INodeFile: boolean isUnderConstruction()>() at line 943 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if newFile != null goto $stack569 = virtualinvoke iip.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: int length()>() at line 388 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack591 == 0 goto $stack554 = addCloseOp.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$AddCloseOp: long inodeId> at line 382 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if replication#95 >= $stack321 goto $stack322 = addCloseOp#89.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$ConcatDeleteOp: long timestamp> at line 530 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if oldFile#92 >= $stack317 goto $stack318 = <org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp: org.apache.hadoop.hdfs.server.namenode.FSDirectory$DirOp WRITE> at line 524 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack225 != 0 goto addCloseOp#126 = (org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$SymlinkOp) op at line 647 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if addCloseOp#156 != $stack124 goto $stack125 = <org.apache.hadoop.hdfs.server.common.HdfsServerConstants$RollingUpgradeStartupOption: org.apache.hadoop.hdfs.server.common.HdfsServerConstants$RollingUpgradeStartupOption DOWNGRADE> at line 814 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: long applyEditLogOp(org.apache.hadoop.hdfs.server.namenode.FSEditLogOp,org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.common.HdfsServerConstants$StartupOption,int,long)> has 82 units and 8 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack652 = <org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: org.apache.commons.logging.Log LOG> AT LINE 331 with ID [a0a5eb81-0586]
2020-08-25 12:10:07 [INFO] - 	 -> $stack653 = virtualinvoke $stack651.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("replaying edit log: ") AT LINE 331 with ID [a0a5eb81-0586]
2020-08-25 12:10:07 [INFO] - 	 -> $stack654 = virtualinvoke $stack653.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(op) AT LINE 331 with ID [a0a5eb81-0586]
2020-08-25 12:10:07 [INFO] - 	 -> $stack655 = virtualinvoke $stack654.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 331 with ID [a0a5eb81-0586]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack652.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack655) AT LINE 331 with ID [a0a5eb81-0586]
2020-08-25 12:10:07 [INFO] - 	 -> $stack620 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack621 = op.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp: org.apache.hadoop.hdfs.server.namenode.FSEditLogOpCodes opCode> AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack622 = virtualinvoke $stack619.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack621) AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack623 = virtualinvoke $stack622.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack624 = virtualinvoke $stack623.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack625 = virtualinvoke $stack624.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numblocks : ") AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack626 = addCloseOp.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$AddCloseOp: org.apache.hadoop.hdfs.protocol.Block[] blocks> AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack627 = lengthof $stack626 AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack628 = virtualinvoke $stack625.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack627) AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack629 = virtualinvoke $stack628.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clientHolder ") AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack630 = addCloseOp.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$AddCloseOp: java.lang.String clientName> AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack631 = virtualinvoke $stack629.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack630) AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack632 = virtualinvoke $stack631.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clientMachine ") AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack633 = addCloseOp.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$AddCloseOp: java.lang.String clientMachine> AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack634 = virtualinvoke $stack632.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack633) AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack635 = virtualinvoke $stack634.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack620.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack635) AT LINE 341 with ID [4729ec0f-2b18]
2020-08-25 12:10:07 [INFO] - 	 -> $stack517 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 391 with ID [c52d7252-1abb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack518 = interfaceinvoke $stack517.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 391 with ID [c52d7252-1abb]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack518 == 0 goto $stack521 = this.<org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: org.apache.hadoop.hdfs.server.namenode.FSNamesystem fsNamesys> AT LINE 391 with ID [c52d7252-1abb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack540 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 392 with ID [c52d7252-1abb]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack540.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Reopening an already-closed file for append") AT LINE 392 with ID [c52d7252-1abb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack471 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack472 = op.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp: org.apache.hadoop.hdfs.server.namenode.FSEditLogOpCodes opCode> AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack473 = virtualinvoke $stack470.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack472) AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack474 = virtualinvoke $stack473.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack475 = virtualinvoke $stack474.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack476 = virtualinvoke $stack475.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numblocks : ") AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack477 = addCloseOp.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$AddCloseOp: org.apache.hadoop.hdfs.protocol.Block[] blocks> AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack478 = lengthof $stack477 AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack479 = virtualinvoke $stack476.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack478) AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack480 = virtualinvoke $stack479.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clientHolder ") AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack481 = addCloseOp.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$AddCloseOp: java.lang.String clientName> AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack482 = virtualinvoke $stack480.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack481) AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack483 = virtualinvoke $stack482.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clientMachine ") AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack484 = addCloseOp.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$AddCloseOp: java.lang.String clientMachine> AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack485 = virtualinvoke $stack483.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack484) AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack486 = virtualinvoke $stack485.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack471.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack486) AT LINE 422 with ID [24c9dba5-6722]
2020-08-25 12:10:07 [INFO] - 	 -> $stack422 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack423 = op.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp: org.apache.hadoop.hdfs.server.namenode.FSEditLogOpCodes opCode> AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack424 = virtualinvoke $stack421.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack423) AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack425 = virtualinvoke $stack424.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack426 = virtualinvoke $stack425.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack427 = virtualinvoke $stack426.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clientName ") AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack428 = addCloseOp#72.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$AppendOp: java.lang.String clientName> AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack429 = virtualinvoke $stack427.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack428) AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack430 = virtualinvoke $stack429.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clientMachine ") AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack431 = addCloseOp#72.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$AppendOp: java.lang.String clientMachine> AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack432 = virtualinvoke $stack430.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack431) AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack433 = virtualinvoke $stack432.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" newBlock ") AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack434 = addCloseOp#72.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$AppendOp: boolean newBlock> AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack435 = virtualinvoke $stack433.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack434) AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack436 = virtualinvoke $stack435.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack422.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack436) AT LINE 459 with ID [b4b202a4-1133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack382 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 485 with ID [d50568cb-17d5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack383 = op.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp: org.apache.hadoop.hdfs.server.namenode.FSEditLogOpCodes opCode> AT LINE 485 with ID [d50568cb-17d5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack384 = virtualinvoke $stack381.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack383) AT LINE 485 with ID [d50568cb-17d5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack385 = virtualinvoke $stack384.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 485 with ID [d50568cb-17d5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack386 = virtualinvoke $stack385.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 485 with ID [d50568cb-17d5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack387 = virtualinvoke $stack386.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numblocks : ") AT LINE 485 with ID [d50568cb-17d5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack388 = addCloseOp#78.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$UpdateBlocksOp: org.apache.hadoop.hdfs.protocol.Block[] blocks> AT LINE 485 with ID [d50568cb-17d5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack389 = lengthof $stack388 AT LINE 485 with ID [d50568cb-17d5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack390 = virtualinvoke $stack387.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack389) AT LINE 485 with ID [d50568cb-17d5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack391 = virtualinvoke $stack390.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 485 with ID [d50568cb-17d5]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack382.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack391) AT LINE 485 with ID [d50568cb-17d5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack354 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.commons.logging.Log LOG> AT LINE 502 with ID [0f7f4e6e-90c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack355 = op.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp: org.apache.hadoop.hdfs.server.namenode.FSEditLogOpCodes opCode> AT LINE 502 with ID [0f7f4e6e-90c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack356 = virtualinvoke $stack353.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack355) AT LINE 502 with ID [0f7f4e6e-90c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack357 = virtualinvoke $stack356.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 502 with ID [0f7f4e6e-90c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack358 = virtualinvoke $stack357.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 502 with ID [0f7f4e6e-90c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack359 = virtualinvoke $stack358.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new block id : ") AT LINE 502 with ID [0f7f4e6e-90c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack360 = virtualinvoke addCloseOp#82.<org.apache.hadoop.hdfs.server.namenode.FSEditLogOp$AddBlockOp: org.apache.hadoop.hdfs.protocol.Block getLastBlock()>() AT LINE 502 with ID [0f7f4e6e-90c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack361 = virtualinvoke $stack360.<org.apache.hadoop.hdfs.protocol.Block: long getBlockId()>() AT LINE 502 with ID [0f7f4e6e-90c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack362 = virtualinvoke $stack359.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack361) AT LINE 502 with ID [0f7f4e6e-90c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack363 = virtualinvoke $stack362.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 502 with ID [0f7f4e6e-90c2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack354.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack363) AT LINE 502 with ID [0f7f4e6e-90c2]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if missedNonPartitionedRequestSchedulingOpportunity >= $stack36 goto return null at line 195 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack27 != 0 goto missedNonPartitionedRequestSchedulingOpportunity = 0 at line 165 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack86 != 0 goto $stack26 = interfaceinvoke ps.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet: java.lang.String getPartition()>() at line 154 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack22 != 0 goto $stack23 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp application> at line 144 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack107 == 0 goto $stack20 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.AppSchedulingInfo appInfo> at line 127 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack18 > 0 goto $stack19 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode IGNORE_PARTITION_EXCLUSIVITY> at line 117 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack15 > 0 goto required = virtualinvoke offswitchPendingAsk.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.PendingAsk: org.apache.hadoop.yarn.api.records.Resource getPerAllocationResource()>() at line 106 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.ContainerAllocation preCheckForPlacementSet(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.placement.PlacementSet,org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.SchedulingMode,org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceLimits,org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey)> has 38 units and 5 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack119 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 129 with ID [154ecaa4-ac5d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack120 = virtualinvoke $stack118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip allocating AM container to app_attempt=") AT LINE 129 with ID [154ecaa4-ac5d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack121 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp application> AT LINE 129 with ID [154ecaa4-ac5d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack122 = virtualinvoke $stack121.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 129 with ID [154ecaa4-ac5d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack123 = virtualinvoke $stack120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack122) AT LINE 129 with ID [154ecaa4-ac5d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack124 = virtualinvoke $stack123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", don\'t allow to allocate AM container in non-exclusive mode") AT LINE 129 with ID [154ecaa4-ac5d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack125 = virtualinvoke $stack124.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 129 with ID [154ecaa4-ac5d]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack119.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack125) AT LINE 129 with ID [154ecaa4-ac5d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack92 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 155 with ID [4b737cd8-cba8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack93 = interfaceinvoke $stack92.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 155 with ID [4b737cd8-cba8]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack93 == 0 goto $stack95 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.activities.ActivitiesManager activitiesManager> AT LINE 155 with ID [4b737cd8-cba8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack97 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 156 with ID [4b737cd8-cba8]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack97.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("doesn\'t need containers based on reservation algo!") AT LINE 156 with ID [4b737cd8-cba8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack76 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 168 with ID [9fc903bb-29f5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot allocate required resource=") AT LINE 168 with ID [9fc903bb-29f5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(required) AT LINE 168 with ID [9fc903bb-29f5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because of headroom") AT LINE 168 with ID [9fc903bb-29f5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 168 with ID [9fc903bb-29f5]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack76.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack80) AT LINE 168 with ID [9fc903bb-29f5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip app_attempt=") AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp application> AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack47) AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" priority=") AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = virtualinvoke schedulerKey.<org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey: org.apache.hadoop.yarn.api.records.Priority getPriority()>() AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack50) AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because missed-non-partitioned-resource-request") AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" opportunity under required:") AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Now=") AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(missedNonPartitionedRequestSchedulingOpportunity) AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" required=") AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack57 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.RMContext rmContext> AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack58 = interfaceinvoke $stack57.<org.apache.hadoop.yarn.server.resourcemanager.RMContext: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceScheduler getScheduler()>() AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack59 = interfaceinvoke $stack58.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceScheduler: int getNumClusterNodes()>() AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack60 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack59) AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack44.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack61) AT LINE 198 with ID [7178fd83-17a3]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack35 == 0 goto (branch) at line 138 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack21 == 0 goto (branch) at line 127 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.HAUtilClient: void cloneDelegationTokenForLogicalUri(org.apache.hadoop.security.UserGroupInformation,java.net.URI,java.util.Collection)> has 12 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack38 = <org.apache.hadoop.hdfs.HAUtilClient: org.slf4j.Logger LOG> AT LINE 139 with ID [acaf0639-b42d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mapped HA service delegation token for logical URI ") AT LINE 139 with ID [acaf0639-b42d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(haUri) AT LINE 139 with ID [acaf0639-b42d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to namenode ") AT LINE 139 with ID [acaf0639-b42d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(singleNNAddr) AT LINE 139 with ID [acaf0639-b42d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 139 with ID [acaf0639-b42d]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack38.<org.slf4j.Logger: void debug(java.lang.String)>($stack43) AT LINE 139 with ID [acaf0639-b42d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.HAUtilClient: org.slf4j.Logger LOG> AT LINE 145 with ID [4323064b-f8b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No HA service delegation token found for logical URI ") AT LINE 145 with ID [4323064b-f8b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(haUri) AT LINE 145 with ID [4323064b-f8b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 145 with ID [4323064b-f8b1]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 145 with ID [4323064b-f8b1]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: boolean shouldAllocOrReserveNewContainer(org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,org.apache.hadoop.yarn.api.records.Resource)> has 18 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("needsContainers: app.#re-reserve=") AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack39 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp application> AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: int getReReservations(org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey)>(schedulerKey) AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack41 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack40) AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reserved=") AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(reservedContainers) AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nodeFactor=") AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(nodeFactor) AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" minAllocFactor=") AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.allocator.RegularContainerAllocator: org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp application> AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue getCSLeafQueue()>() AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: float getMinimumAllocationFactor()>() AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack49) AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" starvation=") AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(starvation) AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack53) AT LINE 659 with ID [d670547a-ae26]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if instance != null goto $stack11 = this.<org.apache.hadoop.fs.FsShell: org.apache.htrace.core.Tracer tracer> at line 305 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.fs.FsShell: int run(java.lang.String[])>
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void snapshotMetrics(org.apache.hadoop.metrics2.impl.MetricsSourceAdapter,org.apache.hadoop.metrics2.impl.MetricsBufferBuilder)> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.slf4j.Logger LOG> AT LINE 422 with ID [52387d62-1341]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Snapshotted source ") AT LINE 422 with ID [52387d62-1341]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke sa.<org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: java.lang.String name()>() AT LINE 422 with ID [52387d62-1341]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17) AT LINE 422 with ID [52387d62-1341]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 422 with ID [52387d62-1341]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 422 with ID [52387d62-1341]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack14 == 0 goto (branch) at line 1164 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack36 != 0 goto staticinvoke <org.apache.hadoop.io.nativeio.NativeIO: void copyFileUnbuffered(java.io.File,java.io.File)>(srcFile, destFile) at line 1150 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack35 != 0 goto $stack36 = virtualinvoke destFile.<java.io.File: boolean delete()>() at line 1146 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack53 != 0 goto $stack11 = virtualinvoke destFile.<java.io.File: boolean exists()>() at line 1145 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack9 == 0 goto parentFile = virtualinvoke destFile.<java.io.File: java.io.File getParentFile()>() at line 1134 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack7 = virtualinvoke srcFile.<java.io.File: java.lang.String getCanonicalPath()>() at line 1131 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack5 != 0 goto $stack6 = virtualinvoke srcFile.<java.io.File: boolean isDirectory()>() at line 1128 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if destFile != null goto $stack5 = virtualinvoke srcFile.<java.io.File: boolean exists()>() at line 1125 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if srcFile != null goto (branch) at line 1122 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.common.Storage: void nativeCopyFileUnbuffered(java.io.File,java.io.File,boolean)> has 8 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.common.Storage: org.apache.commons.logging.Log LOG> AT LINE 1171 with ID [21cdd27a-3ee1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to preserve last modified date from\'") AT LINE 1171 with ID [21cdd27a-3ee1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcFile) AT LINE 1171 with ID [21cdd27a-3ee1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to \'") AT LINE 1171 with ID [21cdd27a-3ee1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(destFile) AT LINE 1171 with ID [21cdd27a-3ee1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 1171 with ID [21cdd27a-3ee1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1171 with ID [21cdd27a-3ee1]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 1171 with ID [21cdd27a-3ee1]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: void releaseResource(org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerApp,org.apache.hadoop.yarn.api.records.Resource,java.lang.String,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer)> has 19 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager usersManager> AT LINE 1741 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> user = virtualinvoke $stack11.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager$User updateUserResourceUsage(java.lang.String,org.apache.hadoop.yarn.api.records.Resource,java.lang.String,boolean)>(rmContainers#12, resource, nodePartition, 0) AT LINE 1741 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.commons.logging.Log LOG> AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: java.lang.String getQueueName()>() AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20) AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" used=") AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage queueUsage> AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getUsed()>() AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24) AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numContainers=") AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.LeafQueue: int numContainers> AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack27) AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" user=") AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(rmContainers#12) AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" user-resources=") AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke user.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager$User: org.apache.hadoop.yarn.api.records.Resource getUsed()>() AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack32) AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 1748 with ID [38e291df-63a0]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i >= 3 goto return at line 95 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack76 == 0 goto $stack78 = <org.apache.hadoop.mapreduce.lib.input.TestCombineTextInputFormat: org.apache.commons.logging.Log LOG> at line 125 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.input.TestCombineTextInputFormat: void testFormat()> has 19 units and 5 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack60 = <org.apache.hadoop.mapreduce.lib.input.TestCombineTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 110 with ID [b375c52f-90f2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("split= ") AT LINE 110 with ID [b375c52f-90f2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(split) AT LINE 110 with ID [b375c52f-90f2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 110 with ID [b375c52f-90f2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack60.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack63) AT LINE 110 with ID [b375c52f-90f2]
2020-08-25 12:10:07 [INFO] - 	 -> count = 0 AT LINE 124 with ID [1113cdc9-8b37]
2020-08-25 12:10:07 [INFO] - 	 -> $stack95 = <org.apache.hadoop.mapreduce.lib.input.TestCombineTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 130 with ID [8c3b1773-f937]
2020-08-25 12:10:07 [INFO] - 	 -> $stack96 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read ") AT LINE 130 with ID [8c3b1773-f937]
2020-08-25 12:10:07 [INFO] - 	 -> $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v) AT LINE 130 with ID [8c3b1773-f937]
2020-08-25 12:10:07 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 130 with ID [8c3b1773-f937]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack95.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack98) AT LINE 130 with ID [8c3b1773-f937]
2020-08-25 12:10:07 [INFO] - 	 -> count = count + 1 AT LINE 133 with ID [1113cdc9-8b37]
2020-08-25 12:10:07 [INFO] - 	 -> $stack78 = <org.apache.hadoop.mapreduce.lib.input.TestCombineTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 135 with ID [1113cdc9-8b37]
2020-08-25 12:10:07 [INFO] - 	 -> $stack79 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("split=") AT LINE 135 with ID [1113cdc9-8b37]
2020-08-25 12:10:07 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(split) AT LINE 135 with ID [1113cdc9-8b37]
2020-08-25 12:10:07 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=") AT LINE 135 with ID [1113cdc9-8b37]
2020-08-25 12:10:07 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 135 with ID [1113cdc9-8b37]
2020-08-25 12:10:07 [INFO] - 	 -> $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 135 with ID [1113cdc9-8b37]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack78.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack83) AT LINE 135 with ID [1113cdc9-8b37]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if null != splitter goto $stack21 = interfaceinvoke job.<org.apache.hadoop.mapreduce.JobContext: org.apache.hadoop.conf.Configuration getConfiguration()>() at line 192 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if 1 != targetNumTasks goto singletonSplit#2 = null at line 170 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.mapreduce.lib.db.DataDrivenDBInputFormat: java.util.List getSplits(org.apache.hadoop.mapreduce.JobContext)>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack10 <= 0 goto $stack12 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: org.slf4j.Logger LOG> at line 162 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack5 == null goto $stack6 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() at line 152 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: boolean isStale()> has 19 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: org.slf4j.Logger LOG> AT LINE 156 with ID [2e66780a-76e2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(stale) AT LINE 156 with ID [2e66780a-76e2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: checked shared memory segment.  isStale={}", this, $stack29) AT LINE 156 with ID [2e66780a-76e2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: org.slf4j.Logger LOG> AT LINE 163 with ID [8eec59ff-e348]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = newarray (java.lang.Object)[3] AT LINE 163 with ID [8eec59ff-e348]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18[0] = this AT LINE 163 with ID [8eec59ff-e348]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(stale#3) AT LINE 163 with ID [8eec59ff-e348]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18[1] = $stack22 AT LINE 163 with ID [8eec59ff-e348]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(staleThresholdMs) AT LINE 163 with ID [8eec59ff-e348]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18[2] = $stack24 AT LINE 163 with ID [8eec59ff-e348]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("{} is stale because it\'s {} ms old and staleThreadholdMS={}", $stack18) AT LINE 163 with ID [8eec59ff-e348]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: org.slf4j.Logger LOG> AT LINE 167 with ID [1619b898-deb5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = newarray (java.lang.Object)[3] AT LINE 167 with ID [1619b898-deb5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11[0] = this AT LINE 167 with ID [1619b898-deb5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(stale#3) AT LINE 167 with ID [1619b898-deb5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11[1] = $stack15 AT LINE 167 with ID [1619b898-deb5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(staleThresholdMs) AT LINE 167 with ID [1619b898-deb5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11[2] = $stack17 AT LINE 167 with ID [1619b898-deb5]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("{} is not stale because it\'s only {} ms old and staleThresholdMs={}", $stack11) AT LINE 167 with ID [1619b898-deb5]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$Dumper: void dump()> has 16 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 353 with ID [dd9f58f1-6838]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start dump. Before dump, nonSequentialWriteInMemory == ") AT LINE 353 with ID [dd9f58f1-6838]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$Dumper: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx this$0> AT LINE 353 with ID [dd9f58f1-6838]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = staticinvoke <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong access$400(org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx)>($stack50) AT LINE 353 with ID [dd9f58f1-6838]
2020-08-25 12:10:07 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.util.concurrent.atomic.AtomicLong: long get()>() AT LINE 353 with ID [dd9f58f1-6838]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack52) AT LINE 353 with ID [dd9f58f1-6838]
2020-08-25 12:10:07 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 353 with ID [dd9f58f1-6838]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack48.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack54) AT LINE 353 with ID [dd9f58f1-6838]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 381 with ID [1c5083e3-f1d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("After dump, nonSequentialWriteInMemory == ") AT LINE 381 with ID [1c5083e3-f1d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$Dumper: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx this$0> AT LINE 381 with ID [1c5083e3-f1d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = staticinvoke <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong access$400(org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx)>($stack23) AT LINE 381 with ID [1c5083e3-f1d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.util.concurrent.atomic.AtomicLong: long get()>() AT LINE 381 with ID [1c5083e3-f1d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack25) AT LINE 381 with ID [1c5083e3-f1d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 381 with ID [1c5083e3-f1d2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 381 with ID [1c5083e3-f1d2]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslRpcClient$WrappedOutputStream: void write(byte[],int,int)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 628 with ID [28db6113-9e7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wrapping token of length:") AT LINE 628 with ID [28db6113-9e7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(len) AT LINE 628 with ID [28db6113-9e7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 628 with ID [28db6113-9e7f]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack23) AT LINE 628 with ID [28db6113-9e7f]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack17 >= 0 goto $stack18 = ignored cmp 0L at line 611 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: void outputINodes(java.io.InputStream)> has 8 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: org.slf4j.Logger LOG> AT LINE 628 with ID [6d32d95b-f6c7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = interfaceinvoke $stack34.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 628 with ID [6d32d95b-f6c7]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack35 == 0 goto i = i + 1 AT LINE 628 with ID [6d32d95b-f6c7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack38 = i % 100000 AT LINE 611 with ID [6d32d95b-f6c7]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack38 != 0 goto i = i + 1 AT LINE 611 with ID [6d32d95b-f6c7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack39 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: org.slf4j.Logger LOG> AT LINE 629 with ID [6d32d95b-f6c7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i) AT LINE 629 with ID [6d32d95b-f6c7]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Outputted {} INodes.", $stack41) AT LINE 629 with ID [6d32d95b-f6c7]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack4 != 0 goto $stack5 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> at line 3422 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$ConnectionManager$1: void run()> has 7 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 3426 with ID [a39a2511-bdc5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 3426 with ID [a39a2511-bdc5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.Thread: java.lang.String getName()>() AT LINE 3426 with ID [a39a2511-bdc5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 3426 with ID [a39a2511-bdc5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": task running") AT LINE 3426 with ID [a39a2511-bdc5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3426 with ID [a39a2511-bdc5]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 3426 with ID [a39a2511-bdc5]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack15 == 0 goto (branch) at line 317 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.server.JWTRedirectAuthenticationHandler: boolean validateAudiences(com.nimbusds.jwt.SignedJWT)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = <org.apache.hadoop.security.authentication.server.JWTRedirectAuthenticationHandler: org.slf4j.Logger LOG> AT LINE 318 with ID [4567dc38-0734]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>("JWT token audience has been successfully validated") AT LINE 318 with ID [4567dc38-0734]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp: org.apache.hadoop.hdfs.server.namenode.FSDirRenameOp$RenameResult renameTo(org.apache.hadoop.hdfs.server.namenode.FSDirectory,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.hdfs.server.namenode.INodesInPath,boolean)> has 9 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 481 with ID [cd5aac77-75f2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* FSDirectory.renameTo: ") AT LINE 481 with ID [cd5aac77-75f2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke srcIIP.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>() AT LINE 481 with ID [cd5aac77-75f2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 481 with ID [cd5aac77-75f2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 481 with ID [cd5aac77-75f2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke dstIIP.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>() AT LINE 481 with ID [cd5aac77-75f2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28) AT LINE 481 with ID [cd5aac77-75f2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 481 with ID [cd5aac77-75f2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack30) AT LINE 481 with ID [cd5aac77-75f2]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack38 != 0 goto proxyOut = null at line 1124 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataXceiver: void replaceBlock(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.fs.StorageType,org.apache.hadoop.security.token.Token,java.lang.String,org.apache.hadoop.hdfs.protocol.DatanodeInfo)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack129 = <org.apache.hadoop.hdfs.server.datanode.DataXceiver: org.slf4j.Logger LOG> AT LINE 1153 with ID [b310fe9e-114b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack130 = virtualinvoke $stack128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to datanode ") AT LINE 1153 with ID [b310fe9e-114b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack131 = virtualinvoke $stack130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(oldReplica#9) AT LINE 1153 with ID [b310fe9e-114b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack132 = virtualinvoke $stack131.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1153 with ID [b310fe9e-114b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack129.<org.slf4j.Logger: void debug(java.lang.String)>($stack132) AT LINE 1153 with ID [b310fe9e-114b]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack27 != 0 goto return 1 at line 128 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack44 <= $stack48 goto $stack21 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.slf4j.Logger LOG> at line 128 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack12 <= $stack16 goto $stack17 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.slf4j.Logger LOG> at line 98 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: boolean hasResourcesAvailable(long,long,int)> has 51 units and 6 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.slf4j.Logger LOG> AT LINE 92 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 92 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack7 == 0 goto $stack8 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.apache.hadoop.yarn.api.records.ResourceUtilization containersAllocation> AT LINE 92 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack71 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.slf4j.Logger LOG> AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69 = newarray (java.lang.Object)[3] AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack70 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.apache.hadoop.yarn.api.records.ResourceUtilization containersAllocation> AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack74 = virtualinvoke $stack70.<org.apache.hadoop.yarn.api.records.ResourceUtilization: int getPhysicalMemory()>() AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack74) AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69[0] = $stack75 AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack76 = pMemBytes >> 20 AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack78 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack76) AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69[1] = $stack78 AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack80 = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitor getContainersMonitor()>() AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack81 = interfaceinvoke $stack80.<org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitor: long getPmemAllocatedForContainers()>() AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack82 = $stack81 >> 20 AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack83 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack82) AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69[2] = $stack83 AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack71.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("pMemCheck [current={} + asked={} > allowed={}]", $stack69) AT LINE 93 with ID [ecda844d-267e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.slf4j.Logger LOG> AT LINE 105 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = interfaceinvoke $stack17.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 105 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack18 == 0 goto $stack19 = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitor getContainersMonitor()>() AT LINE 105 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.slf4j.Logger LOG> AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = newarray (java.lang.Object)[4] AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitor getContainersMonitor()>() AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack54 = interfaceinvoke $stack53.<org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitor: boolean isVmemCheckEnabled()>() AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack55 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack54) AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49[0] = $stack55 AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack56 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.apache.hadoop.yarn.api.records.ResourceUtilization containersAllocation> AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<org.apache.hadoop.yarn.api.records.ResourceUtilization: int getVirtualMemory()>() AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack58) AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49[1] = $stack59 AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack60 = vMemBytes >> 20 AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack62 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack60) AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49[2] = $stack62 AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack64 = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitor getContainersMonitor()>() AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack65 = interfaceinvoke $stack64.<org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitor: long getVmemAllocatedForContainers()>() AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack66 = $stack65 >> 20 AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack67 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack66) AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49[3] = $stack67 AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack50.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("before vMemCheck[isEnabled={}, current={} + asked={} > allowed={}]", $stack49) AT LINE 106 with ID [a4f50d04-05f8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.slf4j.Logger LOG> AT LINE 121 with ID [19fb649f-2cfb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = interfaceinvoke $stack21.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 121 with ID [19fb649f-2cfb]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack22 == 0 goto $stack23 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.apache.hadoop.yarn.api.records.ResourceUtilization containersAllocation> AT LINE 121 with ID [19fb649f-2cfb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.slf4j.Logger LOG> AT LINE 122 with ID [19fb649f-2cfb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.apache.hadoop.yarn.api.records.ResourceUtilization containersAllocation> AT LINE 122 with ID [19fb649f-2cfb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = virtualinvoke $stack28.<org.apache.hadoop.yarn.api.records.ResourceUtilization: float getCPU()>() AT LINE 122 with ID [19fb649f-2cfb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($stack31) AT LINE 122 with ID [19fb649f-2cfb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.scheduler.AllocationBasedResourceUtilizationTracker: org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitor getContainersMonitor()>() AT LINE 122 with ID [19fb649f-2cfb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = interfaceinvoke $stack33.<org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitor: long getVCoresAllocatedForContainers()>() AT LINE 122 with ID [19fb649f-2cfb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack34) AT LINE 122 with ID [19fb649f-2cfb]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("before cpuCheck [asked={} > allowed={}]", $stack32, $stack35) AT LINE 122 with ID [19fb649f-2cfb]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.federation.store.utils.FederationStateStoreUtils: void setUsername(com.zaxxer.hikari.HikariDataSource,java.lang.String)> has 4 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack3 = <org.apache.hadoop.yarn.server.federation.store.utils.FederationStateStoreUtils: org.slf4j.Logger LOG> AT LINE 194 with ID [9d8a32f5-ebc1]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("Setting non NULL Username for Store connection") AT LINE 194 with ID [9d8a32f5-ebc1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack2 = <org.apache.hadoop.yarn.server.federation.store.utils.FederationStateStoreUtils: org.slf4j.Logger LOG> AT LINE 196 with ID [c0a0d4d0-53cc]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String)>("NULL Username specified for Store connection, so ignoring") AT LINE 196 with ID [c0a0d4d0-53cc]
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.server.nodemanager.webapp.NMWebServices$2: void write(java.io.OutputStream)>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack17 == 0 goto $stack18 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: boolean amrmProxyEnabled> at line 365 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack15 = virtualinvoke stateStore.<org.apache.hadoop.yarn.server.nodemanager.recovery.NMStateStoreService: java.util.List loadContainersState()>() at line 358 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: void recover()> has 11 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack42 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: org.slf4j.Logger LOG> AT LINE 360 with ID [8a64b0db-f406]
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recovering application with state: ") AT LINE 360 with ID [8a64b0db-f406]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = virtualinvoke proto.<org.apache.hadoop.yarn.proto.YarnServerNodemanagerRecoveryProtos$ContainerManagerApplicationProto: java.lang.String toString()>() AT LINE 360 with ID [8a64b0db-f406]
2020-08-25 12:10:07 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44) AT LINE 360 with ID [8a64b0db-f406]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 360 with ID [8a64b0db-f406]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>($stack46) AT LINE 360 with ID [8a64b0db-f406]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: org.slf4j.Logger LOG> AT LINE 367 with ID [4a6bf6cc-94fe]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recovering container with state: ") AT LINE 367 with ID [4a6bf6cc-94fe]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(proto#4) AT LINE 367 with ID [4a6bf6cc-94fe]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 367 with ID [4a6bf6cc-94fe]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String)>($stack34) AT LINE 367 with ID [4a6bf6cc-94fe]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack23 == null goto (branch) at line 786 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: void removeStoredMasterKey(org.apache.hadoop.security.token.delegation.DelegationKey)> has 11 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 782 with ID [f0c089d4-eb6b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing ZKDTSMDelegationKey_") AT LINE 782 with ID [f0c089d4-eb6b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke key.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 782 with ID [f0c089d4-eb6b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack33) AT LINE 782 with ID [f0c089d4-eb6b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 782 with ID [f0c089d4-eb6b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String)>($stack35) AT LINE 782 with ID [f0c089d4-eb6b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = <org.apache.hadoop.security.token.delegation.ZKDelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 798 with ID [1b37ac4f-af8b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to delete a non-existing znode ") AT LINE 798 with ID [1b37ac4f-af8b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(nodeRemovePath) AT LINE 798 with ID [1b37ac4f-af8b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 798 with ID [1b37ac4f-af8b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 798 with ID [1b37ac4f-af8b]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.resource.DynamicResourceConfiguration: void setVcoresPerNode(java.lang.String,int)> has 8 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.resource.DynamicResourceConfiguration: org.apache.commons.logging.Log LOG> AT LINE 90 with ID [c5514133-2fa9]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DRConf - setVcoresPerNode: nodePrefix=") AT LINE 90 with ID [c5514133-2fa9]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.resource.DynamicResourceConfiguration: java.lang.String getNodePrefix(java.lang.String)>(node) AT LINE 90 with ID [c5514133-2fa9]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 90 with ID [c5514133-2fa9]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", vcores=") AT LINE 90 with ID [c5514133-2fa9]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(vcores) AT LINE 90 with ID [c5514133-2fa9]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 90 with ID [c5514133-2fa9]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack15) AT LINE 90 with ID [c5514133-2fa9]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack26 == 0 goto $stack9 = <org.apache.hadoop.fs.RawLocalFileSystem: org.apache.commons.logging.Log LOG> at line 368 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = <org.apache.hadoop.util.Shell: boolean WINDOWS> at line 354 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.fs.RawLocalFileSystem: boolean rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)> has 7 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = <org.apache.hadoop.fs.RawLocalFileSystem: org.apache.commons.logging.Log LOG> AT LINE 366 with ID [e2311dd9-197e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Falling through to a copy of ") AT LINE 366 with ID [e2311dd9-197e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(src) AT LINE 366 with ID [e2311dd9-197e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 366 with ID [e2311dd9-197e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dst) AT LINE 366 with ID [e2311dd9-197e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 366 with ID [e2311dd9-197e]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 366 with ID [e2311dd9-197e]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.service.launcher.ServiceLauncher: void noteException(org.apache.hadoop.util.ExitUtil$ExitException)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack2 = <org.apache.hadoop.service.launcher.ServiceLauncher: org.slf4j.Logger LOG> AT LINE 331 with ID [0a7b12fe-e2fc]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("Exception raised", exitException) AT LINE 331 with ID [0a7b12fe-e2fc]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.registry.server.services.RegistryAdminService$AsyncPurge: java.lang.Integer call()> has 5 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack1 = staticinvoke <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger access$000()>() AT LINE 512 with ID [36530e67-7e74]
2020-08-25 12:10:07 [INFO] - 	 -> $stack2 = interfaceinvoke $stack1.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 512 with ID [36530e67-7e74]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack2 == 0 goto $stack7 = this.<org.apache.hadoop.registry.server.services.RegistryAdminService$AsyncPurge: org.apache.hadoop.registry.server.services.RegistryAdminService this$0> AT LINE 512 with ID [36530e67-7e74]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = staticinvoke <org.apache.hadoop.registry.server.services.RegistryAdminService: org.slf4j.Logger access$000()>() AT LINE 513 with ID [36530e67-7e74]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Executing {}", this) AT LINE 513 with ID [36530e67-7e74]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if nsInfo == null goto $stack4 = new java.io.IOException at line 242 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BPServiceActor: org.apache.hadoop.hdfs.server.protocol.NamespaceInfo retrieveNamespaceInfo()> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.server.datanode.BPServiceActor: org.slf4j.Logger LOG> AT LINE 230 with ID [732f3b4d-df9b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 230 with ID [732f3b4d-df9b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" received versionRequest response: ") AT LINE 230 with ID [732f3b4d-df9b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nsInfo) AT LINE 230 with ID [732f3b4d-df9b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 230 with ID [732f3b4d-df9b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 230 with ID [732f3b4d-df9b]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if shm != null goto $stack9 = virtualinvoke slotId.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$SlotId: int getSlotIdx()>() at line 378 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack5 != 0 goto shmId = virtualinvoke slotId.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$SlotId: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$ShmId getShmId()>() at line 369 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: void unregisterSlot(org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$SlotId)> has 5 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: org.apache.commons.logging.Log LOG> AT LINE 370 with ID [e885ff7f-412a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = interfaceinvoke $stack20.<org.apache.commons.logging.Log: boolean isTraceEnabled()>() AT LINE 370 with ID [e885ff7f-412a]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack21 == 0 goto $stack22 = new java.lang.UnsupportedOperationException AT LINE 370 with ID [e885ff7f-412a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.datanode.ShortCircuitRegistry: org.apache.commons.logging.Log LOG> AT LINE 371 with ID [e885ff7f-412a]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("unregisterSlot: ShortCircuitRegistry is not enabled.") AT LINE 371 with ID [e885ff7f-412a]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack10 != 0 goto $stack4 = virtualinvoke this.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSEditLog getEditLog()>() at line 3795 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: void closeFile(java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 3793 with ID [6b0f0521-cda6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = virtualinvoke file.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[] getBlocks()>() AT LINE 3793 with ID [6b0f0521-cda6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = lengthof $stack7 AT LINE 3793 with ID [6b0f0521-cda6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack8) AT LINE 3793 with ID [6b0f0521-cda6]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("closeFile: {} with {} bloks is persisted to the file system", path, $stack9) AT LINE 3793 with ID [6b0f0521-cda6]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack20 != 0 goto specialinvoke this.<org.apache.hadoop.ipc.Server$Connection: void processConnectionContext(org.apache.hadoop.ipc.RpcWritable$Buffer)>(buffer) at line 2462 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack15 == $stack14 goto specialinvoke this.<org.apache.hadoop.ipc.Server$Connection: void saslReadAndProcess(org.apache.hadoop.ipc.RpcWritable$Buffer)>(buffer) at line 2449 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if callId != -4 goto $stack7 = new org.apache.hadoop.ipc.Server$FatalRpcServerException at line 2455 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$Connection: void processRpcOutOfBandRequest(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcRequestHeaderProto,org.apache.hadoop.ipc.RpcWritable$Buffer)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 2456 with ID [b40f9edd-735c]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>("Received ping message") AT LINE 2456 with ID [b40f9edd-735c]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i$ >= len$ goto virtualinvoke sw.<org.apache.hadoop.util.StopWatch: org.apache.hadoop.util.StopWatch stop()>() at line 341 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack106 <= 0 goto $stack107 = bytesRemaining cmp 0L at line 357 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack131 = totalSize at line 327 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack142 == 0 goto $stack143 = virtualinvoke file.<org.apache.hadoop.fs.FileStatus: long getLen()>() at line 328 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapred.FileInputFormat: org.apache.hadoop.mapred.InputSplit[] getSplits(org.apache.hadoop.mapred.JobConf,int)> has 16 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack96 = <org.apache.hadoop.mapred.FileInputFormat: org.apache.commons.logging.Log LOG> AT LINE 375 with ID [f7df6f28-130d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack97 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File is not splittable so no parallelization is possible: ") AT LINE 375 with ID [f7df6f28-130d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack98 = virtualinvoke file.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() AT LINE 375 with ID [f7df6f28-130d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack99 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack98) AT LINE 375 with ID [f7df6f28-130d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 375 with ID [f7df6f28-130d]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack96.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack100) AT LINE 375 with ID [f7df6f28-130d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = <org.apache.hadoop.mapred.FileInputFormat: org.apache.commons.logging.Log LOG> AT LINE 389 with ID [9be72353-765f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total # of splits generated by getSplits: ") AT LINE 389 with ID [9be72353-765f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = virtualinvoke splits.<java.util.ArrayList: int size()>() AT LINE 389 with ID [9be72353-765f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack50) AT LINE 389 with ID [9be72353-765f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", TimeTaken: ") AT LINE 389 with ID [9be72353-765f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> AT LINE 389 with ID [9be72353-765f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack54 = virtualinvoke sw.<org.apache.hadoop.util.StopWatch: long now(java.util.concurrent.TimeUnit)>($stack53) AT LINE 389 with ID [9be72353-765f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack55 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack54) AT LINE 389 with ID [9be72353-765f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 389 with ID [9be72353-765f]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack48.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack56) AT LINE 389 with ID [9be72353-765f]
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.crypto.OpensslCipher: void <clinit>()>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if toRemoveINodes#4 != null goto $stack30 = fsn.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.LeaseManager leaseManager> at line 372 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if overwrite == 0 goto $stack71 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp CREATE_FILE> at line 345 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack94 != 0 goto $stack22 = <org.apache.hadoop.fs.CreateFlag: org.apache.hadoop.fs.CreateFlag OVERWRITE> at line 355 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: org.apache.hadoop.hdfs.protocol.HdfsFileStatus startFile(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.INodesInPath,org.apache.hadoop.fs.permission.PermissionStatus,java.lang.String,java.lang.String,java.util.EnumSet,boolean,short,long,org.apache.hadoop.fs.FileEncryptionInfo,org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo,boolean)> has 10 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack41 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 384 with ID [9b15e784-ea9a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.startFile: added ") AT LINE 384 with ID [9b15e784-ea9a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 384 with ID [9b15e784-ea9a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inode ") AT LINE 384 with ID [9b15e784-ea9a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack45 = virtualinvoke toRemoveINodes#4.<org.apache.hadoop.hdfs.server.namenode.INodeFile: long getId()>() AT LINE 384 with ID [9b15e784-ea9a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack45) AT LINE 384 with ID [9b15e784-ea9a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 384 with ID [9b15e784-ea9a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(holder) AT LINE 384 with ID [9b15e784-ea9a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 384 with ID [9b15e784-ea9a]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack41.<org.slf4j.Logger: void debug(java.lang.String)>($stack49) AT LINE 384 with ID [9b15e784-ea9a]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack19 != null goto (branch) at line 774 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack12 != null goto (branch) at line 772 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack6 == 0 goto entries = specialinvoke this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.util.List getSubdirEntries()>() at line 740 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.protocol.ExtendedBlock nextBlock()> has 20 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack71 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 749 with ID [6fa04eaf-1c7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69 = newarray (java.lang.Object)[3] AT LINE 749 with ID [6fa04eaf-1c7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack70 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl this$0> AT LINE 749 with ID [6fa04eaf-1c7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack74 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: java.lang.String access$400(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl)>($stack70) AT LINE 749 with ID [6fa04eaf-1c7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69[0] = $stack74 AT LINE 749 with ID [6fa04eaf-1c7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack75 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.lang.String bpid> AT LINE 749 with ID [6fa04eaf-1c7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69[1] = $stack75 AT LINE 749 with ID [6fa04eaf-1c7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack76 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorState state> AT LINE 749 with ID [6fa04eaf-1c7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack78 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorState: java.lang.String access$600(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorState)>($stack76) AT LINE 749 with ID [6fa04eaf-1c7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69[2] = $stack78 AT LINE 749 with ID [6fa04eaf-1c7f]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack71.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("nextBlock({}, {}): advancing from {} to next subdirectory.", $stack69) AT LINE 749 with ID [6fa04eaf-1c7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.slf4j.Logger LOG> AT LINE 766 with ID [bbf71552-9891]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = newarray (java.lang.Object)[3] AT LINE 766 with ID [bbf71552-9891]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl this$0> AT LINE 766 with ID [bbf71552-9891]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = staticinvoke <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: java.lang.String access$400(org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl)>($stack49) AT LINE 766 with ID [bbf71552-9891]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48[0] = $stack53 AT LINE 766 with ID [bbf71552-9891]
2020-08-25 12:10:07 [INFO] - 	 -> $stack54 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl$BlockIteratorImpl: java.lang.String bpid> AT LINE 766 with ID [bbf71552-9891]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48[1] = $stack54 AT LINE 766 with ID [bbf71552-9891]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48[2] = block AT LINE 766 with ID [bbf71552-9891]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack50.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("nextBlock({}, {}): advancing to {}", $stack48) AT LINE 766 with ID [bbf71552-9891]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack53 == 0 goto $stack22 = virtualinvoke rw.<org.apache.hadoop.hdfs.server.blockmanagement.ReplicationWork: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor getSrcNode()>() at line 1743 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack19 == 0 goto targets = virtualinvoke rw.<org.apache.hadoop.hdfs.server.blockmanagement.ReplicationWork: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[] getTargets()>() at line 1732 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack14 != 0 goto numReplicas = virtualinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.NumberReplicas countNodes(org.apache.hadoop.hdfs.protocol.Block)>(block) at line 1724 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: boolean validateReplicationWork(org.apache.hadoop.hdfs.server.blockmanagement.ReplicationWork)> has 4 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack56 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1735 with ID [d16e1681-621b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack56.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("BLOCK* Removing {} from neededReplications as it has enough replicas", block) AT LINE 1735 with ID [d16e1681-621b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger blockLog> AT LINE 1759 with ID [fb50ee6b-bdbb]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("BLOCK* block {} is moved from neededReplications to pendingReplications", block) AT LINE 1759 with ID [fb50ee6b-bdbb]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.security.SecurityUtil: void setTokenServiceUseIp(boolean)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = <org.apache.hadoop.security.SecurityUtil: org.slf4j.Logger LOG> AT LINE 121 with ID [f04da341-3b49]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = virtualinvoke tmp$1236086717.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting hadoop.security.token.service.use_ip to ") AT LINE 121 with ID [f04da341-3b49]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(flag) AT LINE 121 with ID [f04da341-3b49]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 121 with ID [f04da341-3b49]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack10) AT LINE 121 with ID [f04da341-3b49]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i >= numToPick goto $stack14 = this.<org.apache.hadoop.mapreduce.task.reduce.ShuffleSchedulerImpl: java.util.Set pendingHosts> at line 447 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack7 = this.<org.apache.hadoop.mapreduce.task.reduce.ShuffleSchedulerImpl: java.util.Set pendingHosts> at line 439 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.task.reduce.ShuffleSchedulerImpl: org.apache.hadoop.mapreduce.task.reduce.MapHost getHost()> has 12 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = <org.apache.hadoop.mapreduce.task.reduce.ShuffleSchedulerImpl: org.apache.commons.logging.Log LOG> AT LINE 455 with ID [988f11dc-301c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigning ") AT LINE 455 with ID [988f11dc-301c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(host) AT LINE 455 with ID [988f11dc-301c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ") AT LINE 455 with ID [988f11dc-301c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke host.<org.apache.hadoop.mapreduce.task.reduce.MapHost: int getNumKnownMapOutputs()>() AT LINE 455 with ID [988f11dc-301c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack26) AT LINE 455 with ID [988f11dc-301c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 455 with ID [988f11dc-301c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 455 with ID [988f11dc-301c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.Thread: java.lang.String getName()>() AT LINE 455 with ID [988f11dc-301c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30) AT LINE 455 with ID [988f11dc-301c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 455 with ID [988f11dc-301c]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 455 with ID [988f11dc-301c]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack18 = this.<org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.apache.hadoop.hdfs.server.namenode.FSNamesystem namesystem> at line 877 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.apache.hadoop.hdfs.protocol.LocatedBlock getAdditionalDatanode(java.lang.String,long,org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.hdfs.protocol.DatanodeInfo[],java.lang.String[],org.apache.hadoop.hdfs.protocol.DatanodeInfo[],int,java.lang.String)> has 19 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.slf4j.Logger LOG> AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAdditionalDatanode: src=") AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", fileId=") AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(fileId) AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", blk=") AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(blk) AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", existings=") AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(existings) AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack43) AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", excludes=") AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(excludes) AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack46) AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", numAdditionalNodes=") AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numAdditionalNodes) AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clientName=") AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(clientName) AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String)>($stack52) AT LINE 863 with ID [f37f8aff-098d]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack33 == 0 goto staticinvoke <org.apache.hadoop.hdfs.server.namenode.JournalSet: void chainAndMakeRedundantStreams(java.util.Collection,java.util.PriorityQueue,long)>(streams, allStreams, fromTxnId) at line 483 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack39 == 0 goto (branch) at line 487 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.qjournal.client.QuorumJournalManager: void selectInputStreams(java.util.Collection,long,boolean)> has 8 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.qjournal.client.QuorumJournalManager: org.apache.commons.logging.Log LOG> AT LINE 477 with ID [bfcd1d85-c946]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("selectInputStream manifests:\n") AT LINE 477 with ID [bfcd1d85-c946]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>("\n") AT LINE 477 with ID [bfcd1d85-c946]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<com.google.common.base.Joiner: com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String)>(": ") AT LINE 477 with ID [bfcd1d85-c946]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<com.google.common.base.Joiner$MapJoiner: java.lang.String join(java.util.Map)>(resps) AT LINE 477 with ID [bfcd1d85-c946]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 477 with ID [bfcd1d85-c946]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 477 with ID [bfcd1d85-c946]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 477 with ID [bfcd1d85-c946]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if systemCredentials != null goto $stack11 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: org.slf4j.Logger access$300()>() at line 1270 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$LocalizerRunner: org.apache.hadoop.security.Credentials getSystemCredentialsSentFromRM(org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalizerContext)> has 8 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = staticinvoke <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: org.slf4j.Logger access$300()>() AT LINE 1274 with ID [39968cfc-064a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding new framework-token for ") AT LINE 1274 with ID [39968cfc-064a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appId) AT LINE 1274 with ID [39968cfc-064a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for localization: ") AT LINE 1274 with ID [39968cfc-064a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke systemCredentials.<org.apache.hadoop.security.Credentials: java.util.Collection getAllTokens()>() AT LINE 1274 with ID [39968cfc-064a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack18) AT LINE 1274 with ID [39968cfc-064a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1274 with ID [39968cfc-064a]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 1274 with ID [39968cfc-064a]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if alternatePathInfo == null goto return at line 1073 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void removeRMDelegationTokenState(org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier)> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 1083 with ID [897b7ef4-1e48]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing RMDelegationToken_") AT LINE 1083 with ID [897b7ef4-1e48]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke rmDTIdentifier.<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 1083 with ID [897b7ef4-1e48]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack16) AT LINE 1083 with ID [897b7ef4-1e48]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1083 with ID [897b7ef4-1e48]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 1083 with ID [897b7ef4-1e48]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: void setFairShare(org.apache.hadoop.yarn.api.records.Resource)> has 8 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack6 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: org.apache.commons.logging.Log LOG> AT LINE 294 with ID [a5a01d9e-61c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The updated fairShare for ") AT LINE 294 with ID [a5a01d9e-61c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: java.lang.String getName()>() AT LINE 294 with ID [a5a01d9e-61c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 294 with ID [a5a01d9e-61c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ") AT LINE 294 with ID [a5a01d9e-61c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(fairShare) AT LINE 294 with ID [a5a01d9e-61c2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 294 with ID [a5a01d9e-61c2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack12) AT LINE 294 with ID [a5a01d9e-61c2]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack11 == null goto exitmonitor l1 at line 1636 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler$MetaInfo: void shutDownTimer()> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = staticinvoke <org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler: org.apache.commons.logging.Log access$200()>() AT LINE 1627 with ID [eea59aa2-c7c3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Shutting down timer ") AT LINE 1627 with ID [eea59aa2-c7c3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke this.<org.apache.hadoop.mapreduce.jobhistory.JobHistoryEventHandler$MetaInfo: java.lang.String toString()>() AT LINE 1627 with ID [eea59aa2-c7c3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17) AT LINE 1627 with ID [eea59aa2-c7c3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1627 with ID [eea59aa2-c7c3]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 1627 with ID [eea59aa2-c7c3]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack40 >= 0 goto $stack32 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManagerSafeMode: long blockSafe> at line 263 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack58 >= 0 goto $stack30 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManagerSafeMode: boolean $assertionsDisabled> at line 260 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack8 != 0 goto l5 = this at line 245 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack69 != 0 goto $stack8 = virtualinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManagerSafeMode: boolean isSafeModeTrackingBlocks()>() at line 246 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManagerSafeMode: void adjustBlockTotals(int,int)> has 19 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManagerSafeMode: org.slf4j.Logger LOG> AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = newarray (java.lang.Object)[4] AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManagerSafeMode: long blockSafe> AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack11) AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10[0] = $stack15 AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManagerSafeMode: long blockTotal> AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack16) AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10[1] = $stack18 AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManagerSafeMode: long blockSafe> AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = (long) deltaSafe AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = $stack20 + $stack19 AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack21) AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10[2] = $stack23 AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManagerSafeMode: long blockTotal> AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = (long) deltaTotal AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = $stack25 + $stack24 AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack26) AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10[3] = $stack28 AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Adjusting block totals from {}/{} to {}/{}", $stack10) AT LINE 251 with ID [e37422be-b37b]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack28 == 0 goto i$ = i$ + 1 at line 183 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.security.ssl.ReloadingX509TrustManager: javax.net.ssl.X509TrustManager loadTrustManager()> has 7 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = <org.apache.hadoop.security.ssl.ReloadingX509TrustManager: org.slf4j.Logger LOG> AT LINE 173 with ID [d3c9882b-2639]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded truststore \'") AT LINE 173 with ID [d3c9882b-2639]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.security.ssl.ReloadingX509TrustManager: java.io.File file> AT LINE 173 with ID [d3c9882b-2639]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21) AT LINE 173 with ID [d3c9882b-2639]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 173 with ID [d3c9882b-2639]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 173 with ID [d3c9882b-2639]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack24) AT LINE 173 with ID [d3c9882b-2639]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.resolver.order.RouterResolver: void updateSubclusterMapping()> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.server.federation.resolver.order.RouterResolver: org.slf4j.Logger LOG> AT LINE 118 with ID [6dc99231-f1e2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>("Wait to get the mapping for the first time") AT LINE 118 with ID [6dc99231-f1e2]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if routerId != null goto $stack9 = specialinvoke this.<org.apache.hadoop.hdfs.server.federation.router.RouterHeartbeatService: boolean isStoreAvailable()>() at line 81 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.RouterHeartbeatService: void updateStateStore()> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = <org.apache.hadoop.hdfs.server.federation.router.RouterHeartbeatService: org.slf4j.Logger LOG> AT LINE 100 with ID [11bc328c-305f]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Router heartbeat for router {}", routerId) AT LINE 100 with ID [11bc328c-305f]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.util.MBeans: javax.management.ObjectName register(java.lang.String,java.lang.String,java.lang.Object)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = <org.apache.hadoop.metrics2.util.MBeans: org.slf4j.Logger LOG> AT LINE 67 with ID [961eb496-45de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registered ") AT LINE 67 with ID [961eb496-45de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(name) AT LINE 67 with ID [961eb496-45de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 67 with ID [961eb496-45de]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack13) AT LINE 67 with ID [961eb496-45de]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.webapp.NodesPage$NodesBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack253 = <org.apache.hadoop.yarn.server.resourcemanager.webapp.NodesPage$NodesBlock: org.slf4j.Logger LOG> AT LINE 122 with ID [ddd20985-9d36]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack253.<org.slf4j.Logger: void debug(java.lang.String)>("Unexpected state filter for inactive RM node") AT LINE 122 with ID [ddd20985-9d36]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.CuratorService: void zkUpdate(java.lang.String,byte[])> has 7 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack5 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 613 with ID [063034fb-7c4e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack6 = interfaceinvoke $stack5.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 613 with ID [063034fb-7c4e]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack6 == 0 goto $stack7 = this.<org.apache.hadoop.registry.client.impl.zk.CuratorService: org.apache.curator.framework.CuratorFramework curator> AT LINE 613 with ID [063034fb-7c4e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 614 with ID [063034fb-7c4e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = lengthof data AT LINE 614 with ID [063034fb-7c4e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack10) AT LINE 614 with ID [063034fb-7c4e]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Updating {} with {} bytes", path#3, $stack13) AT LINE 614 with ID [063034fb-7c4e]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if conf != null goto $stack3 = staticinvoke <org.apache.hadoop.io.compress.bzip2.Bzip2Factory: int getBlockSize(org.apache.hadoop.conf.Configuration)>(conf) at line 111 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.io.compress.bzip2.Bzip2Compressor: void reinit(org.apache.hadoop.conf.Configuration)> has 5 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = <org.apache.hadoop.io.compress.bzip2.Bzip2Compressor: org.slf4j.Logger LOG> AT LINE 118 with ID [a674c15f-0c39]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = interfaceinvoke $stack8.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 118 with ID [a674c15f-0c39]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack9 == 0 goto return AT LINE 118 with ID [a674c15f-0c39]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = <org.apache.hadoop.io.compress.bzip2.Bzip2Compressor: org.slf4j.Logger LOG> AT LINE 119 with ID [a674c15f-0c39]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>("Reinit compressor with new compression configuration") AT LINE 119 with ID [a674c15f-0c39]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.HftpFileSystem: java.net.URL getNamenodeURL(java.lang.String,java.lang.String)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hdfs.web.HftpFileSystem: org.slf4j.Logger LOG> AT LINE 295 with ID [9ec024f4-94cb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url=") AT LINE 295 with ID [9ec024f4-94cb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(url) AT LINE 295 with ID [9ec024f4-94cb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 295 with ID [9ec024f4-94cb]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void trace(java.lang.String)>($stack21) AT LINE 295 with ID [9ec024f4-94cb]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSClient: void clearDataEncryptionKey()> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack3 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 1692 with ID [517ee380-ebd2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("Clearing encryption key") AT LINE 1692 with ID [517ee380-ebd2]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack17 != 0 goto $stack18 = <org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService: org.apache.commons.logging.Log LOG> at line 128 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService: int loadTokenMasterKeys(org.apache.hadoop.mapreduce.v2.hs.HistoryServerStateStoreService$HistoryServerState)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = <org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService: org.apache.commons.logging.Log LOG> AT LINE 132 with ID [d0242581-4ec6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading master key from ") AT LINE 132 with ID [d0242581-4ec6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 132 with ID [d0242581-4ec6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 132 with ID [d0242581-4ec6]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 132 with ID [d0242581-4ec6]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if parentQueue == null goto return 1 at line 536 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack7 != 0 goto parentQueue = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSParentQueue getParent()>() at line 526 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: boolean fitsInMaxShare(org.apache.hadoop.yarn.api.records.Resource)> has 11 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: org.apache.commons.logging.Log LOG> AT LINE 528 with ID [24164e96-d652]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource usage plus resource request: ") AT LINE 528 with ID [24164e96-d652]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(usagePlusAddition) AT LINE 528 with ID [24164e96-d652]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeds maximum resource allowed:") AT LINE 528 with ID [24164e96-d652]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: org.apache.hadoop.yarn.api.records.Resource getMaxShare()>() AT LINE 528 with ID [24164e96-d652]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack17) AT LINE 528 with ID [24164e96-d652]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in queue ") AT LINE 528 with ID [24164e96-d652]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: java.lang.String getName()>() AT LINE 528 with ID [24164e96-d652]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20) AT LINE 528 with ID [24164e96-d652]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 528 with ID [24164e96-d652]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 528 with ID [24164e96-d652]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack19 <= 0 goto return at line 2280 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.io.SequenceFile$Reader: void getCurrentValue(org.apache.hadoop.io.Writable)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = staticinvoke <org.apache.hadoop.io.SequenceFile: org.slf4j.Logger access$500()>() AT LINE 2296 with ID [5920d77f-1376]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(val) AT LINE 2296 with ID [5920d77f-1376]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is a zero-length value") AT LINE 2296 with ID [5920d77f-1376]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2296 with ID [5920d77f-1376]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 2296 with ID [5920d77f-1376]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack12 == 0 goto return 0 at line 200 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if curReplicas >= 0 goto priLevel = specialinvoke this.<org.apache.hadoop.hdfs.server.blockmanagement.UnderReplicatedBlocks: int getPriority(int,int,int,int)>(curReplicas, readOnlyReplicas, decomissionedReplicas, expectedReplicas) at line 211 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.UnderReplicatedBlocks: boolean add(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,int,int,int,int)> has 10 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger blockStateChangeLog> AT LINE 205 with ID [0b88a8d1-64db]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = newarray (java.lang.Object)[4] AT LINE 205 with ID [0b88a8d1-64db]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13[0] = block AT LINE 205 with ID [0b88a8d1-64db]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(curReplicas) AT LINE 205 with ID [0b88a8d1-64db]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13[1] = $stack17 AT LINE 205 with ID [0b88a8d1-64db]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(expectedReplicas) AT LINE 205 with ID [0b88a8d1-64db]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13[2] = $stack19 AT LINE 205 with ID [0b88a8d1-64db]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(priLevel) AT LINE 205 with ID [0b88a8d1-64db]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13[3] = $stack21 AT LINE 205 with ID [0b88a8d1-64db]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* NameSystem.UnderReplicationBlock.add: {} has only {} replicas and need {} replicas so is added to neededReplications at priority level {}", $stack13) AT LINE 205 with ID [0b88a8d1-64db]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.store.driver.impl.StateStoreFileImpl: java.io.BufferedReader getReader(java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hdfs.server.federation.store.driver.impl.StateStoreFileImpl: org.slf4j.Logger LOG> AT LINE 104 with ID [ad7367f9-91f4]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Loading file: {}", filename) AT LINE 104 with ID [ad7367f9-91f4]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack25 == 0 goto $stack20 = this.<org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.hadoop.util.curator.ZKCuratorManager zkManager> at line 1014 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if alternatePathInfo == null goto return at line 1000 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: void removeApp(java.lang.String,boolean,java.util.Set)> has 8 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack38 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 1010 with ID [5971c07a-cc10]
2020-08-25 12:10:07 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing info for app: ") AT LINE 1010 with ID [5971c07a-cc10]
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(removeAppId) AT LINE 1010 with ID [5971c07a-cc10]
2020-08-25 12:10:07 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at: ") AT LINE 1010 with ID [5971c07a-cc10]
2020-08-25 12:10:07 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(appIdRemovePath) AT LINE 1010 with ID [5971c07a-cc10]
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and its attempts.") AT LINE 1010 with ID [5971c07a-cc10]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1010 with ID [5971c07a-cc10]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack44) AT LINE 1010 with ID [5971c07a-cc10]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if application != null goto $stack16 = virtualinvoke container.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.NodeId getNodeId()>() at line 695 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: void completedContainerInternal(org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer,org.apache.hadoop.yarn.api.records.ContainerStatus,org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerEventType)> has 13 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler: org.apache.commons.logging.Log LOG> AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Application attempt ") AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack27) AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" released container ") AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke container.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.ContainerId getId()>() AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack30) AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on node: ") AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(node) AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with event: ") AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(event) AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack36) AT LINE 714 with ID [7f611258-00f4]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack3 != 0 goto $stack4 = this.<org.apache.hadoop.mapred.BackupStore$BackupRamManager: int availableSize> at line 599 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapred.BackupStore$BackupRamManager: int reserve(int)> has 7 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = staticinvoke <org.apache.hadoop.mapred.BackupStore: org.apache.commons.logging.Log access$400()>() AT LINE 604 with ID [64b65c5e-874b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reserving: ") AT LINE 604 with ID [64b65c5e-874b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(reservedSize) AT LINE 604 with ID [64b65c5e-874b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Requested: ") AT LINE 604 with ID [64b65c5e-874b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(requestedSize) AT LINE 604 with ID [64b65c5e-874b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 604 with ID [64b65c5e-874b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 604 with ID [64b65c5e-874b]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void removeBRLeaseIfNeeded(org.apache.hadoop.hdfs.protocol.DatanodeID,org.apache.hadoop.hdfs.server.protocol.BlockReportContext)> has 12 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 2224 with ID [cc3425e9-fae4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = newarray (java.lang.Object)[3] AT LINE 2224 with ID [cc3425e9-fae4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke context.<org.apache.hadoop.hdfs.server.protocol.BlockReportContext: int getCurRpc()>() AT LINE 2224 with ID [cc3425e9-fae4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack18) AT LINE 2224 with ID [cc3425e9-fae4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14[0] = $stack19 AT LINE 2224 with ID [cc3425e9-fae4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke context.<org.apache.hadoop.hdfs.server.protocol.BlockReportContext: int getTotalRpcs()>() AT LINE 2224 with ID [cc3425e9-fae4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack21) AT LINE 2224 with ID [cc3425e9-fae4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14[1] = $stack22 AT LINE 2224 with ID [cc3425e9-fae4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke context.<org.apache.hadoop.hdfs.server.protocol.BlockReportContext: long getReportId()>() AT LINE 2224 with ID [cc3425e9-fae4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($stack24) AT LINE 2224 with ID [cc3425e9-fae4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14[2] = $stack25 AT LINE 2224 with ID [cc3425e9-fae4]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Processing RPC with index {} out of total {} RPCs in processReport 0x{}", $stack14) AT LINE 2224 with ID [cc3425e9-fae4]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 960 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NNThroughputBenchmark$TinyDatanode: void sendHeartbeat()> has 7 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> cmd = arr$[i$] AT LINE 966 with ID [91ee7090-91df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.NNThroughputBenchmark: org.apache.commons.logging.Log access$000()>() AT LINE 962 with ID [91ee7090-91df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendHeartbeat Name-node reply: ") AT LINE 962 with ID [91ee7090-91df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke cmd.<org.apache.hadoop.hdfs.server.protocol.DatanodeCommand: int getAction()>() AT LINE 962 with ID [91ee7090-91df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24) AT LINE 962 with ID [91ee7090-91df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 962 with ID [91ee7090-91df]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 962 with ID [91ee7090-91df]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if masterKeyToUse == null goto $stack16 = new org.apache.hadoop.security.token.SecretManager$InvalidToken at line 181 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack27 != 0 goto (branch) at line 184 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.security.NMTokenSecretManagerInNM: byte[] retrievePassword(org.apache.hadoop.yarn.security.NMTokenIdentifier)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = <org.apache.hadoop.yarn.server.nodemanager.security.NMTokenSecretManagerInNM: org.slf4j.Logger LOG> AT LINE 183 with ID [18895305-7a8f]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>("NMToken password retrieved successfully!!") AT LINE 183 with ID [18895305-7a8f]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapred.pipes.BinaryProtocol: void endOfInput()> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack4 = <org.apache.hadoop.mapred.pipes.BinaryProtocol: org.apache.commons.logging.Log LOG> AT LINE 338 with ID [8d098793-5478]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Sent close command") AT LINE 338 with ID [8d098793-5478]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: java.nio.MappedByteBuffer loadMmapInternal()> has 4 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: org.slf4j.Logger LOG> AT LINE 282 with ID [4bfc6ff1-89cf]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke channel.<java.nio.channels.FileChannel: long size()>() AT LINE 282 with ID [4bfc6ff1-89cf]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack13) AT LINE 282 with ID [4bfc6ff1-89cf]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("{}: created mmap of size {}", this, $stack14) AT LINE 282 with ID [4bfc6ff1-89cf]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack9 = <org.apache.hadoop.yarn.server.timeline.EntityCacheItem: org.slf4j.Logger LOG> at line 142 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack14 == 0 goto (branch) at line 143 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.EntityCacheItem: void forceRelease()> has 3 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.timeline.EntityCacheItem: org.slf4j.Logger LOG> AT LINE 147 with ID [41c82da2-8234]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.yarn.server.timeline.EntityCacheItem: org.apache.hadoop.yarn.api.records.timeline.TimelineEntityGroupId groupId> AT LINE 147 with ID [41c82da2-8234]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Cache for group {} released. ", $stack8) AT LINE 147 with ID [41c82da2-8234]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.io.SequenceFile$Sorter: int mergePass(org.apache.hadoop.fs.Path)> has 5 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack4 = staticinvoke <org.apache.hadoop.io.SequenceFile: org.slf4j.Logger access$500()>() AT LINE 3284 with ID [6a4a766c-7935]
2020-08-25 12:10:07 [INFO] - 	 -> $stack5 = interfaceinvoke $stack4.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 3284 with ID [6a4a766c-7935]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack5 == 0 goto $stack6 = this.<org.apache.hadoop.io.SequenceFile$Sorter: org.apache.hadoop.fs.Path outFile> AT LINE 3284 with ID [6a4a766c-7935]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = staticinvoke <org.apache.hadoop.io.SequenceFile: org.slf4j.Logger access$500()>() AT LINE 3285 with ID [6a4a766c-7935]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>("running merge pass") AT LINE 3285 with ID [6a4a766c-7935]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.UnderReplicatedBlocks: void update(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,int,int,int,int,int,int)> has 32 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack42 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UnderReplicationBlocks.update ") AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" curReplicas ") AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(curReplicas) AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" curExpectedReplicas ") AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(curExpectedReplicas) AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oldReplicas ") AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(oldReplicas) AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oldExpectedReplicas  ") AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(oldExpectedReplicas) AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" curPri  ") AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(curPri) AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oldPri  ") AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(oldPri) AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>($stack57) AT LINE 300 with ID [dce6df15-21e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = this.<org.apache.hadoop.hdfs.server.blockmanagement.UnderReplicatedBlocks: java.util.List priorityQueues> AT LINE 312 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = interfaceinvoke $stack17.<java.util.List: java.lang.Object get(int)>(curPri) AT LINE 312 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = (org.apache.hadoop.hdfs.util.LightWeightLinkedSet) $stack18 AT LINE 312 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<org.apache.hadoop.hdfs.util.LightWeightLinkedSet: boolean add(java.lang.Object)>(block) AT LINE 312 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack20 == 0 goto (branch) AT LINE 312 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger blockStateChangeLog> AT LINE 313 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = newarray (java.lang.Object)[4] AT LINE 313 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30[0] = block AT LINE 313 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(curReplicas) AT LINE 313 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30[1] = $stack34 AT LINE 313 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(curExpectedReplicas) AT LINE 313 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30[2] = $stack36 AT LINE 313 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> $stack38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(curPri) AT LINE 313 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30[3] = $stack38 AT LINE 313 with ID [e80cef04-a687]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("BLOCK* NameSystem.UnderReplicationBlock.update: {} has only {} replicas and needs {} replicas so is added to neededReplications at priority level {}", $stack30) AT LINE 313 with ID [e80cef04-a687]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i#21 >= $stack47 goto return at line 1976 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i >= $stack187 goto $stack188 = this.<org.apache.hadoop.mapred.MapTask$MapOutputBuffer: org.apache.hadoop.mapred.JobConf job> at line 1879 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i#21 >= $stack56 goto $stack57 = this.<org.apache.hadoop.mapred.MapTask$MapOutputBuffer: org.apache.hadoop.mapred.JobConf job> at line 1914 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i >= $stack45 goto $stack46 = this.<org.apache.hadoop.mapred.MapTask$MapOutputBuffer: org.apache.hadoop.mapred.JobConf job> at line 1910 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack39 != 0 goto $stack41 = this.<org.apache.hadoop.mapred.MapTask$MapOutputBuffer: org.apache.hadoop.util.Progress sortPhase> at line 1874 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i >= $stack27 goto $stack28 = this.<org.apache.hadoop.mapred.MapTask$MapOutputBuffer: int partitions> at line 1856 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack24 != 1 goto $stack25 = this.<org.apache.hadoop.mapred.MapTask$MapOutputBuffer: java.util.ArrayList indexCacheList> at line 1841 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i >= $stack23 goto $stack24 = this.<org.apache.hadoop.mapred.MapTask$MapOutputBuffer: int numSpills> at line 1837 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapred.MapTask$MapOutputBuffer: void mergeParts()> has 19 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack165 = staticinvoke <org.apache.hadoop.mapred.MapTask: org.apache.commons.logging.Log access$000()>() AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack167 = virtualinvoke $stack166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MapId=") AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack168 = virtualinvoke $stack167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mapId) AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack169 = virtualinvoke $stack168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Reducer=") AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack170 = virtualinvoke $stack169.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i) AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack171 = virtualinvoke $stack170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Spill =") AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack172 = virtualinvoke $stack171.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i#21) AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack173 = virtualinvoke $stack172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack174 = writer.<org.apache.hadoop.mapred.IndexRecord: long startOffset> AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack175 = virtualinvoke $stack173.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack174) AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack176 = virtualinvoke $stack175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",") AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack177 = writer.<org.apache.hadoop.mapred.IndexRecord: long rawLength> AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack178 = virtualinvoke $stack176.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack177) AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack179 = virtualinvoke $stack178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack180 = writer.<org.apache.hadoop.mapred.IndexRecord: long partLength> AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack181 = virtualinvoke $stack179.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack180) AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack182 = virtualinvoke $stack181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack183 = virtualinvoke $stack182.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack165.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack183) AT LINE 1923 with ID [ece5ae94-9e3e]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack26 == 0 goto $stack27 = new org.apache.hadoop.hdfs.tools.offlineImageViewer.FSImageLoader at line 147 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack18 != 0 goto summary = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSImageUtil: org.apache.hadoop.hdfs.server.namenode.FsImageProto$FileSummary loadSummary(java.io.RandomAccessFile)>(file) at line 112 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.FSImageLoader: org.apache.hadoop.hdfs.tools.offlineImageViewer.FSImageLoader load(java.lang.String)> has 9 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.FSImageLoader: org.apache.commons.logging.Log LOG> AT LINE 154 with ID [aa284483-1b88]
2020-08-25 12:10:07 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading section ") AT LINE 154 with ID [aa284483-1b88]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = virtualinvoke s.<org.apache.hadoop.hdfs.server.namenode.FsImageProto$FileSummary$Section: java.lang.String getName()>() AT LINE 154 with ID [aa284483-1b88]
2020-08-25 12:10:07 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack53) AT LINE 154 with ID [aa284483-1b88]
2020-08-25 12:10:07 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length: ") AT LINE 154 with ID [aa284483-1b88]
2020-08-25 12:10:07 [INFO] - 	 -> $stack56 = virtualinvoke s.<org.apache.hadoop.hdfs.server.namenode.FsImageProto$FileSummary$Section: long getLength()>() AT LINE 154 with ID [aa284483-1b88]
2020-08-25 12:10:07 [INFO] - 	 -> $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack56) AT LINE 154 with ID [aa284483-1b88]
2020-08-25 12:10:07 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 154 with ID [aa284483-1b88]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack51.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack58) AT LINE 154 with ID [aa284483-1b88]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack3 == null goto return at line 309 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DataStreamer$LastExceptionInStreamer: void check(boolean)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.DataStreamer: org.slf4j.Logger LOG> AT LINE 312 with ID [6ff2f336-6d76]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>("Got Exception while checking", $stack7) AT LINE 312 with ID [6ff2f336-6d76]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: void childRemoveStorage(java.lang.String,org.apache.hadoop.fs.StorageType)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.net.DFSTopologyNodeImpl: org.slf4j.Logger LOG> AT LINE 421 with ID [b12373da-7cb8]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("child remove storage: {}:{}", childName, type) AT LINE 421 with ID [b12373da-7cb8]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack24 = virtualinvoke dfsClient.<org.apache.hadoop.hdfs.DFSClient: org.apache.hadoop.hdfs.ClientContext getClientContext()>() at line 214 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack18 > 0 goto $stack21 = this.<org.apache.hadoop.hdfs.DFSOutputStream: long blockSize> at line 210 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.DFSOutputStream: void <init>(org.apache.hadoop.hdfs.DFSClient,java.lang.String,java.util.EnumSet,org.apache.hadoop.util.Progressable,org.apache.hadoop.hdfs.protocol.HdfsFileStatus,org.apache.hadoop.util.DataChecksum)> has 3 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> if progress == null goto specialinvoke this.<org.apache.hadoop.hdfs.DFSOutputStream: void initWritePacketSize()>() AT LINE 202 with ID [8eef6061-32bf]
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = <org.apache.hadoop.hdfs.DFSClient: org.slf4j.Logger LOG> AT LINE 203 with ID [8eef6061-32bf]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Set non-null progress callback on DFSOutputStream {}", src) AT LINE 203 with ID [8eef6061-32bf]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if nRead#2 > 0 goto $stack12 = lengthof buf at line 269 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.TestClientReportBadBlock: void dfsClientReadFile(org.apache.hadoop.fs.Path)>
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.ha.SshFenceByTcpPort$LogAdapter: void log(int,java.lang.String)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack6 = <org.apache.hadoop.ha.SshFenceByTcpPort$LogAdapter: org.slf4j.Logger LOG> AT LINE 297 with ID [34a61f01-25d9]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>(message) AT LINE 297 with ID [34a61f01-25d9]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack12 = <org.apache.hadoop.mapreduce.task.reduce.Fetcher: org.apache.commons.logging.Log LOG> at line 678 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.task.reduce.Fetcher: java.net.URL getMapOutputURL(org.apache.hadoop.mapreduce.task.reduce.MapHost,java.util.Collection)> has 19 units and 9 lines
2020-08-25 12:10:07 [INFO] - 	 -> first = 1 AT LINE 677 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> i$ = interfaceinvoke maps.<java.util.Collection: java.util.Iterator iterator()>() AT LINE 678 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>() AT LINE 678 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> if $stack10 == 0 goto $stack12 = <org.apache.hadoop.mapreduce.task.reduce.Fetcher: org.apache.commons.logging.Log LOG> AT LINE 678 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 687 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> mapId = (org.apache.hadoop.mapreduce.TaskAttemptID) $stack21 AT LINE 687 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> if first != 0 goto virtualinvoke url.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(mapId) AT LINE 679 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> virtualinvoke url.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",") AT LINE 680 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> virtualinvoke url.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(mapId) AT LINE 682 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> first = 0 AT LINE 683 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> goto [?= $stack10 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] AT LINE 684 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = <org.apache.hadoop.mapreduce.task.reduce.Fetcher: org.apache.commons.logging.Log LOG> AT LINE 686 with ID [adff8acb-2000]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MapOutput URL for ") AT LINE 686 with ID [adff8acb-2000]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(host) AT LINE 686 with ID [adff8acb-2000]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ") AT LINE 686 with ID [adff8acb-2000]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke url.<java.lang.StringBuffer: java.lang.String toString()>() AT LINE 686 with ID [adff8acb-2000]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16) AT LINE 686 with ID [adff8acb-2000]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 686 with ID [adff8acb-2000]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 686 with ID [adff8acb-2000]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack6 == 0 goto return 0 at line 36 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack4 == 0 goto $stack5 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: java.lang.String getRackName()>() at line 27 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerAppUtils: boolean isPlaceBlacklisted(org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt,org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode,org.apache.commons.logging.Log)> has 18 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping \'host\' ") AT LINE 29 with ID [81933a27-e356]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: java.lang.String getNodeName()>() AT LINE 29 with ID [81933a27-e356]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 29 with ID [81933a27-e356]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 29 with ID [81933a27-e356]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 29 with ID [81933a27-e356]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24) AT LINE 29 with ID [81933a27-e356]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since it has been blacklisted") AT LINE 29 with ID [81933a27-e356]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 29 with ID [81933a27-e356]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke log.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 29 with ID [81933a27-e356]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping \'rack\' ") AT LINE 38 with ID [e8d09803-6220]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode: java.lang.String getRackName()>() AT LINE 38 with ID [e8d09803-6220]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10) AT LINE 38 with ID [e8d09803-6220]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 38 with ID [e8d09803-6220]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke application.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt: org.apache.hadoop.yarn.api.records.ApplicationId getApplicationId()>() AT LINE 38 with ID [e8d09803-6220]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack13) AT LINE 38 with ID [e8d09803-6220]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since it has been blacklisted") AT LINE 38 with ID [e8d09803-6220]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 38 with ID [e8d09803-6220]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke log.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 38 with ID [e8d09803-6220]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.crypto.key.kms.KMSClientProvider: void <init>(java.net.URI,org.apache.hadoop.conf.Configuration)> has 4 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = <org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.slf4j.Logger LOG> AT LINE 480 with ID [3def3c5a-a129]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.crypto.key.kms.KMSClientProvider: java.net.URL kmsUrl> AT LINE 480 with ID [3def3c5a-a129]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.crypto.key.kms.KMSClientProvider: org.apache.hadoop.io.Text dtService> AT LINE 480 with ID [3def3c5a-a129]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("KMSClientProvider for KMS url: {} delegation token service: {} created.", $stack31, $stack30) AT LINE 480 with ID [3def3c5a-a129]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if token != null goto cmAddr = staticinvoke <org.apache.hadoop.net.NetUtils: java.net.InetSocketAddress createSocketAddr(java.lang.String)>(containerManagerBindAddr) at line 260 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData: org.apache.hadoop.yarn.api.ContainerManagementProtocol newProxy(org.apache.hadoop.yarn.ipc.YarnRPC,java.lang.String,org.apache.hadoop.yarn.api.records.ContainerId,org.apache.hadoop.yarn.api.records.Token)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = <org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: org.apache.commons.logging.Log LOG> AT LINE 268 with ID [0a84d016-002a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening proxy : ") AT LINE 268 with ID [0a84d016-002a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerManagerBindAddr) AT LINE 268 with ID [0a84d016-002a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 268 with ID [0a84d016-002a]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 268 with ID [0a84d016-002a]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker: com.google.protobuf.Message getReturnMessage(java.lang.reflect.Method,org.apache.hadoop.ipc.RpcWritable$Buffer)> has 16 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = <org.apache.hadoop.ipc.ProtobufRpcEngine: org.slf4j.Logger LOG> AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.Thread: long getId()>() AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack14) AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Response <- ") AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = this.<org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker: org.apache.hadoop.ipc.Client$ConnectionId remoteId> AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack17) AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>() AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20) AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {") AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = staticinvoke <com.google.protobuf.TextFormat: java.lang.String shortDebugString(com.google.protobuf.MessageOrBuilder)>(e#4) AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void trace(java.lang.String)>($stack26) AT LINE 286 with ID [c12c10e4-7a68]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if numBytes >= 0 goto $stack24 = call.<org.apache.hadoop.ipc.Server$RpcCall: java.nio.ByteBuffer rpcResponse> at line 1469 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if numElements#5 != 0 goto $stack16 = virtualinvoke responseQueue.<java.util.LinkedList: java.lang.Object removeFirst()>() at line 1453 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$Responder: boolean processResponse(java.util.LinkedList,boolean)> has 30 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack88 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 1463 with ID [b41785fe-dc45]
2020-08-25 12:10:07 [INFO] - 	 -> $stack89 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 1463 with ID [b41785fe-dc45]
2020-08-25 12:10:07 [INFO] - 	 -> $stack90 = virtualinvoke $stack89.<java.lang.Thread: java.lang.String getName()>() AT LINE 1463 with ID [b41785fe-dc45]
2020-08-25 12:10:07 [INFO] - 	 -> $stack91 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack90) AT LINE 1463 with ID [b41785fe-dc45]
2020-08-25 12:10:07 [INFO] - 	 -> $stack92 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": responding to ") AT LINE 1463 with ID [b41785fe-dc45]
2020-08-25 12:10:07 [INFO] - 	 -> $stack93 = virtualinvoke $stack92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(call) AT LINE 1463 with ID [b41785fe-dc45]
2020-08-25 12:10:07 [INFO] - 	 -> $stack94 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1463 with ID [b41785fe-dc45]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack88.<org.slf4j.Logger: void debug(java.lang.String)>($stack94) AT LINE 1463 with ID [b41785fe-dc45]
2020-08-25 12:10:07 [INFO] - 	 -> $stack64 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 1482 with ID [3429a7c1-ade8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack65 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 1482 with ID [3429a7c1-ade8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.Thread: java.lang.String getName()>() AT LINE 1482 with ID [3429a7c1-ade8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack67 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack66) AT LINE 1482 with ID [3429a7c1-ade8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": responding to ") AT LINE 1482 with ID [3429a7c1-ade8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(call) AT LINE 1482 with ID [3429a7c1-ade8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Wrote ") AT LINE 1482 with ID [3429a7c1-ade8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numBytes) AT LINE 1482 with ID [3429a7c1-ade8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes.") AT LINE 1482 with ID [3429a7c1-ade8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1482 with ID [3429a7c1-ade8]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack64.<org.slf4j.Logger: void debug(java.lang.String)>($stack73) AT LINE 1482 with ID [3429a7c1-ade8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 1510 with ID [1da07ce1-4560]
2020-08-25 12:10:07 [INFO] - 	 -> $stack45 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 1510 with ID [1da07ce1-4560]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.Thread: java.lang.String getName()>() AT LINE 1510 with ID [1da07ce1-4560]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack46) AT LINE 1510 with ID [1da07ce1-4560]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": responding to ") AT LINE 1510 with ID [1da07ce1-4560]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(call) AT LINE 1510 with ID [1da07ce1-4560]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Wrote partial ") AT LINE 1510 with ID [1da07ce1-4560]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numBytes) AT LINE 1510 with ID [1da07ce1-4560]
2020-08-25 12:10:07 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes.") AT LINE 1510 with ID [1da07ce1-4560]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1510 with ID [1da07ce1-4560]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String)>($stack53) AT LINE 1510 with ID [1da07ce1-4560]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack6 != null goto return at line 213 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.NamenodeHeartbeatService: void updateState()> has 10 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.server.federation.router.NamenodeHeartbeatService: org.slf4j.Logger LOG> AT LINE 211 with ID [3fb31e5a-396a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke report.<org.apache.hadoop.hdfs.server.federation.resolver.NamenodeStatusReport: org.apache.hadoop.hdfs.server.federation.resolver.FederationNamenodeServiceState getState()>() AT LINE 211 with ID [3fb31e5a-396a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke this.<org.apache.hadoop.hdfs.server.federation.router.NamenodeHeartbeatService: java.lang.String getNamenodeDesc()>() AT LINE 211 with ID [3fb31e5a-396a]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Received service state: {} from HA namenode: {}", $stack18, $stack19) AT LINE 211 with ID [3fb31e5a-396a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.server.federation.router.NamenodeHeartbeatService: org.slf4j.Logger LOG> AT LINE 215 with ID [30a6cf92-b92d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reporting non-HA namenode as operational: ") AT LINE 215 with ID [30a6cf92-b92d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke this.<org.apache.hadoop.hdfs.server.federation.router.NamenodeHeartbeatService: java.lang.String getNamenodeDesc()>() AT LINE 215 with ID [30a6cf92-b92d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10) AT LINE 215 with ID [30a6cf92-b92d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 215 with ID [30a6cf92-b92d]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 215 with ID [30a6cf92-b92d]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.JHSDelegationTokenSecretManager: void removeStoredMasterKey(org.apache.hadoop.security.token.delegation.DelegationKey)> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = <org.apache.hadoop.mapreduce.v2.hs.JHSDelegationTokenSecretManager: org.apache.commons.logging.Log LOG> AT LINE 90 with ID [9ede4575-b706]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing master key ") AT LINE 90 with ID [9ede4575-b706]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = virtualinvoke key.<org.apache.hadoop.security.token.delegation.DelegationKey: int getKeyId()>() AT LINE 90 with ID [9ede4575-b706]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack9) AT LINE 90 with ID [9ede4575-b706]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 90 with ID [9ede4575-b706]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 90 with ID [9ede4575-b706]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.web.DelegationTokenManager: org.apache.hadoop.security.token.Token createToken(org.apache.hadoop.security.UserGroupInformation,java.lang.String,java.lang.String)> has 10 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenManager: org.slf4j.Logger LOG> AT LINE 169 with ID [5eef1dbf-d52f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = newarray (java.lang.Object)[3] AT LINE 169 with ID [5eef1dbf-d52f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9[0] = ugi AT LINE 169 with ID [5eef1dbf-d52f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9[1] = renewer AT LINE 169 with ID [5eef1dbf-d52f]
2020-08-25 12:10:07 [INFO] - 	 -> if service == null goto $stack40 = "" AT LINE 169 with ID [5eef1dbf-d52f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = service AT LINE 175 with ID [5eef1dbf-d52f]
2020-08-25 12:10:07 [INFO] - 	 -> goto [?= $stack9[2] = $stack40] AT LINE 175 with ID [5eef1dbf-d52f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = "" AT LINE 175 with ID [5eef1dbf-d52f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9[2] = $stack40 AT LINE 169 with ID [5eef1dbf-d52f]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Creating token with ugi:{}, renewer:{}, service:{}.", $stack9) AT LINE 169 with ID [5eef1dbf-d52f]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.metrics.TimelineServiceV2Publisher: void putEntity(org.apache.hadoop.yarn.api.records.timelineservice.TimelineEntity,org.apache.hadoop.yarn.api.records.ApplicationId)> has 8 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = <org.apache.hadoop.yarn.server.resourcemanager.metrics.TimelineServiceV2Publisher: org.apache.commons.logging.Log LOG> AT LINE 445 with ID [eb87d84a-2197]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Publishing the entity ") AT LINE 445 with ID [eb87d84a-2197]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(entity) AT LINE 445 with ID [eb87d84a-2197]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", JSON-style content: ") AT LINE 445 with ID [eb87d84a-2197]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = staticinvoke <org.apache.hadoop.yarn.util.timeline.TimelineUtils: java.lang.String dumpTimelineRecordtoJSON(java.lang.Object)>(entity) AT LINE 445 with ID [eb87d84a-2197]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17) AT LINE 445 with ID [eb87d84a-2197]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 445 with ID [eb87d84a-2197]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 445 with ID [eb87d84a-2197]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack21 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.commons.logging.Log LOG> at line 963 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: void updateActiveUsersResourceUsage(java.lang.String)> has 23 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.commons.logging.Log LOG> AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User \'") AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(userName) AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' has become active. Hence move user to active list.") AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Active users size = ") AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: java.util.Set activeUsersSet> AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = interfaceinvoke $stack30.<java.util.Set: int size()>() AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31) AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-active users size = ") AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: java.util.Set nonActiveUsersSet> AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = interfaceinvoke $stack34.<java.util.Set: int size()>() AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack35) AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total Resource usage for active users=") AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack38 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage totalResUsageForActiveUsers> AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getAllUsed()>() AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack39) AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total Resource usage for non-active users=") AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.UsersManager: org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage totalResUsageForNonActiveUsers> AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.ResourceUsage: org.apache.hadoop.yarn.api.records.Resource getAllUsed()>() AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack45 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack44) AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack46) AT LINE 971 with ID [4a15af6a-e00c]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack10 < $stack9 goto return 1 at line 218 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.balancer.NameNodeConnector: boolean shouldContinue(long)> has 15 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.balancer.NameNodeConnector: org.apache.commons.logging.Log LOG> AT LINE 206 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No block has been moved for ") AT LINE 206 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.hdfs.server.balancer.NameNodeConnector: int notChangedIterations> AT LINE 206 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack22) AT LINE 206 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" iterations, ") AT LINE 206 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maximum notChangedIterations before exit is: ") AT LINE 206 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = this.<org.apache.hadoop.hdfs.server.balancer.NameNodeConnector: int maxNotChangedIterations> AT LINE 206 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack26 < 0 goto $stack31 = "Infinite" AT LINE 206 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = this.<org.apache.hadoop.hdfs.server.balancer.NameNodeConnector: int maxNotChangedIterations> AT LINE 211 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack30) AT LINE 211 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> goto [?= $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31)] AT LINE 211 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = "Infinite" AT LINE 211 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31) AT LINE 206 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 206 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 206 with ID [6dff2bb2-d0b6]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack29 == $stack30 goto return resp at line 141 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.TimelineWriter: com.sun.jersey.api.client.ClientResponse doPosting(java.lang.Object,java.lang.String)> has 10 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke resp.<com.sun.jersey.api.client.ClientResponse: java.lang.Object getEntity(java.lang.Class)>(class "Ljava/lang/String;") AT LINE 136 with ID [e31eb939-ecd7]
2020-08-25 12:10:07 [INFO] - 	 -> cause#5 = (java.lang.String) $stack20 AT LINE 136 with ID [e31eb939-ecd7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = <org.apache.hadoop.yarn.client.api.impl.TimelineWriter: org.apache.commons.logging.Log LOG> AT LINE 137 with ID [e31eb939-ecd7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP error code: ") AT LINE 137 with ID [e31eb939-ecd7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke resp.<com.sun.jersey.api.client.ClientResponse: int getStatus()>() AT LINE 137 with ID [e31eb939-ecd7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24) AT LINE 137 with ID [e31eb939-ecd7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Server response : \n") AT LINE 137 with ID [e31eb939-ecd7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(cause#5) AT LINE 137 with ID [e31eb939-ecd7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 137 with ID [e31eb939-ecd7]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack28) AT LINE 137 with ID [e31eb939-ecd7]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if alreadyLaunched != 0 goto $stack28 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.slf4j.Logger LOG> at line 744 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack18 == 0 goto $stack20 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.slf4j.Logger LOG> at line 735 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: void signalContainer(org.apache.hadoop.yarn.api.records.SignalContainerCommand)> has 22 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack95 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.slf4j.Logger LOG> AT LINE 751 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack96 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting pid for container ") AT LINE 751 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerIdStr) AT LINE 751 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to send signal to from pid file ") AT LINE 751 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack99 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.apache.hadoop.fs.Path pidFilePath> AT LINE 751 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack99 == null goto $stack105 = "null" AT LINE 751 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack104 = this.<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.apache.hadoop.fs.Path pidFilePath> AT LINE 760 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack105 = virtualinvoke $stack104.<org.apache.hadoop.fs.Path: java.lang.String toString()>() AT LINE 760 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> goto [?= $stack100 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack105)] AT LINE 760 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack105 = "null" AT LINE 760 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack100 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack105) AT LINE 751 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 751 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack95.<org.slf4j.Logger: void debug(java.lang.String)>($stack101) AT LINE 751 with ID [e0fd4289-d1e8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack66 = <org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: org.slf4j.Logger LOG> AT LINE 766 with ID [9928f152-cbe8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack67 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending signal to pid ") AT LINE 766 with ID [9928f152-cbe8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(processId) AT LINE 766 with ID [9928f152-cbe8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as user ") AT LINE 766 with ID [9928f152-cbe8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(user) AT LINE 766 with ID [9928f152-cbe8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for container ") AT LINE 766 with ID [9928f152-cbe8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(containerIdStr) AT LINE 766 with ID [9928f152-cbe8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 766 with ID [9928f152-cbe8]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack66.<org.slf4j.Logger: void debug(java.lang.String)>($stack73) AT LINE 766 with ID [9928f152-cbe8]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.NFS3Response nullProcedure()> has 5 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack1 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 301 with ID [1308a4d7-f109]
2020-08-25 12:10:07 [INFO] - 	 -> $stack2 = interfaceinvoke $stack1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 301 with ID [1308a4d7-f109]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack2 == 0 goto $stack3 = new org.apache.hadoop.nfs.nfs3.response.NFS3Response AT LINE 301 with ID [1308a4d7-f109]
2020-08-25 12:10:07 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 302 with ID [1308a4d7-f109]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("NFS NULL") AT LINE 302 with ID [1308a4d7-f109]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack24 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> at line 335 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.nfs.NfsExports$RegexMatch: boolean isIncluded(java.lang.String,java.lang.String)> has 24 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> AT LINE 332 with ID [2afb3090-5a8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RegexMatcher \'") AT LINE 332 with ID [2afb3090-5a8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.nfs.NfsExports$RegexMatch: java.util.regex.Pattern pattern> AT LINE 332 with ID [2afb3090-5a8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.util.regex.Pattern: java.lang.String pattern()>() AT LINE 332 with ID [2afb3090-5a8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 332 with ID [2afb3090-5a8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', allowing client \'") AT LINE 332 with ID [2afb3090-5a8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(address) AT LINE 332 with ID [2afb3090-5a8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'") AT LINE 332 with ID [2afb3090-5a8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(hostname) AT LINE 332 with ID [2afb3090-5a8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 332 with ID [2afb3090-5a8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 332 with ID [2afb3090-5a8e]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 332 with ID [2afb3090-5a8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = <org.apache.hadoop.nfs.NfsExports: org.slf4j.Logger LOG> AT LINE 338 with ID [a264e24f-2c0e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RegexMatcher \'") AT LINE 338 with ID [a264e24f-2c0e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = this.<org.apache.hadoop.nfs.NfsExports$RegexMatch: java.util.regex.Pattern pattern> AT LINE 338 with ID [a264e24f-2c0e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.util.regex.Pattern: java.lang.String pattern()>() AT LINE 338 with ID [a264e24f-2c0e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30) AT LINE 338 with ID [a264e24f-2c0e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', denying client \'") AT LINE 338 with ID [a264e24f-2c0e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(address) AT LINE 338 with ID [a264e24f-2c0e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'") AT LINE 338 with ID [a264e24f-2c0e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(hostname) AT LINE 338 with ID [a264e24f-2c0e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 338 with ID [a264e24f-2c0e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 338 with ID [a264e24f-2c0e]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void debug(java.lang.String)>($stack37) AT LINE 338 with ID [a264e24f-2c0e]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack88 == 0 goto $stack90 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> at line 126 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if j >= $stack71 goto $stack73 = (long) length at line 120 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i >= 3 goto $stack50 = <org.apache.hadoop.mapred.TestTextInputFormat: int MAX_LENGTH> at line 106 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i >= length goto virtualinvoke writer.<java.io.Writer: void close()>() at line 93 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if length >= $stack38 goto return at line 85 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapred.TestTextInputFormat: void testFormat()> has 41 units and 8 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 88 with ID [69b05770-28bf]
2020-08-25 12:10:07 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("creating; entries = ") AT LINE 88 with ID [69b05770-28bf]
2020-08-25 12:10:07 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(length) AT LINE 88 with ID [69b05770-28bf]
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 88 with ID [69b05770-28bf]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack43) AT LINE 88 with ID [69b05770-28bf]
2020-08-25 12:10:07 [INFO] - 	 -> $stack59 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 108 with ID [882a7e1f-43fa]
2020-08-25 12:10:07 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splitting: requesting = ") AT LINE 108 with ID [882a7e1f-43fa]
2020-08-25 12:10:07 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numSplits) AT LINE 108 with ID [882a7e1f-43fa]
2020-08-25 12:10:07 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 108 with ID [882a7e1f-43fa]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack59.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack62) AT LINE 108 with ID [882a7e1f-43fa]
2020-08-25 12:10:07 [INFO] - 	 -> $stack65 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 110 with ID [e3e0f7eb-9a01]
2020-08-25 12:10:07 [INFO] - 	 -> $stack66 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splitting: got =        ") AT LINE 110 with ID [e3e0f7eb-9a01]
2020-08-25 12:10:07 [INFO] - 	 -> $stack67 = lengthof splits AT LINE 110 with ID [e3e0f7eb-9a01]
2020-08-25 12:10:07 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack67) AT LINE 110 with ID [e3e0f7eb-9a01]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 110 with ID [e3e0f7eb-9a01]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack65.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack69) AT LINE 110 with ID [e3e0f7eb-9a01]
2020-08-25 12:10:07 [INFO] - 	 -> $stack79 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 121 with ID [5e27455b-91d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("split[") AT LINE 121 with ID [5e27455b-91d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j) AT LINE 121 with ID [5e27455b-91d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]= ") AT LINE 121 with ID [5e27455b-91d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack83 = splits[j] AT LINE 121 with ID [5e27455b-91d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack84 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack83) AT LINE 121 with ID [5e27455b-91d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack85 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 121 with ID [5e27455b-91d2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack79.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack85) AT LINE 121 with ID [5e27455b-91d2]
2020-08-25 12:10:07 [INFO] - 	 -> count = 0 AT LINE 125 with ID [8a45351e-c2de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack104 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 128 with ID [794eed50-42aa]
2020-08-25 12:10:07 [INFO] - 	 -> $stack105 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read ") AT LINE 128 with ID [794eed50-42aa]
2020-08-25 12:10:07 [INFO] - 	 -> $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v) AT LINE 128 with ID [794eed50-42aa]
2020-08-25 12:10:07 [INFO] - 	 -> $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 128 with ID [794eed50-42aa]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack104.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack107) AT LINE 128 with ID [794eed50-42aa]
2020-08-25 12:10:07 [INFO] - 	 -> count = count + 1 AT LINE 136 with ID [8a45351e-c2de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack90 = <org.apache.hadoop.mapred.TestTextInputFormat: org.apache.commons.logging.Log LOG> AT LINE 138 with ID [8a45351e-c2de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack91 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splits[") AT LINE 138 with ID [8a45351e-c2de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack92 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(j) AT LINE 138 with ID [8a45351e-c2de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack93 = virtualinvoke $stack92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=") AT LINE 138 with ID [8a45351e-c2de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack94 = splits[j] AT LINE 138 with ID [8a45351e-c2de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack95 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack94) AT LINE 138 with ID [8a45351e-c2de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack96 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=") AT LINE 138 with ID [8a45351e-c2de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(count) AT LINE 138 with ID [8a45351e-c2de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 138 with ID [8a45351e-c2de]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack90.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack98) AT LINE 138 with ID [8a45351e-c2de]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack55 != 0 goto lb = staticinvoke <org.apache.hadoop.hdfs.server.namenode.FSDirAppendOp: org.apache.hadoop.hdfs.protocol.LocatedBlock prepareFileForAppend(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,org.apache.hadoop.hdfs.server.namenode.INodesInPath,java.lang.String,java.lang.String,boolean,boolean,boolean)>(fsn, iip, holder, clientMachine, newBlock, 1, logRetryCache) at line 142 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack44 != $stack45 goto $stack46 = virtualinvoke lastBlock.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: boolean isComplete()>() at line 123 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack73 != $stack74 goto $stack27 = <org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp: org.apache.hadoop.hdfs.server.namenode.FSNamesystem$RecoverLeaseOp APPEND_FILE> at line 124 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if inode != null goto file = staticinvoke <org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.namenode.INodeFile valueOf(org.apache.hadoop.hdfs.server.namenode.INode,java.lang.String,boolean)>(inode, path, 1) at line 103 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack97 == 0 goto $stack23 = virtualinvoke fsd.<org.apache.hadoop.hdfs.server.namenode.FSDirectory: boolean isPermissionEnabled()>() at line 103 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack105 != 0 goto fsd = virtualinvoke fsn.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSDirectory getFSDirectory()>() at line 96 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirAppendOp: org.apache.hadoop.hdfs.protocol.LastBlockWithStatus appendFile(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker,java.lang.String,java.lang.String,boolean,boolean)> has 13 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> if lb == null goto $stack32 = new org.apache.hadoop.hdfs.protocol.LastBlockWithStatus AT LINE 145 with ID [de404316-faab]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 146 with ID [de404316-faab]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = newarray (java.lang.Object)[5] AT LINE 146 with ID [de404316-faab]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33[0] = srcArg AT LINE 146 with ID [de404316-faab]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33[1] = holder AT LINE 146 with ID [de404316-faab]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33[2] = clientMachine AT LINE 146 with ID [de404316-faab]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = virtualinvoke lb.<org.apache.hadoop.hdfs.protocol.LocatedBlock: org.apache.hadoop.hdfs.protocol.ExtendedBlock getBlock()>() AT LINE 146 with ID [de404316-faab]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33[3] = $stack37 AT LINE 146 with ID [de404316-faab]
2020-08-25 12:10:07 [INFO] - 	 -> $stack39 = virtualinvoke lb.<org.apache.hadoop.hdfs.protocol.LocatedBlock: org.apache.hadoop.hdfs.protocol.ExtendedBlock getBlock()>() AT LINE 146 with ID [de404316-faab]
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<org.apache.hadoop.hdfs.protocol.ExtendedBlock: long getNumBytes()>() AT LINE 146 with ID [de404316-faab]
2020-08-25 12:10:07 [INFO] - 	 -> $stack41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack40) AT LINE 146 with ID [de404316-faab]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33[4] = $stack41 AT LINE 146 with ID [de404316-faab]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack34.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("DIR* NameSystem.appendFile: file {} for {} at {} block {} block size {}", $stack33) AT LINE 146 with ID [de404316-faab]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = new org.apache.hadoop.registry.client.impl.zk.RegistrySecurity$AclListInfo at line 532 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.registry.client.impl.zk.CuratorService: boolean zkMkPath(java.lang.String,org.apache.zookeeper.CreateMode,boolean,java.util.List)> has 10 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> aclInfo = $stack10 AT LINE 536 with ID [ad5bce7e-25df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 538 with ID [ad5bce7e-25df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = interfaceinvoke $stack11.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 538 with ID [ad5bce7e-25df]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack12 == 0 goto $stack13 = this.<org.apache.hadoop.registry.client.impl.zk.CuratorService: org.apache.curator.framework.CuratorFramework curator> AT LINE 538 with ID [ad5bce7e-25df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = <org.apache.hadoop.registry.client.impl.zk.CuratorService: org.slf4j.Logger LOG> AT LINE 539 with ID [ad5bce7e-25df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = newarray (java.lang.Object)[3] AT LINE 539 with ID [ad5bce7e-25df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22[0] = path#2 AT LINE 539 with ID [ad5bce7e-25df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22[1] = mode AT LINE 539 with ID [ad5bce7e-25df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22[2] = aclInfo AT LINE 539 with ID [ad5bce7e-25df]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Creating path {} with mode {} and ACL {}", $stack22) AT LINE 539 with ID [ad5bce7e-25df]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocolPB.ClientDatanodeProtocolTranslatorPB: org.apache.hadoop.hdfs.protocolPB.ClientDatanodeProtocolPB createClientDatanodeProtocolProxy(org.apache.hadoop.hdfs.protocol.DatanodeID,org.apache.hadoop.conf.Configuration,int,boolean,org.apache.hadoop.hdfs.protocol.LocatedBlock)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.protocolPB.ClientDatanodeProtocolTranslatorPB: org.slf4j.Logger LOG> AT LINE 157 with ID [c9ea4acc-8de4]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Connecting to datanode {} addr={}", dnAddr, addr) AT LINE 157 with ID [c9ea4acc-8de4]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if canAllocateReservedContainer != 0 goto $stack37 = this.<org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ReservedContainerCandidatesSelector: org.apache.hadoop.yarn.util.resource.ResourceCalculator rc> at line 257 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack64 == 0 goto (branch) at line 249 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if canPreempt == 0 goto (branch) at line 240 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack34 == 0 goto amPreemptionCost = 0.0F at line 207 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ReservedContainerCandidatesSelector: org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ReservedContainerCandidatesSelector$NodeForPreemption getPreemptionCandidatesOnNode(org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode,org.apache.hadoop.yarn.api.records.Resource,java.util.Map,java.util.Map,org.apache.hadoop.yarn.api.records.Resource,boolean)> has 9 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack80 = <org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ReservedContainerCandidatesSelector: org.apache.commons.logging.Log LOG> AT LINE 227 with ID [ae4f366c-bc2d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack81 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip selecting AM container on host=") AT LINE 227 with ID [ae4f366c-bc2d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack82 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.api.records.NodeId getNodeID()>() AT LINE 227 with ID [ae4f366c-bc2d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack83 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack82) AT LINE 227 with ID [ae4f366c-bc2d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AM container=") AT LINE 227 with ID [ae4f366c-bc2d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack85 = interfaceinvoke c.<org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer: org.apache.hadoop.yarn.api.records.ContainerId getContainerId()>() AT LINE 227 with ID [ae4f366c-bc2d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack86 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack85) AT LINE 227 with ID [ae4f366c-bc2d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 227 with ID [ae4f366c-bc2d]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack80.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack87) AT LINE 227 with ID [ae4f366c-bc2d]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.security.authentication.server.AuthenticationFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)> has 27 units and 8 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = <org.apache.hadoop.security.authentication.server.AuthenticationFilter: org.slf4j.Logger LOG> AT LINE 519 with ID [dc6bc667-f67b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = interfaceinvoke $stack18.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 519 with ID [dc6bc667-f67b]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack19 == 0 goto (branch) AT LINE 519 with ID [dc6bc667-f67b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack101 = <org.apache.hadoop.security.authentication.server.AuthenticationFilter: org.slf4j.Logger LOG> AT LINE 520 with ID [dc6bc667-f67b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack103 = virtualinvoke this.<org.apache.hadoop.security.authentication.server.AuthenticationFilter: java.lang.String getRequestURL(javax.servlet.http.HttpServletRequest)>(httpRequest) AT LINE 520 with ID [dc6bc667-f67b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack101.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Got token {} from httpRequest {}", token, $stack103) AT LINE 520 with ID [dc6bc667-f67b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack71 = <org.apache.hadoop.security.authentication.server.AuthenticationFilter: org.slf4j.Logger LOG> AT LINE 532 with ID [18900a52-58a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack72 = interfaceinvoke $stack71.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 532 with ID [18900a52-58a0]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack72 == 0 goto $stack73 = this.<org.apache.hadoop.security.authentication.server.AuthenticationFilter: org.apache.hadoop.security.authentication.server.AuthenticationHandler authHandler> AT LINE 532 with ID [18900a52-58a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack92 = <org.apache.hadoop.security.authentication.server.AuthenticationFilter: org.slf4j.Logger LOG> AT LINE 533 with ID [18900a52-58a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack94 = virtualinvoke this.<org.apache.hadoop.security.authentication.server.AuthenticationFilter: java.lang.String getRequestURL(javax.servlet.http.HttpServletRequest)>(httpRequest) AT LINE 533 with ID [18900a52-58a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack95 = this.<org.apache.hadoop.security.authentication.server.AuthenticationFilter: org.apache.hadoop.security.authentication.server.AuthenticationHandler authHandler> AT LINE 533 with ID [18900a52-58a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack96 = virtualinvoke $stack95.<java.lang.Object: java.lang.Class getClass()>() AT LINE 533 with ID [18900a52-58a0]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack92.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Request [{}] triggering authentication. handler: {}", $stack94, $stack96) AT LINE 533 with ID [18900a52-58a0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = <org.apache.hadoop.security.authentication.server.AuthenticationFilter: org.slf4j.Logger LOG> AT LINE 551 with ID [172982ad-8a7a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack38 = interfaceinvoke $stack37.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 551 with ID [172982ad-8a7a]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack38 == 0 goto ex#15 = token AT LINE 551 with ID [172982ad-8a7a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack62 = <org.apache.hadoop.security.authentication.server.AuthenticationFilter: org.slf4j.Logger LOG> AT LINE 552 with ID [172982ad-8a7a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack64 = virtualinvoke this.<org.apache.hadoop.security.authentication.server.AuthenticationFilter: java.lang.String getRequestURL(javax.servlet.http.HttpServletRequest)>(httpRequest) AT LINE 552 with ID [172982ad-8a7a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack65 = virtualinvoke token.<org.apache.hadoop.security.authentication.server.AuthenticationToken: java.lang.String getUserName()>() AT LINE 552 with ID [172982ad-8a7a]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack62.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Request [{}] user [{}] authenticated", $stack64, $stack65) AT LINE 552 with ID [172982ad-8a7a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = <org.apache.hadoop.security.authentication.server.AuthenticationFilter: org.slf4j.Logger LOG> AT LINE 595 with ID [295637d8-a955]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = interfaceinvoke $stack22.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 595 with ID [295637d8-a955]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack23 == 0 goto unauthorizedResponse = 0 AT LINE 595 with ID [295637d8-a955]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = <org.apache.hadoop.security.authentication.server.AuthenticationFilter: org.slf4j.Logger LOG> AT LINE 596 with ID [295637d8-a955]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke this.<org.apache.hadoop.security.authentication.server.AuthenticationFilter: java.lang.String getRequestURL(javax.servlet.http.HttpServletRequest)>(httpRequest) AT LINE 596 with ID [295637d8-a955]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("managementOperation returned false for request {}. token: {}", $stack35, token) AT LINE 596 with ID [295637d8-a955]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator: void authenticate(java.net.URL,org.apache.hadoop.security.authentication.client.AuthenticatedURL$Token)> has 10 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator: org.slf4j.Logger LOG> AT LINE 143 with ID [515c1d78-8ef6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack6 = newarray (java.lang.Object)[3] AT LINE 143 with ID [515c1d78-8ef6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack6[0] = url AT LINE 143 with ID [515c1d78-8ef6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack6[1] = token AT LINE 143 with ID [515c1d78-8ef6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = this.<org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator: org.apache.hadoop.security.authentication.client.Authenticator authenticator> AT LINE 143 with ID [515c1d78-8ef6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack7.<java.lang.Object: java.lang.Class getClass()>() AT LINE 143 with ID [515c1d78-8ef6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack6[2] = $stack11 AT LINE 143 with ID [515c1d78-8ef6]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("No delegation token found for url={}, token={}, authenticating with {}", $stack6) AT LINE 143 with ID [515c1d78-8ef6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack4 = <org.apache.hadoop.security.token.delegation.web.DelegationTokenAuthenticator: org.slf4j.Logger LOG> AT LINE 147 with ID [edb684d7-45e2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Authenticated from delegation token. url={}, token={}", url, token) AT LINE 147 with ID [edb684d7-45e2]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.timeline.security.TimelineV1DelegationTokenSecretManagerService$TimelineV1DelegationTokenSecretManager: void storeNewToken(org.apache.hadoop.yarn.security.client.TimelineDelegationTokenIdentifier,long)> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.timeline.security.TimelineV1DelegationTokenSecretManagerService$TimelineV1DelegationTokenSecretManager: org.slf4j.Logger LOG> AT LINE 172 with ID [374dc8b9-2e5f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing token ") AT LINE 172 with ID [374dc8b9-2e5f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke tokenId.<org.apache.hadoop.yarn.security.client.TimelineDelegationTokenIdentifier: int getSequenceNumber()>() AT LINE 172 with ID [374dc8b9-2e5f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack13) AT LINE 172 with ID [374dc8b9-2e5f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 172 with ID [374dc8b9-2e5f]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 172 with ID [374dc8b9-2e5f]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if retry >= 3 goto $stack4 = staticinvoke <java.util.Collections: java.util.List emptyList()>() at line 286 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.security.LdapGroupsMapping: java.util.List getGroups(java.lang.String)>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack54 != 0 goto (branch) at line 832 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = this.<org.apache.hadoop.ipc.Client$Connection: org.apache.hadoop.ipc.Client$ConnectionId remoteId> at line 773 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Client$Connection: void setupIOstreams(java.util.concurrent.atomic.AtomicBoolean)> has 13 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack86 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 785 with ID [35184b52-bc27]
2020-08-25 12:10:07 [INFO] - 	 -> $stack87 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to ") AT LINE 785 with ID [35184b52-bc27]
2020-08-25 12:10:07 [INFO] - 	 -> $stack88 = this.<org.apache.hadoop.ipc.Client$Connection: java.net.InetSocketAddress server> AT LINE 785 with ID [35184b52-bc27]
2020-08-25 12:10:07 [INFO] - 	 -> $stack89 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack88) AT LINE 785 with ID [35184b52-bc27]
2020-08-25 12:10:07 [INFO] - 	 -> $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 785 with ID [35184b52-bc27]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack86.<org.slf4j.Logger: void debug(java.lang.String)>($stack90) AT LINE 785 with ID [35184b52-bc27]
2020-08-25 12:10:07 [INFO] - 	 -> $stack64 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 827 with ID [32f5f066-7fb7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack65 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negotiated QOP is :") AT LINE 827 with ID [32f5f066-7fb7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack66 = this.<org.apache.hadoop.ipc.Client$Connection: org.apache.hadoop.ipc.Client$ConnectionId remoteId> AT LINE 827 with ID [32f5f066-7fb7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack67 = staticinvoke <org.apache.hadoop.ipc.Client$ConnectionId: java.lang.String access$2300(org.apache.hadoop.ipc.Client$ConnectionId)>($stack66) AT LINE 827 with ID [32f5f066-7fb7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack68 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack67) AT LINE 827 with ID [32f5f066-7fb7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 827 with ID [32f5f066-7fb7]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack64.<org.slf4j.Logger: void debug(java.lang.String)>($stack69) AT LINE 827 with ID [32f5f066-7fb7]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.resolver.order.LocalResolver: java.lang.String chooseFirstNamespace(java.lang.String,org.apache.hadoop.hdfs.server.federation.resolver.PathLocation)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hdfs.server.federation.resolver.order.LocalResolver: org.slf4j.Logger LOG> AT LINE 106 with ID [e22737a1-a5a6]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Local namespace for {} is {}", clientAddr, localSubcluster) AT LINE 106 with ID [e22737a1-a5a6]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack13 == 0 goto return at line 2868 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack11 == 1 goto i$ = interfaceinvoke e#2.<java.util.Set: java.util.Iterator iterator()>() at line 2864 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataNode: void checkReadAccess(org.apache.hadoop.hdfs.protocol.ExtendedBlock)> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 2871 with ID [2c691af2-65e6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got: ") AT LINE 2871 with ID [2c691af2-65e6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke id.<org.apache.hadoop.hdfs.security.token.block.BlockTokenIdentifier: java.lang.String toString()>() AT LINE 2871 with ID [2c691af2-65e6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 2871 with ID [2c691af2-65e6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2871 with ID [2c691af2-65e6]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 2871 with ID [2c691af2-65e6]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: java.io.File[] copyBlockFiles(java.io.File,java.io.File,java.io.File,java.io.File,boolean,int,org.apache.hadoop.conf.Configuration)> has 15 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 968 with ID [2d850c74-a1c3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Copied ") AT LINE 968 with ID [2d850c74-a1c3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcMeta) AT LINE 968 with ID [2d850c74-a1c3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 968 with ID [2d850c74-a1c3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dstMeta) AT LINE 968 with ID [2d850c74-a1c3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and calculated checksum") AT LINE 968 with ID [2d850c74-a1c3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 968 with ID [2d850c74-a1c3]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack30) AT LINE 968 with ID [2d850c74-a1c3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 971 with ID [6e239e55-69e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Copied ") AT LINE 971 with ID [6e239e55-69e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcFile) AT LINE 971 with ID [6e239e55-69e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 971 with ID [6e239e55-69e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(dstFile) AT LINE 971 with ID [6e239e55-69e1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 971 with ID [6e239e55-69e1]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 971 with ID [6e239e55-69e1]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.DeletionService: void delete(org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.DeletionTask)> has 12 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack4 = <org.apache.hadoop.yarn.server.nodemanager.DeletionService: org.slf4j.Logger LOG> AT LINE 87 with ID [dc559b58-9068]
2020-08-25 12:10:07 [INFO] - 	 -> $stack5 = interfaceinvoke $stack4.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 87 with ID [dc559b58-9068]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack5 == 0 goto specialinvoke this.<org.apache.hadoop.yarn.server.nodemanager.DeletionService: void recordDeletionTaskInStateStore(org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.DeletionTask)>(deletionTask) AT LINE 87 with ID [dc559b58-9068]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = newarray (java.lang.Object)[2] AT LINE 88 with ID [dc559b58-9068]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.yarn.server.nodemanager.DeletionService: int debugDelay> AT LINE 88 with ID [dc559b58-9068]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack12) AT LINE 88 with ID [dc559b58-9068]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11[0] = $stack15 AT LINE 88 with ID [dc559b58-9068]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke deletionTask.<java.lang.Object: java.lang.String toString()>() AT LINE 88 with ID [dc559b58-9068]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11[1] = $stack17 AT LINE 88 with ID [dc559b58-9068]
2020-08-25 12:10:07 [INFO] - 	 -> msg = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Scheduling DeletionTask (delay %d) : %s", $stack11) AT LINE 88 with ID [dc559b58-9068]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.nodemanager.DeletionService: org.slf4j.Logger LOG> AT LINE 90 with ID [dc559b58-9068]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>(msg) AT LINE 90 with ID [dc559b58-9068]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack36 != 0 goto $stack37 = <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.conf.Configuration conf> at line 905 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i$ >= len$ goto arr$#9 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("HADOOP_TOKEN_FILE_LOCATION") at line 882 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.security.UserGroupInformation: void loginUserFromSubject(javax.security.auth.Subject)> has 15 units and 4 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 863 with ID [54100df9-9568]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>("Assuming keytab is managed externally since logged in from subject.") AT LINE 863 with ID [54100df9-9568]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 902 with ID [fbbd5a55-4448]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke len$#10.<java.io.File: java.lang.String getCanonicalPath()>() AT LINE 902 with ID [fbbd5a55-4448]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Reading credentials from location set in {}: {}", "HADOOP_TOKEN_FILE_LOCATION", $stack35) AT LINE 902 with ID [fbbd5a55-4448]
2020-08-25 12:10:07 [INFO] - 	 -> $stack39 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 913 with ID [0be2a38c-c868]
2020-08-25 12:10:07 [INFO] - 	 -> $stack41 = virtualinvoke i$#11.<org.apache.hadoop.security.Credentials: int numberOfTokens()>() AT LINE 913 with ID [0be2a38c-c868]
2020-08-25 12:10:07 [INFO] - 	 -> $stack42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack41) AT LINE 913 with ID [0be2a38c-c868]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Loaded {} tokens", $stack42) AT LINE 913 with ID [0be2a38c-c868]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = <org.apache.hadoop.security.UserGroupInformation: org.slf4j.Logger LOG> AT LINE 922 with ID [d336ef86-0c2b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UGI loginUser:") AT LINE 922 with ID [d336ef86-0c2b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation loginUser> AT LINE 922 with ID [d336ef86-0c2b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack28) AT LINE 922 with ID [d336ef86-0c2b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 922 with ID [d336ef86-0c2b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String)>($stack30) AT LINE 922 with ID [d336ef86-0c2b]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if removedProxy != 0 goto (branch) at line 162 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if removedProxy == 0 goto (branch) at line 158 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack7 < $stack8 goto $stack9 = this.<org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: int maxConnectedNMs> at line 150 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: void addProxyToCache(java.lang.String,org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData)> has 10 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = <org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: org.apache.commons.logging.Log LOG> AT LINE 152 with ID [062efdc7-c10c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleaning up the proxy cache, size=") AT LINE 152 with ID [062efdc7-c10c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = this.<org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: java.util.Map cmProxy> AT LINE 152 with ID [062efdc7-c10c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = interfaceinvoke $stack27.<java.util.Map: int size()>() AT LINE 152 with ID [062efdc7-c10c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack28) AT LINE 152 with ID [062efdc7-c10c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max=") AT LINE 152 with ID [062efdc7-c10c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy: int maxConnectedNMs> AT LINE 152 with ID [062efdc7-c10c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31) AT LINE 152 with ID [062efdc7-c10c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 152 with ID [062efdc7-c10c]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack33) AT LINE 152 with ID [062efdc7-c10c]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack15 != 0 goto $stack16 = (org.apache.hadoop.service.Service) instance at line 637 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.service.launcher.ServiceLauncher: org.apache.hadoop.service.Service instantiateService(org.apache.hadoop.conf.Configuration)>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = action.<org.apache.hadoop.io.retry.RetryPolicy$RetryAction: long delayMillis> at line 937 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack8 != $stack7 goto $stack9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() at line 926 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Client$Connection: void handleConnectionFailure(int,java.io.IOException)> has 9 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = <org.apache.hadoop.ipc.Client: org.slf4j.Logger LOG> AT LINE 929 with ID [5e68c7d7-c133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to connect to server: ") AT LINE 929 with ID [5e68c7d7-c133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.ipc.Client$Connection: java.net.InetSocketAddress server> AT LINE 929 with ID [5e68c7d7-c133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31) AT LINE 929 with ID [5e68c7d7-c133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 929 with ID [5e68c7d7-c133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = action.<org.apache.hadoop.io.retry.RetryPolicy$RetryAction: java.lang.String reason> AT LINE 929 with ID [5e68c7d7-c133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 929 with ID [5e68c7d7-c133]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 929 with ID [5e68c7d7-c133]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($stack36, ioe) AT LINE 929 with ID [5e68c7d7-c133]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.DataNode$4: void call(java.util.Set,java.util.Set)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hdfs.server.datanode.DataNode: org.slf4j.Logger LOG> AT LINE 2110 with ID [1125b90a-e513]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String)>("checkDiskErrorAsync: no volume failures detected") AT LINE 2110 with ID [1125b90a-e513]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack17 != 0 goto $stack18 = <org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService: org.apache.commons.logging.Log LOG> at line 174 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService: int loadTokens(org.apache.hadoop.mapreduce.v2.hs.HistoryServerStateStoreService$HistoryServerState)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = <org.apache.hadoop.mapreduce.v2.hs.HistoryServerLeveldbStateStoreService: org.apache.commons.logging.Log LOG> AT LINE 178 with ID [6c118ed5-48b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading token from ") AT LINE 178 with ID [6c118ed5-48b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 178 with ID [6c118ed5-48b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 178 with ID [6c118ed5-48b1]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 178 with ID [6c118ed5-48b1]
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.registry.client.impl.zk.CuratorService: java.lang.String dumpRegistryRobustly(boolean)>
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter$AttemptDirCache: org.apache.hadoop.fs.Path createApplicationDir(org.apache.hadoop.yarn.api.records.ApplicationId)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = staticinvoke <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: org.apache.commons.logging.Log access$000()>() AT LINE 1017 with ID [ce9288c3-568e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New app directory created - ") AT LINE 1017 with ID [ce9288c3-568e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appDir) AT LINE 1017 with ID [ce9288c3-568e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1017 with ID [ce9288c3-568e]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 1017 with ID [ce9288c3-568e]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack30 >= 0 goto builder#25 = virtualinvoke this.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker getPermissionChecker()>() at line 2268 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack85 != 0 goto $stack28 = this.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.server.blockmanagement.BlockManager blockManager> at line 2268 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: org.apache.hadoop.hdfs.protocol.HdfsFileStatus startFileInt(java.lang.String,org.apache.hadoop.fs.permission.PermissionStatus,java.lang.String,java.lang.String,java.util.EnumSet,boolean,short,long,org.apache.hadoop.crypto.CryptoProtocolVersion[],boolean)> has 21 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> builder = $stack86 AT LINE 2248 with ID [5bb0325e-d84b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack87 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* NameSystem.startFile: src=") AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(src) AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", holder=") AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(holder) AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack91 = virtualinvoke $stack90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clientMachine=") AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack92 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(clientMachine) AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack93 = virtualinvoke $stack92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", createParent=") AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack94 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(createParent) AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack95 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", replication=") AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack96 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(replication) AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack97 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", createFlag=") AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(flag) AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", blockSize=") AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack100 = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(blockSize) AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", supportedVersions=") AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack102 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(supportedVersions) AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack102) AT LINE 2249 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack104 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 2258 with ID [5bb0325e-d84b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack105 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2258 with ID [5bb0325e-d84b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack104.<org.slf4j.Logger: void debug(java.lang.String)>($stack105) AT LINE 2258 with ID [5bb0325e-d84b]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if storage#54 >= $stack40 goto $stack30 = interfaceinvoke results.<java.util.List: int size()>() at line 201 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack37 == 0 goto $stack38 = new java.util.ArrayList at line 192 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack21 != 0 goto (branch) at line 163 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockPlacementPolicyDefault: org.apache.hadoop.hdfs.server.blockmanagement.DatanodeStorageInfo[] chooseTarget(java.lang.String,int,org.apache.hadoop.net.Node,java.util.Set,long,java.util.List,org.apache.hadoop.hdfs.protocol.BlockStoragePolicy,java.util.EnumSet)>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack75 == 0 goto (branch) at line 236 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i$ >= len$ goto (branch) at line 254 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack41 == 0 goto reader#11 = interfaceinvoke req.<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>() at line 234 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack36 == null goto $stack38 = (org.apache.http.client.methods.HttpPut) base at line 222 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack30 == 0 goto interfaceinvoke resp.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(405) at line 214 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.webproxy.WebAppProxyServlet: void proxyLink(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.net.URI,javax.servlet.http.Cookie,java.lang.String,org.apache.hadoop.yarn.server.webproxy.WebAppProxyServlet$HTTP)> has 10 units and 4 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.webproxy.WebAppProxyServlet: org.slf4j.Logger LOG> AT LINE 205 with ID [3c6527ee-0a41]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = interfaceinvoke $stack23.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 205 with ID [3c6527ee-0a41]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack24 == 0 goto $stack25 = virtualinvoke client.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams getParams()>() AT LINE 205 with ID [3c6527ee-0a41]
2020-08-25 12:10:07 [INFO] - 	 -> $stack88 = <org.apache.hadoop.yarn.server.webproxy.WebAppProxyServlet: org.slf4j.Logger LOG> AT LINE 206 with ID [3c6527ee-0a41]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack88.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("local InetAddress for proxy host: {}", localAddress) AT LINE 206 with ID [3c6527ee-0a41]
2020-08-25 12:10:07 [INFO] - 	 -> $stack78 = <org.apache.hadoop.yarn.server.webproxy.WebAppProxyServlet: org.slf4j.Logger LOG> AT LINE 238 with ID [4dbd57f2-131e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack79 = interfaceinvoke $stack78.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 238 with ID [4dbd57f2-131e]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack79 == 0 goto virtualinvoke base.<org.apache.http.client.methods.HttpRequestBase: void setHeader(java.lang.String,java.lang.String)>(reader#11, line) AT LINE 238 with ID [4dbd57f2-131e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack80 = <org.apache.hadoop.yarn.server.webproxy.WebAppProxyServlet: org.slf4j.Logger LOG> AT LINE 239 with ID [4dbd57f2-131e]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack80.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("REQ HEADER: {} : {}", reader#11, line) AT LINE 239 with ID [4dbd57f2-131e]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.ActiveStandbyElectorBasedElectorService: void fenceOldActive(byte[])> has 5 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack2 = <org.apache.hadoop.yarn.server.resourcemanager.ActiveStandbyElectorBasedElectorService: org.apache.commons.logging.Log LOG> AT LINE 216 with ID [b82e54cf-2fef]
2020-08-25 12:10:07 [INFO] - 	 -> $stack3 = interfaceinvoke $stack2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 216 with ID [b82e54cf-2fef]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack3 == 0 goto return AT LINE 216 with ID [b82e54cf-2fef]
2020-08-25 12:10:07 [INFO] - 	 -> $stack4 = <org.apache.hadoop.yarn.server.resourcemanager.ActiveStandbyElectorBasedElectorService: org.apache.commons.logging.Log LOG> AT LINE 217 with ID [b82e54cf-2fef]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Request to fence old active being ignored, as embedded leader election doesn\'t support fencing") AT LINE 217 with ID [b82e54cf-2fef]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack5 != 0 goto return 1 at line 429 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack2 == null goto $stack3 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: org.apache.hadoop.yarn.api.records.Resource getResourceUsage()>() at line 423 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: boolean assignContainerPreCheck(org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode)> has 16 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: org.apache.commons.logging.Log LOG> AT LINE 425 with ID [7a945870-89b7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigning container failed on node \'") AT LINE 425 with ID [7a945870-89b7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode: java.lang.String getNodeName()>() AT LINE 425 with ID [7a945870-89b7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 425 with ID [7a945870-89b7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it has reserved containers.") AT LINE 425 with ID [7a945870-89b7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 425 with ID [7a945870-89b7]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack26) AT LINE 425 with ID [7a945870-89b7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: org.apache.commons.logging.Log LOG> AT LINE 431 with ID [906cb456-0d5c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assigning container failed on node \'") AT LINE 431 with ID [906cb456-0d5c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode: java.lang.String getNodeName()>() AT LINE 431 with ID [906cb456-0d5c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 431 with ID [906cb456-0d5c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because queue resource usage is larger than MaxShare: ") AT LINE 431 with ID [906cb456-0d5c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue: java.lang.String dumpState()>() AT LINE 431 with ID [906cb456-0d5c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 431 with ID [906cb456-0d5c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 431 with ID [906cb456-0d5c]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 431 with ID [906cb456-0d5c]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack32 != 0 goto (branch) at line 987 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: void nodeUpdate(org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode)> has 18 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.commons.logging.Log LOG> AT LINE 977 with ID [0d2f1a02-36d1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node heartbeat ") AT LINE 977 with ID [0d2f1a02-36d1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = interfaceinvoke nm.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: org.apache.hadoop.yarn.api.records.NodeId getNodeID()>() AT LINE 977 with ID [0d2f1a02-36d1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack16) AT LINE 977 with ID [0d2f1a02-36d1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" available resource = ") AT LINE 977 with ID [0d2f1a02-36d1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.api.records.Resource getUnallocatedResource()>() AT LINE 977 with ID [0d2f1a02-36d1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 977 with ID [0d2f1a02-36d1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 977 with ID [0d2f1a02-36d1]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 977 with ID [0d2f1a02-36d1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoScheduler: org.apache.commons.logging.Log LOG> AT LINE 982 with ID [94aa90eb-5d73]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node after allocation ") AT LINE 982 with ID [94aa90eb-5d73]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = interfaceinvoke nm.<org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode: org.apache.hadoop.yarn.api.records.NodeId getNodeID()>() AT LINE 982 with ID [94aa90eb-5d73]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack25) AT LINE 982 with ID [94aa90eb-5d73]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resource = ") AT LINE 982 with ID [94aa90eb-5d73]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke node.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode: org.apache.hadoop.yarn.api.records.Resource getUnallocatedResource()>() AT LINE 982 with ID [94aa90eb-5d73]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack28) AT LINE 982 with ID [94aa90eb-5d73]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 982 with ID [94aa90eb-5d73]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack30) AT LINE 982 with ID [94aa90eb-5d73]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack19 != null goto $stack3 = this.<org.apache.hadoop.mapred.BackupStore$FileCache: org.apache.hadoop.mapred.IFile$Writer writer> at line 564 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapred.BackupStore$FileCache: void createInDiskSegment()> has 8 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = staticinvoke <org.apache.hadoop.mapred.BackupStore: org.apache.commons.logging.Log access$400()>() AT LINE 563 with ID [84b23108-68e6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disk Segment added to List. Size is ") AT LINE 563 with ID [84b23108-68e6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.mapred.BackupStore$FileCache: org.apache.hadoop.mapred.BackupStore this$0> AT LINE 563 with ID [84b23108-68e6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = $stack14.<org.apache.hadoop.mapred.BackupStore: java.util.List segmentList> AT LINE 563 with ID [84b23108-68e6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = interfaceinvoke $stack15.<java.util.List: int size()>() AT LINE 563 with ID [84b23108-68e6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack16) AT LINE 563 with ID [84b23108-68e6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 563 with ID [84b23108-68e6]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 563 with ID [84b23108-68e6]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.web.webhdfs.ExceptionHandler: io.netty.handler.codec.http.DefaultFullHttpResponse exceptionCaught(java.lang.Throwable)> has 5 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.server.datanode.web.webhdfs.ExceptionHandler: org.apache.commons.logging.Log LOG> AT LINE 51 with ID [6cc57ec2-3993]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = interfaceinvoke $stack7.<org.apache.commons.logging.Log: boolean isTraceEnabled()>() AT LINE 51 with ID [6cc57ec2-3993]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack8 == 0 goto $stack9 = e instanceof com.sun.jersey.api.ParamException AT LINE 51 with ID [6cc57ec2-3993]
2020-08-25 12:10:07 [INFO] - 	 -> $stack57 = <org.apache.hadoop.hdfs.server.datanode.web.webhdfs.ExceptionHandler: org.apache.commons.logging.Log LOG> AT LINE 52 with ID [6cc57ec2-3993]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack57.<org.apache.commons.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>("GOT EXCEPTION", e) AT LINE 52 with ID [6cc57ec2-3993]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack29 == 0 goto i$ = i$ + 1 at line 170 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)> has 11 units and 4 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = <org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: org.slf4j.Logger LOG> AT LINE 140 with ID [22802811-2886]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = interfaceinvoke $stack11.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 140 with ID [22802811-2886]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack12 == 0 goto $stack13 = virtualinvoke this.<org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: java.util.Set getProxyAddresses()>() AT LINE 140 with ID [22802811-2886]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = <org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: org.slf4j.Logger LOG> AT LINE 141 with ID [22802811-2886]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = interfaceinvoke httpReq.<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteAddr()>() AT LINE 141 with ID [22802811-2886]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack51.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Remote address for request is: {}", $stack53) AT LINE 141 with ID [22802811-2886]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: org.slf4j.Logger LOG> AT LINE 177 with ID [73063e9b-1467]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = interfaceinvoke $stack19.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 177 with ID [73063e9b-1467]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack20 == 0 goto interfaceinvoke chain.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(req, resp) AT LINE 177 with ID [73063e9b-1467]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = <org.apache.hadoop.yarn.server.webproxy.amfilter.AmIpFilter: org.slf4j.Logger LOG> AT LINE 178 with ID [73063e9b-1467]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String)>("Could not find proxy-user cookie, so user will not be set") AT LINE 178 with ID [73063e9b-1467]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack15 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() at line 498 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack21 != $stack22 goto (branch) at line 499 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: void output(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hdfs.server.namenode.FsImageProto$FileSummary,java.io.FileInputStream,java.util.ArrayList)> has 6 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> startTime = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() AT LINE 496 with ID [86a1afab-099d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() AT LINE 507 with ID [86a1afab-099d]
2020-08-25 12:10:07 [INFO] - 	 -> i$#2 = $stack15 - startTime AT LINE 507 with ID [86a1afab-099d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.tools.offlineImageViewer.PBImageTextWriter: org.slf4j.Logger LOG> AT LINE 508 with ID [86a1afab-099d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(i$#2) AT LINE 508 with ID [86a1afab-099d]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Time to output inodes: {}ms", $stack18) AT LINE 508 with ID [86a1afab-099d]
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.nodelabels.NonAppendableFSNodeLabelStore: void recover()>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if dn != null goto $stack29 = staticinvoke <org.apache.hadoop.security.UserGroupInformation: boolean isSecurityEnabled()>() at line 364 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.web.resources.NamenodeWebHdfsMethods: java.net.URI redirectURI(javax.ws.rs.core.Response$ResponseBuilder,org.apache.hadoop.hdfs.server.namenode.NameNode,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.hdfs.web.resources.DelegationParam,org.apache.hadoop.hdfs.web.resources.UserParam,org.apache.hadoop.hdfs.web.resources.DoAsParam,java.lang.String,org.apache.hadoop.hdfs.web.resources.HttpOpParam$Op,long,long,java.lang.String,org.apache.hadoop.hdfs.web.resources.Param[])> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack64 = <org.apache.hadoop.hdfs.server.namenode.web.resources.NamenodeWebHdfsMethods: org.apache.commons.logging.Log LOG> AT LINE 405 with ID [8b9c9893-daa6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack65 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirectURI=") AT LINE 405 with ID [8b9c9893-daa6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(uri) AT LINE 405 with ID [8b9c9893-daa6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 405 with ID [8b9c9893-daa6]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack64.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack67) AT LINE 405 with ID [8b9c9893-daa6]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.util.YarnVersionInfo: void main(java.lang.String[])> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack2 = <org.apache.hadoop.yarn.util.YarnVersionInfo: org.apache.commons.logging.Log LOG> AT LINE 104 with ID [91649d4e-4570]
2020-08-25 12:10:07 [INFO] - 	 -> $stack3 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version: ") AT LINE 104 with ID [91649d4e-4570]
2020-08-25 12:10:07 [INFO] - 	 -> $stack4 = staticinvoke <org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getVersion()>() AT LINE 104 with ID [91649d4e-4570]
2020-08-25 12:10:07 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4) AT LINE 104 with ID [91649d4e-4570]
2020-08-25 12:10:07 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 104 with ID [91649d4e-4570]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack6) AT LINE 104 with ID [91649d4e-4570]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack30 != 0 goto return at line 461 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack38 != 0 goto $stack29 = virtualinvoke from.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() at line 456 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack23 != 0 goto specialinvoke this.<org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter: void renameOrMerge(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.Path)>(fs, from, to) at line 467 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i$ >= len$ goto (branch) at line 473 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter: void mergePaths(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileStatus,org.apache.hadoop.fs.Path)> has 7 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = <org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter: org.apache.commons.logging.Log LOG> AT LINE 445 with ID [15ebd59e-3c8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Merging data from ") AT LINE 445 with ID [15ebd59e-3c8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(from) AT LINE 445 with ID [15ebd59e-3c8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 445 with ID [15ebd59e-3c8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(to) AT LINE 445 with ID [15ebd59e-3c8e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 445 with ID [15ebd59e-3c8e]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack48.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack53) AT LINE 445 with ID [15ebd59e-3c8e]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack28 == 0 goto return diagMsg#8 at line 870 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack35 == 0 goto virtualinvoke this.<org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: void computeIgnoreBlacklisting()>() at line 853 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack66 == 0 goto $stack16 = virtualinvoke response.<org.apache.hadoop.yarn.api.protocolrecords.AllocateResponse: org.apache.hadoop.yarn.api.records.Token getAMRMToken()>() at line 830 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: java.util.List getResources()> has 12 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 848 with ID [36361446-2d59]
2020-08-25 12:10:07 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("headroom=") AT LINE 848 with ID [36361446-2d59]
2020-08-25 12:10:07 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e#7) AT LINE 848 with ID [36361446-2d59]
2020-08-25 12:10:07 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 848 with ID [36361446-2d59]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack53.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack56) AT LINE 848 with ID [36361446-2d59]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = interfaceinvoke nmToken#18.<java.util.Iterator: java.lang.Object next()>() AT LINE 866 with ID [59c69744-c47a]
2020-08-25 12:10:07 [INFO] - 	 -> cont = (org.apache.hadoop.yarn.api.records.Container) $stack44 AT LINE 866 with ID [59c69744-c47a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = <org.apache.hadoop.mapreduce.v2.app.rm.RMContainerAllocator: org.apache.commons.logging.Log LOG> AT LINE 854 with ID [59c69744-c47a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received new Container :") AT LINE 854 with ID [59c69744-c47a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(cont) AT LINE 854 with ID [59c69744-c47a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 854 with ID [59c69744-c47a]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack46.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack49) AT LINE 854 with ID [59c69744-c47a]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: void processOverWrite(org.apache.hadoop.hdfs.DFSClient,org.apache.hadoop.nfs.nfs3.request.WRITE3Request,org.jboss.netty.channel.Channel,int,org.apache.hadoop.security.IdMappingServiceProvider)> has 5 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 630 with ID [609c743f-1ecc]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = interfaceinvoke $stack25.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 630 with ID [609c743f-1ecc]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack26 == 0 goto $stack27 = virtualinvoke request.<org.apache.hadoop.nfs.nfs3.request.WRITE3Request: java.nio.ByteBuffer getData()>() AT LINE 630 with ID [609c743f-1ecc]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 631 with ID [609c743f-1ecc]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack35.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Process perfectOverWrite") AT LINE 631 with ID [609c743f-1ecc]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirWriteFileOp: void persistNewBlock(org.apache.hadoop.hdfs.server.namenode.FSNamesystem,java.lang.String,org.apache.hadoop.hdfs.server.namenode.INodeFile)> has 13 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("persistNewBlock: ") AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path) AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with new block ") AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke file.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo getLastBlock()>() AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo: java.lang.String toString()>() AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13) AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", current total block count is ") AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke file.<org.apache.hadoop.hdfs.server.namenode.INodeFile: org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo[] getBlocks()>() AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = lengthof $stack16 AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack17) AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 684 with ID [1e3b860e-e752]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack10 = this.<org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo: org.apache.hadoop.mapreduce.v2.jobhistory.JobIndexInfo jobIndexInfo> at line 396 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo: void moveToDone()> has 11 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack110 = staticinvoke <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log access$000()>() AT LINE 394 with ID [8929c13f-418b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack112 = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveToDone: ") AT LINE 394 with ID [8929c13f-418b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack113 = this.<org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo: org.apache.hadoop.fs.Path historyFile> AT LINE 394 with ID [8929c13f-418b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack114 = virtualinvoke $stack112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack113) AT LINE 394 with ID [8929c13f-418b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack115 = virtualinvoke $stack114.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 394 with ID [8929c13f-418b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack110.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack115) AT LINE 394 with ID [8929c13f-418b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack107 = staticinvoke <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log access$000()>() AT LINE 398 with ID [c2a5df6e-b56e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack108 = interfaceinvoke $stack107.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 398 with ID [c2a5df6e-b56e]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack108 == 0 goto return AT LINE 398 with ID [c2a5df6e-b56e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack109 = staticinvoke <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log access$000()>() AT LINE 399 with ID [c2a5df6e-b56e]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack109.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Move no longer pending") AT LINE 399 with ID [c2a5df6e-b56e]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack36 == 0 goto virtualinvoke ofs.<org.apache.hadoop.fs.FSDataOutputStream: void close()>() at line 107 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.TestPipelines: void pipeline_01()> has 10 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack74 = <org.apache.hadoop.hdfs.TestPipelines: org.apache.commons.logging.Log LOG> AT LINE 92 with ID [3e99a24f-ace0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack75 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 92 with ID [3e99a24f-ace0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(METHOD_NAME) AT LINE 92 with ID [3e99a24f-ace0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 92 with ID [3e99a24f-ace0]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack74.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack77) AT LINE 92 with ID [3e99a24f-ace0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.TestPipelines: org.apache.commons.logging.Log LOG> AT LINE 97 with ID [3e6ed1c4-f617]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = interfaceinvoke $stack22.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 97 with ID [3e6ed1c4-f617]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack23 == 0 goto $stack24 = this.<org.apache.hadoop.hdfs.TestPipelines: org.apache.hadoop.hdfs.DistributedFileSystem fs> AT LINE 97 with ID [3e6ed1c4-f617]
2020-08-25 12:10:07 [INFO] - 	 -> $stack62 = <org.apache.hadoop.hdfs.TestPipelines: org.apache.commons.logging.Log LOG> AT LINE 98 with ID [3e6ed1c4-f617]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack62.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Invoking append but doing nothing otherwise...") AT LINE 98 with ID [3e6ed1c4-f617]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NNStorage: void reportErrorsOnDirectory(org.apache.hadoop.hdfs.server.common.Storage$StorageDirectory)> has 12 units and 4 lines
2020-08-25 12:10:07 [INFO] - 	 -> lsd = virtualinvoke this.<org.apache.hadoop.hdfs.server.namenode.NNStorage: java.lang.String listStorageDirectories()>() AT LINE 852 with ID [60ae42a9-88f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hdfs.server.namenode.NNStorage: org.apache.commons.logging.Log LOG> AT LINE 853 with ID [60ae42a9-88f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("current list of storage dirs:") AT LINE 853 with ID [60ae42a9-88f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(lsd) AT LINE 853 with ID [60ae42a9-88f4]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 853 with ID [60ae42a9-88f4]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 853 with ID [60ae42a9-88f4]
2020-08-25 12:10:07 [INFO] - 	 -> lsd = virtualinvoke this.<org.apache.hadoop.hdfs.server.namenode.NNStorage: java.lang.String listStorageDirectories()>() AT LINE 868 with ID [601bcdcb-21df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hdfs.server.namenode.NNStorage: org.apache.commons.logging.Log LOG> AT LINE 869 with ID [601bcdcb-21df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("at the end current list of storage dirs:") AT LINE 869 with ID [601bcdcb-21df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(lsd) AT LINE 869 with ID [601bcdcb-21df]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 869 with ID [601bcdcb-21df]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack26.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 869 with ID [601bcdcb-21df]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack12 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> at line 182 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: void printReferenceTraceInfo(java.lang.String)> has 17 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 193 with ID [f43ee106-82b3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reference count: ") AT LINE 193 with ID [f43ee106-82b3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(op) AT LINE 193 with ID [f43ee106-82b3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 193 with ID [f43ee106-82b3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 193 with ID [f43ee106-82b3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 193 with ID [f43ee106-82b3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeImpl: org.apache.hadoop.util.CloseableReferenceCount reference> AT LINE 193 with ID [f43ee106-82b3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<org.apache.hadoop.util.CloseableReferenceCount: int getReferenceCount()>() AT LINE 193 with ID [f43ee106-82b3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack19) AT LINE 193 with ID [f43ee106-82b3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 193 with ID [f43ee106-82b3]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void trace(java.lang.String)>($stack21) AT LINE 193 with ID [f43ee106-82b3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsDatasetImpl: org.slf4j.Logger LOG> AT LINE 195 with ID [65f604e6-3098]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>("\n") AT LINE 195 with ID [65f604e6-3098]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 195 with ID [65f604e6-3098]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>() AT LINE 195 with ID [65f604e6-3098]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack23.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object[])>($stack25) AT LINE 195 with ID [65f604e6-3098]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void trace(java.lang.String)>($stack26) AT LINE 195 with ID [65f604e6-3098]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.apache.hadoop.hdfs.server.protocol.DatanodeCommand cacheReport(org.apache.hadoop.hdfs.server.protocol.DatanodeRegistration,java.lang.String,java.util.List)> has 9 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer: org.slf4j.Logger blockStateChangeLog> AT LINE 1488 with ID [de50c268-fcc2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*BLOCK* NameNode.cacheReport: from ") AT LINE 1488 with ID [de50c268-fcc2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nodeReg) AT LINE 1488 with ID [de50c268-fcc2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 1488 with ID [de50c268-fcc2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = interfaceinvoke blockIds.<java.util.List: int size()>() AT LINE 1488 with ID [de50c268-fcc2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack13) AT LINE 1488 with ID [de50c268-fcc2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" blocks") AT LINE 1488 with ID [de50c268-fcc2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1488 with ID [de50c268-fcc2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 1488 with ID [de50c268-fcc2]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack10 = this.<org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: java.nio.ByteBuffer slowReadBuff> at line 613 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: int read(byte[],int,int)> has 4 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hdfs.client.impl.BlockReaderLocalLegacy: org.slf4j.Logger LOG> AT LINE 612 with ID [e74f2ead-b237]
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(off) AT LINE 612 with ID [e74f2ead-b237]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(len) AT LINE 612 with ID [e74f2ead-b237]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("read off {} len {}", $stack7, $stack8) AT LINE 612 with ID [e74f2ead-b237]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack11 == 0 goto (branch) at line 5840 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.namenode.FSNamesystem: java.lang.String getCorruptFiles()>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack13 != 1 goto return 1 at line 219 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack12 != null goto $stack13 = virtualinvoke iip.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: int length()>() at line 218 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSDirDeleteOp: boolean deleteAllowed(org.apache.hadoop.hdfs.server.namenode.INodesInPath)> has 7 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hdfs.server.namenode.NameNode: org.slf4j.Logger stateChangeLog> AT LINE 214 with ID [586fc3a5-f421]
2020-08-25 12:10:07 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DIR* FSDirectory.unprotectedDelete: failed to remove ") AT LINE 214 with ID [586fc3a5-f421]
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = virtualinvoke iip.<org.apache.hadoop.hdfs.server.namenode.INodesInPath: java.lang.String getPath()>() AT LINE 214 with ID [586fc3a5-f421]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7) AT LINE 214 with ID [586fc3a5-f421]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it does not exist") AT LINE 214 with ID [586fc3a5-f421]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 214 with ID [586fc3a5-f421]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>($stack10) AT LINE 214 with ID [586fc3a5-f421]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.util.LogAdapter: void debug(java.lang.Throwable)> has 9 units and 4 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack2 = this.<org.apache.hadoop.util.LogAdapter: org.apache.commons.logging.Log LOG> AT LINE 64 with ID [4c94a73d-b9cc, 457ce794-e07b]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack2 == null goto $stack3 = this.<org.apache.hadoop.util.LogAdapter: org.slf4j.Logger LOGGER> AT LINE 64 with ID [4c94a73d-b9cc, 457ce794-e07b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack5 = this.<org.apache.hadoop.util.LogAdapter: org.apache.commons.logging.Log LOG> AT LINE 65 with ID [457ce794-e07b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(t) AT LINE 65 with ID [457ce794-e07b]
2020-08-25 12:10:07 [INFO] - 	 -> goto [?= return] AT LINE 65 with ID [4c94a73d-b9cc, 457ce794-e07b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack3 = this.<org.apache.hadoop.util.LogAdapter: org.slf4j.Logger LOGGER> AT LINE 66 with ID [4c94a73d-b9cc]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack3 == null goto return AT LINE 66 with ID [4c94a73d-b9cc]
2020-08-25 12:10:07 [INFO] - 	 -> $stack4 = this.<org.apache.hadoop.util.LogAdapter: org.slf4j.Logger LOGGER> AT LINE 67 with ID [4c94a73d-b9cc]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("", t) AT LINE 67 with ID [4c94a73d-b9cc]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if status == null goto $stack73 = new java.io.IOException at line 255 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack100 == 0 goto $stack102 = virtualinvoke trackingIds.<java.util.ArrayList: int size()>() at line 233 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if maxMaps >= e#6 goto queue = virtualinvoke conf.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String,java.lang.String)>("mapreduce.job.queuename", "default") at line 235 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.JobSubmitter: org.apache.hadoop.mapreduce.JobStatus submitJobInternal(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.mapreduce.Cluster)> has 15 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = <org.apache.hadoop.mapreduce.JobSubmitter: org.apache.commons.logging.Log LOG> AT LINE 169 with ID [024701a8-c6de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Configuring job ") AT LINE 169 with ID [024701a8-c6de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(jobId) AT LINE 169 with ID [024701a8-c6de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ") AT LINE 169 with ID [024701a8-c6de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(submitJobDir) AT LINE 169 with ID [024701a8-c6de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as the submit dir") AT LINE 169 with ID [024701a8-c6de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 169 with ID [024701a8-c6de]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 169 with ID [024701a8-c6de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = <org.apache.hadoop.mapreduce.JobSubmitter: org.apache.commons.logging.Log LOG> AT LINE 201 with ID [2c596a67-f1ec]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating splits at ") AT LINE 201 with ID [2c596a67-f1ec]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = this.<org.apache.hadoop.mapreduce.JobSubmitter: org.apache.hadoop.fs.FileSystem jtFs> AT LINE 201 with ID [2c596a67-f1ec]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.Path makeQualified(org.apache.hadoop.fs.Path)>(submitJobDir) AT LINE 201 with ID [2c596a67-f1ec]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack49) AT LINE 201 with ID [2c596a67-f1ec]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 201 with ID [2c596a67-f1ec]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack46.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack51) AT LINE 201 with ID [2c596a67-f1ec]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack2 == 0 goto $stack3 = lengthof data at line 299 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if data != null goto $stack2 = this.<org.apache.hadoop.ha.ActiveStandbyElector: boolean wantToBeInElection> at line 295 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.ha.ActiveStandbyElector: void joinElection(byte[])> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = <org.apache.hadoop.ha.ActiveStandbyElector: org.slf4j.Logger LOG> AT LINE 308 with ID [8c72ae41-d3e9]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempting active election for ") AT LINE 308 with ID [8c72ae41-d3e9]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this) AT LINE 308 with ID [8c72ae41-d3e9]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 308 with ID [8c72ae41-d3e9]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack13) AT LINE 308 with ID [8c72ae41-d3e9]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack12 == 0 goto (branch) at line 2081 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack35 != 0 goto $stack8 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.apache.hadoop.hdfs.server.blockmanagement.BlockManagerSafeMode bmSafeMode> at line 2091 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void removeBlocksAndUpdateSafemodeTotal(org.apache.hadoop.hdfs.server.namenode.INode$BlocksMapUpdateInfo)> has 7 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 2094 with ID [8823dd39-56d8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adjusting safe-mode totals for deletion.decreasing safeBlocks by ") AT LINE 2094 with ID [8823dd39-56d8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numRemovedSafe) AT LINE 2094 with ID [8823dd39-56d8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", totalBlocks by ") AT LINE 2094 with ID [8823dd39-56d8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numRemovedComplete) AT LINE 2094 with ID [8823dd39-56d8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2094 with ID [8823dd39-56d8]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack24) AT LINE 2094 with ID [8823dd39-56d8]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack8 == 0 goto e#2 = virtualinvoke p2f.<java.io.File: boolean mkdir()>() at line 513 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if permission != null goto $stack5 = <org.apache.hadoop.util.Shell: boolean WINDOWS> at line 493 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.fs.RawLocalFileSystem: boolean mkOneDirWithMode(org.apache.hadoop.fs.Path,java.io.File,org.apache.hadoop.fs.permission.FsPermission)>
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.io.compress.CodecPool: org.apache.hadoop.io.compress.Compressor getCompressor(org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.conf.Configuration)> has 5 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack6 = <org.apache.hadoop.io.compress.CodecPool: org.slf4j.Logger LOG> AT LINE 156 with ID [d91f2472-f938]
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = interfaceinvoke $stack6.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 156 with ID [d91f2472-f938]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack7 == 0 goto (branch) AT LINE 156 with ID [d91f2472-f938]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = <org.apache.hadoop.io.compress.CodecPool: org.slf4j.Logger LOG> AT LINE 157 with ID [d91f2472-f938]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>("Got recycled compressor") AT LINE 157 with ID [d91f2472-f938]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.FSEditLogLoader: void dumpOpCounts(java.util.EnumMap)> has 8 units and 4 lines
2020-08-25 12:10:07 [INFO] - 	 -> sb = $stack2 AT LINE 1095 with ID [1f626133-f5d2]
2020-08-25 12:10:07 [INFO] - 	 -> virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Summary of operations loaded from edit log:\n  ") AT LINE 1096 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack4 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>("\n  ") AT LINE 1097 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack5 = virtualinvoke $stack4.<com.google.common.base.Joiner: com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String)>("=") AT LINE 1097 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> virtualinvoke $stack5.<com.google.common.base.Joiner$MapJoiner: java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Map)>(sb, opCounts) AT LINE 1097 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.server.namenode.FSImage: org.apache.commons.logging.Log LOG> AT LINE 1098 with ID [1f626133-f5d2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1098 with ID [1f626133-f5d2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack8) AT LINE 1098 with ID [1f626133-f5d2]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i >= $stack25 goto return metadatas#3 at line 159 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.BlockStorageLocationUtil: java.util.Map queryDatanodesForHdfsBlocksMetadata(org.apache.hadoop.conf.Configuration,java.util.Map,int,int,boolean,org.apache.htrace.core.Tracer,org.apache.htrace.core.SpanId)>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.SYMLINK3Request: org.apache.hadoop.nfs.nfs3.request.SYMLINK3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 1433 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack18 != 0 goto $stack19 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache clientCache> at line 1427 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.SYMLINK3Response symlink(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 9 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 1454 with ID [504d71f0-f605]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS SYMLINK, target: ") AT LINE 1454 with ID [504d71f0-f605]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(symData) AT LINE 1454 with ID [504d71f0-f605]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" link: ") AT LINE 1454 with ID [504d71f0-f605]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(linkIdPath) AT LINE 1454 with ID [504d71f0-f605]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 1454 with ID [504d71f0-f605]
2020-08-25 12:10:07 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 1454 with ID [504d71f0-f605]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1454 with ID [504d71f0-f605]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack46.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack53) AT LINE 1454 with ID [504d71f0-f605]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack19 != 0 goto (branch) at line 83 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack17 != 0 goto (branch) at line 85 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if groups == null goto (branch) at line 81 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.security.CompositeGroupsMapping: java.util.List getGroups(java.lang.String)>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack13 == 0 goto return at line 273 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote2: void readTrailingEmptyPacket()> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack2 = <org.apache.hadoop.hdfs.client.impl.BlockReaderRemote2: org.slf4j.Logger LOG> AT LINE 266 with ID [3edf9e5c-2272]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void trace(java.lang.String)>("Reading empty packet at end of read") AT LINE 266 with ID [3edf9e5c-2272]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack5 = <org.apache.hadoop.yarn.server.nodemanager.api.impl.pb.NMProtoUtils: org.slf4j.Logger LOG> at line 53 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.api.impl.pb.NMProtoUtils: org.apache.hadoop.yarn.server.nodemanager.containermanager.deletion.task.DeletionTask convertProtoToDeletionTask(org.apache.hadoop.yarn.proto.YarnServerNodemanagerRecoveryProtos$DeletionServiceDeleteTaskProto,org.apache.hadoop.yarn.server.nodemanager.DeletionService)> has 4 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.server.nodemanager.api.impl.pb.NMProtoUtils: org.slf4j.Logger LOG> AT LINE 54 with ID [a60c8a59-23dc]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>("Converting recovered FileDeletionTask") AT LINE 54 with ID [a60c8a59-23dc]
2020-08-25 12:10:07 [INFO] - 	 -> $stack5 = <org.apache.hadoop.yarn.server.nodemanager.api.impl.pb.NMProtoUtils: org.slf4j.Logger LOG> AT LINE 58 with ID [47a9e999-7d24]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>("Unable to get task type, trying FileDeletionTask") AT LINE 58 with ID [47a9e999-7d24]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack3 == 0 goto $stack4 = <org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder: java.lang.String UNSAFE_COMPARER_NAME> at line 77 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.io.FastByteComparisons$LexicographicalComparerHolder: org.apache.hadoop.io.FastByteComparisons$Comparer getBestComparer()> has 10 units and 4 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = <org.apache.hadoop.io.FastByteComparisons: org.slf4j.Logger LOG> AT LINE 78 with ID [8ae9fff6-705c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = interfaceinvoke $stack12.<org.slf4j.Logger: boolean isTraceEnabled()>() AT LINE 78 with ID [8ae9fff6-705c]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack13 == 0 goto $stack14 = staticinvoke <org.apache.hadoop.io.FastByteComparisons: org.apache.hadoop.io.FastByteComparisons$Comparer access$000()>() AT LINE 78 with ID [8ae9fff6-705c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = <org.apache.hadoop.io.FastByteComparisons: org.slf4j.Logger LOG> AT LINE 79 with ID [8ae9fff6-705c]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void trace(java.lang.String)>("Lexicographical comparer selected for byte aligned system architecture") AT LINE 79 with ID [8ae9fff6-705c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = <org.apache.hadoop.io.FastByteComparisons: org.slf4j.Logger LOG> AT LINE 91 with ID [5656ba05-e259]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = interfaceinvoke $stack8.<org.slf4j.Logger: boolean isTraceEnabled()>() AT LINE 91 with ID [5656ba05-e259]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack9 == 0 goto return comparer AT LINE 91 with ID [5656ba05-e259]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = <org.apache.hadoop.io.FastByteComparisons: org.slf4j.Logger LOG> AT LINE 92 with ID [5656ba05-e259]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void trace(java.lang.String)>("Unsafe comparer selected for byte unaligned system architecture") AT LINE 92 with ID [5656ba05-e259]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: void receivedNewWriteInternal(org.apache.hadoop.hdfs.DFSClient,org.apache.hadoop.nfs.nfs3.request.WRITE3Request,org.jboss.netty.channel.Channel,int,org.apache.hadoop.hdfs.nfs.nfs3.AsyncDataService,org.apache.hadoop.security.IdMappingServiceProvider)> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 705 with ID [23c2f7c3-f392]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNSTABLE write request, send response for offset: ") AT LINE 705 with ID [23c2f7c3-f392]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke writeCtx.<org.apache.hadoop.hdfs.nfs.nfs3.WriteCtx: long getOffset()>() AT LINE 705 with ID [23c2f7c3-f392]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack36) AT LINE 705 with ID [23c2f7c3-f392]
2020-08-25 12:10:07 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 705 with ID [23c2f7c3-f392]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack38) AT LINE 705 with ID [23c2f7c3-f392]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void registerSource(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSource)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.slf4j.Logger LOG> AT LINE 269 with ID [3bcb566f-39e7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registered source ") AT LINE 269 with ID [3bcb566f-39e7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 269 with ID [3bcb566f-39e7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 269 with ID [3bcb566f-39e7]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 269 with ID [3bcb566f-39e7]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack82 == 0 goto (branch) at line 161 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack89 == 0 goto $stack81 = <org.apache.hadoop.hdfs.server.namenode.TransferFsImage: org.apache.commons.logging.Log LOG> at line 164 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if success != 0 goto (branch) at line 186 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack50 == 0 goto return at line 177 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack24 == 0 goto i$ = staticinvoke <org.apache.hadoop.util.Time: long monotonicNow()>() at line 156 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack97 == 0 goto i$ = interfaceinvoke finalFiles.<java.util.List: java.util.Iterator iterator()>() at line 160 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack108 > 0 goto fileid = staticinvoke <org.apache.hadoop.hdfs.server.namenode.ImageServlet: java.lang.String getParamStringForLog(org.apache.hadoop.hdfs.server.protocol.RemoteEditLog,org.apache.hadoop.hdfs.server.common.StorageInfo)>(log, dstStorage) at line 156 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.TransferFsImage: void downloadEditsToStorage(java.net.URL,org.apache.hadoop.hdfs.server.protocol.RemoteEditLog,org.apache.hadoop.hdfs.server.namenode.NNStorage)> has 12 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack85 = <org.apache.hadoop.hdfs.server.namenode.TransferFsImage: org.apache.commons.logging.Log LOG> AT LINE 162 with ID [15562eb4-96ba]
2020-08-25 12:10:07 [INFO] - 	 -> $stack86 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dest file: ") AT LINE 162 with ID [15562eb4-96ba]
2020-08-25 12:10:07 [INFO] - 	 -> $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(f) AT LINE 162 with ID [15562eb4-96ba]
2020-08-25 12:10:07 [INFO] - 	 -> $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 162 with ID [15562eb4-96ba]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack85.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack88) AT LINE 162 with ID [15562eb4-96ba]
2020-08-25 12:10:07 [INFO] - 	 -> $stack70 = <org.apache.hadoop.hdfs.server.namenode.TransferFsImage: org.apache.commons.logging.Log LOG> AT LINE 183 with ID [fd697235-a8dd]
2020-08-25 12:10:07 [INFO] - 	 -> $stack71 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Renaming ") AT LINE 183 with ID [fd697235-a8dd]
2020-08-25 12:10:07 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tmpFile) AT LINE 183 with ID [fd697235-a8dd]
2020-08-25 12:10:07 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 183 with ID [fd697235-a8dd]
2020-08-25 12:10:07 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(finalizedFile) AT LINE 183 with ID [fd697235-a8dd]
2020-08-25 12:10:07 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 183 with ID [fd697235-a8dd]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack70.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack75) AT LINE 183 with ID [fd697235-a8dd]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack21 = this.<org.apache.hadoop.hdfs.qjournal.server.Journal: long nextTxId> at line 363 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.qjournal.server.Journal: void journal(org.apache.hadoop.hdfs.qjournal.protocol.RequestInfo,long,long,int,byte[])> has 7 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack110 = <org.apache.hadoop.hdfs.qjournal.server.Journal: org.apache.commons.logging.Log LOG> AT LINE 382 with ID [f6aba54d-46b7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack111 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing txid ") AT LINE 382 with ID [f6aba54d-46b7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack112 = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(firstTxnId) AT LINE 382 with ID [f6aba54d-46b7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack113 = virtualinvoke $stack112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-") AT LINE 382 with ID [f6aba54d-46b7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack114 = virtualinvoke $stack113.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(e#4) AT LINE 382 with ID [f6aba54d-46b7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack115 = virtualinvoke $stack114.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 382 with ID [f6aba54d-46b7]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack110.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack115) AT LINE 382 with ID [f6aba54d-46b7]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: void printStats()> has 56 units and 7 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 811 with ID [3431fbd2-d9e0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing ") AT LINE 811 with ID [3431fbd2-d9e0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.hadoop.hdfs.MiniDFSCluster cluster> AT LINE 811 with ID [3431fbd2-d9e0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<org.apache.hadoop.hdfs.MiniDFSCluster: org.apache.hadoop.hdfs.server.namenode.FSNamesystem getNamesystem()>() AT LINE 811 with ID [3431fbd2-d9e0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getMissingBlocksCount()>() AT LINE 811 with ID [3431fbd2-d9e0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack11) AT LINE 811 with ID [3431fbd2-d9e0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 811 with ID [3431fbd2-d9e0]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 811 with ID [3431fbd2-d9e0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 812 with ID [cee7778f-609a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Corrupted ") AT LINE 812 with ID [cee7778f-609a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.hadoop.hdfs.MiniDFSCluster cluster> AT LINE 812 with ID [cee7778f-609a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<org.apache.hadoop.hdfs.MiniDFSCluster: org.apache.hadoop.hdfs.server.namenode.FSNamesystem getNamesystem()>() AT LINE 812 with ID [cee7778f-609a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getCorruptReplicaBlocks()>() AT LINE 812 with ID [cee7778f-609a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack19) AT LINE 812 with ID [cee7778f-609a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 812 with ID [cee7778f-609a]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 812 with ID [cee7778f-609a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 813 with ID [ff179dd1-e705]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Under-replicated ") AT LINE 813 with ID [ff179dd1-e705]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.hadoop.hdfs.MiniDFSCluster cluster> AT LINE 813 with ID [ff179dd1-e705]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<org.apache.hadoop.hdfs.MiniDFSCluster: org.apache.hadoop.hdfs.server.namenode.FSNamesystem getNamesystem()>() AT LINE 813 with ID [ff179dd1-e705]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getUnderReplicatedBlocks()>() AT LINE 813 with ID [ff179dd1-e705]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack27) AT LINE 813 with ID [ff179dd1-e705]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 813 with ID [ff179dd1-e705]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 813 with ID [ff179dd1-e705]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 815 with ID [5348f5b9-3416]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pending delete ") AT LINE 815 with ID [5348f5b9-3416]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.hadoop.hdfs.MiniDFSCluster cluster> AT LINE 815 with ID [5348f5b9-3416]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<org.apache.hadoop.hdfs.MiniDFSCluster: org.apache.hadoop.hdfs.server.namenode.FSNamesystem getNamesystem()>() AT LINE 815 with ID [5348f5b9-3416]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getPendingDeletionBlocks()>() AT LINE 815 with ID [5348f5b9-3416]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack35) AT LINE 815 with ID [5348f5b9-3416]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 815 with ID [5348f5b9-3416]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 815 with ID [5348f5b9-3416]
2020-08-25 12:10:07 [INFO] - 	 -> $stack39 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 817 with ID [9b1c4cfa-afbc]
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pending replications ") AT LINE 817 with ID [9b1c4cfa-afbc]
2020-08-25 12:10:07 [INFO] - 	 -> $stack41 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.hadoop.hdfs.MiniDFSCluster cluster> AT LINE 817 with ID [9b1c4cfa-afbc]
2020-08-25 12:10:07 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<org.apache.hadoop.hdfs.MiniDFSCluster: org.apache.hadoop.hdfs.server.namenode.FSNamesystem getNamesystem()>() AT LINE 817 with ID [9b1c4cfa-afbc]
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getPendingReplicationBlocks()>() AT LINE 817 with ID [9b1c4cfa-afbc]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack43) AT LINE 817 with ID [9b1c4cfa-afbc]
2020-08-25 12:10:07 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 817 with ID [9b1c4cfa-afbc]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack39.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack45) AT LINE 817 with ID [9b1c4cfa-afbc]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 819 with ID [1b105d1e-dcde]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Excess ") AT LINE 819 with ID [1b105d1e-dcde]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.hadoop.hdfs.MiniDFSCluster cluster> AT LINE 819 with ID [1b105d1e-dcde]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<org.apache.hadoop.hdfs.MiniDFSCluster: org.apache.hadoop.hdfs.server.namenode.FSNamesystem getNamesystem()>() AT LINE 819 with ID [1b105d1e-dcde]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getExcessBlocks()>() AT LINE 819 with ID [1b105d1e-dcde]
2020-08-25 12:10:07 [INFO] - 	 -> $stack52 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack51) AT LINE 819 with ID [1b105d1e-dcde]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 819 with ID [1b105d1e-dcde]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack47.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack53) AT LINE 819 with ID [1b105d1e-dcde]
2020-08-25 12:10:07 [INFO] - 	 -> $stack55 = <org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.commons.logging.Log LOG> AT LINE 820 with ID [48af3d94-9444]
2020-08-25 12:10:07 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total ") AT LINE 820 with ID [48af3d94-9444]
2020-08-25 12:10:07 [INFO] - 	 -> $stack57 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReportTestBase: org.apache.hadoop.hdfs.MiniDFSCluster cluster> AT LINE 820 with ID [48af3d94-9444]
2020-08-25 12:10:07 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<org.apache.hadoop.hdfs.MiniDFSCluster: org.apache.hadoop.hdfs.server.namenode.FSNamesystem getNamesystem()>() AT LINE 820 with ID [48af3d94-9444]
2020-08-25 12:10:07 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<org.apache.hadoop.hdfs.server.namenode.FSNamesystem: long getBlocksTotal()>() AT LINE 820 with ID [48af3d94-9444]
2020-08-25 12:10:07 [INFO] - 	 -> $stack60 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack59) AT LINE 820 with ID [48af3d94-9444]
2020-08-25 12:10:07 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 820 with ID [48af3d94-9444]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack55.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack61) AT LINE 820 with ID [48af3d94-9444]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if checksumLen >= 0 goto $stack51 = this.<org.apache.hadoop.hdfs.protocol.datatransfer.PacketReceiver: org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader curHeader> at line 183 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if totalLen <= 16777216 goto $stack30 = 6 + dataPlusChecksumLen at line 157 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if headerLen >= 0 goto $stack21 = <org.apache.hadoop.hdfs.protocol.datatransfer.PacketReceiver: org.slf4j.Logger LOG> at line 146 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if payloadLen >= 4 goto dataPlusChecksumLen = payloadLen - 4 at line 138 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.protocol.datatransfer.PacketReceiver: void doRead(java.nio.channels.ReadableByteChannel,java.io.InputStream)> has 4 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hdfs.protocol.datatransfer.PacketReceiver: org.slf4j.Logger LOG> AT LINE 150 with ID [9ed448ad-f128]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(dataPlusChecksumLen) AT LINE 150 with ID [9ed448ad-f128]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(headerLen) AT LINE 150 with ID [9ed448ad-f128]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("readNextPacket: dataPlusChecksumLen={}, headerLen={}", $stack23, $stack24) AT LINE 150 with ID [9ed448ad-f128]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack31 > 0 goto $stack33 = this.<org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: java.util.concurrent.locks.Condition doRescan> at line 177 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack25 == 0 goto $stack27 = this.<org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: long completedScanCount> at line 168 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: void run()> has 18 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack71 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 173 with ID [e0d08d6c-df06]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack71.<org.slf4j.Logger: void debug(java.lang.String)>("Rescanning because of pending operations") AT LINE 173 with ID [e0d08d6c-df06]
2020-08-25 12:10:07 [INFO] - 	 -> $stack38 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 178 with ID [1f826893-47dd]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = curTimeMs - startTimeMs AT LINE 178 with ID [1f826893-47dd]
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack37) AT LINE 178 with ID [1f826893-47dd]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack38.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Rescanning after {} milliseconds", $stack40) AT LINE 178 with ID [1f826893-47dd]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 200 with ID [c0ad98c9-61ee]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = newarray (java.lang.Object)[3] AT LINE 200 with ID [c0ad98c9-61ee]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = this.<org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: int scannedDirectives> AT LINE 200 with ID [c0ad98c9-61ee]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack49) AT LINE 200 with ID [c0ad98c9-61ee]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48[0] = $stack53 AT LINE 200 with ID [c0ad98c9-61ee]
2020-08-25 12:10:07 [INFO] - 	 -> $stack54 = this.<org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: long scannedBlocks> AT LINE 200 with ID [c0ad98c9-61ee]
2020-08-25 12:10:07 [INFO] - 	 -> $stack56 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack54) AT LINE 200 with ID [c0ad98c9-61ee]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48[1] = $stack56 AT LINE 200 with ID [c0ad98c9-61ee]
2020-08-25 12:10:07 [INFO] - 	 -> $stack57 = curTimeMs - startTimeMs AT LINE 200 with ID [c0ad98c9-61ee]
2020-08-25 12:10:07 [INFO] - 	 -> $stack59 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack57) AT LINE 200 with ID [c0ad98c9-61ee]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48[2] = $stack59 AT LINE 200 with ID [c0ad98c9-61ee]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack50.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Scanned {} directive(s) and {} block(s) in {} millisecond(s).", $stack48) AT LINE 200 with ID [c0ad98c9-61ee]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeImpl: void updateMetricsForRejoinedNode(org.apache.hadoop.yarn.api.records.NodeState)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNodeImpl: org.apache.commons.logging.Log LOG> AT LINE 705 with ID [06aaf0a1-a107]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Unexpected previous node state") AT LINE 705 with ID [06aaf0a1-a107]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack48 == null goto $stack49 = <org.apache.hadoop.ipc.ProtobufRpcEngine$Server: java.lang.ThreadLocal currentCallInfo> at line 506 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if methodDescriptor != null goto msg#2 = interfaceinvoke service.<com.google.protobuf.BlockingService: com.google.protobuf.Message getRequestPrototype(com.google.protobuf.Descriptors$MethodDescriptor)>(methodDescriptor) at line 486 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker: org.apache.hadoop.io.Writable call(org.apache.hadoop.ipc.RPC$Server,java.lang.String,org.apache.hadoop.io.Writable,long)> has 40 units and 4 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack105 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Served: ") AT LINE 522 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(methodName) AT LINE 522 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> if 1 == 0 goto $stack123 = "" AT LINE 522 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack123 = ", deferred" AT LINE 531 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> goto [?= $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack123)] AT LINE 531 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack123 = "" AT LINE 531 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack123) AT LINE 522 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack108 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", queueTime= ") AT LINE 522 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack109 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(qTime) AT LINE 522 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack110 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" procesingTime= ") AT LINE 522 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack111 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(processingTime) AT LINE 522 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> msg = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 522 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack116 = virtualinvoke $stack115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg) AT LINE 527 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack117 = virtualinvoke $stack116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception= ") AT LINE 527 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack118 = virtualinvoke exception.<java.lang.Object: java.lang.Class getClass()>() AT LINE 527 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack119 = virtualinvoke $stack118.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 527 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack120 = virtualinvoke $stack117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack119) AT LINE 527 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> msg = virtualinvoke $stack120.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 527 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack113 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 529 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack113.<org.slf4j.Logger: void debug(java.lang.String)>(msg) AT LINE 529 with ID [f829c07f-a409]
2020-08-25 12:10:07 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Served: ") AT LINE 522 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(methodName) AT LINE 522 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> if 0 == 0 goto $stack81 = "" AT LINE 522 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack81 = ", deferred" AT LINE 531 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> goto [?= $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack81)] AT LINE 531 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack81 = "" AT LINE 531 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack81) AT LINE 522 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", queueTime= ") AT LINE 522 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(qTime) AT LINE 522 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" procesingTime= ") AT LINE 522 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(processingTime) AT LINE 522 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> processingTime = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 522 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(processingTime) AT LINE 527 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception= ") AT LINE 527 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack76 = virtualinvoke exception.<java.lang.Object: java.lang.Class getClass()>() AT LINE 527 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 527 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack78 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack77) AT LINE 527 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> processingTime = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 527 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> $stack71 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 529 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack71.<org.slf4j.Logger: void debug(java.lang.String)>(processingTime) AT LINE 529 with ID [e8a05d2b-8c38]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack30 == 0 goto $stack31 = goUpHierarchy - 1 at line 533 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack18 == 0 goto virtualinvoke filter.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("))") at line 523 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack9 == 0 goto context = virtualinvoke this.<org.apache.hadoop.security.LdapGroupsMapping: javax.naming.directory.DirContext getDirContext()>() at line 517 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.security.LdapGroupsMapping: void goUpGroupHierarchy(java.util.Set,int,java.util.Set)> has 18 units and 5 lines
2020-08-25 12:10:07 [INFO] - 	 -> i$ = interfaceinvoke groupDNs.<java.util.Set: java.util.Iterator iterator()>() AT LINE 523 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>() AT LINE 523 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> if $stack18 == 0 goto virtualinvoke filter.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("))") AT LINE 523 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 533 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> dn = (java.lang.String) $stack34 AT LINE 533 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke filter.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") AT LINE 524 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = this.<org.apache.hadoop.security.LdapGroupsMapping: java.lang.String groupMemberAttr> AT LINE 524 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack36) AT LINE 524 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=") AT LINE 524 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dn) AT LINE 524 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") AT LINE 524 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> goto [?= $stack18 = interfaceinvoke i$.<java.util.Iterator: boolean hasNext()>()] AT LINE 526 with ID []
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = <org.apache.hadoop.security.LdapGroupsMapping: org.slf4j.Logger LOG> AT LINE 528 with ID [cbba6efd-5b96]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ldap group query string: ") AT LINE 528 with ID [cbba6efd-5b96]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke filter.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 528 with ID [cbba6efd-5b96]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 528 with ID [cbba6efd-5b96]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 528 with ID [cbba6efd-5b96]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 528 with ID [cbba6efd-5b96]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack17 == 0 goto $stack18 = this.<org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeList: java.util.concurrent.locks.Condition checkDirsLockCondition> at line 238 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.FsVolumeList: void handleVolumeFailures(java.util.Set)>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack10 = virtualinvoke providerString.<java.lang.String: java.lang.String trim()>() at line 179 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.nodemanager.NodeManager: org.apache.hadoop.yarn.server.nodemanager.nodelabels.NodeLabelsProvider createNodeLabelsProvider(org.apache.hadoop.conf.Configuration)> has 7 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = <org.apache.hadoop.yarn.server.nodemanager.NodeManager: org.slf4j.Logger LOG> AT LINE 203 with ID [1c8e4d8d-c154]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Distributed Node Labels is enabled with provider class as : ") AT LINE 203 with ID [1c8e4d8d-c154]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke provider.<java.lang.Object: java.lang.Class getClass()>() AT LINE 203 with ID [1c8e4d8d-c154]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.Class: java.lang.String toString()>() AT LINE 203 with ID [1c8e4d8d-c154]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 203 with ID [1c8e4d8d-c154]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 203 with ID [1c8e4d8d-c154]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack23) AT LINE 203 with ID [1c8e4d8d-c154]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack25 != 0 goto $stack15 = virtualinvoke srcUri.<java.net.URI: int getPort()>() at line 1402 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack21 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(srcHost) at line 1390 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if srcHost == null goto $stack15 = virtualinvoke srcUri.<java.net.URI: int getPort()>() at line 1407 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if dstHost == null goto (branch) at line 1408 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack12 != 0 goto srcHost = virtualinvoke srcUri.<java.net.URI: java.lang.String getHost()>() at line 1384 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack9 != null goto $stack10 = virtualinvoke srcUri.<java.net.URI: java.lang.String getScheme()>() at line 1381 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if destFs != null goto srcUri = virtualinvoke srcFs.<org.apache.hadoop.fs.FileSystem: java.net.URI getUri()>() at line 1377 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.fs.FileUtil: boolean compareFs(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.FileSystem)>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack90 != null goto this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.apache.hadoop.util.DataChecksum clientChecksum> = requestedChecksum at line 270 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: void <init>(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.fs.StorageType,java.io.DataInputStream,java.lang.String,java.lang.String,org.apache.hadoop.hdfs.protocol.datatransfer.BlockConstructionStage,long,long,long,java.lang.String,org.apache.hadoop.hdfs.protocol.DatanodeInfo,org.apache.hadoop.hdfs.server.datanode.DataNode,org.apache.hadoop.util.DataChecksum,org.apache.hadoop.hdfs.server.datanode.CachingStrategy,boolean,boolean)> has 46 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack144 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack145 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack146 = virtualinvoke $stack145.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack147 = virtualinvoke $stack143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack146) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack148 = virtualinvoke $stack147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack149 = virtualinvoke $stack148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack150 = virtualinvoke $stack149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n storageType=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack151 = virtualinvoke $stack150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(storageType) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack152 = virtualinvoke $stack151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", inAddr=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack153 = virtualinvoke $stack152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(inAddr) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack154 = virtualinvoke $stack153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", myAddr=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack155 = virtualinvoke $stack154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(myAddr) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack156 = virtualinvoke $stack155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n stage=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack157 = virtualinvoke $stack156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(stage) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack158 = virtualinvoke $stack157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newGs=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack159 = virtualinvoke $stack158.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(newGs) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack160 = virtualinvoke $stack159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", minBytesRcvd=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack161 = virtualinvoke $stack160.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(minBytesRcvd) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack162 = virtualinvoke $stack161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxBytesRcvd=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack163 = virtualinvoke $stack162.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(maxBytesRcvd) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack164 = virtualinvoke $stack163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n clientname=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack165 = virtualinvoke $stack164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(clientname) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack166 = virtualinvoke $stack165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", srcDataNode=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack167 = virtualinvoke $stack166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(srcDataNode) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack168 = virtualinvoke $stack167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", datanode=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack169 = virtualinvoke datanode.<org.apache.hadoop.hdfs.server.datanode.DataNode: java.lang.String getDisplayName()>() AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack170 = virtualinvoke $stack168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack169) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack171 = virtualinvoke $stack170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n requestedChecksum=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack172 = virtualinvoke $stack171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(requestedChecksum) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack173 = virtualinvoke $stack172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n cachingStrategy=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack174 = virtualinvoke $stack173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(cachingStrategy) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack175 = virtualinvoke $stack174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n allowLazyPersist=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack176 = virtualinvoke $stack175.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(allowLazyPersist) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack177 = virtualinvoke $stack176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pinning=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack178 = virtualinvoke $stack177.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(pinning) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack179 = virtualinvoke $stack178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isClient=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack180 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver: boolean isClient> AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack181 = virtualinvoke $stack179.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack180) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack182 = virtualinvoke $stack181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isDatanode=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack183 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver: boolean isDatanode> AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack184 = virtualinvoke $stack182.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack183) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack185 = virtualinvoke $stack184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", responseInterval=") AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack186 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver: long responseInterval> AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack187 = virtualinvoke $stack185.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack186) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> $stack188 = virtualinvoke $stack187.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack144.<org.slf4j.Logger: void debug(java.lang.String)>($stack188) AT LINE 192 with ID [a98b0228-7872]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack28 == 0 goto $stack29 = virtualinvoke securityHandler.<org.apache.hadoop.oncrpc.security.SecurityHandler: int getUid()>() at line 598 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if attrs != null goto $stack24 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.security.IdMappingServiceProvider iug> at line 594 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.ACCESS3Request: org.apache.hadoop.nfs.nfs3.request.ACCESS3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 570 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache clientCache> at line 564 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.ACCESS3Response access(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 8 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 587 with ID [b69d51f2-2b93]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFS ACCESS fileId: ") AT LINE 587 with ID [b69d51f2-2b93]
2020-08-25 12:10:07 [INFO] - 	 -> $stack45 = virtualinvoke e#2.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 587 with ID [b69d51f2-2b93]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack45) AT LINE 587 with ID [b69d51f2-2b93]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 587 with ID [b69d51f2-2b93]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 587 with ID [b69d51f2-2b93]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 587 with ID [b69d51f2-2b93]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack43.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack49) AT LINE 587 with ID [b69d51f2-2b93]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapred.YarnChild: void configureTask(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.mapred.Task,org.apache.hadoop.security.Credentials,org.apache.hadoop.security.token.Token)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = <org.apache.hadoop.mapred.YarnChild: org.apache.commons.logging.Log LOG> AT LINE 300 with ID [89436bb4-4105]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("APPLICATION_ATTEMPT_ID: ") AT LINE 300 with ID [89436bb4-4105]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(appAttemptId) AT LINE 300 with ID [89436bb4-4105]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 300 with ID [89436bb4-4105]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 300 with ID [89436bb4-4105]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack79 == 0 goto $stack80 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> at line 938 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack76 >= 0 goto $stack77 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nextOffset> at line 931 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack73 > 0 goto $stack74 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nextOffset> at line 929 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack60 > 0 goto $stack33 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.ConcurrentNavigableMap pendingWrites> at line 959 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack53 <= 0 goto $stack54 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS COMMIT_DO_SYNC> at line 963 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack52 == 0 goto $stack53 = commitOffset cmp flushed at line 950 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack64 != 0 goto $stack32 = commitOffset cmp 0L at line 960 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack108 >= 0 goto $stack109 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS COMMIT_FINISHED> at line 909 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack105 == 0 goto $stack106 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nextOffset> at line 904 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack18 == 0 goto $stack19 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nextOffset> at line 903 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack136 == 0 goto $stack137 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS COMMIT_INACTIVE_WITH_PENDING_WRITE> at line 882 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack13 != 0 goto flushed = 0L at line 881 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS checkCommitInternal(long,org.jboss.netty.channel.Channel,int,org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes,boolean)> has 26 units and 7 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack124 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 899 with ID [06bcf11b-74d7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack125 = virtualinvoke $stack123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getFlushedOffset=") AT LINE 899 with ID [06bcf11b-74d7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack126 = virtualinvoke $stack125.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(flushed) AT LINE 899 with ID [06bcf11b-74d7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack127 = virtualinvoke $stack126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" commitOffset=") AT LINE 899 with ID [06bcf11b-74d7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack128 = virtualinvoke $stack127.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(commitOffset) AT LINE 899 with ID [06bcf11b-74d7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack129 = virtualinvoke $stack128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nextOffset=") AT LINE 899 with ID [06bcf11b-74d7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack130 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nextOffset> AT LINE 899 with ID [06bcf11b-74d7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack131 = virtualinvoke $stack130.<java.util.concurrent.atomic.AtomicLong: long get()>() AT LINE 899 with ID [06bcf11b-74d7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack132 = virtualinvoke $stack129.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack131) AT LINE 899 with ID [06bcf11b-74d7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack133 = virtualinvoke $stack132.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 899 with ID [06bcf11b-74d7]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack124.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack133) AT LINE 899 with ID [06bcf11b-74d7]
2020-08-25 12:10:07 [INFO] - 	 -> $stack110 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 910 with ID [791cd463-6fb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack111 = interfaceinvoke $stack110.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 910 with ID [791cd463-6fb3]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack111 == 0 goto $stack112 = this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: java.util.concurrent.atomic.AtomicLong nextOffset> AT LINE 910 with ID [791cd463-6fb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack115 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 911 with ID [791cd463-6fb3]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack115.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("get commit while still writing to the requested offset, with empty queue") AT LINE 911 with ID [791cd463-6fb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack85 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 932 with ID [66ec3524-fbd5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack86 = interfaceinvoke $stack85.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 932 with ID [66ec3524-fbd5]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack86 == 0 goto $stack87 = specialinvoke this.<org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS handleSpecialWait(boolean,long,org.jboss.netty.channel.Channel,int,org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes)>(fromRead, e#6, channel, xid, preOpAttr) AT LINE 932 with ID [66ec3524-fbd5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack88 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 933 with ID [66ec3524-fbd5]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack88.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("get commit while still writing to the requested offset") AT LINE 933 with ID [66ec3524-fbd5]
2020-08-25 12:10:07 [INFO] - 	 -> $stack80 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 941 with ID [0087d54c-c0a6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack81 = interfaceinvoke $stack80.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 941 with ID [0087d54c-c0a6]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack81 == 0 goto $stack82 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS: org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx$COMMIT_STATUS COMMIT_SPECIAL_SUCCESS> AT LINE 941 with ID [0087d54c-c0a6]
2020-08-25 12:10:07 [INFO] - 	 -> $stack83 = <org.apache.hadoop.hdfs.nfs.nfs3.OpenFileCtx: org.apache.commons.logging.Log LOG> AT LINE 942 with ID [0087d54c-c0a6]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack83.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("return COMMIT_SPECIAL_SUCCESS") AT LINE 942 with ID [0087d54c-c0a6]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: void decResourceRequest(org.apache.hadoop.yarn.api.records.Priority,java.lang.String,org.apache.hadoop.yarn.api.records.ExecutionTypeRequest,org.apache.hadoop.yarn.api.records.Resource,org.apache.hadoop.yarn.client.api.AMRMClient$ContainerRequest)> has 19 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = <org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: org.apache.commons.logging.Log LOG> AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AFTER decResourceRequest: allocationRequestId=") AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke req.<org.apache.hadoop.yarn.client.api.AMRMClient$ContainerRequest: long getAllocationRequestId()>() AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack25) AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" priority=") AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke priority.<org.apache.hadoop.yarn.api.records.Priority: int getPriority()>() AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack28) AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resourceName=") AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourceName) AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numContainers=") AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = resourceRequestInfo.<org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl$ResourceRequestInfo: org.apache.hadoop.yarn.api.records.ResourceRequest remoteRequest> AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<org.apache.hadoop.yarn.api.records.ResourceRequest: int getNumContainers()>() AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack34) AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" #asks=") AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = this.<org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: java.util.Set ask> AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack38 = interfaceinvoke $stack37.<java.util.Set: int size()>() AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack39 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack38) AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack23.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack40) AT LINE 897 with ID [729287b3-23ce]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapred.SortedRanges: void add(long,long)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = <org.apache.hadoop.mapred.SortedRanges: org.apache.commons.logging.Log LOG> AT LINE 184 with ID [7c8cc70b-c667]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("added ") AT LINE 184 with ID [7c8cc70b-c667]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(recRange) AT LINE 184 with ID [7c8cc70b-c667]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 184 with ID [7c8cc70b-c667]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack18) AT LINE 184 with ID [7c8cc70b-c667]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.PendingReplicationBlocks: boolean decrement(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hdfs.server.blockmanagement.PendingReplicationBlocks: org.slf4j.Logger LOG> AT LINE 107 with ID [62ab3f1b-26e9]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing pending replication for ") AT LINE 107 with ID [62ab3f1b-26e9]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(block) AT LINE 107 with ID [62ab3f1b-26e9]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 107 with ID [62ab3f1b-26e9]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 107 with ID [62ab3f1b-26e9]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if cls != class "Lorg/apache/hadoop/metrics2/lib/MutableRollingAverages;" goto $stack12 = new org.apache.hadoop.metrics2.MetricsException at line 82 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if cls != class "Lorg/apache/hadoop/metrics2/lib/MutableStat;" goto (branch) at line 77 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if cls != class "Lorg/apache/hadoop/metrics2/lib/MutableRatesWithAggregation;" goto (branch) at line 74 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if cls != class "Lorg/apache/hadoop/metrics2/lib/MutableRates;" goto (branch) at line 71 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if cls != class "Lorg/apache/hadoop/metrics2/lib/MutableRate;" goto (branch) at line 67 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if cls != class "Lorg/apache/hadoop/metrics2/lib/MutableGaugeFloat;" goto (branch) at line 64 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if cls != class "Lorg/apache/hadoop/metrics2/lib/MutableGaugeLong;" goto (branch) at line 61 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if cls != class "Lorg/apache/hadoop/metrics2/lib/MutableGaugeInt;" goto (branch) at line 58 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if cls != class "Lorg/apache/hadoop/metrics2/lib/MutableCounterLong;" goto (branch) at line 55 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if cls != class "Lorg/apache/hadoop/metrics2/lib/MutableCounterInt;" goto (branch) at line 52 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if metric == null goto cls = virtualinvoke field.<java.lang.reflect.Field: java.lang.Class getType()>() at line 47 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.lib.MutableMetricsFactory: org.apache.hadoop.metrics2.lib.MutableMetric newForField(java.lang.reflect.Field,org.apache.hadoop.metrics2.'annotation'.Metric,org.apache.hadoop.metrics2.lib.MetricsRegistry)> has 7 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack45 = <org.apache.hadoop.metrics2.lib.MutableMetricsFactory: org.slf4j.Logger LOG> AT LINE 43 with ID [f3c2d64d-746a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field ") AT LINE 43 with ID [f3c2d64d-746a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(field) AT LINE 43 with ID [f3c2d64d-746a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with annotation ") AT LINE 43 with ID [f3c2d64d-746a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(annotation) AT LINE 43 with ID [f3c2d64d-746a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 43 with ID [f3c2d64d-746a]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String)>($stack50) AT LINE 43 with ID [f3c2d64d-746a]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack43 != $stack45 goto (branch) at line 1369 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if call == null goto (branch) at line 1372 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack36 == 0 goto (branch) at line 1378 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack33 == 0 goto exitmonitor i$ at line 1369 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.ipc.Server$Responder: void doRunLoop()> has 5 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 1360 with ID [0660e818-87f0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = interfaceinvoke $stack22.<org.slf4j.Logger: boolean isDebugEnabled()>() AT LINE 1360 with ID [0660e818-87f0]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack23 == 0 goto $stack24 = this.<org.apache.hadoop.ipc.Server$Responder: java.nio.channels.Selector writeSelector> AT LINE 1360 with ID [0660e818-87f0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = <org.apache.hadoop.ipc.Server: org.slf4j.Logger LOG> AT LINE 1361 with ID [0660e818-87f0]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void debug(java.lang.String)>("Checking for old call responses.") AT LINE 1361 with ID [0660e818-87f0]
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.fs.FileUtil: int symLink(java.lang.String,java.lang.String)>
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.BackupImage: void journal(long,int,byte[])> has 10 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hdfs.server.namenode.BackupImage: org.apache.commons.logging.Log LOG> AT LINE 166 with ID [f5fe2eaf-23de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got journal, state = ") AT LINE 166 with ID [f5fe2eaf-23de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = this.<org.apache.hadoop.hdfs.server.namenode.BackupImage: org.apache.hadoop.hdfs.server.namenode.BackupImage$BNState bnState> AT LINE 166 with ID [f5fe2eaf-23de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24) AT LINE 166 with ID [f5fe2eaf-23de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; firstTxId = ") AT LINE 166 with ID [f5fe2eaf-23de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(firstTxId) AT LINE 166 with ID [f5fe2eaf-23de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; numTxns = ") AT LINE 166 with ID [f5fe2eaf-23de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numTxns) AT LINE 166 with ID [f5fe2eaf-23de]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 166 with ID [f5fe2eaf-23de]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack22.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($stack30) AT LINE 166 with ID [f5fe2eaf-23de]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: org.apache.hadoop.security.token.Token getDelegationToken()> has 7 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: org.slf4j.Logger LOG> AT LINE 362 with ID [4dec5f7c-a89d]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Using UGI token: {}", token) AT LINE 362 with ID [4dec5f7c-a89d]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hdfs.web.WebHdfsFileSystem: org.slf4j.Logger LOG> AT LINE 368 with ID [0e3ffcd8-877e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fetched new token: ") AT LINE 368 with ID [0e3ffcd8-877e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(token) AT LINE 368 with ID [0e3ffcd8-877e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 368 with ID [0e3ffcd8-877e]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 368 with ID [0e3ffcd8-877e]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: void flush()> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack2 = <org.apache.hadoop.yarn.client.api.impl.FileSystemTimelineWriter: org.apache.commons.logging.Log LOG> AT LINE 281 with ID [075ce8bf-dd02]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Flushing cache") AT LINE 281 with ID [075ce8bf-dd02]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack61 == 0 goto (branch) at line 250 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack57 == 0 goto $stack58 = this.<org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$JobListCache: org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$JobIdHistoryFileInfoMap cache> at line 238 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if firstValue == null goto (branch) at line 237 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack50 == 0 goto (branch) at line 275 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack64 > 0 goto $stack61 = virtualinvoke firstValue.<org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo: boolean didMoveFail()>() at line 254 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$JobListCache: org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo addIfAbsent(org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo)> has 8 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack68 = staticinvoke <org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager: org.apache.commons.logging.Log access$000()>() AT LINE 214 with ID [7303826d-0c40]
2020-08-25 12:10:07 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding ") AT LINE 214 with ID [7303826d-0c40]
2020-08-25 12:10:07 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(jobId) AT LINE 214 with ID [7303826d-0c40]
2020-08-25 12:10:07 [INFO] - 	 -> $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to job list cache with ") AT LINE 214 with ID [7303826d-0c40]
2020-08-25 12:10:07 [INFO] - 	 -> $stack73 = virtualinvoke fileInfo.<org.apache.hadoop.mapreduce.v2.hs.HistoryFileManager$HistoryFileInfo: org.apache.hadoop.mapreduce.v2.jobhistory.JobIndexInfo getJobIndexInfo()>() AT LINE 214 with ID [7303826d-0c40]
2020-08-25 12:10:07 [INFO] - 	 -> $stack74 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack73) AT LINE 214 with ID [7303826d-0c40]
2020-08-25 12:10:07 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 214 with ID [7303826d-0c40]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack68.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack75) AT LINE 214 with ID [7303826d-0c40]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack41 == 0 goto (branch) at line 351 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack39 == 0 goto (branch) at line 350 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack29 == 0 goto $stack30 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> at line 346 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack28 == 0 goto $stack29 = virtualinvoke node.<org.apache.hadoop.hdfs.server.namenode.INode: boolean isFile()>() at line 346 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if node != null goto $stack28 = virtualinvoke node.<org.apache.hadoop.hdfs.server.namenode.INode: boolean isDirectory()>() at line 343 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: void rescanCacheDirectives()> has 19 units and 3 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack54 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 329 with ID [dcbf866e-5209]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = newarray (java.lang.Object)[3] AT LINE 329 with ID [dcbf866e-5209]
2020-08-25 12:10:07 [INFO] - 	 -> $stack57 = virtualinvoke directive.<org.apache.hadoop.hdfs.protocol.CacheDirective: long getId()>() AT LINE 329 with ID [dcbf866e-5209]
2020-08-25 12:10:07 [INFO] - 	 -> $stack58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack57) AT LINE 329 with ID [dcbf866e-5209]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53[0] = $stack58 AT LINE 329 with ID [dcbf866e-5209]
2020-08-25 12:10:07 [INFO] - 	 -> $stack60 = virtualinvoke directive.<org.apache.hadoop.hdfs.protocol.CacheDirective: long getExpiryTime()>() AT LINE 329 with ID [dcbf866e-5209]
2020-08-25 12:10:07 [INFO] - 	 -> $stack61 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack60) AT LINE 329 with ID [dcbf866e-5209]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53[1] = $stack61 AT LINE 329 with ID [dcbf866e-5209]
2020-08-25 12:10:07 [INFO] - 	 -> $stack63 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(now) AT LINE 329 with ID [dcbf866e-5209]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53[2] = $stack63 AT LINE 329 with ID [dcbf866e-5209]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack54.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Directive {}: the directive expired at {} (now = {})", $stack53) AT LINE 329 with ID [dcbf866e-5209]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 344 with ID [50af9da6-bb5b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = virtualinvoke directive.<org.apache.hadoop.hdfs.protocol.CacheDirective: long getId()>() AT LINE 344 with ID [50af9da6-bb5b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack46) AT LINE 344 with ID [50af9da6-bb5b]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Directive {}: No inode found at {}", $stack47, path) AT LINE 344 with ID [50af9da6-bb5b]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hdfs.server.blockmanagement.CacheReplicationMonitor: org.slf4j.Logger LOG> AT LINE 358 with ID [817f7a83-1784]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke directive.<org.apache.hadoop.hdfs.protocol.CacheDirective: long getId()>() AT LINE 358 with ID [817f7a83-1784]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack32) AT LINE 358 with ID [817f7a83-1784]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Directive {}: ignoring non-directive, non-file inode {} ", $stack33, node) AT LINE 358 with ID [817f7a83-1784]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack20 <= 0 goto return val#2 at line 2319 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.io.SequenceFile$Reader: java.lang.Object getCurrentValue(java.lang.Object)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = staticinvoke <org.apache.hadoop.io.SequenceFile: org.slf4j.Logger access$500()>() AT LINE 2335 with ID [bcf12e25-8b7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(val#2) AT LINE 2335 with ID [bcf12e25-8b7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is a zero-length value") AT LINE 2335 with ID [bcf12e25-8b7f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2335 with ID [bcf12e25-8b7f]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 2335 with ID [bcf12e25-8b7f]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if tokenInfo != null goto $stack16 = interfaceinvoke tokenInfo.<org.apache.hadoop.security.token.TokenInfo: java.lang.Class value()>() at line 265 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.security.SaslRpcClient: org.apache.hadoop.security.token.Token getServerToken(org.apache.hadoop.ipc.protobuf.RpcHeaderProtos$RpcSaslProto$SaslAuth)> has 8 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = <org.apache.hadoop.security.SaslRpcClient: org.slf4j.Logger LOG> AT LINE 264 with ID [43688603-bada]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Get token info proto:") AT LINE 264 with ID [43688603-bada]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.security.SaslRpcClient: java.lang.Class protocol> AT LINE 264 with ID [43688603-bada]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack11) AT LINE 264 with ID [43688603-bada]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" info:") AT LINE 264 with ID [43688603-bada]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tokenInfo) AT LINE 264 with ID [43688603-bada]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 264 with ID [43688603-bada]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 264 with ID [43688603-bada]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack2 != null goto $stack3 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot slot> at line 186 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: boolean addNoChecksumAnchor()> has 11 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: org.slf4j.Logger LOG> AT LINE 190 with ID [acc60278-3f70]
2020-08-25 12:10:07 [INFO] - 	 -> $stack5 = newarray (java.lang.Object)[3] AT LINE 190 with ID [acc60278-3f70]
2020-08-25 12:10:07 [INFO] - 	 -> $stack5[0] = this AT LINE 190 with ID [acc60278-3f70]
2020-08-25 12:10:07 [INFO] - 	 -> if result == 0 goto $stack8 = "could not add" AT LINE 190 with ID [acc60278-3f70]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = "added" AT LINE 192 with ID [acc60278-3f70]
2020-08-25 12:10:07 [INFO] - 	 -> goto [?= $stack5[1] = $stack8] AT LINE 192 with ID [acc60278-3f70]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = "could not add" AT LINE 192 with ID [acc60278-3f70]
2020-08-25 12:10:07 [INFO] - 	 -> $stack5[1] = $stack8 AT LINE 190 with ID [acc60278-3f70]
2020-08-25 12:10:07 [INFO] - 	 -> $stack6 = this.<org.apache.hadoop.hdfs.shortcircuit.ShortCircuitReplica: org.apache.hadoop.hdfs.shortcircuit.ShortCircuitShm$Slot slot> AT LINE 190 with ID [acc60278-3f70]
2020-08-25 12:10:07 [INFO] - 	 -> $stack5[2] = $stack6 AT LINE 190 with ID [acc60278-3f70]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("{}: {} no-checksum anchor to slot {}", $stack5) AT LINE 190 with ID [acc60278-3f70]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack3 == 0 goto $stack4 = specialinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.Resource assignContainer(org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode,boolean)>(node, 0) at line 1353 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.api.records.Resource assignContainer(org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode)> has 10 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 1358 with ID [bc7601ef-1a22]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AM resource request: ") AT LINE 1358 with ID [bc7601ef-1a22]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke amAsk.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.PendingAsk: org.apache.hadoop.yarn.api.records.Resource getPerAllocationResource()>() AT LINE 1358 with ID [bc7601ef-1a22]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack14) AT LINE 1358 with ID [bc7601ef-1a22]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeds maximum AM resource allowed, ") AT LINE 1358 with ID [bc7601ef-1a22]
2020-08-25 12:10:07 [INFO] - 	 -> $stack17 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSAppAttempt: org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue getQueue()>() AT LINE 1358 with ID [bc7601ef-1a22]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSLeafQueue: java.lang.String dumpState()>() AT LINE 1358 with ID [bc7601ef-1a22]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) AT LINE 1358 with ID [bc7601ef-1a22]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1358 with ID [bc7601ef-1a22]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack20) AT LINE 1358 with ID [bc7601ef-1a22]
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.io.IOUtils: void closeSocket(java.net.Socket)>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack24 == 0 goto return at line 199 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack21 == 0 goto $stack22 = virtualinvoke hostDetails.<org.apache.hadoop.util.HostsFileReader$HostDetails: java.util.Set getExcludedHosts()>() at line 196 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack5 != 0 goto $stack7 = <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: org.apache.commons.logging.Log LOG> at line 185 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: void printConfiguredHosts()> has 25 units and 5 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: org.apache.commons.logging.Log LOG> AT LINE 189 with ID [62805861-d929]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hostsReader: in=") AT LINE 189 with ID [62805861-d929]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: org.apache.hadoop.conf.Configuration conf> AT LINE 189 with ID [62805861-d929]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String,java.lang.String)>("yarn.resourcemanager.nodes.include-path", "") AT LINE 189 with ID [62805861-d929]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10) AT LINE 189 with ID [62805861-d929]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out=") AT LINE 189 with ID [62805861-d929]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = this.<org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: org.apache.hadoop.conf.Configuration conf> AT LINE 189 with ID [62805861-d929]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String,java.lang.String)>("yarn.resourcemanager.nodes.exclude-path", "") AT LINE 189 with ID [62805861-d929]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 189 with ID [62805861-d929]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 189 with ID [62805861-d929]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 189 with ID [62805861-d929]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 201 with ID [caef37a0-659c]
2020-08-25 12:10:07 [INFO] - 	 -> include = (java.lang.String) $stack32 AT LINE 201 with ID [caef37a0-659c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: org.apache.commons.logging.Log LOG> AT LINE 197 with ID [caef37a0-659c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("include: ") AT LINE 197 with ID [caef37a0-659c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(include) AT LINE 197 with ID [caef37a0-659c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 197 with ID [caef37a0-659c]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack34.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 197 with ID [caef37a0-659c]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = interfaceinvoke i$.<java.util.Iterator: java.lang.Object next()>() AT LINE 202 with ID [514a3b69-d174]
2020-08-25 12:10:07 [INFO] - 	 -> include = (java.lang.String) $stack25 AT LINE 202 with ID [514a3b69-d174]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = <org.apache.hadoop.yarn.server.resourcemanager.NodesListManager: org.apache.commons.logging.Log LOG> AT LINE 200 with ID [514a3b69-d174]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exclude: ") AT LINE 200 with ID [514a3b69-d174]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(include) AT LINE 200 with ID [514a3b69-d174]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 200 with ID [514a3b69-d174]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack30) AT LINE 200 with ID [514a3b69-d174]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack54 >= $stack55 goto needMoreSpace = 1 at line 502 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: int demoteOldEvictableMmaped(long)> has 18 units and 5 lines
2020-08-25 12:10:07 [INFO] - 	 -> needMoreSpace = 0 AT LINE 488 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> needMoreSpace = 1 AT LINE 505 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> if needMoreSpace == 0 goto $stack47 = "because it\'s too old" AT LINE 510 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = "because we need more space" AT LINE 520 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> goto [?= rationale = $stack47] AT LINE 520 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = "because it\'s too old" AT LINE 520 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> rationale = $stack47 AT LINE 510 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hdfs.shortcircuit.ShortCircuitCache: org.slf4j.Logger LOG> AT LINE 512 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("demoteOldEvictable: demoting ") AT LINE 512 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(replica) AT LINE 512 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 512 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(rationale) AT LINE 512 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 512 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 512 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String getStackTrace(java.lang.Thread)>($stack34) AT LINE 512 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35) AT LINE 512 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 512 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void trace(java.lang.String)>($stack37) AT LINE 512 with ID [a4de7ec0-fdb3]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack30 != 0 goto (branch) at line 3205 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack27 == 0 goto (branch) at line 3198 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack33 != 0 goto (branch) at line 3205 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack23 == 0 goto $stack24 = this.<org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: java.util.Map excessReplicateMap> at line 3188 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack41 != 0 goto (branch) at line 3183 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: void processOverReplicatedBlock(org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo,short,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor,org.apache.hadoop.hdfs.server.blockmanagement.DatanodeDescriptor)> has 2 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hdfs.server.blockmanagement.BlockManager: org.slf4j.Logger LOG> AT LINE 3189 with ID [d85a8996-e10a]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("BLOCK* processOverReplicatedBlock: Postponing {} since storage {} does not yet have up-to-date information.", block, storage) AT LINE 3189 with ID [d85a8996-e10a]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack17 == 0 goto (branch) at line 58 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack14 == 0 goto (branch) at line 54 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack8 == 0 goto return null at line 49 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if service != null goto $stack5 = <org.apache.hadoop.yarn.security.client.TimelineDelegationTokenSelector: org.apache.commons.logging.Log LOG> at line 43 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.security.client.TimelineDelegationTokenSelector: org.apache.hadoop.security.token.Token selectToken(org.apache.hadoop.io.Text,java.util.Collection)> has 16 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = <org.apache.hadoop.yarn.security.client.TimelineDelegationTokenSelector: org.apache.commons.logging.Log LOG> AT LINE 47 with ID [f098404a-3c45]
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking for a token with service ") AT LINE 47 with ID [f098404a-3c45]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke service.<org.apache.hadoop.io.Text: java.lang.String toString()>() AT LINE 47 with ID [f098404a-3c45]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32) AT LINE 47 with ID [f098404a-3c45]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 47 with ID [f098404a-3c45]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack34) AT LINE 47 with ID [f098404a-3c45]
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = <org.apache.hadoop.yarn.security.client.TimelineDelegationTokenSelector: org.apache.commons.logging.Log LOG> AT LINE 51 with ID [d567d132-17b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token kind is ") AT LINE 51 with ID [d567d132-17b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack21 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getKind()>() AT LINE 51 with ID [d567d132-17b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<org.apache.hadoop.io.Text: java.lang.String toString()>() AT LINE 51 with ID [d567d132-17b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) AT LINE 51 with ID [d567d132-17b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and the token\'s service name is ") AT LINE 51 with ID [d567d132-17b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack25 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 51 with ID [d567d132-17b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack25) AT LINE 51 with ID [d567d132-17b1]
2020-08-25 12:10:07 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 51 with ID [d567d132-17b1]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack19.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 51 with ID [d567d132-17b1]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack12 > 0 goto $stack13 = new org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl at line 64 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = virtualinvoke this.<org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoAppAttempt: int getOutstandingAsksCount(org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey)>(schedulerKey) at line 58 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoAppAttempt: org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer allocate(org.apache.hadoop.yarn.server.resourcemanager.scheduler.NodeType,org.apache.hadoop.yarn.server.resourcemanager.scheduler.common.fica.FiCaSchedulerNode,org.apache.hadoop.yarn.server.scheduler.SchedulerRequestKey,org.apache.hadoop.yarn.api.records.Container)> has 14 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack43 = <org.apache.hadoop.yarn.server.resourcemanager.scheduler.fifo.FifoAppAttempt: org.apache.commons.logging.Log LOG> AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: applicationAttemptId=") AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> $stack45 = virtualinvoke containerId.<org.apache.hadoop.yarn.api.records.ContainerId: org.apache.hadoop.yarn.api.records.ApplicationAttemptId getApplicationAttemptId()>() AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack45) AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" container=") AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(containerId) AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" host=") AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> $stack50 = virtualinvoke container.<org.apache.hadoop.yarn.api.records.Container: org.apache.hadoop.yarn.api.records.NodeId getNodeId()>() AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<org.apache.hadoop.yarn.api.records.NodeId: java.lang.String getHost()>() AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> $stack52 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack51) AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type=") AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(type) AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack43.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack55) AT LINE 97 with ID [be2d0811-9c20]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.BlockReceiver$PacketResponder: void run()> has 13 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack127 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 1384 with ID [b3cc2885-eade]
2020-08-25 12:10:07 [INFO] - 	 -> $stack128 = this.<org.apache.hadoop.hdfs.server.datanode.BlockReceiver$PacketResponder: java.lang.String myString> AT LINE 1384 with ID [b3cc2885-eade]
2020-08-25 12:10:07 [INFO] - 	 -> $stack129 = virtualinvoke $stack126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack128) AT LINE 1384 with ID [b3cc2885-eade]
2020-08-25 12:10:07 [INFO] - 	 -> $stack130 = virtualinvoke $stack129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got ") AT LINE 1384 with ID [b3cc2885-eade]
2020-08-25 12:10:07 [INFO] - 	 -> $stack131 = virtualinvoke $stack130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(ack) AT LINE 1384 with ID [b3cc2885-eade]
2020-08-25 12:10:07 [INFO] - 	 -> $stack132 = virtualinvoke $stack131.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1384 with ID [b3cc2885-eade]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack127.<org.slf4j.Logger: void debug(java.lang.String)>($stack132) AT LINE 1384 with ID [b3cc2885-eade]
2020-08-25 12:10:07 [INFO] - 	 -> $stack77 = <org.apache.hadoop.hdfs.server.datanode.BlockReceiver: org.slf4j.Logger LOG> AT LINE 1421 with ID [4f1a3155-295e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack78 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calculated invalid ack time: ") AT LINE 1421 with ID [4f1a3155-295e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(oobStatus#24) AT LINE 1421 with ID [4f1a3155-295e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ns.") AT LINE 1421 with ID [4f1a3155-295e]
2020-08-25 12:10:07 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1421 with ID [4f1a3155-295e]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack77.<org.slf4j.Logger: void debug(java.lang.String)>($stack81) AT LINE 1421 with ID [4f1a3155-295e]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS: void testDelegationToken()> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hdfs.DistributedFileSystem: org.apache.commons.logging.Log LOG> AT LINE 102 with ID [498cd489-845a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delegation tokens: ") AT LINE 102 with ID [498cd489-845a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(tokens) AT LINE 102 with ID [498cd489-845a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack11) AT LINE 102 with ID [498cd489-845a]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 102 with ID [498cd489-845a]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 102 with ID [498cd489-845a]
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.sharedcache.SharedCacheUploader: void deleteTempFile(org.apache.hadoop.fs.Path)>
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack91 <= 0 goto (branch) at line 2899 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if fallbackEntered != 0 goto fallbackAllowed = 0 at line 2946 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if ioe#78 >= propertyAttr#77 goto (branch) at line 2932 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if attrCount#75 == null goto $stack55 = virtualinvoke confSource.<java.util.LinkedList: int size()>() at line 2930 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if fallbackEntered == 0 goto virtualinvoke confSource.<java.util.LinkedList: boolean add(java.lang.Object)>(name) at line 2932 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if confName == null goto (branch) at line 2924 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if returnCachedProperties == 0 goto return null at line 2951 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack88 <= 0 goto (branch) at line 2904 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if quiet == 0 goto $stack165 = new java.lang.RuntimeException at line 2774 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if reader != null goto url#12 = properties at line 2773 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.conf.Configuration: org.apache.hadoop.conf.Configuration$Resource loadResource(java.util.Properties,org.apache.hadoop.conf.Configuration$Resource,boolean)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack186 = <org.apache.hadoop.conf.Configuration: org.slf4j.Logger LOG> AT LINE 2759 with ID [dcec9772-6e9f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack187 = virtualinvoke $stack185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing File ") AT LINE 2759 with ID [dcec9772-6e9f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack188 = virtualinvoke $stack187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(url#6) AT LINE 2759 with ID [dcec9772-6e9f]
2020-08-25 12:10:07 [INFO] - 	 -> $stack189 = virtualinvoke $stack188.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2759 with ID [dcec9772-6e9f]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack186.<org.slf4j.Logger: void debug(java.lang.String)>($stack189) AT LINE 2759 with ID [dcec9772-6e9f]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if result == 0 goto loggingCounter = loggingCounter + -1 at line 422 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.client.api.async.AMRMClientAsync: void waitFor(com.google.common.base.Supplier,int,int)> has 5 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = <org.apache.hadoop.yarn.client.api.async.AMRMClientAsync: org.apache.commons.logging.Log LOG> AT LINE 417 with ID [2dddb0cc-aac2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = interfaceinvoke $stack7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() AT LINE 417 with ID [2dddb0cc-aac2]
2020-08-25 12:10:07 [INFO] - 	 -> if $stack8 == 0 goto $stack9 = interfaceinvoke check.<com.google.common.base.Supplier: java.lang.Object get()>() AT LINE 417 with ID [2dddb0cc-aac2]
2020-08-25 12:10:07 [INFO] - 	 -> $stack16 = <org.apache.hadoop.yarn.client.api.async.AMRMClientAsync: org.apache.commons.logging.Log LOG> AT LINE 418 with ID [2dddb0cc-aac2]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Check the condition for main loop.") AT LINE 418 with ID [2dddb0cc-aac2]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if maxVersion >= blkVersion goto $stack8 = this.<org.apache.hadoop.hdfs.server.datanode.DataNode: org.apache.hadoop.hdfs.server.datanode.metrics.DataNodeMetrics metrics> at line 1874 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack7 == null goto blkVersion = 1 at line 1869 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.server.datanode.DataNode: java.io.FileInputStream[] requestShortCircuitFdsForRead(org.apache.hadoop.hdfs.protocol.ExtendedBlock,org.apache.hadoop.security.token.Token,int)>
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.registry.server.services.MicroZookeeperService: void serviceStart()> has 3 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack39 = <org.apache.hadoop.registry.server.services.MicroZookeeperService: org.slf4j.Logger LOG> AT LINE 248 with ID [1a2a75b2-48da]
2020-08-25 12:10:07 [INFO] - 	 -> $stack40 = virtualinvoke sw.<java.io.StringWriter: java.lang.String toString()>() AT LINE 248 with ID [1a2a75b2-48da]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void debug(java.lang.String)>($stack40) AT LINE 248 with ID [1a2a75b2-48da]
2020-08-25 12:10:07 [WARN] - No overhead is found at method <org.apache.hadoop.hdfs.DFSClient: org.apache.hadoop.fs.QuotaUsage getQuotaUsage(java.lang.String)>
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: void testNoReplicaUnderRecovery()> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = <org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery: org.apache.commons.logging.Log LOG> AT LINE 631 with ID [90c41aa1-fc60]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Running ") AT LINE 631 with ID [90c41aa1-fc60]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = staticinvoke <org.apache.hadoop.test.GenericTestUtils: java.lang.String getMethodName()>() AT LINE 631 with ID [90c41aa1-fc60]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 631 with ID [90c41aa1-fc60]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 631 with ID [90c41aa1-fc60]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack36) AT LINE 631 with ID [90c41aa1-fc60]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: boolean calculateShouldScan(java.lang.String,long,long,long,long)> has 14 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hdfs.server.datanode.VolumeScanner: org.slf4j.Logger LOG> AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = newarray (java.lang.Object)[6] AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18[0] = storageId AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(effectiveBytesPerSec) AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18[1] = $stack22 AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> $stack24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(targetBytesPerSec) AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18[2] = $stack24 AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> $stack26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(startMinute) AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18[3] = $stack26 AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> $stack28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(curMinute) AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18[4] = $stack28 AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> $stack30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(shouldScan) AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> $stack18[5] = $stack30 AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("{}: calculateShouldScan: effectiveBytesPerSec = {}, and targetBytesPerSec = {}.  startMinute = {}, curMinute = {}, shouldScan = {}", $stack18) AT LINE 480 with ID [686f95d1-9397]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl$KillNewTransition: void transition(org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl,org.apache.hadoop.mapreduce.v2.app.job.event.TaskEvent)> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack5 = staticinvoke <org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: org.apache.commons.logging.Log access$1700()>() AT LINE 1241 with ID [ac495bfc-d0a8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not generating HistoryFinish event since start event not generated for task: ") AT LINE 1241 with ID [ac495bfc-d0a8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = virtualinvoke task.<org.apache.hadoop.mapreduce.v2.app.job.impl.TaskImpl: org.apache.hadoop.mapreduce.v2.api.records.TaskId getID()>() AT LINE 1241 with ID [ac495bfc-d0a8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8) AT LINE 1241 with ID [ac495bfc-d0a8]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1241 with ID [ac495bfc-d0a8]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack10) AT LINE 1241 with ID [ac495bfc-d0a8]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.util.concurrent.HadoopThreadPoolExecutor: void beforeExecute(java.lang.Thread,java.lang.Runnable)> has 11 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack6 = <org.apache.hadoop.util.concurrent.HadoopThreadPoolExecutor: org.slf4j.Logger LOG> AT LINE 82 with ID [09548dee-1658]
2020-08-25 12:10:07 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("beforeExecute in thread: ") AT LINE 82 with ID [09548dee-1658]
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() AT LINE 82 with ID [09548dee-1658]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.Thread: java.lang.String getName()>() AT LINE 82 with ID [09548dee-1658]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9) AT LINE 82 with ID [09548dee-1658]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", runnable type: ") AT LINE 82 with ID [09548dee-1658]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke r.<java.lang.Object: java.lang.Class getClass()>() AT LINE 82 with ID [09548dee-1658]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.Class: java.lang.String getName()>() AT LINE 82 with ID [09548dee-1658]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13) AT LINE 82 with ID [09548dee-1658]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 82 with ID [09548dee-1658]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 82 with ID [09548dee-1658]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if attrs != null goto virtualinvoke response.<org.apache.hadoop.nfs.nfs3.response.GETATTR3Response: void setPostOpAttr(org.apache.hadoop.nfs.nfs3.Nfs3FileAttributes)>(attrs) at line 363 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if dfsClient != null goto request = staticinvoke <org.apache.hadoop.nfs.nfs3.request.GETATTR3Request: org.apache.hadoop.nfs.nfs3.request.GETATTR3Request deserialize(org.apache.hadoop.oncrpc.XDR)>(xdr) at line 323 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack13 != 0 goto $stack14 = this.<org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.hdfs.nfs.nfs3.DFSClientCache clientCache> at line 317 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.hadoop.nfs.nfs3.response.GETATTR3Response getattr(org.apache.hadoop.oncrpc.XDR,org.apache.hadoop.oncrpc.security.SecurityHandler,java.net.SocketAddress)> has 8 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack31 = <org.apache.hadoop.hdfs.nfs.nfs3.RpcProgramNfs3: org.apache.commons.logging.Log LOG> AT LINE 339 with ID [a48664db-54f0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GETATTR for fileId: ") AT LINE 339 with ID [a48664db-54f0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack33 = virtualinvoke e.<org.apache.hadoop.nfs.nfs3.FileHandle: long getFileId()>() AT LINE 339 with ID [a48664db-54f0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack33) AT LINE 339 with ID [a48664db-54f0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client: ") AT LINE 339 with ID [a48664db-54f0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(remoteAddress) AT LINE 339 with ID [a48664db-54f0]
2020-08-25 12:10:07 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 339 with ID [a48664db-54f0]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack37) AT LINE 339 with ID [a48664db-54f0]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack5 == 0 goto return at line 405 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.federation.router.ConnectionManager$ConnectionCreator: void run()> has 4 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = staticinvoke <org.apache.hadoop.hdfs.server.federation.router.ConnectionManager: org.slf4j.Logger access$400()>() AT LINE 416 with ID [5ccf0922-f8eb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack14 = virtualinvoke pool.<org.apache.hadoop.hdfs.server.federation.router.ConnectionPool: int getMaxSize()>() AT LINE 416 with ID [5ccf0922-f8eb]
2020-08-25 12:10:07 [INFO] - 	 -> $stack15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack14) AT LINE 416 with ID [5ccf0922-f8eb]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Cannot add more than {} connections to {}", $stack15, pool) AT LINE 416 with ID [5ccf0922-f8eb]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack24 == 0 goto virtualinvoke queueInfo.<org.apache.hadoop.mapred.JobQueueInfo: void setChildren(java.util.List)>(newProps#4) at line 317 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if $stack33 == 0 goto virtualinvoke queueInfo.<org.apache.hadoop.mapred.JobQueueInfo: void setProperties(java.util.Properties)>(newProps) at line 309 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.mapred.Queue: org.apache.hadoop.mapred.JobQueueInfo getJobQueueInfo()> has 6 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack8 = <org.apache.hadoop.mapred.Queue: org.apache.commons.logging.Log LOG> AT LINE 300 with ID [dcbe85db-5f09]
2020-08-25 12:10:07 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("created jobQInfo ") AT LINE 300 with ID [dcbe85db-5f09]
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = virtualinvoke queueInfo.<org.apache.hadoop.mapred.JobQueueInfo: java.lang.String getQueueName()>() AT LINE 300 with ID [dcbe85db-5f09]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10) AT LINE 300 with ID [dcbe85db-5f09]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 300 with ID [dcbe85db-5f09]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack12) AT LINE 300 with ID [dcbe85db-5f09]
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: void removeRMDTMasterKeyState(org.apache.hadoop.security.token.delegation.DelegationKey)> has 5 units and 1 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack10 = <org.apache.hadoop.yarn.server.resourcemanager.recovery.LeveldbRMStateStore: org.apache.commons.logging.Log LOG> AT LINE 797 with ID [cd725872-8cce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing token master key at ") AT LINE 797 with ID [cd725872-8cce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(dbKey) AT LINE 797 with ID [cd725872-8cce]
2020-08-25 12:10:07 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 797 with ID [cd725872-8cce]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 797 with ID [cd725872-8cce]
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i >= size goto (branch) at line 211 don't merge! Need manual examination!
2020-08-25 12:10:07 [WARN] - Both branch of IfStmt if i >= size goto i = 0 at line 208 don't merge! Need manual examination!
2020-08-25 12:10:07 [INFO] - Find overhead at method <org.apache.hadoop.hdfs.server.namenode.top.window.RollingWindowManager: org.apache.hadoop.hdfs.server.namenode.top.window.RollingWindowManager$TopWindow snapshot(long)> has 6 units and 2 lines
2020-08-25 12:10:07 [INFO] - 	 -> $stack18 = this.<org.apache.hadoop.hdfs.server.namenode.top.window.RollingWindowManager: java.util.concurrent.ConcurrentMap metricMap> AT LINE 192 with ID [1b39ea5f-9d03]
2020-08-25 12:10:07 [INFO] - 	 -> metricNames = interfaceinvoke $stack18.<java.util.concurrent.ConcurrentMap: java.util.Set keySet()>() AT LINE 192 with ID [1b39ea5f-9d03]
2020-08-25 12:10:07 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hdfs.server.namenode.top.window.RollingWindowManager: org.slf4j.Logger LOG> AT LINE 193 with ID [1b39ea5f-9d03]
2020-08-25 12:10:07 [INFO] - 	 -> $stack22 = interfaceinvoke metricNames.<java.util.Set: int size()>() AT LINE 193 with ID [1b39ea5f-9d03]
2020-08-25 12:10:07 [INFO] - 	 -> $stack23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack22) AT LINE 193 with ID [1b39ea5f-9d03]
2020-08-25 12:10:07 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("iterating in reported metrics, size={} values={}", $stack23, metricNames) AT LINE 193 with ID [1b39ea5f-9d03]
