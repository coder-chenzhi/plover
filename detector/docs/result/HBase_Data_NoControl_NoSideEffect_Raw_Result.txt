Cannot find config of logging-methods file for project: {hbase}, just use default guard methods. Please check the config in RunConfig.java and re-run mvn install in the utils module.
2021-03-25 15:44:18 [INFO] - [PERF] Start to build call graph at 1616658258711
2021-03-25 15:44:18 [INFO] - [Spark] Starting analysis ...
2021-03-25 15:44:18 [DEBUG] - [Call Graph] For information on where the call graph may be incomplete,use the verbose option to the cg phase.
2021-03-25 15:44:20 [DEBUG] - Total methods: 226307
2021-03-25 15:44:20 [DEBUG] - Initially reachable methods: 1378
2021-03-25 15:44:20 [DEBUG] - Classes with at least one reachable method: 515
2021-03-25 15:44:20 [DEBUG] - [Spark] Pointer Assignment Graph in 2.1 seconds.
2021-03-25 15:44:21 [DEBUG] - [Spark] Type masks in 0.5 seconds.
2021-03-25 15:44:21 [DEBUG] - VarNodes: 18521
2021-03-25 15:44:21 [DEBUG] - FieldRefNodes: 1242
2021-03-25 15:44:21 [DEBUG] - AllocNodes: 3722
2021-03-25 15:44:21 [DEBUG] - Cleaning up graph for merged nodes
2021-03-25 15:44:21 [DEBUG] - Done cleaning up graph for merged nodes
2021-03-25 15:44:21 [DEBUG] - [Spark] Pointer Graph simplified in 0.0 seconds.
2021-03-25 15:44:21 [DEBUG] - Worklist has 3719 nodes.
2021-03-25 15:45:35 [DEBUG] - Now handling field references
2021-03-25 15:45:35 [DEBUG] - Worklist has 4460 nodes.
2021-03-25 15:45:52 [DEBUG] - Now handling field references
2021-03-25 15:45:52 [DEBUG] - Worklist has 4452 nodes.
2021-03-25 15:45:58 [DEBUG] - Now handling field references
2021-03-25 15:45:58 [DEBUG] - Worklist has 4512 nodes.
2021-03-25 15:46:02 [DEBUG] - Now handling field references
2021-03-25 15:46:02 [DEBUG] - Worklist has 3766 nodes.
2021-03-25 15:46:04 [DEBUG] - Now handling field references
2021-03-25 15:46:04 [DEBUG] - Worklist has 2182 nodes.
2021-03-25 15:46:04 [DEBUG] - Now handling field references
2021-03-25 15:46:04 [DEBUG] - Worklist has 1239 nodes.
2021-03-25 15:46:04 [DEBUG] - Now handling field references
2021-03-25 15:46:04 [DEBUG] - Worklist has 672 nodes.
2021-03-25 15:46:05 [DEBUG] - Now handling field references
2021-03-25 15:46:05 [DEBUG] - Worklist has 261 nodes.
2021-03-25 15:46:05 [DEBUG] - Now handling field references
2021-03-25 15:46:05 [DEBUG] - Worklist has 61 nodes.
2021-03-25 15:46:05 [DEBUG] - Now handling field references
2021-03-25 15:46:05 [DEBUG] - Worklist has 3 nodes.
2021-03-25 15:46:05 [DEBUG] - Now handling field references
2021-03-25 15:46:05 [DEBUG] - [Spark] Propagation in 103.8 seconds.
2021-03-25 15:46:05 [DEBUG] - [Spark] Solution found in 103.8 seconds.
2021-03-25 15:46:05 [DEBUG] - [Spark] Number of reachable methods: 28142
2021-03-25 15:46:05 [INFO] - [Spark] Done!
2021-03-25 15:46:08 [INFO] - [Call Graph] Refine call graph in 3.1s , new call graph has 79044  edges (original : 243121)
2021-03-25 15:46:08 [INFO] - [PERF] Finish to build call graph at 1616658368519
2021-03-25 15:46:08 [INFO] - [PERF] Start AliasAnalysis at 1616658368519
2021-03-25 15:46:08 [INFO] - [AliasAnalysis] must alias to identity locals analysis ...
2021-03-25 15:46:09 [INFO] - [AliasAnalysis] complete in  0.7s
2021-03-25 15:46:09 [INFO] - [PERF] Finish AliasAnalysis at 1616658369246
2021-03-25 15:46:09 [INFO] - [PERF] Start EscapeAnalysis at 1616658369246
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.StringBuilder: java.lang.String toString()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.StringIndexOutOfBoundsException: void <init>(int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.StringIndexOutOfBoundsException: void <init>(int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.StringIndexOutOfBoundsException: void <init>(int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.calendar.AbstractCalendar: sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.calendar.Gregorian: sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[])>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap$TreeBin: void <init>(java.util.concurrent.ConcurrentHashMap$TreeNode)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: void addCount(long,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap$TreeNode: java.util.HashMap$TreeNode find(int,java.lang.Object,java.lang.Class)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flushBuffer()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.zip.CheckedOutputStream: void write(int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.zip.CheckedOutputStream: void write(int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flushBuffer()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.zip.CheckedOutputStream: void write(byte[],int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.BufferedOutputStream: void flushBuffer()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.zip.CheckedOutputStream: void write(byte[],int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.zip.CheckedOutputStream: void write(byte[],int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.DataOutputStream: void flush()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void flush()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.DataOutputStream: void flush()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.nio.cs.StreamEncoder: void flushLeftoverChar(java.nio.CharBuffer,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.AbstractMap$1$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.LocaleObjectCache: java.lang.Object get(java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.LocaleObjectCache: java.lang.Object get(java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.misc.ReflectUtil: void checkPackageAccess(java.lang.Class)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.util.HashMap$Node[] resize()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object putVal(int,java.lang.Object,java.lang.Object,boolean,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.zip.InflaterInputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FileInputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FilterInputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FileInputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FileInputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FileInputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FileDescriptor: void closeAll(java.io.Closeable)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FileInputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FileInputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.nio.channels.spi.AbstractInterruptibleChannel: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FileOutputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.FilterOutputStream: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.BufferedWriter: void close()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.lang.String[] producePermutations(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.RopeByteString: void copyToInternal(byte[],int,int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.RopeByteString: void copyToInternal(byte[],int,int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.RopeByteString: void copyToInternal(byte[],int,int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.RopeByteString: void copyToInternal(byte[],int,int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.text.normalizer.Utility: void recursiveAppendNumber(java.lang.StringBuffer,int,int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.ResourceBundle: java.lang.Object getObject(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableList: java.lang.Object get(int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.misc.FDBigInteger: sun.misc.FDBigInteger big5powRec(int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.misc.FDBigInteger: sun.misc.FDBigInteger big5powRec(int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.ConditionalSpecialCasing: char[] lookUpTable(java.lang.String,int,java.util.Locale,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.ConditionalSpecialCasing: char[] lookUpTable(java.lang.String,int,java.util.Locale,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.net.URL: void <init>(java.net.URL,java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.PropertyResourceBundle: java.util.Enumeration getKeys()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.ResourceBundleEnumeration: java.lang.Object nextElement()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter: java.lang.String examineAliases(java.util.spi.TimeZoneNameProvider,java.util.Locale,java.lang.String,java.lang.String,int,java.util.Map)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableList: java.util.ListIterator listIterator(int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern$CharProperty: boolean study(java.util.regex.Pattern$TreeInfo)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern$CharProperty: boolean study(java.util.regex.Pattern$TreeInfo)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern$CharProperty: boolean study(java.util.regex.Pattern$TreeInfo)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern$CharProperty: boolean study(java.util.regex.Pattern$TreeInfo)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern$CharProperty: boolean study(java.util.regex.Pattern$TreeInfo)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern$CharProperty: boolean study(java.util.regex.Pattern$TreeInfo)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern$CharProperty: boolean study(java.util.regex.Pattern$TreeInfo)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern$CharProperty: boolean study(java.util.regex.Pattern$TreeInfo)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern$CharProperty: boolean study(java.util.regex.Pattern$TreeInfo)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: void compile()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.spi.TimeZoneNameProvider getTimeZoneNameProvider()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getAdapter(java.lang.Class,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getAdapter(java.lang.Class,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getAdapter(java.lang.Class,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square(boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square(boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square(boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square(boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square(boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger square()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.MutableBigInteger: java.math.MutableBigInteger divide2n1n(java.math.MutableBigInteger,java.math.MutableBigInteger)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.MutableBigInteger: java.math.MutableBigInteger divideKnuth(java.math.MutableBigInteger,java.math.MutableBigInteger)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: void toString(java.math.BigInteger,java.lang.StringBuilder,int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.math.BigInteger: void toString(java.math.BigInteger,java.lang.StringBuilder,int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.text.MessageFormat: void applyPattern(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.text.DateFormat: java.text.DateFormat get(int,int,int,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.Format$FieldDelegate)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.Format$FieldDelegate)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.text.MessageFormat: java.lang.StringBuffer subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.text.MessageFormat: void <init>(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.calendar.CalendarSystem: sun.util.calendar.CalendarSystem forName(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.TimeZone: java.util.TimeZone getDefault()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getAdapter(java.lang.Class,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.TimeZone: java.util.TimeZone getDefault()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.BuddhistCalendar: void add(int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.text.DateFormatSymbols: java.lang.String[][] getZoneStringsImpl(boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getAdapter(java.lang.Class,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getAdapter(java.lang.Class,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.TimeZone: java.util.TimeZone getDefault()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getAdapter(java.lang.Class,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.net.URL: void <init>(java.net.URL,java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.net.URL: void <init>(java.net.URL,java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.net.URL: void <init>(java.net.URL,java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.net.URL: void <init>(java.net.URL,java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.net.URL: void <init>(java.net.URL,java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.net.URL: void <init>(java.net.URL,java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.net.URL: void <init>(java.net.URL,java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.net.URL: void <init>(java.net.URL,java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Throwable)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.ResourceBundle: java.util.ResourceBundle findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.JRELocaleProviderAdapter: java.util.Set getLanguageTagSet(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$UnmodifiableMap: java.util.Set keySet()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.locale.provider.LocaleProviderAdapter: sun.util.locale.provider.LocaleProviderAdapter getAdapter(java.lang.Class,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.text.SimpleDateFormat: void zeroPaddingNumber(int,int,int,java.lang.StringBuffer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.security.util.DerIndefLenConverter: void writeTag()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.AbstractList$Itr: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.security.x509.AlgorithmId: java.lang.String getName()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.security.x509.AlgorithmId: java.lang.String getName()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.security.util.DisabledAlgorithmConstraints$UsageConstraint: void permits(sun.security.util.ConstraintsParameters)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.security.util.DisabledAlgorithmConstraints$UsageConstraint: void permits(sun.security.util.ConstraintsParameters)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.BufferedReader: void fill()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.BufferedReader: void fill()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.BufferedReader: void fill()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Arrays: void mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.util.Collection values()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.security.x509.X500Name: void encode(sun.security.util.DerOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.security.util.DerOutputStream: void putOrderedSetOf(byte,sun.security.util.DerEncoder[])>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.security.util.DerOutputStream: void putOrderedSetOf(byte,sun.security.util.DerEncoder[])>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.security.util.DerOutputStream: void putOrderedSetOf(byte,sun.security.util.DerEncoder[])>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnmodifiableLazyStringList$1: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.security.pkcs.SignerInfo: void <init>(sun.security.util.DerInputStream,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.security.pkcs.PKCS7: sun.security.pkcs.SignerInfo[] verify(byte[])>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.io.DataInputStream: byte readByte()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.text.normalizer.UnicodeSet: void applyPattern(sun.text.normalizer.RuleCharacterIterator,sun.text.normalizer.SymbolTable,java.lang.StringBuffer,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.lang.String produceEquivalentAlternation(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$CharProperty clazz(boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$CharProperty clazz(boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$CharProperty clazz(boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$CharProperty clazz(boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.regex.Pattern: java.util.regex.Pattern$Node expr(java.util.regex.Pattern$Node)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,java.math.BigDecimal,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,java.math.BigDecimal,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.util.Calendar,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.calendar.Gregorian: sun.util.calendar.Gregorian$Date getCalendarDate(long,sun.util.calendar.CalendarDate)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.util.calendar.Gregorian: sun.util.calendar.CalendarDate getCalendarDate(long,sun.util.calendar.CalendarDate)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$Builder$BuilderParentImpl: void markDirty()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.AbstractMetric: java.lang.String name()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.AbstractMetric: java.lang.String name()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.MetricsTag: java.lang.String description()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.AbstractMetric: java.lang.String description()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.collections.iterators.IteratorChain: void updateCurrentIterator()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.collections.iterators.IteratorChain: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.PropertyConverter: java.util.Iterator toIterator(java.lang.Object,char)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.PropertyConverter: java.util.Iterator toIterator(java.lang.Object,char)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.PropertyConverter: java.util.Iterator toIterator(java.lang.Object,char)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.AbstractFileConfiguration: java.lang.Object getProperty(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void writeProperty(java.lang.String,java.lang.Object,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.AbstractFileConfiguration: void reload()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.AbstractFileConfiguration: java.lang.Object getProperty(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.AbstractFileConfiguration: void load(java.net.URL)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.SubsetConfiguration: java.lang.Object getProperty(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.Object getProperty(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.lang.ClassUtils: java.lang.Class getClass(java.lang.ClassLoader,java.lang.String,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.lang.text.StrSubstitutor: boolean substitute(org.apache.hadoop.hbase.shaded.org.apache.commons.lang.text.StrBuilder,int,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.SubsetConfiguration: java.lang.Object interpolate(java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.ClassLoader getPluginLoader()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.SubsetConfiguration: java.util.Iterator getKeys()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.SubsetConfiguration: java.util.Iterator getKeys(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.collections.iterators.TransformIterator: java.lang.Object next()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.google.common.cache.LocalCache$LoadingValueReference: java.lang.Object get()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.google.common.util.concurrent.ExecutionList: void execute()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.DualPivotQuicksort: void sort(long[],int,int,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.io.netty.util.concurrent.DefaultPromise: void notifyListeners()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.io.netty.util.concurrent.DefaultPromise: org.apache.hbase.thirdparty.io.netty.util.concurrent.Promise addListener(org.apache.hbase.thirdparty.io.netty.util.concurrent.GenericFutureListener)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.io.netty.util.concurrent.DefaultPromise: void notifyListeners()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.io.netty.util.concurrent.DefaultPromise: void notifyListener0(org.apache.hbase.thirdparty.io.netty.util.concurrent.Future,org.apache.hbase.thirdparty.io.netty.util.concurrent.GenericFutureListener)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.io.netty.util.concurrent.DefaultPromise: void notifyListeners()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.io.netty.channel.DefaultChannelPromise: org.apache.hbase.thirdparty.io.netty.channel.ChannelPromise addListener(org.apache.hbase.thirdparty.io.netty.util.concurrent.GenericFutureListener)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.'annotation'.AnnotationParser: void skipMemberValue(java.nio.ByteBuffer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.'annotation'.AnnotationParser: void skipAnnotation(java.nio.ByteBuffer,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.'annotation'.AnnotationParser: java.lang.'annotation'.Annotation parseAnnotation2(java.nio.ByteBuffer,sun.reflect.ConstantPool,java.lang.Class,boolean,java.lang.Class[])>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.'annotation'.AnnotationParser: java.lang.Class toClass(java.lang.reflect.Type)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FieldTypeSignature parseFieldTypeSignature()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FieldTypeSignature parseFieldTypeSignature()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.FieldTypeSignature parseFieldTypeSignature()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.generics.parser.SignatureParser: sun.reflect.generics.tree.TypeSignature parseTypeSignature()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.generics.tree.ClassTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.generics.tree.ClassTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.generics.tree.ClassTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.lang.Class: java.lang.Class toClass(java.lang.reflect.Type)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.generics.scope.AbstractScope: java.lang.reflect.TypeVariable lookup(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.generics.tree.ClassTypeSignature: void accept(sun.reflect.generics.visitor.TypeTreeVisitor)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.'annotation'.AnnotationType: sun.reflect.'annotation'.AnnotationType getInstance(java.lang.Class)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <sun.reflect.'annotation'.AnnotationType: sun.reflect.'annotation'.AnnotationType getInstance(java.lang.Class)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.util.Set entrySet()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.CollectorBase: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.AnnotationCollector collectFromBundle(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.util.ClassUtil: void _addRawSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.util.ClassUtil: void _addRawSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$FileOptions$Builder: org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$FileOptions$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3: java.util.Map getAllFieldsMutable(boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableMessage: java.util.Map getAllFields()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.MessageReflection: void findMissingFields(org.apache.hbase.thirdparty.com.google.protobuf.MessageOrBuilder,java.lang.String,java.util.List)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.MessageReflection: void findMissingFields(org.apache.hbase.thirdparty.com.google.protobuf.MessageOrBuilder,java.lang.String,java.util.List)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage build()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage build()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage build()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage build()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage build()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage build()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage build()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder: org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$MethodDescriptorProto buildPartial()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage build()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder toBuilder()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableBuilder: void mergeExtensionFields(org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3 mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$MessageOptions: org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$MessageOptions$Builder toBuilder()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableBuilder: void mergeExtensionFields(org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3 mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableBuilder: void mergeExtensionFields(org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3 mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.FieldSet: void mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.FieldSet)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableBuilder: void mergeExtensionFields(org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableBuilder: void mergeExtensionFields(org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$DescriptorProto$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$DescriptorProto)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableBuilder: void mergeExtensionFields(org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableBuilder: void mergeExtensionFields(org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3 mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableBuilder: void mergeExtensionFields(org.apache.hbase.thirdparty.com.google.protobuf.GeneratedMessageV3$ExtendableMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3 mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3 mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$MessageOptions$Builder: org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$MessageOptions)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$DescriptorProto$Builder: org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$DescriptorProto$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder: org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$FileOptions$Builder: org.apache.hbase.thirdparty.com.google.protobuf.Message$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3 mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3: org.apache.hbase.thirdparty.com.google.protobuf.SingleFieldBuilderV3 mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder: org.apache.hbase.thirdparty.com.google.protobuf.AbstractMessage$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$FileOptions$Builder: org.apache.hbase.thirdparty.com.google.protobuf.Message$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$FileOptions$Builder: org.apache.hbase.thirdparty.com.google.protobuf.Message$Builder mergeFrom(org.apache.hbase.thirdparty.com.google.protobuf.Message)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.conf.Configuration: org.apache.hadoop.conf.Configuration$Resource loadResource(java.util.Properties,org.apache.hadoop.conf.Configuration$Resource,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter: java.lang.String getPropertyName()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBase: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBase: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBindings)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBindings)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBindings)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType _fromAny(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.ClassStack,java.lang.reflect.Type,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBindings)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBindings)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType _fromClass(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.ClassStack,java.lang.Class,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBindings)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.AnnotationCollector _addFromBundleIfNotPresent(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.util.ClassUtil: void _addSuperTypes(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.Collection,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.util.ClassUtil: void _addSuperTypes(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType,java.lang.Class,java.util.Collection,boolean)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.type.WritableTypeId)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.type.WritableTypeId)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.ReferenceType: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.ReferenceType withStaticTyping()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.ArrayType: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.ArrayType withStaticTyping()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.SimpleType: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType withStaticTyping()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.SimpleType: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType withStaticTyping()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.SimpleType: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType withStaticTyping()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.SimpleType: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType withStaticTyping()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object[])>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.codahale.metrics.MetricRegistry: void registerAll(java.lang.String,org.apache.hadoop.hbase.shaded.com.codahale.metrics.MetricSet)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.codahale.metrics.MetricRegistry: org.apache.hadoop.hbase.shaded.com.codahale.metrics.Metric register(java.lang.String,org.apache.hadoop.hbase.shaded.com.codahale.metrics.Metric)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.CollectionLikeType: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType withHandlersFrom(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.MapLikeType: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType withHandlersFrom(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.type.MapLikeType: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType withHandlersFrom(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.AnnotatedClass,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.NamedType,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutIgnored()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutIgnored()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked append(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: java.util.Map _findFields(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.TypeResolutionContext,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType,java.util.Map)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _applyAnnotations(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.AnnotationMap)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.AnnotationMap _getAllAnnotations(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.AnnotationMap _mergeAnnotations(int,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked[])>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNonVisible()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked trimByVisibility()>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.util.NameTransformer$Chained: java.lang.String transform(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.util.NameTransformer$Chained: java.lang.String transform(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.util.NameTransformer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.util.NameTransformer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.util.NameTransformer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.util.NameTransformer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void assignSerializer(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void assignSerializer(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void assignNullSerializer(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void assignNullSerializer(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JavaType,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void resolve(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.Collections$SynchronizedMap: java.lang.Object remove(java.lang.Object)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.JsonSerializer createContextual(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.BeanProperty)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeAsArray(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeAsArray(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void serializeContents(java.lang.Object[],org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void serializeContents(java.lang.Object[],org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void serializeDynamic(java.util.Map$Entry,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void serializeContents(java.util.Collection,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.EnumSetSerializer: void serializeContents(java.util.EnumSet,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serializeContents(java.lang.Iterable,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void serializeContents(java.util.List,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: void serializeContents(java.util.Iterator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.WritableObjectId: void writeAsField(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void serializeAsField(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView: void serializeAsField(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void _serializeWithObjectId(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void serializeWithType(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void serializeAsElement(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView: void serializeAsElement(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.std.IterableSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.ser.BeanSerializer: void serialize(java.lang.Object,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.databind.SerializerProvider)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$StreamDecoder: void skipRawBytes(int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.RopeByteString$Balancer: void doBalance(org.apache.hbase.thirdparty.com.google.protobuf.ByteString)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.RopeByteString$Balancer: void doBalance(org.apache.hbase.thirdparty.com.google.protobuf.ByteString)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.ByteString: org.apache.hbase.thirdparty.com.google.protobuf.ByteString balancedConcat(java.util.Iterator,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.ByteString: org.apache.hbase.thirdparty.com.google.protobuf.ByteString balancedConcat(java.util.Iterator,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <java.util.concurrent.ForkJoinPool: void tryAddWorker(long)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedInputStream$ArrayDecoder: org.apache.hbase.thirdparty.com.google.protobuf.MessageLite readMessage(org.apache.hbase.thirdparty.com.google.protobuf.Parser,org.apache.hbase.thirdparty.com.google.protobuf.ExtensionRegistryLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.commons.lang3.StringUtils: java.lang.String abbreviate(java.lang.String,int)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.zookeeper.data.ACL: void deserialize(org.apache.jute.InputArchive,java.lang.String)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.RopeByteString: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.ByteOutput)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.RopeByteString: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.ByteOutput)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$ArrayEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream: void writeGroupNoTag(org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessageNoTag(org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream: void writeGroup(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream$OutputStreamEncoder: void writeMessage(int,org.apache.hbase.thirdparty.com.google.protobuf.MessageLite)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet: void writeTo(org.apache.hbase.thirdparty.com.google.protobuf.CodedOutputStream)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.TextFormat$Printer: void printUnknownFields(org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet,org.apache.hbase.thirdparty.com.google.protobuf.TextFormat$TextGenerator)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.TextFormat$Printer: void printUnknownFields(org.apache.hbase.thirdparty.com.google.protobuf.UnknownFieldSet,org.apache.hbase.thirdparty.com.google.protobuf.TextFormat$TextGenerator)>
2021-03-25 15:46:09 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object,java.lang.Object)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Object)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <sun.misc.CompoundEnumeration: java.lang.Object nextElement()>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <java.io.BufferedReader: void close()>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(java.net.URI,org.apache.hadoop.conf.Configuration)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(java.net.URI,org.apache.hadoop.conf.Configuration)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.io.netty.util.internal.logging.MessageFormatter: void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Set)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.io.netty.util.internal.logging.MessageFormatter: void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Set)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hbase.thirdparty.com.google.protobuf.TextFormat$Printer: void print(org.apache.hbase.thirdparty.com.google.protobuf.MessageOrBuilder,org.apache.hbase.thirdparty.com.google.protobuf.TextFormat$TextGenerator)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.zookeeper.data.ACL: void serialize(org.apache.jute.OutputArchive,java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.jute.BinaryOutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.zookeeper.server.DataTree: void getCounts(java.lang.String,org.apache.zookeeper.server.DataTree$Counts)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataTree$ProcessTxnResult processTxn(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hadoop.net.DNS: java.lang.String getDefaultHost(java.lang.String,java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.zookeeper.server.DataTree: void traverseNode(java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void info(java.lang.String,java.lang.Throwable)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder getSingleton()>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder getSingleton()>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder getSingleton()>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.zookeeper.ZKUtil: void logZKTree(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.util.JSONBean: void writeObject(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,boolean,java.lang.Object)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.util.JSONBean: void writeObject(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,boolean,java.lang.Object)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.util.JSONBean: void writeObject(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,boolean,java.lang.Object)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.util.JSONBean: void writeObject(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,boolean,java.lang.Object)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.util.CommonFSUtils: void logFSTree(org.slf4j.Logger,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.shaded.org.apache.commons.math3.exception.util.ArgUtils: java.lang.Object[] flatten(java.lang.Object[])>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hadoop.metrics2.impl.MetricsBuffer: java.util.Iterator iterator()>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Object[])>
2021-03-25 15:46:10 [DEBUG] - Worst case for method <org.apache.hadoop.hbase.client.RpcRetryingCallerImpl: java.lang.Throwable translateException(java.lang.Throwable)>
2021-03-25 15:46:10 [INFO] - [LocalityAnalysis] 17857 methods analyszed in 0.8s
2021-03-25 15:46:10 [INFO] - [PERF] Finish EscapeAnalysis at 1616658370111
2021-03-25 15:46:10 [INFO] - [PERF] Start Intra-procedural analysis at 1616658370113
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: org.apache.hadoop.hbase.client.Result[] call(int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: org.apache.hadoop.hbase.client.Result[] call(int)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if r#71 != null goto $stack32 = interfaceinvoke r#71.<java.util.concurrent.Future: java.lang.Object get()>() at line 231 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if f == null goto (branch) at line 189 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack87 == 0 goto $stack11 = this.<org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: int regionReplication> at line 189 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: org.apache.hadoop.hbase.client.Result[] call(int)>:129 has 7 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack94 = <org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: org.slf4j.Logger LOG> AT LINE 134 with ID [26a1ed2f-f51d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack95 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing scanner id=") AT LINE 134 with ID [26a1ed2f-f51d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack96 = this.<org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: org.apache.hadoop.hbase.client.ScannerCallable currentScannerCallable> AT LINE 134 with ID [26a1ed2f-f51d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack97 = $stack96.<org.apache.hadoop.hbase.client.ScannerCallable: long scannerId> AT LINE 134 with ID [26a1ed2f-f51d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack98 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack97) AT LINE 134 with ID [26a1ed2f-f51d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 134 with ID [26a1ed2f-f51d]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack94.<org.slf4j.Logger: void trace(java.lang.String)>($stack99) AT LINE 134 with ID [26a1ed2f-f51d]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.security.HBaseSaslRpcClient$WrappedInputStream: void readNextRpcPacket()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.security.HBaseSaslRpcClient$WrappedInputStream: void readNextRpcPacket()> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.security.HBaseSaslRpcClient$WrappedInputStream: void readNextRpcPacket()>:232 has 8 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack4 = staticinvoke <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: org.slf4j.Logger access$000()>() AT LINE 233 with ID [bb02885b-e6ef]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String)>("reading next wrapped RPC packet") AT LINE 233 with ID [bb02885b-e6ef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = staticinvoke <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: org.slf4j.Logger access$000()>() AT LINE 242 with ID [a597b718-d78d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unwrapping token of length:") AT LINE 242 with ID [a597b718-d78d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = lengthof rpcBuf AT LINE 242 with ID [a597b718-d78d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack18) AT LINE 242 with ID [a597b718-d78d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 242 with ID [a597b718-d78d]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 242 with ID [a597b718-d78d]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.NettyRpcDuplexHandler: void readResponse(org.apache.hbase.thirdparty.io.netty.channel.ChannelHandlerContext,org.apache.hbase.thirdparty.io.netty.buffer.ByteBuf)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.NettyRpcDuplexHandler: void readResponse(org.apache.hbase.thirdparty.io.netty.channel.ChannelHandlerContext,org.apache.hbase.thirdparty.io.netty.buffer.ByteBuf)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if remoteExc == null goto $stack23 = exceptionResponse#3.<org.apache.hadoop.hbase.ipc.Call: org.apache.hbase.thirdparty.com.google.protobuf.Message responseDefaultType> at line 161 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if exceptionResponse#3 != null goto (branch) at line 147 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack54 == 0 goto (branch) at line 138 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.NettyRpcDuplexHandler: void readResponse(org.apache.hbase.thirdparty.io.netty.channel.ChannelHandlerContext,org.apache.hbase.thirdparty.io.netty.buffer.ByteBuf)>:125 has 22 units and 5 lines
2021-03-25 15:46:10 [INFO] - 	 -> totalSize = virtualinvoke buf.<org.apache.hbase.thirdparty.io.netty.buffer.ByteBuf: int readInt()>() AT LINE 126 with ID [ec6c1b05-07dc, 5b767a65-5c8f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack60 = <org.apache.hadoop.hbase.ipc.NettyRpcDuplexHandler: org.slf4j.Logger LOG> AT LINE 131 with ID [ec6c1b05-07dc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("got response header ") AT LINE 131 with ID [ec6c1b05-07dc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack62 = staticinvoke <org.apache.hbase.thirdparty.com.google.protobuf.TextFormat: java.lang.String shortDebugString(org.apache.hbase.thirdparty.com.google.protobuf.MessageOrBuilder)>(responseHeader) AT LINE 131 with ID [ec6c1b05-07dc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack62) AT LINE 131 with ID [ec6c1b05-07dc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", totalSize: ") AT LINE 131 with ID [ec6c1b05-07dc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(totalSize) AT LINE 131 with ID [ec6c1b05-07dc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes") AT LINE 131 with ID [ec6c1b05-07dc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 131 with ID [ec6c1b05-07dc]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack60.<org.slf4j.Logger: void trace(java.lang.String)>($stack67) AT LINE 131 with ID [ec6c1b05-07dc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = newarray (org.apache.hbase.thirdparty.com.google.protobuf.Message)[1] AT LINE 153 with ID [5b767a65-5c8f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40[0] = responseHeader AT LINE 153 with ID [5b767a65-5c8f]
2021-03-25 15:46:10 [INFO] - 	 -> readSoFar = staticinvoke <org.apache.hadoop.hbase.ipc.IPCUtil: int getTotalSizeWhenWrittenDelimited(org.apache.hbase.thirdparty.com.google.protobuf.Message[])>($stack40) AT LINE 153 with ID [5b767a65-5c8f]
2021-03-25 15:46:10 [INFO] - 	 -> whatIsLeftToRead = totalSize - readSoFar AT LINE 154 with ID [5b767a65-5c8f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hbase.ipc.NettyRpcDuplexHandler: org.slf4j.Logger LOG> AT LINE 156 with ID [5b767a65-5c8f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown callId: ") AT LINE 156 with ID [5b767a65-5c8f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(id) AT LINE 156 with ID [5b767a65-5c8f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", skipping over this response of ") AT LINE 156 with ID [5b767a65-5c8f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(whatIsLeftToRead) AT LINE 156 with ID [5b767a65-5c8f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes") AT LINE 156 with ID [5b767a65-5c8f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 156 with ID [5b767a65-5c8f]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 156 with ID [5b767a65-5c8f]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.apache.hadoop.hbase.HRegionLocation lambda$addToCache$2(org.apache.hadoop.hbase.HRegionLocation,byte[],org.apache.hadoop.hbase.HRegionLocation)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.apache.hadoop.hbase.HRegionLocation lambda$addToCache$2(org.apache.hadoop.hbase.HRegionLocation,byte[],org.apache.hadoop.hbase.HRegionLocation)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack5 > 0 goto $stack6 = <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.slf4j.Logger LOG> at line 223 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.apache.hadoop.hbase.HRegionLocation lambda$addToCache$2(org.apache.hadoop.hbase.HRegionLocation,byte[],org.apache.hadoop.hbase.HRegionLocation)>:221 has 8 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.slf4j.Logger LOG> AT LINE 226 with ID [a393946b-dd4a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Will not add ") AT LINE 226 with ID [a393946b-dd4a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(loc) AT LINE 226 with ID [a393946b-dd4a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to cache because the old value ") AT LINE 226 with ID [a393946b-dd4a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(oldValue) AT LINE 226 with ID [a393946b-dd4a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is newer than us or has the same server name. Maybe it is updated before we replace it") AT LINE 226 with ID [a393946b-dd4a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 226 with ID [a393946b-dd4a]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void trace(java.lang.String)>($stack15) AT LINE 226 with ID [a393946b-dd4a]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.Object getProperty(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.Object getProperty(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if value != null goto $stack4 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.commons.logging.Log LOG> at line 178 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.Object getProperty(java.lang.String)>:176 has 17 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.commons.logging.Log LOG> AT LINE 180 with ID [d4130069-8601]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("poking parent \'") AT LINE 180 with ID [d4130069-8601]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke this.<org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.Configuration getParent()>() AT LINE 180 with ID [d4130069-8601]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.Object: java.lang.Class getClass()>() AT LINE 180 with ID [d4130069-8601]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 180 with ID [d4130069-8601]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28) AT LINE 180 with ID [d4130069-8601]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for key: ") AT LINE 180 with ID [d4130069-8601]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 180 with ID [d4130069-8601]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 180 with ID [d4130069-8601]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack32) AT LINE 180 with ID [d4130069-8601]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.commons.logging.Log LOG> AT LINE 187 with ID [e58bc731-bb18]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("returning \'") AT LINE 187 with ID [e58bc731-bb18]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(value) AT LINE 187 with ID [e58bc731-bb18]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for key: ") AT LINE 187 with ID [e58bc731-bb18]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 187 with ID [e58bc731-bb18]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 187 with ID [e58bc731-bb18]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack12) AT LINE 187 with ID [e58bc731-bb18]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: void consume(org.apache.hadoop.metrics2.impl.MetricsBuffer)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: void consume(org.apache.hadoop.metrics2.impl.MetricsBuffer)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack59 == 0 goto (branch) at line 186 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack63 == 0 goto (branch) at line 182 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack67 == 0 goto (branch) at line 191 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = ts cmp 0L at line 177 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack25 == 0 goto (branch) at line 179 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack36 != 0 goto (branch) at line 189 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: void consume(org.apache.hadoop.metrics2.impl.MetricsBuffer)>:175 has 17 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack42 = this.<org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: org.apache.commons.logging.Log LOG> AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack43 = virtualinvoke tmp$848539978.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pushing record ") AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack44 = virtualinvoke entry.<org.apache.hadoop.metrics2.impl.MetricsBuffer$Entry: java.lang.String name()>() AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44) AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = virtualinvoke record.<org.apache.hadoop.metrics2.impl.MetricsRecordImpl: java.lang.String context()>() AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack47) AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke record.<org.apache.hadoop.metrics2.impl.MetricsRecordImpl: java.lang.String name()>() AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack50) AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack53 = this.<org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: java.lang.String name> AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack53) AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack55) AT LINE 183 with ID [4d00e1c2-fdea]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: org.apache.commons.logging.Log LOG> AT LINE 201 with ID [46b5b490-6071]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Done") AT LINE 201 with ID [46b5b490-6071]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void readResponse()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void readResponse()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if expectedCall != 0 goto $stack19 = virtualinvoke responseHeader.<org.apache.hadoop.hbase.shaded.protobuf.generated.RPCProtos$ResponseHeader: boolean hasException()>() at line 653 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void readResponse()>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ConnectionImplementation: void <init>(org.apache.hadoop.conf.Configuration,java.util.concurrent.ExecutorService,org.apache.hadoop.hbase.security.User)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ConnectionImplementation: void <init>(org.apache.hadoop.conf.Configuration,java.util.concurrent.ExecutorService,org.apache.hadoop.hbase.security.User)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.ConnectionImplementation: void <init>(org.apache.hadoop.conf.Configuration,java.util.concurrent.ExecutorService,org.apache.hadoop.hbase.security.User)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.util.MBeans: void unregister(javax.management.ObjectName)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.util.MBeans: void unregister(javax.management.ObjectName)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if mbeanName != null goto interfaceinvoke mbs.<javax.management.MBeanServer: void unregisterMBean(javax.management.ObjectName)>(mbeanName) at line 76 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.util.MBeans: void unregister(javax.management.ObjectName)>:73 has 7 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack4 = <org.apache.hadoop.metrics2.util.MBeans: org.apache.commons.logging.Log LOG> AT LINE 74 with ID [9ef6b0cb-68de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unregistering ") AT LINE 74 with ID [9ef6b0cb-68de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mbeanName) AT LINE 74 with ID [9ef6b0cb-68de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 74 with ID [9ef6b0cb-68de]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack7) AT LINE 74 with ID [9ef6b0cb-68de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = <org.apache.hadoop.metrics2.util.MBeans: org.apache.commons.logging.Log LOG> AT LINE 77 with ID [c180bfdf-b4c6]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Stacktrace: ", $stack9) AT LINE 77 with ID [c180bfdf-b4c6]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: void updateCurrentlyServingReplica(org.apache.hadoop.hbase.client.ScannerCallable,org.apache.hadoop.hbase.client.Result[],java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.ExecutorService)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: void updateCurrentlyServingReplica(org.apache.hadoop.hbase.client.ScannerCallable,org.apache.hadoop.hbase.client.Result[],java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.ExecutorService)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack16 == 0 goto $stack17 = this.<org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: java.util.Set outstandingCallables> at line 269 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: void updateCurrentlyServingReplica(org.apache.hadoop.hbase.client.ScannerCallable,org.apache.hadoop.hbase.client.Result[],java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.ExecutorService)>:257 has 28 units and 5 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = <org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: org.slf4j.Logger LOG> AT LINE 264 with ID [e74249e7-2305]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting current scanner as id=") AT LINE 264 with ID [e74249e7-2305]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = this.<org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: org.apache.hadoop.hbase.client.ScannerCallable currentScannerCallable> AT LINE 264 with ID [e74249e7-2305]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = $stack50.<org.apache.hadoop.hbase.client.ScannerCallable: long scannerId> AT LINE 264 with ID [e74249e7-2305]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack51) AT LINE 264 with ID [e74249e7-2305]
2021-03-25 15:46:10 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" associated with replica=") AT LINE 264 with ID [e74249e7-2305]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54 = this.<org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: org.apache.hadoop.hbase.client.ScannerCallable currentScannerCallable> AT LINE 265 with ID [e74249e7-2305]
2021-03-25 15:46:10 [INFO] - 	 -> $stack55 = virtualinvoke $stack54.<org.apache.hadoop.hbase.client.ScannerCallable: org.apache.hadoop.hbase.HRegionInfo getHRegionInfo()>() AT LINE 265 with ID [e74249e7-2305]
2021-03-25 15:46:10 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<org.apache.hadoop.hbase.HRegionInfo: int getReplicaId()>() AT LINE 265 with ID [e74249e7-2305]
2021-03-25 15:46:10 [INFO] - 	 -> $stack57 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack56) AT LINE 265 with ID [e74249e7-2305]
2021-03-25 15:46:10 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 265 with ID [e74249e7-2305]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack48.<org.slf4j.Logger: void trace(java.lang.String)>($stack58) AT LINE 264 with ID [e74249e7-2305]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: org.slf4j.Logger LOG> AT LINE 271 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing scanner id=") AT LINE 271 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = s.<org.apache.hadoop.hbase.client.ScannerCallable: long scannerId> AT LINE 271 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack28) AT LINE 271 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", replica=") AT LINE 271 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke s.<org.apache.hadoop.hbase.client.ScannerCallable: org.apache.hadoop.hbase.HRegionInfo getHRegionInfo()>() AT LINE 272 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<org.apache.hadoop.hbase.HRegionInfo: long getRegionId()>() AT LINE 272 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack32) AT LINE 272 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because slow and replica=") AT LINE 272 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = this.<org.apache.hadoop.hbase.client.ScannerCallableWithReplicas: org.apache.hadoop.hbase.client.ScannerCallable currentScannerCallable> AT LINE 274 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<org.apache.hadoop.hbase.client.ScannerCallable: org.apache.hadoop.hbase.HRegionInfo getHRegionInfo()>() AT LINE 274 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<org.apache.hadoop.hbase.HRegionInfo: int getReplicaId()>() AT LINE 274 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack38 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack37) AT LINE 274 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" succeeded") AT LINE 274 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 274 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void trace(java.lang.String)>($stack40) AT LINE 271 with ID [2b2816ff-240e]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.io.compress.Compression$Algorithm: void returnDecompressor(org.apache.hadoop.io.compress.Decompressor)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.io.compress.Compression$Algorithm: void returnDecompressor(org.apache.hadoop.io.compress.Decompressor)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.io.compress.Compression$Algorithm: void returnDecompressor(org.apache.hadoop.io.compress.Decompressor)>:394 has 11 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = staticinvoke <org.apache.hadoop.hbase.io.compress.Compression: org.slf4j.Logger access$200()>() AT LINE 403 with ID [dbee8623-2573]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning decompressor ") AT LINE 403 with ID [dbee8623-2573]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(decompressor) AT LINE 403 with ID [dbee8623-2573]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to pool.") AT LINE 403 with ID [dbee8623-2573]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 403 with ID [dbee8623-2573]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void trace(java.lang.String)>($stack19) AT LINE 403 with ID [dbee8623-2573]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = staticinvoke <org.apache.hadoop.hbase.io.compress.Compression: org.slf4j.Logger access$200()>() AT LINE 403 with ID [6bb3c724-f622]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ending decompressor ") AT LINE 403 with ID [6bb3c724-f622]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(decompressor) AT LINE 403 with ID [6bb3c724-f622]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 403 with ID [6bb3c724-f622]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void trace(java.lang.String)>($stack12) AT LINE 403 with ID [6bb3c724-f622]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.CoprocessorClassLoader: org.apache.hadoop.hbase.util.CoprocessorClassLoader getClassLoader(org.apache.hadoop.fs.Path,java.lang.ClassLoader,java.lang.String,org.apache.hadoop.conf.Configuration)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.CoprocessorClassLoader: org.apache.hadoop.hbase.util.CoprocessorClassLoader getClassLoader(org.apache.hadoop.fs.Path,java.lang.ClassLoader,java.lang.String,org.apache.hadoop.conf.Configuration)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if cl == null goto $stack17 = new org.apache.hadoop.hbase.util.CoprocessorClassLoader$1 at line 257 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack36 != 0 goto $stack14 = <org.apache.hadoop.hbase.util.CoprocessorClassLoader: org.apache.hadoop.hbase.util.KeyLocker locker> at line 259 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if cl == null goto $stack12 = virtualinvoke path.<org.apache.hadoop.fs.Path: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.conf.Configuration)>(conf) at line 245 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.CoprocessorClassLoader: org.apache.hadoop.hbase.util.CoprocessorClassLoader getClassLoader(org.apache.hadoop.fs.Path,java.lang.ClassLoader,java.lang.String,org.apache.hadoop.conf.Configuration)>:242 has 14 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hbase.util.CoprocessorClassLoader: org.slf4j.Logger LOG> AT LINE 246 with ID [30f0cfa1-3ea3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found classloader ") AT LINE 246 with ID [30f0cfa1-3ea3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(cl) AT LINE 246 with ID [30f0cfa1-3ea3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 246 with ID [30f0cfa1-3ea3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(pathStr) AT LINE 246 with ID [30f0cfa1-3ea3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 246 with ID [30f0cfa1-3ea3]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String)>($stack51) AT LINE 246 with ID [30f0cfa1-3ea3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hbase.util.CoprocessorClassLoader: org.slf4j.Logger LOG> AT LINE 258 with ID [100546a9-ecb0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found classloader ") AT LINE 258 with ID [100546a9-ecb0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(cl) AT LINE 258 with ID [100546a9-ecb0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ") AT LINE 258 with ID [100546a9-ecb0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(pathStr) AT LINE 258 with ID [100546a9-ecb0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 258 with ID [100546a9-ecb0]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void debug(java.lang.String)>($stack35) AT LINE 258 with ID [100546a9-ecb0]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncRegionLocator: void clearCache(org.apache.hadoop.hbase.TableName)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncRegionLocator: void clearCache(org.apache.hadoop.hbase.TableName)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncRegionLocator: void clearCache(org.apache.hadoop.hbase.TableName)>:152 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hbase.client.AsyncRegionLocator: org.slf4j.Logger LOG> AT LINE 154 with ID [ec31f4d4-c1de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clear meta cache for ") AT LINE 154 with ID [ec31f4d4-c1de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 154 with ID [ec31f4d4-c1de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 154 with ID [ec31f4d4-c1de]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 154 with ID [ec31f4d4-c1de]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void snapshotMetrics(org.apache.hadoop.metrics2.impl.MetricsSourceAdapter,org.apache.hadoop.metrics2.impl.MetricsBufferBuilder)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void snapshotMetrics(org.apache.hadoop.metrics2.impl.MetricsSourceAdapter,org.apache.hadoop.metrics2.impl.MetricsBufferBuilder)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void snapshotMetrics(org.apache.hadoop.metrics2.impl.MetricsSourceAdapter,org.apache.hadoop.metrics2.impl.MetricsBufferBuilder)>:418 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.commons.logging.Log LOG> AT LINE 423 with ID [ffad0813-e32e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Snapshotted source ") AT LINE 423 with ID [ffad0813-e32e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke sa.<org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: java.lang.String name()>() AT LINE 423 with ID [ffad0813-e32e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17) AT LINE 423 with ID [ffad0813-e32e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 423 with ID [ffad0813-e32e]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack19) AT LINE 423 with ID [ffad0813-e32e]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.PreemptiveFastFailInterceptor: void intercept(org.apache.hadoop.hbase.client.FastFailInterceptorContext)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.PreemptiveFastFailInterceptor: void intercept(org.apache.hadoop.hbase.client.FastFailInterceptorContext)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack13 != 0 goto virtualinvoke context.<org.apache.hadoop.hbase.client.FastFailInterceptorContext: void setDidTry(boolean)>(1) at line 112 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.PreemptiveFastFailInterceptor: void intercept(org.apache.hadoop.hbase.client.FastFailInterceptorContext)>:105 has 9 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hbase.client.PreemptiveFastFailInterceptor: org.slf4j.Logger LOG> AT LINE 113 with ID [98a3bc8b-3dcc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Throwing PFFE : ") AT LINE 113 with ID [98a3bc8b-3dcc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke context.<org.apache.hadoop.hbase.client.FastFailInterceptorContext: org.apache.hadoop.hbase.client.FailureInfo getFailureInfo()>() AT LINE 113 with ID [98a3bc8b-3dcc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack17) AT LINE 113 with ID [98a3bc8b-3dcc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tries : ") AT LINE 113 with ID [98a3bc8b-3dcc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke context.<org.apache.hadoop.hbase.client.FastFailInterceptorContext: int getTries()>() AT LINE 114 with ID [98a3bc8b-3dcc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack20) AT LINE 114 with ID [98a3bc8b-3dcc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 114 with ID [98a3bc8b-3dcc]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 113 with ID [98a3bc8b-3dcc]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.io.crypto.Encryption: void decryptWithSubjectKey(java.io.OutputStream,java.io.InputStream,int,java.lang.String,org.apache.hadoop.conf.Configuration,org.apache.hadoop.hbase.io.crypto.Cipher,byte[])> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.io.crypto.Encryption: void decryptWithSubjectKey(java.io.OutputStream,java.io.InputStream,int,java.lang.String,org.apache.hadoop.conf.Configuration,org.apache.hadoop.hbase.io.crypto.Cipher,byte[])> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if key != null goto d = virtualinvoke cipher.<org.apache.hadoop.hbase.io.crypto.Cipher: org.apache.hadoop.hbase.io.crypto.Decryptor getDecryptor()>() at line 472 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.io.crypto.Encryption: void decryptWithSubjectKey(java.io.OutputStream,java.io.InputStream,int,java.lang.String,org.apache.hadoop.conf.Configuration,org.apache.hadoop.hbase.io.crypto.Cipher,byte[])>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: void writeResponse(org.apache.hbase.thirdparty.io.netty.channel.ChannelHandlerContext,byte[])> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: void writeResponse(org.apache.hbase.thirdparty.io.netty.channel.ChannelHandlerContext,byte[])> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: void writeResponse(org.apache.hbase.thirdparty.io.netty.channel.ChannelHandlerContext,byte[])>:74 has 4 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: org.slf4j.Logger LOG> AT LINE 75 with ID [11244c95-64ac]
2021-03-25 15:46:10 [INFO] - 	 -> $stack3 = lengthof response AT LINE 75 with ID [11244c95-64ac]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack3) AT LINE 75 with ID [11244c95-64ac]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Sending token size={} from initSASLContext.", $stack6) AT LINE 75 with ID [11244c95-64ac]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.impl.MetricsSystemImpl$InitMode initMode()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.impl.MetricsSystemImpl$InitMode initMode()> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.impl.MetricsSystemImpl$InitMode initMode()>:619 has 12 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack4 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.commons.logging.Log LOG> AT LINE 620 with ID [c55d3f03-42f3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from system property: ") AT LINE 620 with ID [c55d3f03-42f3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("hadoop.metrics.init.mode") AT LINE 620 with ID [c55d3f03-42f3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6) AT LINE 620 with ID [c55d3f03-42f3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 620 with ID [c55d3f03-42f3]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack8) AT LINE 620 with ID [c55d3f03-42f3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.commons.logging.Log LOG> AT LINE 621 with ID [fb275709-4e9f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from environment variable: ") AT LINE 621 with ID [fb275709-4e9f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("hadoop.metrics.init.mode") AT LINE 621 with ID [fb275709-4e9f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 621 with ID [fb275709-4e9f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 621 with ID [fb275709-4e9f]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack14) AT LINE 621 with ID [fb275709-4e9f]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ClientScanner: boolean moveToNextRegion()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ClientScanner: boolean moveToNextRegion()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack52 != 0 goto $stack53 = this.<org.apache.hadoop.hbase.client.ClientScanner: org.apache.hadoop.hbase.client.Scan scan> at line 232 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.ClientScanner: boolean moveToNextRegion()>:223 has 18 units and 5 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack58 = <org.apache.hadoop.hbase.client.ClientScanner: org.slf4j.Logger LOG> AT LINE 237 with ID [ca4a4d41-50e9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished ") AT LINE 237 with ID [ca4a4d41-50e9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack60 = this.<org.apache.hadoop.hbase.client.ClientScanner: org.apache.hadoop.hbase.HRegionInfo currentRegion> AT LINE 237 with ID [ca4a4d41-50e9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack60) AT LINE 237 with ID [ca4a4d41-50e9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 237 with ID [ca4a4d41-50e9]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack58.<org.slf4j.Logger: void trace(java.lang.String)>($stack62) AT LINE 237 with ID [ca4a4d41-50e9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = <org.apache.hadoop.hbase.client.ClientScanner: org.slf4j.Logger LOG> AT LINE 242 with ID [b7275119-777a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Advancing internal scanner to startKey at \'") AT LINE 242 with ID [b7275119-777a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack42 = this.<org.apache.hadoop.hbase.client.ClientScanner: org.apache.hadoop.hbase.client.Scan scan> AT LINE 243 with ID [b7275119-777a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<org.apache.hadoop.hbase.client.Scan: byte[] getStartRow()>() AT LINE 243 with ID [b7275119-777a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack44 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>($stack43) AT LINE 243 with ID [b7275119-777a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44) AT LINE 243 with ID [b7275119-777a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ") AT LINE 243 with ID [b7275119-777a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = "inclusive" AT LINE 254 with ID [b7275119-777a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = "exclusive" AT LINE 254 with ID [b7275119-777a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack51) AT LINE 244 with ID [b7275119-777a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 244 with ID [b7275119-777a]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack40.<org.slf4j.Logger: void debug(java.lang.String)>($stack50) AT LINE 242 with ID [b7275119-777a]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.ClassLoader getPluginLoader()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.ClassLoader getPluginLoader()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack23 == 0 goto (branch) at line 228 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack18 == 0 goto return defaultLoader at line 246 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if len <= 0 goto $stack17 = this.<org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.Configuration parent> at line 224 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if purls != null goto $stack14 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.hadoop.hbase.shaded.com.google.common.base.Splitter SPLITTER> at line 221 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack9 == null goto $stack10 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>() at line 218 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.ClassLoader getPluginLoader()>:217 has 8 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack42 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.commons.logging.Log LOG> AT LINE 229 with ID [220d33e4-78e0]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack42.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(jar) AT LINE 229 with ID [220d33e4-78e0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.commons.logging.Log LOG> AT LINE 237 with ID [b0568e3a-b2a8]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using plugin jars: ") AT LINE 237 with ID [b0568e3a-b2a8]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = staticinvoke <org.apache.hadoop.hbase.shaded.com.google.common.collect.Iterables: java.lang.String toString(java.lang.Iterable)>(jars) AT LINE 237 with ID [b0568e3a-b2a8]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33) AT LINE 237 with ID [b0568e3a-b2a8]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 237 with ID [b0568e3a-b2a8]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack35) AT LINE 237 with ID [b0568e3a-b2a8]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection$1: java.lang.Object run()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection$1: java.lang.Object run()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack24 >= $stack23 goto $stack25 = new java.lang.StringBuilder at line 394 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack13 == 0 goto $stack14 = new java.io.IOException at line 420 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = this.<org.apache.hadoop.hbase.ipc.BlockingRpcConnection$1: java.lang.Exception val$ex> at line 417 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack3 == 0 goto $stack4 = staticinvoke <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.slf4j.Logger access$300()>() at line 393 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.BlockingRpcConnection$1: java.lang.Object run()>:392 has 7 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = staticinvoke <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.slf4j.Logger access$300()>() AT LINE 396 with ID [bd45fc51-6d63]
2021-03-25 15:46:10 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception encountered while connecting to the server : ") AT LINE 396 with ID [bd45fc51-6d63]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54 = this.<org.apache.hadoop.hbase.ipc.BlockingRpcConnection$1: java.lang.Exception val$ex> AT LINE 397 with ID [bd45fc51-6d63]
2021-03-25 15:46:10 [INFO] - 	 -> $stack55 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String stringifyException(java.lang.Throwable)>($stack54) AT LINE 397 with ID [bd45fc51-6d63]
2021-03-25 15:46:10 [INFO] - 	 -> $stack56 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack55) AT LINE 397 with ID [bd45fc51-6d63]
2021-03-25 15:46:10 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 397 with ID [bd45fc51-6d63]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack51.<org.slf4j.Logger: void debug(java.lang.String)>($stack57) AT LINE 396 with ID [bd45fc51-6d63]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.JSONBean: int write(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,javax.management.MBeanServer,javax.management.ObjectName,java.lang.String,boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.JSONBean: int write(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,javax.management.MBeanServer,javax.management.ObjectName,java.lang.String,boolean)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if e#39 >= $stack30 goto virtualinvoke jg.<org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>() at line 204 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if attributeinfo != null goto (branch) at line 209 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack21 == 0 goto virtualinvoke jg.<org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>() at line 114 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.JSONBean: int write(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,javax.management.MBeanServer,javax.management.ObjectName,java.lang.String,boolean)>:108 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hbase.util.JSONBean: org.slf4j.Logger LOG> AT LINE 109 with ID [050b8763-3bca]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Listing beans for ") AT LINE 109 with ID [050b8763-3bca]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(qry) AT LINE 109 with ID [050b8763-3bca]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 109 with ID [050b8763-3bca]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void trace(java.lang.String)>($stack18) AT LINE 109 with ID [050b8763-3bca]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.regionserver.MetricsRegionSourceImpl: void close()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.regionserver.MetricsRegionSourceImpl: void close()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if wasClosed == 0 goto $stack6 = this.<org.apache.hadoop.hbase.regionserver.MetricsRegionSourceImpl: org.apache.hadoop.hbase.regionserver.MetricsRegionAggregateSourceImpl agg> at line 111 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.regionserver.MetricsRegionSourceImpl: void close()>:107 has 7 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = <org.apache.hadoop.hbase.regionserver.MetricsRegionSourceImpl: org.slf4j.Logger LOG> AT LINE 123 with ID [788700cd-90af]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing region Metrics: ") AT LINE 123 with ID [788700cd-90af]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = this.<org.apache.hadoop.hbase.regionserver.MetricsRegionSourceImpl: org.apache.hadoop.hbase.regionserver.MetricsRegionWrapper regionWrapper> AT LINE 123 with ID [788700cd-90af]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = interfaceinvoke $stack26.<org.apache.hadoop.hbase.regionserver.MetricsRegionWrapper: java.lang.String getRegionName()>() AT LINE 123 with ID [788700cd-90af]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27) AT LINE 123 with ID [788700cd-90af]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 123 with ID [788700cd-90af]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void trace(java.lang.String)>($stack29) AT LINE 123 with ID [788700cd-90af]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.io.ByteBufferListOutputStream: void releaseResources()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.io.ByteBufferListOutputStream: void releaseResources()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if e#2 >= $stack4 goto this.<org.apache.hadoop.hbase.io.ByteBufferListOutputStream: java.util.List bufsFromPool> = null at line 122 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.io.ByteBufferListOutputStream: void releaseResources()>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: void setMetaLocation(org.apache.hadoop.hbase.zookeeper.ZKWatcher,org.apache.hadoop.hbase.ServerName,int,org.apache.hadoop.hbase.master.RegionState$State)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: void setMetaLocation(org.apache.hadoop.hbase.zookeeper.ZKWatcher,org.apache.hadoop.hbase.ServerName,int,org.apache.hadoop.hbase.master.RegionState$State)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if serverName != null goto $stack8 = <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: org.slf4j.Logger LOG> at line 448 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: void setMetaLocation(org.apache.hadoop.hbase.zookeeper.ZKWatcher,org.apache.hadoop.hbase.ServerName,int,org.apache.hadoop.hbase.master.RegionState$State)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.HBaseConfiguration: java.lang.String getPassword(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.HBaseConfiguration: java.lang.String getPassword(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.HBaseConfiguration: java.lang.String getPassword(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)>:215 has 10 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hbase.HBaseConfiguration: org.slf4j.Logger LOG> AT LINE 219 with ID [93195639-9ec1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = newarray (java.lang.Object)[1] AT LINE 219 with ID [93195639-9ec1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15[0] = alias AT LINE 219 with ID [93195639-9ec1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Config option \"%s\" was found through the Configuration getPassword method.", $stack15) AT LINE 219 with ID [93195639-9ec1]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 219 with ID [93195639-9ec1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hbase.HBaseConfiguration: org.slf4j.Logger LOG> AT LINE 223 with ID [24f64303-2f12]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = newarray (java.lang.Object)[1] AT LINE 223 with ID [24f64303-2f12]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12[0] = alias AT LINE 223 with ID [24f64303-2f12]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Config option \"%s\" was not found. Using provided default value", $stack12) AT LINE 223 with ID [24f64303-2f12]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 223 with ID [24f64303-2f12]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.regionserver.MetricsRegionSourceImpl: void <init>(org.apache.hadoop.hbase.regionserver.MetricsRegionWrapper,org.apache.hadoop.hbase.regionserver.MetricsRegionAggregateSourceImpl)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.regionserver.MetricsRegionSourceImpl: void <init>(org.apache.hadoop.hbase.regionserver.MetricsRegionWrapper,org.apache.hadoop.hbase.regionserver.MetricsRegionAggregateSourceImpl)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.regionserver.MetricsRegionSourceImpl: void <init>(org.apache.hadoop.hbase.regionserver.MetricsRegionWrapper,org.apache.hadoop.hbase.regionserver.MetricsRegionAggregateSourceImpl)>:68 has 9 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hbase.regionserver.MetricsRegionSourceImpl: org.slf4j.Logger LOG> AT LINE 75 with ID [ddb77a15-5d62]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating new MetricsRegionSourceImpl for table ") AT LINE 75 with ID [ddb77a15-5d62]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = interfaceinvoke regionWrapper.<org.apache.hadoop.hbase.regionserver.MetricsRegionWrapper: java.lang.String getTableName()>() AT LINE 76 with ID [ddb77a15-5d62]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10) AT LINE 76 with ID [ddb77a15-5d62]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 76 with ID [ddb77a15-5d62]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = interfaceinvoke regionWrapper.<org.apache.hadoop.hbase.regionserver.MetricsRegionWrapper: java.lang.String getRegionName()>() AT LINE 76 with ID [ddb77a15-5d62]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13) AT LINE 76 with ID [ddb77a15-5d62]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 76 with ID [ddb77a15-5d62]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 75 with ID [ddb77a15-5d62]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: boolean putMetrics(org.apache.hadoop.metrics2.impl.MetricsBuffer,long)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: boolean putMetrics(org.apache.hadoop.metrics2.impl.MetricsBuffer,long)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack15 = this.<org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: org.apache.hadoop.metrics2.lib.MutableCounterInt dropped> at line 98 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack7 != 0 goto return 1 at line 96 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: boolean putMetrics(org.apache.hadoop.metrics2.impl.MetricsBuffer,long)>:95 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = this.<org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: org.apache.commons.logging.Log LOG> AT LINE 97 with ID [064d60ae-059d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enqueue, logicalTime=") AT LINE 97 with ID [064d60ae-059d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(logicalTime) AT LINE 97 with ID [064d60ae-059d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 97 with ID [064d60ae-059d]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack12) AT LINE 97 with ID [064d60ae-059d]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.DynamicClassLoader: void loadNewJars()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.DynamicClassLoader: void loadNewJars()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if file#15 >= l4 goto return at line 215 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack18 != 0 goto ioe#13 = statuses#9 at line 212 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if l4 >= ioe goto statuses#9 = null at line 184 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.DynamicClassLoader: void loadNewJars()>:181 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack55 = <org.apache.hadoop.hbase.util.DynamicClassLoader: org.slf4j.Logger LOG> AT LINE 221 with ID [f93dcae9-d14b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignored non-jar file ") AT LINE 221 with ID [f93dcae9-d14b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fileName) AT LINE 221 with ID [f93dcae9-d14b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 221 with ID [f93dcae9-d14b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack55.<org.slf4j.Logger: void debug(java.lang.String)>($stack58) AT LINE 221 with ID [f93dcae9-d14b]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HTableMultiplexer$FlushWorker: boolean resubmitFailedPut(org.apache.hadoop.hbase.client.HTableMultiplexer$PutStatus,org.apache.hadoop.hbase.HRegionLocation)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HTableMultiplexer$FlushWorker: boolean resubmitFailedPut(org.apache.hadoop.hbase.client.HTableMultiplexer$PutStatus,org.apache.hadoop.hbase.HRegionLocation)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if cnt <= $stack12 goto failedPut = ps.<org.apache.hadoop.hbase.client.HTableMultiplexer$PutStatus: org.apache.hadoop.hbase.client.Put put> at line 491 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if retryCount > 0 goto $stack10 = virtualinvoke this.<org.apache.hadoop.hbase.client.HTableMultiplexer$FlushWorker: java.util.concurrent.atomic.AtomicInteger getRetryInQueue()>() at line 485 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.HTableMultiplexer$FlushWorker: boolean resubmitFailedPut(org.apache.hadoop.hbase.client.HTableMultiplexer$PutStatus,org.apache.hadoop.hbase.HRegionLocation)>:482 has 7 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = staticinvoke <org.apache.hadoop.hbase.client.HTableMultiplexer: org.slf4j.Logger access$000()>() AT LINE 503 with ID [1e15835c-a17a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resubmitting after ") AT LINE 503 with ID [1e15835c-a17a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(delayMs) AT LINE 503 with ID [1e15835c-a17a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms: ") AT LINE 503 with ID [1e15835c-a17a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(retryCount) AT LINE 503 with ID [1e15835c-a17a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 503 with ID [1e15835c-a17a]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void debug(java.lang.String)>($stack28) AT LINE 503 with ID [1e15835c-a17a]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ConnectionImplementation: org.apache.hadoop.hbase.RegionLocations locateRegionInMeta(org.apache.hadoop.hbase.TableName,byte[],boolean,boolean,int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ConnectionImplementation: org.apache.hadoop.hbase.RegionLocations locateRegionInMeta(org.apache.hadoop.hbase.TableName,byte[],boolean,boolean,int)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if tableNotFound == 0 goto $stack120 = new java.io.IOException at line 863 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if regionInfoRow != null goto tableNotFound = 0 at line 862 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack67 == 0 goto virtualinvoke this.<org.apache.hadoop.hbase.client.ConnectionImplementation: void cacheLocation(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.RegionLocations)>(tableName, locations) at line 903 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if serverName != null goto $stack67 = specialinvoke this.<org.apache.hadoop.hbase.client.ConnectionImplementation: boolean isDeadServer(org.apache.hadoop.hbase.ServerName)>(serverName) at line 898 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack64 != 0 goto $stack65 = virtualinvoke locations.<org.apache.hadoop.hbase.RegionLocations: org.apache.hadoop.hbase.HRegionLocation getRegionLocation(int)>(replicaId) at line 893 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack63 == 0 goto $stack64 = interfaceinvoke regionInfo.<org.apache.hadoop.hbase.client.RegionInfo: boolean containsRow(byte[])>(row) at line 886 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack62 == 0 goto $stack63 = interfaceinvoke regionInfo.<org.apache.hadoop.hbase.client.RegionInfo: boolean isOffline()>() at line 883 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if regionInfo != null goto $stack62 = interfaceinvoke regionInfo.<org.apache.hadoop.hbase.client.RegionInfo: boolean isSplitParent()>() at line 877 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack59 != null goto $stack60 = virtualinvoke locations.<org.apache.hadoop.hbase.RegionLocations: org.apache.hadoop.hbase.HRegionLocation getRegionLocation(int)>(replicaId) at line 874 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack144 == null goto (branch) at line 851 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack151 == null goto (branch) at line 845 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if tries < maxAttempts goto (branch) at line 826 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack185 == null goto locations = staticinvoke <org.apache.hadoop.hbase.client.RegionInfo: byte[] createRegionName(org.apache.hadoop.hbase.TableName,byte[],java.lang.String,boolean)>(tableName, row, "99999999999999", 0) at line 820 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.ConnectionImplementation: org.apache.hadoop.hbase.RegionLocations locateRegionInMeta(org.apache.hadoop.hbase.TableName,byte[],boolean,boolean,int)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.CoprocessorClassLoader: java.net.URL getResource(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.CoprocessorClassLoader: java.net.URL getResource(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.CoprocessorClassLoader: java.net.URL getResource(java.lang.String)>:340 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hbase.util.CoprocessorClassLoader: org.slf4j.Logger LOG> AT LINE 347 with ID [b1769c26-27ec]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking parent first for resource ") AT LINE 347 with ID [b1769c26-27ec]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 347 with ID [b1769c26-27ec]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 347 with ID [b1769c26-27ec]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack20) AT LINE 347 with ID [b1769c26-27ec]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: void logRetrievedMsg(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,byte[],boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: void logRetrievedMsg(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,byte[],boolean)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack5 != 0 goto $stack7 = <org.apache.hadoop.hbase.zookeeper.ZKUtil: org.slf4j.Logger LOG> at line 1985 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKUtil: void logRetrievedMsg(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,byte[],boolean)>:1984 has 20 units and 5 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hbase.zookeeper.ZKUtil: org.slf4j.Logger LOG> AT LINE 1989 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retrieved ") AT LINE 1989 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = 0 AT LINE 1998 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = lengthof data AT LINE 1989 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack9) AT LINE 1989 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" byte(s) of data from znode ") AT LINE 1989 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(znode) AT LINE 1989 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = " and set watcher; " AT LINE 1998 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = "; data=" AT LINE 1998 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 1989 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = "null" AT LINE 1998 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = "empty" AT LINE 1998 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = staticinvoke <org.apache.hadoop.hbase.zookeeper.ZKUtil: java.lang.String getServerNameOrEmptyString(byte[])>(data) AT LINE 1994 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = staticinvoke <org.apache.hadoop.hbase.zookeeper.ZKUtil: java.lang.String getServerNameOrEmptyString(byte[])>(data) AT LINE 1996 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>(data) AT LINE 1997 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String abbreviate(java.lang.String,int)>($stack21, 32) AT LINE 1997 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) AT LINE 1997 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1997 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke zkw.<org.apache.hadoop.hbase.zookeeper.ZKWatcher: java.lang.String prefix(java.lang.String)>($stack24) AT LINE 1989 with ID [65836af4-d54c]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void trace(java.lang.String)>($stack25) AT LINE 1989 with ID [65836af4-d54c]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.MetaTableAccessor: void addSplitsToParent(org.apache.hadoop.hbase.client.Connection,org.apache.hadoop.hbase.client.RegionInfo,org.apache.hadoop.hbase.client.RegionInfo,org.apache.hadoop.hbase.client.RegionInfo)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.MetaTableAccessor: void addSplitsToParent(org.apache.hadoop.hbase.client.Connection,org.apache.hadoop.hbase.client.RegionInfo,org.apache.hadoop.hbase.client.RegionInfo,org.apache.hadoop.hbase.client.RegionInfo)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.MetaTableAccessor: void addSplitsToParent(org.apache.hadoop.hbase.client.Connection,org.apache.hadoop.hbase.client.RegionInfo,org.apache.hadoop.hbase.client.RegionInfo,org.apache.hadoop.hbase.client.RegionInfo)>:1460 has 3 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hbase.MetaTableAccessor: org.slf4j.Logger LOG> AT LINE 1467 with ID [b215421b-dea9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = interfaceinvoke regionInfo.<org.apache.hadoop.hbase.client.RegionInfo: java.lang.String getRegionNameAsString()>() AT LINE 1467 with ID [b215421b-dea9]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Added region {}", $stack13) AT LINE 1467 with ID [b215421b-dea9]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncMetaRegionLocator: void lambda$getRegionLocation$0(java.util.concurrent.CompletableFuture,org.apache.hadoop.hbase.RegionLocations,java.lang.Throwable)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncMetaRegionLocator: void lambda$getRegionLocation$0(java.util.concurrent.CompletableFuture,org.apache.hadoop.hbase.RegionLocations,java.lang.Throwable)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if error == null goto loc = virtualinvoke locs.<org.apache.hadoop.hbase.RegionLocations: org.apache.hadoop.hbase.HRegionLocation getDefaultRegionLocation()>() at line 65 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncMetaRegionLocator: void lambda$getRegionLocation$0(java.util.concurrent.CompletableFuture,org.apache.hadoop.hbase.RegionLocations,java.lang.Throwable)>:64 has 7 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hbase.client.AsyncMetaRegionLocator: org.slf4j.Logger LOG> AT LINE 67 with ID [bc9b35b6-d528]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("Failed to fetch meta region location from registry", error) AT LINE 67 with ID [bc9b35b6-d528]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hbase.client.AsyncMetaRegionLocator: org.slf4j.Logger LOG> AT LINE 74 with ID [053c43df-2a59]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The fetched meta region location is ") AT LINE 74 with ID [053c43df-2a59]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(loc) AT LINE 74 with ID [053c43df-2a59]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 74 with ID [053c43df-2a59]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 74 with ID [053c43df-2a59]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$AdminService$BlockingInterface getCachedConnection(org.apache.hadoop.hbase.client.ClusterConnection,org.apache.hadoop.hbase.ServerName)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$AdminService$BlockingInterface getCachedConnection(org.apache.hadoop.hbase.client.ClusterConnection,org.apache.hadoop.hbase.ServerName)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if sn != null goto service = null at line 383 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$AdminService$BlockingInterface getCachedConnection(org.apache.hadoop.hbase.client.ClusterConnection,org.apache.hadoop.hbase.ServerName)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.TableName,byte[])> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.TableName,byte[])> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.TableName,byte[])>:296 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hbase.client.MetaCache: org.slf4j.Logger LOG> AT LINE 308 with ID [44e66cfe-9a8e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed ") AT LINE 308 with ID [44e66cfe-9a8e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(regionLocations) AT LINE 308 with ID [44e66cfe-9a8e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from cache") AT LINE 308 with ID [44e66cfe-9a8e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 308 with ID [44e66cfe-9a8e]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void trace(java.lang.String)>($stack21) AT LINE 308 with ID [44e66cfe-9a8e]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncRequestFutureImpl: void updateResult(int,java.lang.Object)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncRequestFutureImpl: void updateResult(int,java.lang.Object)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncRequestFutureImpl: void updateResult(int,java.lang.Object)>:1257 has 7 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hbase.client.AsyncRequestFutureImpl: org.slf4j.Logger LOG> AT LINE 1261 with ID [7f13fc7d-e6f5]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The result is assigned repeatedly! current:") AT LINE 1261 with ID [7f13fc7d-e6f5]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(current) AT LINE 1261 with ID [7f13fc7d-e6f5]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new:") AT LINE 1261 with ID [7f13fc7d-e6f5]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(result) AT LINE 1261 with ID [7f13fc7d-e6f5]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1261 with ID [7f13fc7d-e6f5]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 1261 with ID [7f13fc7d-e6f5]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: void waitMetaRegionLocation(org.apache.hadoop.hbase.zookeeper.ZKWatcher)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: void waitMetaRegionLocation(org.apache.hadoop.hbase.zookeeper.ZKWatcher)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack12 != 0 goto (branch) at line 249 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack8 == null goto $stack9 = staticinvoke <java.lang.System: long currentTimeMillis()>() at line 243 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: void waitMetaRegionLocation(org.apache.hadoop.hbase.zookeeper.ZKWatcher)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.TableName,byte[],org.apache.hadoop.hbase.ServerName)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.TableName,byte[],org.apache.hadoop.hbase.ServerName)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.TableName,byte[],org.apache.hadoop.hbase.ServerName)>:351 has 11 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hbase.client.MetaCache: org.slf4j.Logger LOG> AT LINE 370 with ID [6127d36c-53b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed locations of table: ") AT LINE 370 with ID [6127d36c-53b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 370 with ID [6127d36c-53b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ,row: ") AT LINE 370 with ID [6127d36c-53b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toString(byte[])>(row) AT LINE 370 with ID [6127d36c-53b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 370 with ID [6127d36c-53b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mapping to server: ") AT LINE 370 with ID [6127d36c-53b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(serverName) AT LINE 370 with ID [6127d36c-53b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from cache") AT LINE 370 with ID [6127d36c-53b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 370 with ID [6127d36c-53b4]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void trace(java.lang.String)>($stack30) AT LINE 370 with ID [6127d36c-53b4]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncMetaRegionLocator: java.util.concurrent.CompletableFuture getRegionLocation(boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncMetaRegionLocator: java.util.concurrent.CompletableFuture getRegionLocation(boolean)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if metaRegionLocation#4 == null goto (branch) at line 91 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncMetaRegionLocator: java.util.concurrent.CompletableFuture getRegionLocation(boolean)>:49 has 4 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hbase.client.AsyncMetaRegionLocator: org.slf4j.Logger LOG> AT LINE 57 with ID [4b044c32-be91]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void trace(java.lang.String)>("Meta region location cache is null, try fetching from registry.") AT LINE 57 with ID [4b044c32-be91]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hbase.client.AsyncMetaRegionLocator: org.slf4j.Logger LOG> AT LINE 61 with ID [32b5d91e-1060]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>("Start fetching meta region location from registry.") AT LINE 61 with ID [32b5d91e-1060]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.security.AbstractHBaseSaslRpcClient$SaslClientCallbackHandler: void handle(javax.security.auth.callback.Callback[])> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.security.AbstractHBaseSaslRpcClient$SaslClientCallbackHandler: void handle(javax.security.auth.callback.Callback[])> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack42 == 0 goto $stack43 = new javax.security.auth.callback.UnsupportedCallbackException at line 172 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if l7 >= l6 goto (branch) at line 165 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.security.AbstractHBaseSaslRpcClient$SaslClientCallbackHandler: void handle(javax.security.auth.callback.Callback[])>:161 has 14 units and 3 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = staticinvoke <org.apache.hadoop.hbase.security.AbstractHBaseSaslRpcClient: org.slf4j.Logger access$000()>() AT LINE 180 with ID [956b0b08-c12a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SASL client callback: setting username: ") AT LINE 180 with ID [956b0b08-c12a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = this.<org.apache.hadoop.hbase.security.AbstractHBaseSaslRpcClient$SaslClientCallbackHandler: java.lang.String userName> AT LINE 180 with ID [956b0b08-c12a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 180 with ID [956b0b08-c12a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 180 with ID [956b0b08-c12a]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String)>($stack36) AT LINE 180 with ID [956b0b08-c12a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = staticinvoke <org.apache.hadoop.hbase.security.AbstractHBaseSaslRpcClient: org.slf4j.Logger access$000()>() AT LINE 186 with ID [2e33ed7d-eae4]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>("SASL client callback: setting userPassword") AT LINE 186 with ID [2e33ed7d-eae4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = staticinvoke <org.apache.hadoop.hbase.security.AbstractHBaseSaslRpcClient: org.slf4j.Logger access$000()>() AT LINE 192 with ID [deb38d02-4140]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SASL client callback: setting realm: ") AT LINE 192 with ID [deb38d02-4140]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke rc.<javax.security.sasl.RealmCallback: java.lang.String getDefaultText()>() AT LINE 192 with ID [deb38d02-4140]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 192 with ID [deb38d02-4140]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 192 with ID [deb38d02-4140]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 192 with ID [deb38d02-4140]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ClientScanner: void close()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ClientScanner: void close()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.ClientScanner: void close()>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ClientScanner: void loadCache()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ClientScanner: void loadCache()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if newLimit#46 >= 0 goto $stack93 = this.<org.apache.hadoop.hbase.client.ClientScanner: org.apache.hadoop.hbase.client.Scan scan> at line 484 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if l15 >= l14 goto $stack39 = this.<org.apache.hadoop.hbase.client.ClientScanner: org.apache.hadoop.hbase.client.Scan scan> at line 470 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack56 != 0 goto (branch) at line 535 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if newLimit#53 == 0 goto (branch) at line 534 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack127 != 0 goto $stack21 = new org.apache.hadoop.hbase.shaded.org.apache.commons.lang3.mutable.MutableBoolean at line 456 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack19 == 0 goto remainingResultSize = this.<org.apache.hadoop.hbase.client.ClientScanner: long maxScannerResultSize> at line 413 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.ClientScanner: void loadCache()>:412 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack86 = <org.apache.hadoop.hbase.client.ClientScanner: org.slf4j.Logger LOG> AT LINE 496 with ID [6c671c6f-e4e8]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack86.<org.slf4j.Logger: void trace(java.lang.String)>("Heartbeat message received and cache contains Results. Breaking out of scan loop") AT LINE 496 with ID [6c671c6f-e4e8]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: java.lang.String createNonSequential(java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: java.lang.String createNonSequential(java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: java.lang.String createNonSequential(java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.util.MBeans: javax.management.ObjectName register(java.lang.String,java.lang.String,java.lang.Object)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.util.MBeans: javax.management.ObjectName register(java.lang.String,java.lang.String,java.lang.Object)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.util.MBeans: javax.management.ObjectName register(java.lang.String,java.lang.String,java.lang.Object)>:53 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = <org.apache.hadoop.metrics2.util.MBeans: org.apache.commons.logging.Log LOG> AT LINE 58 with ID [e405576d-c1ec]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registered ") AT LINE 58 with ID [e405576d-c1ec]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(name) AT LINE 58 with ID [e405576d-c1ec]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 58 with ID [e405576d-c1ec]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack13) AT LINE 58 with ID [e405576d-c1ec]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.lib.MutableRates: void init(java.lang.Class)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.lib.MutableRates: void init(java.lang.Class)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 63 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = this.<org.apache.hadoop.metrics2.lib.MutableRates: java.util.Set protocolCache> at line 61 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.lib.MutableRates: void init(java.lang.Class)>:60 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = <org.apache.hadoop.metrics2.lib.MutableRates: org.apache.commons.logging.Log LOG> AT LINE 65 with ID [162a5b5d-09ee]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(name) AT LINE 65 with ID [162a5b5d-09ee]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void stopSinks()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void stopSinks()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = this.<org.apache.hadoop.metrics2.impl.MetricsSystemImpl: java.util.Map sinks> at line 469 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void stopSinks()>:468 has 11 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.commons.logging.Log LOG> AT LINE 471 with ID [47deb3f2-fae0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping metrics sink ") AT LINE 471 with ID [47deb3f2-fae0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 471 with ID [47deb3f2-fae0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = (java.lang.String) $stack14 AT LINE 471 with ID [47deb3f2-fae0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15) AT LINE 471 with ID [47deb3f2-fae0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": class=") AT LINE 471 with ID [47deb3f2-fae0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke sa.<org.apache.hadoop.metrics2.impl.MetricsSinkAdapter: org.apache.hadoop.metrics2.MetricsSink sink()>() AT LINE 471 with ID [47deb3f2-fae0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.Object: java.lang.Class getClass()>() AT LINE 471 with ID [47deb3f2-fae0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack19) AT LINE 471 with ID [47deb3f2-fae0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 471 with ID [47deb3f2-fae0]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack21) AT LINE 471 with ID [47deb3f2-fae0]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: void setStoragePolicy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String,boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: void setStoragePolicy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String,boolean)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack10 == 0 goto staticinvoke <org.apache.hadoop.hbase.util.CommonFSUtils: void invokeSetStoragePolicy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String)>(fs, path, trimmedStoragePolicy) at line 538 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = <java.util.Locale: java.util.Locale ROOT> at line 530 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if storagePolicy != null goto trimmedStoragePolicy = virtualinvoke storagePolicy.<java.lang.String: java.lang.String trim()>() at line 523 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.CommonFSUtils: void setStoragePolicy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String,boolean)>:522 has 6 units and 3 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hbase.util.CommonFSUtils: org.slf4j.Logger LOG> AT LINE 525 with ID [9aff6031-81e8]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void trace(java.lang.String)>("We were passed a null storagePolicy, exiting early.") AT LINE 525 with ID [9aff6031-81e8]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hbase.util.CommonFSUtils: org.slf4j.Logger LOG> AT LINE 532 with ID [ae03a5d9-1d9b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void trace(java.lang.String)>("We were passed an empty storagePolicy, exiting early.") AT LINE 532 with ID [ae03a5d9-1d9b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hbase.util.CommonFSUtils: org.slf4j.Logger LOG> AT LINE 540 with ID [f7a71778-a2ef]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("We were passed the defer-to-hdfs policy {}, exiting early.", trimmedStoragePolicy) AT LINE 540 with ID [f7a71778-a2ef]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: void startMBeans()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: void startMBeans()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack1 == null goto $stack3 = this.<org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: java.lang.String prefix> at line 217 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: void startMBeans()>:216 has 9 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.apache.commons.logging.Log LOG> AT LINE 219 with ID [8bc43dab-eb43]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Stacktrace: ", $stack19) AT LINE 219 with ID [8bc43dab-eb43]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.apache.commons.logging.Log LOG> AT LINE 223 with ID [85943372-3b3a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MBean for source ") AT LINE 223 with ID [85943372-3b3a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: java.lang.String name> AT LINE 223 with ID [85943372-3b3a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 223 with ID [85943372-3b3a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" registered.") AT LINE 223 with ID [85943372-3b3a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 223 with ID [85943372-3b3a]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack11) AT LINE 223 with ID [85943372-3b3a]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.regionserver.MetricsTableSourceImpl: void close()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.regionserver.MetricsTableSourceImpl: void close()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if wasClosed == 0 goto $stack7 = this.<org.apache.hadoop.hbase.regionserver.MetricsTableSourceImpl: org.apache.hadoop.hbase.regionserver.MetricsTableAggregateSourceImpl agg> at line 67 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.regionserver.MetricsTableSourceImpl: void close()>:63 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hbase.regionserver.MetricsTableSourceImpl: org.slf4j.Logger LOG> AT LINE 79 with ID [b2d0e863-2c22]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void trace(java.lang.String)>("Removing table Metrics for table ") AT LINE 79 with ID [b2d0e863-2c22]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: void retryOrThrow(org.apache.hadoop.hbase.util.RetryCounter,org.apache.zookeeper.KeeperException,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: void retryOrThrow(org.apache.hadoop.hbase.util.RetryCounter,org.apache.zookeeper.KeeperException,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack4 != 0 goto $stack6 = <org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: org.slf4j.Logger LOG> at line 258 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: void retryOrThrow(org.apache.hadoop.hbase.util.RetryCounter,org.apache.zookeeper.KeeperException,java.lang.String)>:257 has 8 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: org.slf4j.Logger LOG> AT LINE 263 with ID [2cdce530-98a3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retry, connectivity issue (JVM Pause?); quorum=") AT LINE 263 with ID [2cdce530-98a3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: java.lang.String quorumServers> AT LINE 263 with ID [2cdce530-98a3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 263 with ID [2cdce530-98a3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",exception=") AT LINE 263 with ID [2cdce530-98a3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(e) AT LINE 263 with ID [2cdce530-98a3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 263 with ID [2cdce530-98a3]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 263 with ID [2cdce530-98a3]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31: void emitMetric(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.metrics2.sink.ganglia.GangliaConf,org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31: void emitMetric(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.metrics2.sink.ganglia.GangliaConf,org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if type != null goto $stack7 = this.<org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31: org.apache.commons.logging.Log LOG> at line 56 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if value != null goto (branch) at line 53 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if name != null goto (branch) at line 50 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31: void emitMetric(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.metrics2.sink.ganglia.GangliaConf,org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope)>:49 has 15 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = this.<org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31: org.apache.commons.logging.Log LOG> AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Emitting metric ") AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type ") AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(type) AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value ") AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value) AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", slope ") AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke gSlope.<org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope: java.lang.String name()>() AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from hostname ") AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke this.<org.apache.hadoop.metrics2.sink.ganglia.GangliaSink31: java.lang.String getHostName()>() AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27) AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack29) AT LINE 62 with ID [b856c406-e486]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack6 >= 1 goto return status at line 701 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.util.CommonFSUtils: org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.PathFilter)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.RetryingCallerInterceptorFactory: org.apache.hadoop.hbase.client.RetryingCallerInterceptor build()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.RetryingCallerInterceptorFactory: org.apache.hadoop.hbase.client.RetryingCallerInterceptor build()> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.RetryingCallerInterceptorFactory: org.apache.hadoop.hbase.client.RetryingCallerInterceptor build()>:64 has 7 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hbase.client.RetryingCallerInterceptorFactory: org.slf4j.Logger LOG> AT LINE 79 with ID [fbb11ef5-1dbd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using ") AT LINE 79 with ID [fbb11ef5-1dbd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = virtualinvoke ret.<org.apache.hadoop.hbase.client.RetryingCallerInterceptor: java.lang.String toString()>() AT LINE 79 with ID [fbb11ef5-1dbd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 79 with ID [fbb11ef5-1dbd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for intercepting the RpcRetryingCaller") AT LINE 79 with ID [fbb11ef5-1dbd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 79 with ID [fbb11ef5-1dbd]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void trace(java.lang.String)>($stack11) AT LINE 79 with ID [fbb11ef5-1dbd]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.MetricsSink register(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSink)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.MetricsSink register(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSink)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack12 = this.<org.apache.hadoop.metrics2.impl.MetricsSystemImpl: java.util.Map allSinks> at line 276 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.MetricsSink register(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSink)>:274 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.commons.logging.Log LOG> AT LINE 275 with ID [1aaed59b-1222]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 275 with ID [1aaed59b-1222]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 275 with ID [1aaed59b-1222]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(description) AT LINE 275 with ID [1aaed59b-1222]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 275 with ID [1aaed59b-1222]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack9) AT LINE 275 with ID [1aaed59b-1222]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.JmxCacheBuster: void clearJmxCache()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.JmxCacheBuster: void clearJmxCache()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack6 == 0 goto $stack7 = <org.apache.hadoop.metrics2.impl.JmxCacheBuster: org.apache.hadoop.metrics2.MetricsExecutor executor> at line 67 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack16 <= 0 goto $stack5 = <org.apache.hadoop.metrics2.impl.JmxCacheBuster: java.util.concurrent.atomic.AtomicBoolean stopped> at line 67 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.JmxCacheBuster: void clearJmxCache()>:57 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = <org.apache.hadoop.metrics2.impl.JmxCacheBuster: org.slf4j.Logger LOG> AT LINE 59 with ID [1384df74-49ed]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clearing JMX Cache") AT LINE 59 with ID [1384df74-49ed]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = staticinvoke <org.apache.hadoop.util.StringUtils: java.lang.String stringifyException(java.lang.Throwable)>($stack20) AT LINE 59 with ID [1384df74-49ed]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 59 with ID [1384df74-49ed]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 59 with ID [1384df74-49ed]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void trace(java.lang.String)>($stack23) AT LINE 59 with ID [1384df74-49ed]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.io.ByteBufferPool: java.nio.ByteBuffer getBuffer()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.io.ByteBufferPool: java.nio.ByteBuffer getBuffer()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if c < $stack7 goto $stack9 = this.<org.apache.hadoop.hbase.io.ByteBufferPool: java.util.concurrent.atomic.AtomicInteger count> at line 105 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack10 != 0 goto $stack11 = <org.apache.hadoop.hbase.io.ByteBufferPool: org.slf4j.Logger LOG> at line 120 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if bb == null goto $stack5 = this.<org.apache.hadoop.hbase.io.ByteBufferPool: java.util.concurrent.atomic.AtomicInteger count> at line 98 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.io.ByteBufferPool: java.nio.ByteBuffer getBuffer()>:96 has 15 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack42 = <org.apache.hadoop.hbase.io.ByteBufferPool: org.slf4j.Logger LOG> AT LINE 108 with ID [eedfd948-4d3c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pool already reached its max capacity : ") AT LINE 108 with ID [eedfd948-4d3c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack44 = this.<org.apache.hadoop.hbase.io.ByteBufferPool: int maxPoolSize> AT LINE 108 with ID [eedfd948-4d3c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack44) AT LINE 108 with ID [eedfd948-4d3c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and no free buffers now. Consider increasing the value for \'") AT LINE 108 with ID [eedfd948-4d3c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hbase.ipc.server.reservoir.initial.max") AT LINE 108 with ID [eedfd948-4d3c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ?") AT LINE 108 with ID [eedfd948-4d3c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 108 with ID [eedfd948-4d3c]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack42.<org.slf4j.Logger: void debug(java.lang.String)>($stack49) AT LINE 108 with ID [eedfd948-4d3c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hbase.io.ByteBufferPool: org.slf4j.Logger LOG> AT LINE 124 with ID [1b7c1d9e-4337]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating a new offheap ByteBuffer of size: ") AT LINE 124 with ID [1b7c1d9e-4337]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.hbase.io.ByteBufferPool: int bufferSize> AT LINE 124 with ID [1b7c1d9e-4337]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack21) AT LINE 124 with ID [1b7c1d9e-4337]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 124 with ID [1b7c1d9e-4337]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void trace(java.lang.String)>($stack23) AT LINE 124 with ID [1b7c1d9e-4337]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.AbstractRpcClient: org.apache.hadoop.hbase.ipc.RpcConnection getConnection(org.apache.hadoop.hbase.ipc.ConnectionId)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.AbstractRpcClient: org.apache.hadoop.hbase.ipc.RpcConnection getConnection(org.apache.hadoop.hbase.ipc.ConnectionId)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack9 != 0 goto $stack10 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: org.apache.hadoop.hbase.util.PoolMap connections> at line 357 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: org.apache.hadoop.hbase.util.PoolMap connections> at line 347 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.AbstractRpcClient: org.apache.hadoop.hbase.ipc.RpcConnection getConnection(org.apache.hadoop.hbase.ipc.ConnectionId)>:346 has 7 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hbase.ipc.AbstractRpcClient: org.slf4j.Logger LOG> AT LINE 349 with ID [4bfae298-6121]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not trying to connect to ") AT LINE 349 with ID [4bfae298-6121]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = remoteId.<org.apache.hadoop.hbase.ipc.ConnectionId: java.net.InetSocketAddress address> AT LINE 349 with ID [4bfae298-6121]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack30) AT LINE 349 with ID [4bfae298-6121]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" this server is in the failed servers list") AT LINE 349 with ID [4bfae298-6121]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 349 with ID [4bfae298-6121]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String)>($stack33) AT LINE 349 with ID [4bfae298-6121]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.TableName,byte[],int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.TableName,byte[],int)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.TableName,byte[],int)>:320 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hbase.client.MetaCache: org.slf4j.Logger LOG> AT LINE 341 with ID [c591b4df-cadc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed ") AT LINE 341 with ID [c591b4df-cadc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(toBeRemoved) AT LINE 341 with ID [c591b4df-cadc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from cache") AT LINE 341 with ID [c591b4df-cadc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 341 with ID [c591b4df-cadc]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void trace(java.lang.String)>($stack27) AT LINE 341 with ID [c591b4df-cadc]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.NettyRpcDuplexHandler: void userEventTriggered(org.apache.hbase.thirdparty.io.netty.channel.ChannelHandlerContext,java.lang.Object)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.NettyRpcDuplexHandler: void userEventTriggered(org.apache.hbase.thirdparty.io.netty.channel.ChannelHandlerContext,java.lang.Object)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.NettyRpcDuplexHandler: void userEventTriggered(org.apache.hbase.thirdparty.io.netty.channel.ChannelHandlerContext,java.lang.Object)>:226 has 9 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hbase.ipc.NettyRpcDuplexHandler: org.slf4j.Logger LOG> AT LINE 233 with ID [71763eae-66b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shutdown connection to ") AT LINE 233 with ID [71763eae-66b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = this.<org.apache.hadoop.hbase.ipc.NettyRpcDuplexHandler: org.apache.hadoop.hbase.ipc.NettyRpcConnection conn> AT LINE 233 with ID [71763eae-66b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<org.apache.hadoop.hbase.ipc.NettyRpcConnection: org.apache.hadoop.hbase.ipc.ConnectionId remoteId()>() AT LINE 233 with ID [71763eae-66b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = $stack26.<org.apache.hadoop.hbase.ipc.ConnectionId: java.net.InetSocketAddress address> AT LINE 233 with ID [71763eae-66b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack27) AT LINE 233 with ID [71763eae-66b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because idle for a long time") AT LINE 233 with ID [71763eae-66b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 233 with ID [71763eae-66b6]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void trace(java.lang.String)>($stack30) AT LINE 233 with ID [71763eae-66b6]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper connect(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.zookeeper.Watcher,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper connect(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.zookeeper.Watcher,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if ensemble != null goto timeout = virtualinvoke conf.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("zookeeper.session.timeout", 90000) at line 125 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKUtil: org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper connect(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.zookeeper.Watcher,java.lang.String)>:124 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hbase.zookeeper.ZKUtil: org.slf4j.Logger LOG> AT LINE 131 with ID [fb649407-5ae7]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(identifier) AT LINE 131 with ID [fb649407-5ae7]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" opening connection to ZooKeeper ensemble=") AT LINE 131 with ID [fb649407-5ae7]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(ensemble) AT LINE 131 with ID [fb649407-5ae7]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 131 with ID [fb649407-5ae7]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void trace(java.lang.String)>($stack21) AT LINE 131 with ID [fb649407-5ae7]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.ByteStringer: void <clinit>()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.ByteStringer: void <clinit>()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.util.ByteStringer: void <clinit>()>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.CellBlockBuilder: boolean buildCellBlock(org.apache.hadoop.hbase.codec.Codec,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.hbase.CellScanner,org.apache.hadoop.hbase.ipc.CellBlockBuilder$OutputStreamSupplier)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.CellBlockBuilder: boolean buildCellBlock(org.apache.hadoop.hbase.codec.Codec,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.hbase.CellScanner,org.apache.hadoop.hbase.ipc.CellBlockBuilder$OutputStreamSupplier)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if codec != null goto bufferSize = this.<org.apache.hadoop.hbase.ipc.CellBlockBuilder: int cellBlockBuildingInitialBufferSize> at line 167 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if cellScanner != null goto (branch) at line 164 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.CellBlockBuilder: boolean buildCellBlock(org.apache.hadoop.hbase.codec.Codec,org.apache.hadoop.io.compress.CompressionCodec,org.apache.hadoop.hbase.CellScanner,org.apache.hadoop.hbase.ipc.CellBlockBuilder$OutputStreamSupplier)>:163 has 9 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hbase.ipc.CellBlockBuilder: org.slf4j.Logger LOG> AT LINE 173 with ID [c4735409-c2a6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Buffer grew from initial bufferSize=") AT LINE 173 with ID [c4735409-c2a6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(bufferSize) AT LINE 173 with ID [c4735409-c2a6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") AT LINE 173 with ID [c4735409-c2a6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = interfaceinvoke supplier.<org.apache.hadoop.hbase.ipc.CellBlockBuilder$OutputStreamSupplier: int size()>() AT LINE 173 with ID [c4735409-c2a6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack16) AT LINE 173 with ID [c4735409-c2a6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; up hbase.ipc.cellblock.building.initial.buffersize?") AT LINE 173 with ID [c4735409-c2a6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 173 with ID [c4735409-c2a6]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void trace(java.lang.String)>($stack19) AT LINE 173 with ID [c4735409-c2a6]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HBaseHbck: java.util.List unassigns(java.util.List,boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HBaseHbck: java.util.List unassigns(java.util.List,boolean)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.HBaseHbck: java.util.List unassigns(java.util.List,boolean)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation: void init(java.lang.Class)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation: void init(java.lang.Class)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if i$ >= len$ goto return at line 72 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = this.<org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation: java.util.Set protocolCache> at line 68 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation: void init(java.lang.Class)>:67 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = <org.apache.hadoop.metrics2.lib.MutableRatesWithAggregation: org.apache.commons.logging.Log LOG> AT LINE 74 with ID [c060057e-c3c4]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(name) AT LINE 74 with ID [c060057e-c3c4]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClient: void setupSaslHandler(org.apache.hbase.thirdparty.io.netty.channel.ChannelPipeline)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClient: void setupSaslHandler(org.apache.hbase.thirdparty.io.netty.channel.ChannelPipeline)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = newarray (org.apache.hbase.thirdparty.io.netty.channel.ChannelHandler)[3] at line 50 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClient: void setupSaslHandler(org.apache.hbase.thirdparty.io.netty.channel.ChannelPipeline)>:46 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClient: org.slf4j.Logger LOG> AT LINE 48 with ID [a6e2ff30-0354]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("SASL client context established. Negotiated QoP {}", qop) AT LINE 48 with ID [a6e2ff30-0354]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.HRegionLocation)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.HRegionLocation)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if location != null goto $stack7 = virtualinvoke location.<org.apache.hadoop.hbase.HRegionLocation: org.apache.hadoop.hbase.client.RegionInfo getRegion()>() at line 409 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.HRegionLocation)>:408 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = <org.apache.hadoop.hbase.client.MetaCache: org.slf4j.Logger LOG> AT LINE 430 with ID [c9420a77-7866]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed ") AT LINE 430 with ID [c9420a77-7866]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(location) AT LINE 430 with ID [c9420a77-7866]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from cache") AT LINE 430 with ID [c9420a77-7866]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 430 with ID [c9420a77-7866]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void trace(java.lang.String)>($stack26) AT LINE 430 with ID [c9420a77-7866]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void setupIOstreams()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void setupIOstreams()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if ticket != null goto $stack35 = new org.apache.hadoop.hbase.ipc.BlockingRpcConnection$2 at line 465 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack15 == 0 goto $stack16 = <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.slf4j.Logger LOG> at line 437 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack10 == null goto $stack11 = this.<org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.apache.hadoop.hbase.ipc.BlockingRpcClient rpcClient> at line 432 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void setupIOstreams()>:431 has 15 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack76 = <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.slf4j.Logger LOG> AT LINE 439 with ID [4da705ea-cb99]
2021-03-25 15:46:10 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not trying to connect to ") AT LINE 439 with ID [4da705ea-cb99]
2021-03-25 15:46:10 [INFO] - 	 -> $stack78 = this.<org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.apache.hadoop.hbase.ipc.ConnectionId remoteId> AT LINE 439 with ID [4da705ea-cb99]
2021-03-25 15:46:10 [INFO] - 	 -> $stack79 = $stack78.<org.apache.hadoop.hbase.ipc.ConnectionId: java.net.InetSocketAddress address> AT LINE 439 with ID [4da705ea-cb99]
2021-03-25 15:46:10 [INFO] - 	 -> $stack80 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack79) AT LINE 439 with ID [4da705ea-cb99]
2021-03-25 15:46:10 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" this server is in the failed servers list") AT LINE 439 with ID [4da705ea-cb99]
2021-03-25 15:46:10 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 439 with ID [4da705ea-cb99]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack76.<org.slf4j.Logger: void debug(java.lang.String)>($stack82) AT LINE 439 with ID [4da705ea-cb99]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.slf4j.Logger LOG> AT LINE 448 with ID [29306277-5a34]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to ") AT LINE 448 with ID [29306277-5a34]
2021-03-25 15:46:10 [INFO] - 	 -> $stack53 = this.<org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.apache.hadoop.hbase.ipc.ConnectionId remoteId> AT LINE 448 with ID [29306277-5a34]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54 = $stack53.<org.apache.hadoop.hbase.ipc.ConnectionId: java.net.InetSocketAddress address> AT LINE 448 with ID [29306277-5a34]
2021-03-25 15:46:10 [INFO] - 	 -> $stack55 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack54) AT LINE 448 with ID [29306277-5a34]
2021-03-25 15:46:10 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 448 with ID [29306277-5a34]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack51.<org.slf4j.Logger: void debug(java.lang.String)>($stack56) AT LINE 448 with ID [29306277-5a34]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKNodeTracker: byte[] blockUntilAvailable(long,boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKNodeTracker: byte[] blockUntilAvailable(long,boolean)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack16 != null goto $stack15 = this.<org.apache.hadoop.hbase.zookeeper.ZKNodeTracker: byte[] data> at line 165 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack11 >= 0 goto $stack12 = timeout cmp 0L at line 120 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKNodeTracker: byte[] blockUntilAvailable(long,boolean)>:119 has 7 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hbase.zookeeper.ZKNodeTracker: org.slf4j.Logger LOG> AT LINE 150 with ID [968f46ec-1007]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Node ") AT LINE 150 with ID [968f46ec-1007]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = this.<org.apache.hadoop.hbase.zookeeper.ZKNodeTracker: java.lang.String node> AT LINE 150 with ID [968f46ec-1007]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32) AT LINE 150 with ID [968f46ec-1007]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" now exists, resetting a watcher") AT LINE 150 with ID [968f46ec-1007]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 150 with ID [968f46ec-1007]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void debug(java.lang.String)>($stack35) AT LINE 150 with ID [968f46ec-1007]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.MetaTableAccessor: void scanMeta(org.apache.hadoop.hbase.client.Connection,byte[],byte[],org.apache.hadoop.hbase.MetaTableAccessor$QueryType,org.apache.hadoop.hbase.filter.Filter,int,org.apache.hadoop.hbase.MetaTableAccessor$Visitor)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.MetaTableAccessor: void scanMeta(org.apache.hadoop.hbase.client.Connection,byte[],byte[],org.apache.hadoop.hbase.MetaTableAccessor$QueryType,org.apache.hadoop.hbase.filter.Filter,int,org.apache.hadoop.hbase.MetaTableAccessor$Visitor)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack31 != 0 goto currentRow#10 = currentRow#10 + 1 at line 769 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if l11 >= metaTable goto (branch) at line 743 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.MetaTableAccessor: void scanMeta(org.apache.hadoop.hbase.client.Connection,byte[],byte[],org.apache.hadoop.hbase.MetaTableAccessor$QueryType,org.apache.hadoop.hbase.filter.Filter,int,org.apache.hadoop.hbase.MetaTableAccessor$Visitor)>:739 has 14 units and 3 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hbase.MetaTableAccessor: org.slf4j.Logger LOG> AT LINE 757 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scanning META starting at row=") AT LINE 757 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack37 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>(startRow) AT LINE 757 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37) AT LINE 757 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stopping at row=") AT LINE 757 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>(stopRow) AT LINE 758 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack40) AT LINE 758 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for max=") AT LINE 758 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(rowUpperLimit) AT LINE 758 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with caching=") AT LINE 758 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = virtualinvoke scan.<org.apache.hadoop.hbase.client.Scan: int getCaching()>() AT LINE 759 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack45) AT LINE 759 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 759 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void trace(java.lang.String)>($stack47) AT LINE 757 with ID [10b999bd-baf6]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: java.util.ArrayList createACL(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: java.util.ArrayList createACL(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,boolean)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if l9 >= l8 goto $stack30 = interfaceinvoke e#3.<java.util.List: boolean isEmpty()>() at line 909 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if isSecureZooKeeper == 0 goto $stack14 = <org.apache.zookeeper.ZooDefs$Ids: java.util.ArrayList OPEN_ACL_UNSAFE> at line 897 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack13 != 0 goto (branch) at line 894 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.ZKUtil: java.util.ArrayList createACL(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,boolean)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.io.compress.Compression$Algorithm: org.apache.hadoop.io.compress.Decompressor getDecompressor()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.io.compress.Compression$Algorithm: org.apache.hadoop.io.compress.Decompressor getDecompressor()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if codec == null goto return null at line 378 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.io.compress.Compression$Algorithm: org.apache.hadoop.io.compress.Decompressor getDecompressor()>:376 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = staticinvoke <org.apache.hadoop.hbase.io.compress.Compression: org.slf4j.Logger access$200()>() AT LINE 388 with ID [803b19b8-a4e9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retrieved decompressor ") AT LINE 388 with ID [803b19b8-a4e9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(decompressor) AT LINE 388 with ID [803b19b8-a4e9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pool.") AT LINE 388 with ID [803b19b8-a4e9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 388 with ID [803b19b8-a4e9]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void trace(java.lang.String)>($stack17) AT LINE 388 with ID [803b19b8-a4e9]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.AbstractRpcClient: void cleanupIdleConnections()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.AbstractRpcClient: void cleanupIdleConnections()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack20 != 0 goto (branch) at line 222 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack18 >= 0 goto (branch) at line 217 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack14 == 0 goto exitmonitor l3 at line 212 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.AbstractRpcClient: void cleanupIdleConnections()>:209 has 7 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hbase.ipc.AbstractRpcClient: org.slf4j.Logger LOG> AT LINE 222 with ID [9fcadeeb-4d4f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleanup idle connection to ") AT LINE 222 with ID [9fcadeeb-4d4f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke conn.<org.apache.hadoop.hbase.ipc.RpcConnection: org.apache.hadoop.hbase.ipc.ConnectionId remoteId()>() AT LINE 222 with ID [9fcadeeb-4d4f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = $stack29.<org.apache.hadoop.hbase.ipc.ConnectionId: java.net.InetSocketAddress address> AT LINE 222 with ID [9fcadeeb-4d4f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack30) AT LINE 222 with ID [9fcadeeb-4d4f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 222 with ID [9fcadeeb-4d4f]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void trace(java.lang.String)>($stack32) AT LINE 222 with ID [9fcadeeb-4d4f]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.DynamicClassLoader: java.lang.Class tryRefreshClass(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.DynamicClassLoader: java.lang.Class tryRefreshClass(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.DynamicClassLoader: java.lang.Class tryRefreshClass(java.lang.String)>:148 has 11 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hbase.util.DynamicClassLoader: org.slf4j.Logger LOG> AT LINE 154 with ID [85b0913b-4eca]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class ") AT LINE 154 with ID [85b0913b-4eca]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 154 with ID [85b0913b-4eca]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already loaded") AT LINE 154 with ID [85b0913b-4eca]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 154 with ID [85b0913b-4eca]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack27) AT LINE 154 with ID [85b0913b-4eca]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hbase.util.DynamicClassLoader: org.slf4j.Logger LOG> AT LINE 160 with ID [2be57825-6c1b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finding class: ") AT LINE 160 with ID [2be57825-6c1b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 160 with ID [2be57825-6c1b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 160 with ID [2be57825-6c1b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 160 with ID [2be57825-6c1b]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.FailedServers: void addToFailedServers(java.net.InetSocketAddress,java.lang.Throwable)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.FailedServers: void addToFailedServers(java.net.InetSocketAddress,java.lang.Throwable)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.FailedServers: void addToFailedServers(java.net.InetSocketAddress,java.lang.Throwable)>:51 has 9 units and 3 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = <org.apache.hadoop.hbase.ipc.FailedServers: org.slf4j.Logger LOG> AT LINE 56 with ID [a7f8aa97-df88]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added failed server with address ") AT LINE 56 with ID [a7f8aa97-df88]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke address.<java.net.InetSocketAddress: java.lang.String toString()>() AT LINE 57 with ID [a7f8aa97-df88]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17) AT LINE 57 with ID [a7f8aa97-df88]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to list caused by ") AT LINE 57 with ID [a7f8aa97-df88]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke throwable.<java.lang.Throwable: java.lang.String toString()>() AT LINE 58 with ID [a7f8aa97-df88]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20) AT LINE 58 with ID [a7f8aa97-df88]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 58 with ID [a7f8aa97-df88]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 56 with ID [a7f8aa97-df88]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: boolean shutdown()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: boolean shutdown()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack10 <= 0 goto $stack11 = this.<org.apache.hadoop.metrics2.impl.MetricsSystemImpl: boolean monitoring> at line 591 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack8 > 0 goto $stack9 = this.<org.apache.hadoop.metrics2.impl.MetricsSystemImpl: int refCount> at line 587 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: boolean shutdown()>:585 has 8 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack3 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.commons.logging.Log LOG> AT LINE 586 with ID [3dbd39f8-6c23]
2021-03-25 15:46:10 [INFO] - 	 -> $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("refCount=") AT LINE 586 with ID [3dbd39f8-6c23]
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = this.<org.apache.hadoop.metrics2.impl.MetricsSystemImpl: int refCount> AT LINE 586 with ID [3dbd39f8-6c23]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack5) AT LINE 586 with ID [3dbd39f8-6c23]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 586 with ID [3dbd39f8-6c23]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack7) AT LINE 586 with ID [3dbd39f8-6c23]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.commons.logging.Log LOG> AT LINE 588 with ID [ce5d7366-47c1]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack33.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Redundant shutdown", $stack32) AT LINE 588 with ID [ce5d7366-47c1]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void processResponseForConnectionHeader()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void processResponseForConnectionHeader()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack5 != 0 goto $stack6 = this.<org.apache.hadoop.hbase.ipc.BlockingRpcConnection: java.io.DataInputStream in> at line 553 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void processResponseForConnectionHeader()>:552 has 7 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.hbase.ipc.BlockingRpcConnection: java.io.DataInputStream in> AT LINE 558 with ID [f4aed879-2873]
2021-03-25 15:46:10 [INFO] - 	 -> readSize = virtualinvoke $stack8.<java.io.DataInputStream: int read(byte[])>(buff) AT LINE 558 with ID [f4aed879-2873]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.slf4j.Logger LOG> AT LINE 560 with ID [f4aed879-2873]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Length of response for connection header:") AT LINE 560 with ID [f4aed879-2873]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(readSize) AT LINE 560 with ID [f4aed879-2873]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 560 with ID [f4aed879-2873]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void debug(java.lang.String)>($stack21) AT LINE 560 with ID [f4aed879-2873]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: javax.management.AttributeList getAttributes(java.lang.String[])> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: javax.management.AttributeList getAttributes(java.lang.String[])> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if i$ >= len$ goto exitmonitor l2 at line 131 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: javax.management.AttributeList getAttributes(java.lang.String[])>:127 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.apache.commons.logging.Log LOG> AT LINE 134 with ID [00f6ef6b-05a6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key) AT LINE 134 with ID [00f6ef6b-05a6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 134 with ID [00f6ef6b-05a6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(attr) AT LINE 134 with ID [00f6ef6b-05a6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 134 with ID [00f6ef6b-05a6]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 134 with ID [00f6ef6b-05a6]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKWatcher: void interruptedExceptionNoThrow(java.lang.InterruptedException,boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKWatcher: void interruptedExceptionNoThrow(java.lang.InterruptedException,boolean)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKWatcher: void interruptedExceptionNoThrow(java.lang.InterruptedException,boolean)>:620 has 8 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack4 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> AT LINE 621 with ID [09c05414-6e48]
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received InterruptedException, will interrupt current thread") AT LINE 621 with ID [09c05414-6e48]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = " and rethrow a SystemErrorException" AT LINE 626 with ID [09c05414-6e48]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = "" AT LINE 626 with ID [09c05414-6e48]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10) AT LINE 621 with ID [09c05414-6e48]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 621 with ID [09c05414-6e48]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = virtualinvoke this.<org.apache.hadoop.hbase.zookeeper.ZKWatcher: java.lang.String prefix(java.lang.String)>($stack7) AT LINE 621 with ID [09c05414-6e48]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($stack8, ie) AT LINE 621 with ID [09c05414-6e48]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.MetaTableAccessor: void deleteRegions(org.apache.hadoop.hbase.client.Connection,java.util.List,long)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.MetaTableAccessor: void deleteRegions(org.apache.hadoop.hbase.client.Connection,java.util.List,long)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack11 == 0 goto staticinvoke <org.apache.hadoop.hbase.MetaTableAccessor: void deleteFromMetaTable(org.apache.hadoop.hbase.client.Connection,java.util.List)>(connection, deletes) at line 1835 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.MetaTableAccessor: void deleteRegions(org.apache.hadoop.hbase.client.Connection,java.util.List,long)>:1833 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hbase.MetaTableAccessor: org.slf4j.Logger LOG> AT LINE 1842 with ID [aad5dd7f-9575]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Deleted regions: {}", regionsInfo) AT LINE 1842 with ID [aad5dd7f-9575]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKWatcher: void connectionEvent(org.apache.zookeeper.WatchedEvent)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKWatcher: void connectionEvent(org.apache.zookeeper.WatchedEvent)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKWatcher: void connectionEvent(org.apache.zookeeper.WatchedEvent)>:537 has 9 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> AT LINE 543 with ID [7d3da5e0-9075]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = this.<org.apache.hadoop.hbase.zookeeper.ZKWatcher: java.lang.String identifier> AT LINE 543 with ID [7d3da5e0-9075]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 543 with ID [7d3da5e0-9075]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" connected") AT LINE 543 with ID [7d3da5e0-9075]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 543 with ID [7d3da5e0-9075]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void debug(java.lang.String)>($stack32) AT LINE 543 with ID [7d3da5e0-9075]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> AT LINE 548 with ID [e258ae97-a015]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke this.<org.apache.hadoop.hbase.zookeeper.ZKWatcher: java.lang.String prefix(java.lang.String)>("Received Disconnected from ZooKeeper, ignoring") AT LINE 548 with ID [e258ae97-a015]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 548 with ID [e258ae97-a015]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.AbstractRpcClient: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String,java.net.SocketAddress,org.apache.hadoop.hbase.client.MetricsConnection)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.AbstractRpcClient: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String,java.net.SocketAddress,org.apache.hadoop.hbase.client.MetricsConnection)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.AbstractRpcClient: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String,java.net.SocketAddress,org.apache.hadoop.hbase.client.MetricsConnection)>:162 has 37 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hbase.ipc.AbstractRpcClient: org.slf4j.Logger LOG> AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Codec=") AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack37 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: org.apache.hadoop.hbase.codec.Codec codec> AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack37) AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", compressor=") AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: org.apache.hadoop.io.compress.CompressionCodec compressor> AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack40) AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tcpKeepAlive=") AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack43 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: boolean tcpKeepAlive> AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack43) AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tcpNoDelay=") AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: boolean tcpNoDelay> AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack46) AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", connectTO=") AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: int connectTO> AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack49) AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", readTO=") AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: int readTO> AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack52) AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", writeTO=") AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack55 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: int writeTO> AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack55) AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", minIdleTimeBeforeClose=") AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack58 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: int minIdleTimeBeforeClose> AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack58) AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", maxRetries=") AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack61 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: int maxRetries> AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack61) AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", fallbackAllowed=") AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack64 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: boolean fallbackAllowed> AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack65 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack64) AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bind address=") AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack70 = this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: java.net.SocketAddress localAddr> AT LINE 207 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack70 = "null" AT LINE 207 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack70) AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack35.<org.slf4j.Logger: void debug(java.lang.String)>($stack69) AT LINE 200 with ID [6f199f95-37aa]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.RawAsyncHBaseAdmin: void lambda$null$33(java.util.concurrent.CompletableFuture,org.apache.hadoop.hbase.TableName,java.util.Optional,java.util.List,java.lang.Throwable)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.RawAsyncHBaseAdmin: void lambda$null$33(java.util.concurrent.CompletableFuture,org.apache.hadoop.hbase.TableName,java.util.Optional,java.util.List,java.lang.Throwable)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack13 <= 0 goto $stack14 = staticinvoke <org.apache.hadoop.hbase.client.RawAsyncHBaseAdmin$lambda_null_32__3: java.util.function.Function bootstrap$(org.apache.hadoop.hbase.client.RawAsyncHBaseAdmin,java.util.List)>(this, locations) at line 652 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if error1 == null goto $stack8 = interfaceinvoke locations.<java.util.List: java.util.stream.Stream stream()>() at line 645 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.RawAsyncHBaseAdmin: void lambda$null$33(java.util.concurrent.CompletableFuture,org.apache.hadoop.hbase.TableName,java.util.Optional,java.util.List,java.lang.Throwable)>:644 has 9 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = <org.apache.hadoop.hbase.client.RawAsyncHBaseAdmin: org.slf4j.Logger LOG> AT LINE 654 with ID [c8f710e4-5dab]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Table ") AT LINE 654 with ID [c8f710e4-5dab]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 654 with ID [c8f710e4-5dab]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has ") AT LINE 654 with ID [c8f710e4-5dab]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = interfaceinvoke notDeployedRegions.<java.util.List: int size()>() AT LINE 654 with ID [c8f710e4-5dab]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack28) AT LINE 654 with ID [c8f710e4-5dab]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" regions") AT LINE 654 with ID [c8f710e4-5dab]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 654 with ID [c8f710e4-5dab]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack24.<org.slf4j.Logger: void debug(java.lang.String)>($stack31) AT LINE 654 with ID [c8f710e4-5dab]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.CommonFSUtils$StreamCapabilities: void <clinit>()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.CommonFSUtils$StreamCapabilities: void <clinit>()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.util.CommonFSUtils$StreamCapabilities: void <clinit>()>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKWatcher: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.hbase.Abortable,boolean,boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKWatcher: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.hbase.Abortable,boolean,boolean)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack39 == 0 goto this.<org.apache.hadoop.hbase.zookeeper.ZKWatcher: java.lang.String quorum> = clientZkQuorumServers at line 143 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.ZKWatcher: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.hbase.Abortable,boolean,boolean)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.MetaTableAccessor: void debugLogMutation(org.apache.hadoop.hbase.client.Mutation)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.MetaTableAccessor: void debugLogMutation(org.apache.hadoop.hbase.client.Mutation)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.MetaTableAccessor: void debugLogMutation(org.apache.hadoop.hbase.client.Mutation)>:2152 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack1 = <org.apache.hadoop.hbase.MetaTableAccessor: org.slf4j.Logger METALOG> AT LINE 2153 with ID [eb6fbe41-d702]
2021-03-25 15:46:10 [INFO] - 	 -> $stack3 = virtualinvoke p.<java.lang.Object: java.lang.Class getClass()>() AT LINE 2153 with ID [eb6fbe41-d702]
2021-03-25 15:46:10 [INFO] - 	 -> $stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getSimpleName()>() AT LINE 2153 with ID [eb6fbe41-d702]
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = virtualinvoke p.<org.apache.hadoop.hbase.client.Mutation: java.lang.String toJSON()>() AT LINE 2153 with ID [eb6fbe41-d702]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack1.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{} {}", $stack4, $stack5) AT LINE 2153 with ID [eb6fbe41-d702]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKNodeTracker: void start()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKNodeTracker: void start()> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKNodeTracker: void start()>:75 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hbase.zookeeper.ZKNodeTracker: org.slf4j.Logger LOG> AT LINE 84 with ID [9e151b88-c653]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try starting again because there is no data from ") AT LINE 84 with ID [9e151b88-c653]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = this.<org.apache.hadoop.hbase.zookeeper.ZKNodeTracker: java.lang.String node> AT LINE 84 with ID [9e151b88-c653]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 84 with ID [9e151b88-c653]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 84 with ID [9e151b88-c653]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 84 with ID [9e151b88-c653]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.ClassSize: long estimateBaseFromCoefficients(int[],boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.ClassSize: long estimateBaseFromCoefficients(int[],boolean)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.ClassSize: long estimateBaseFromCoefficients(int[],boolean)>:414 has 19 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hbase.util.ClassSize: org.slf4j.Logger LOG> AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Primitives=") AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = coeff[0] AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack25) AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", arrays=") AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = coeff[1] AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack28) AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", references=") AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = coeff[2] AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31) AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", refSize ") AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = <org.apache.hadoop.hbase.util.ClassSize: int REFERENCE> AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack34) AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", size=") AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(size) AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", prealign_size=") AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(prealign_size) AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack40) AT LINE 421 with ID [bf0a9298-d3de]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.apache.hadoop.hbase.HRegionLocation locateRowBeforeInCache(org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$TableCache,org.apache.hadoop.hbase.TableName,byte[])> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.apache.hadoop.hbase.HRegionLocation locateRowBeforeInCache(org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$TableCache,org.apache.hadoop.hbase.TableName,byte[])> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack32 < 0 goto return null at line 345 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if entry != null goto $stack10 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>() at line 340 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.apache.hadoop.hbase.HRegionLocation locateRowBeforeInCache(org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$TableCache,org.apache.hadoop.hbase.TableName,byte[])>:336 has 13 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.slf4j.Logger LOG> AT LINE 347 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found ") AT LINE 347 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(loc) AT LINE 347 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in cache for \'") AT LINE 347 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 347 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', row=\'") AT LINE 347 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>(row) AT LINE 348 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23) AT LINE 348 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', locateType=") AT LINE 348 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hbase.client.RegionLocateType: org.apache.hadoop.hbase.client.RegionLocateType BEFORE> AT LINE 348 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack26) AT LINE 348 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 348 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void trace(java.lang.String)>($stack28) AT LINE 347 with ID [3eae70ca-6f78]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HBaseAdmin: void compact(org.apache.hadoop.hbase.TableName,byte[],boolean,org.apache.hadoop.hbase.client.CompactType)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HBaseAdmin: void compact(org.apache.hadoop.hbase.TableName,byte[],boolean,org.apache.hadoop.hbase.client.CompactType)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.HBaseAdmin: void compact(org.apache.hadoop.hbase.TableName,byte[],boolean,org.apache.hadoop.hbase.client.CompactType)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void run()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void run()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack3 == 0 goto $stack4 = <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.slf4j.Logger LOG> at line 348 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void run()>:344 has 20 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.slf4j.Logger LOG> AT LINE 346 with ID [5ab366a8-3174]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = this.<org.apache.hadoop.hbase.ipc.BlockingRpcConnection: java.lang.String threadName> AT LINE 346 with ID [5ab366a8-3174]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19) AT LINE 346 with ID [5ab366a8-3174]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": starting, connections ") AT LINE 346 with ID [5ab366a8-3174]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.apache.hadoop.hbase.ipc.BlockingRpcClient rpcClient> AT LINE 346 with ID [5ab366a8-3174]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = $stack22.<org.apache.hadoop.hbase.ipc.BlockingRpcClient: org.apache.hadoop.hbase.util.PoolMap connections> AT LINE 346 with ID [5ab366a8-3174]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<org.apache.hadoop.hbase.util.PoolMap: int size()>() AT LINE 346 with ID [5ab366a8-3174]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24) AT LINE 346 with ID [5ab366a8-3174]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 346 with ID [5ab366a8-3174]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack18.<org.slf4j.Logger: void trace(java.lang.String)>($stack26) AT LINE 346 with ID [5ab366a8-3174]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.slf4j.Logger LOG> AT LINE 352 with ID [c5517eda-e006]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.hbase.ipc.BlockingRpcConnection: java.lang.String threadName> AT LINE 352 with ID [c5517eda-e006]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8) AT LINE 352 with ID [c5517eda-e006]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": stopped, connections ") AT LINE 352 with ID [c5517eda-e006]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.hbase.ipc.BlockingRpcConnection: org.apache.hadoop.hbase.ipc.BlockingRpcClient rpcClient> AT LINE 352 with ID [c5517eda-e006]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = $stack11.<org.apache.hadoop.hbase.ipc.BlockingRpcClient: org.apache.hadoop.hbase.util.PoolMap connections> AT LINE 352 with ID [c5517eda-e006]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<org.apache.hadoop.hbase.util.PoolMap: int size()>() AT LINE 352 with ID [c5517eda-e006]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack13) AT LINE 352 with ID [c5517eda-e006]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 352 with ID [c5517eda-e006]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void trace(java.lang.String)>($stack15) AT LINE 352 with ID [c5517eda-e006]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HBaseAdmin: void deleteTableSnapshots(java.util.regex.Pattern,java.util.regex.Pattern)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HBaseAdmin: void deleteTableSnapshots(java.util.regex.Pattern,java.util.regex.Pattern)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack9 == 0 goto return at line 3036 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.HBaseAdmin: void deleteTableSnapshots(java.util.regex.Pattern,java.util.regex.Pattern)>:3034 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hbase.client.HBaseAdmin: org.slf4j.Logger LOG> AT LINE 3039 with ID [b1c66e24-cde9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Successfully deleted snapshot: ") AT LINE 3039 with ID [b1c66e24-cde9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke snapshot.<org.apache.hadoop.hbase.client.SnapshotDescription: java.lang.String getName()>() AT LINE 3039 with ID [b1c66e24-cde9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 3039 with ID [b1c66e24-cde9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3039 with ID [b1c66e24-cde9]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 3039 with ID [b1c66e24-cde9]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.RetryCounter: void sleepUntilNextRetry()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.RetryCounter: void sleepUntilNextRetry()> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.RetryCounter: void sleepUntilNextRetry()>:160 has 5 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> attempts = virtualinvoke this.<org.apache.hadoop.hbase.util.RetryCounter: int getAttemptTimes()>() AT LINE 161 with ID [175048e0-8c85]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hbase.util.RetryCounter: org.slf4j.Logger LOG> AT LINE 163 with ID [175048e0-8c85]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(sleepTime) AT LINE 163 with ID [175048e0-8c85]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(attempts) AT LINE 163 with ID [175048e0-8c85]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Sleeping {} ms before retry #{}...", $stack8, $stack9) AT LINE 163 with ID [175048e0-8c85]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.metrics.impl.GlobalMetricRegistriesAdapter: void doRun()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.metrics.impl.GlobalMetricRegistriesAdapter: void doRun()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack25 != 0 goto (branch) at line 155 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack20 == 0 goto (branch) at line 151 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack55 != 0 goto (branch) at line 133 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack10 == 0 goto $stack11 = <org.apache.hadoop.hbase.metrics.impl.GlobalMetricRegistriesAdapter: org.slf4j.Logger LOG> at line 111 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.metrics.impl.GlobalMetricRegistriesAdapter: void doRun()>:110 has 18 units and 3 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack94 = <org.apache.hadoop.hbase.metrics.impl.GlobalMetricRegistriesAdapter: org.slf4j.Logger LOG> AT LINE 116 with ID [4cfd5811-b967]
2021-03-25 15:46:10 [INFO] - 	 -> $stack95 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doRun called: ") AT LINE 116 with ID [4cfd5811-b967]
2021-03-25 15:46:10 [INFO] - 	 -> $stack96 = this.<org.apache.hadoop.hbase.metrics.impl.GlobalMetricRegistriesAdapter: java.util.HashMap registeredSources> AT LINE 116 with ID [4cfd5811-b967]
2021-03-25 15:46:10 [INFO] - 	 -> $stack97 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack96) AT LINE 116 with ID [4cfd5811-b967]
2021-03-25 15:46:10 [INFO] - 	 -> $stack98 = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 116 with ID [4cfd5811-b967]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack94.<org.slf4j.Logger: void trace(java.lang.String)>($stack98) AT LINE 116 with ID [4cfd5811-b967]
2021-03-25 15:46:10 [INFO] - 	 -> $stack76 = <org.apache.hadoop.hbase.metrics.impl.GlobalMetricRegistriesAdapter: org.slf4j.Logger LOG> AT LINE 135 with ID [193b0034-e331]
2021-03-25 15:46:10 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registering adapter for the MetricRegistry: ") AT LINE 135 with ID [193b0034-e331]
2021-03-25 15:46:10 [INFO] - 	 -> $stack78 = virtualinvoke info.<org.apache.hadoop.hbase.metrics.MetricRegistryInfo: java.lang.String getMetricsJmxContext()>() AT LINE 135 with ID [193b0034-e331]
2021-03-25 15:46:10 [INFO] - 	 -> $stack79 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack78) AT LINE 135 with ID [193b0034-e331]
2021-03-25 15:46:10 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 135 with ID [193b0034-e331]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack76.<org.slf4j.Logger: void debug(java.lang.String)>($stack80) AT LINE 135 with ID [193b0034-e331]
2021-03-25 15:46:10 [INFO] - 	 -> $stack39 = <org.apache.hadoop.hbase.metrics.impl.GlobalMetricRegistriesAdapter: org.slf4j.Logger LOG> AT LINE 157 with ID [2ca9437c-ad60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing adapter for the MetricRegistry: ") AT LINE 157 with ID [2ca9437c-ad60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack41 = virtualinvoke adapter#14.<org.apache.hadoop.hbase.metrics.MetricRegistryInfo: java.lang.String getMetricsJmxContext()>() AT LINE 157 with ID [2ca9437c-ad60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack41) AT LINE 157 with ID [2ca9437c-ad60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 157 with ID [2ca9437c-ad60]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack39.<org.slf4j.Logger: void debug(java.lang.String)>($stack43) AT LINE 157 with ID [2ca9437c-ad60]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKWatcher: boolean checkACLForSuperUsers(java.lang.String[],java.util.List)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKWatcher: boolean checkACLForSuperUsers(java.lang.String[],java.util.List)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if l5 >= l4 goto return 1 at line 326 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if hasAccess != 0 goto l5 = l5 + 1 at line 344 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack18 == 0 goto (branch) at line 331 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKWatcher: boolean checkACLForSuperUsers(java.lang.String[],java.util.List)>:325 has 12 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> AT LINE 338 with ID [b7bd288b-ce89]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = newarray (java.lang.Object)[3] AT LINE 336 with ID [b7bd288b-ce89]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke acl.<org.apache.zookeeper.data.ACL: org.apache.zookeeper.data.Id getId()>() AT LINE 338 with ID [b7bd288b-ce89]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<org.apache.zookeeper.data.Id: java.lang.String getId()>() AT LINE 338 with ID [b7bd288b-ce89]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24[0] = $stack29 AT LINE 338 with ID [b7bd288b-ce89]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke acl.<org.apache.zookeeper.data.ACL: int getPerms()>() AT LINE 338 with ID [b7bd288b-ce89]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack31) AT LINE 338 with ID [b7bd288b-ce89]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24[1] = $stack32 AT LINE 338 with ID [b7bd288b-ce89]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(31) AT LINE 338 with ID [b7bd288b-ce89]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24[2] = $stack34 AT LINE 338 with ID [b7bd288b-ce89]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("superuser \'%s\' does not have correct permissions: have 0x%x, want 0x%x", $stack24) AT LINE 336 with ID [b7bd288b-ce89]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String)>($stack35) AT LINE 336 with ID [b7bd288b-ce89]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.CoprocessorRpcUtils: org.apache.hadoop.hbase.shaded.com.google.protobuf.Message getResponse(org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$CoprocessorServiceResponse,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.CoprocessorRpcUtils: org.apache.hadoop.hbase.shaded.com.google.protobuf.Message getResponse(org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$CoprocessorServiceResponse,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.CoprocessorRpcUtils: org.apache.hadoop.hbase.shaded.com.google.protobuf.Message getResponse(org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$CoprocessorServiceResponse,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message)>:138 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hbase.ipc.CoprocessorRpcUtils: org.slf4j.Logger LOG> AT LINE 147 with ID [5b026357-3052]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Master Result is value=") AT LINE 147 with ID [5b026357-3052]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(response) AT LINE 147 with ID [5b026357-3052]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 147 with ID [5b026357-3052]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void trace(java.lang.String)>($stack13) AT LINE 147 with ID [5b026357-3052]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.security.token.AuthenticationTokenSelector: org.apache.hadoop.security.token.Token selectToken(org.apache.hadoop.io.Text,java.util.Collection)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.security.token.AuthenticationTokenSelector: org.apache.hadoop.security.token.Token selectToken(org.apache.hadoop.io.Text,java.util.Collection)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack16 == 0 goto (branch) at line 45 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack12 == 0 goto (branch) at line 44 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack5 = <org.apache.hadoop.hbase.security.token.AuthenticationTokenSelector: org.slf4j.Logger LOG> at line 43 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.security.token.AuthenticationTokenSelector: org.apache.hadoop.security.token.Token selectToken(org.apache.hadoop.io.Text,java.util.Collection)>:41 has 7 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hbase.security.token.AuthenticationTokenSelector: org.slf4j.Logger LOG> AT LINE 47 with ID [53cdbd02-8f5c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning token ") AT LINE 47 with ID [53cdbd02-8f5c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(ident) AT LINE 47 with ID [53cdbd02-8f5c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 47 with ID [53cdbd02-8f5c]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack23) AT LINE 47 with ID [53cdbd02-8f5c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hbase.security.token.AuthenticationTokenSelector: org.slf4j.Logger LOG> AT LINE 53 with ID [84feaac8-2059]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>("No matching token found") AT LINE 53 with ID [84feaac8-2059]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ClientScanner: boolean renewLease()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ClientScanner: boolean renewLease()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack4 != null goto $stack5 = this.<org.apache.hadoop.hbase.client.ClientScanner: org.apache.hadoop.hbase.client.ScannerCallableWithReplicas callable> at line 575 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.ClientScanner: boolean renewLease()>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: void addToCache(org.apache.hadoop.hbase.HRegionLocation)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: void addToCache(org.apache.hadoop.hbase.HRegionLocation)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: void addToCache(org.apache.hadoop.hbase.HRegionLocation)>:236 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.slf4j.Logger LOG> AT LINE 238 with ID [90655d56-1487]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Try adding {} to cache", loc) AT LINE 238 with ID [90655d56-1487]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: void delete(java.lang.String,int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: void delete(java.lang.String,int)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.RecoverableZooKeeper: void delete(java.lang.String,int)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HTableMultiplexer: boolean put(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.Put,int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HTableMultiplexer: boolean put(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.Put,int)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if loc == null goto (branch) at line 203 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if maxAttempts > 0 goto $stack8 = this.<org.apache.hadoop.hbase.client.HTableMultiplexer: int maxKeyValueSize> at line 192 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.HTableMultiplexer: boolean put(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.Put,int)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HBaseAdmin$71: org.apache.hadoop.hbase.shaded.com.google.protobuf.Message callExecService(org.apache.hadoop.hbase.shaded.com.google.protobuf.RpcController,org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HBaseAdmin$71: org.apache.hadoop.hbase.shaded.com.google.protobuf.Message callExecService(org.apache.hadoop.hbase.shaded.com.google.protobuf.RpcController,org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.HBaseAdmin$71: org.apache.hadoop.hbase.shaded.com.google.protobuf.Message callExecService(org.apache.hadoop.hbase.shaded.com.google.protobuf.RpcController,org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message)>:3098 has 9 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = staticinvoke <org.apache.hadoop.hbase.client.HBaseAdmin: org.slf4j.Logger access$200()>() AT LINE 3100 with ID [3d689c48-76b2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call: ") AT LINE 3100 with ID [3d689c48-76b2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke method.<org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor: java.lang.String getName()>() AT LINE 3100 with ID [3d689c48-76b2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31) AT LINE 3100 with ID [3d689c48-76b2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 3100 with ID [3d689c48-76b2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = interfaceinvoke request.<org.apache.hadoop.hbase.shaded.com.google.protobuf.Message: java.lang.String toString()>() AT LINE 3100 with ID [3d689c48-76b2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 3100 with ID [3d689c48-76b2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3100 with ID [3d689c48-76b2]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void trace(java.lang.String)>($stack36) AT LINE 3100 with ID [3d689c48-76b2]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKWatcher: boolean isBaseZnodeAclSetup(java.util.List)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKWatcher: boolean isBaseZnodeAclSetup(java.util.List)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if perms == 1 goto (branch) at line 276 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if perms == 31 goto (branch) at line 284 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack26 == 0 goto $stack27 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> at line 291 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack64 == 0 goto $stack24 = "sasl" at line 298 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack23 == 0 goto (branch) at line 275 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack18 == 0 goto return 1 at line 270 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if perms == 31 goto (branch) at line 299 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack40 == 0 goto $stack41 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> at line 298 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack16 == 0 goto l4 = interfaceinvoke acls.<java.util.List: java.util.Iterator iterator()>() at line 263 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack92 != 0 goto $stack14 = staticinvoke <org.apache.hadoop.security.UserGroupInformation: org.apache.hadoop.security.UserGroupInformation getCurrentUser()>() at line 267 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKWatcher: boolean isBaseZnodeAclSetup(java.util.List)>:249 has 42 units and 10 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack94 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> AT LINE 251 with ID [0b920e96-0d8c]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack94.<org.slf4j.Logger: void debug(java.lang.String)>("Checking znode ACLs") AT LINE 251 with ID [0b920e96-0d8c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack90 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> AT LINE 265 with ID [424b6ff7-76f9]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack90.<org.slf4j.Logger: void debug(java.lang.String)>("ACL is empty") AT LINE 265 with ID [424b6ff7-76f9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack80 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> AT LINE 279 with ID [d8ed653c-3844]
2021-03-25 15:46:10 [INFO] - 	 -> $stack79 = newarray (java.lang.Object)[3] AT LINE 278 with ID [d8ed653c-3844]
2021-03-25 15:46:10 [INFO] - 	 -> $stack79[0] = id AT LINE 278 with ID [d8ed653c-3844]
2021-03-25 15:46:10 [INFO] - 	 -> $stack83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(perms) AT LINE 279 with ID [d8ed653c-3844]
2021-03-25 15:46:10 [INFO] - 	 -> $stack79[1] = $stack83 AT LINE 279 with ID [d8ed653c-3844]
2021-03-25 15:46:10 [INFO] - 	 -> $stack85 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) AT LINE 279 with ID [d8ed653c-3844]
2021-03-25 15:46:10 [INFO] - 	 -> $stack79[2] = $stack85 AT LINE 279 with ID [d8ed653c-3844]
2021-03-25 15:46:10 [INFO] - 	 -> $stack86 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("permissions for \'%s\' are not correct: have 0x%x, want 0x%x", $stack79) AT LINE 278 with ID [d8ed653c-3844]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack80.<org.slf4j.Logger: void debug(java.lang.String)>($stack86) AT LINE 278 with ID [d8ed653c-3844]
2021-03-25 15:46:10 [INFO] - 	 -> $stack69 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> AT LINE 287 with ID [bae01395-d3b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack68 = newarray (java.lang.Object)[3] AT LINE 286 with ID [bae01395-d3b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack68[0] = id AT LINE 286 with ID [bae01395-d3b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack72 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(perms) AT LINE 287 with ID [bae01395-d3b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack68[1] = $stack72 AT LINE 287 with ID [bae01395-d3b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack74 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(31) AT LINE 287 with ID [bae01395-d3b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack68[2] = $stack74 AT LINE 287 with ID [bae01395-d3b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack75 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("permissions for \'%s\' are not correct: have 0x%x, want 0x%x", $stack68) AT LINE 286 with ID [bae01395-d3b6]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack69.<org.slf4j.Logger: void debug(java.lang.String)>($stack75) AT LINE 286 with ID [bae01395-d3b6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack53 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> AT LINE 302 with ID [51ab26d8-c667]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52 = newarray (java.lang.Object)[3] AT LINE 301 with ID [51ab26d8-c667]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52[0] = id AT LINE 301 with ID [51ab26d8-c667]
2021-03-25 15:46:10 [INFO] - 	 -> $stack56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(perms) AT LINE 302 with ID [51ab26d8-c667]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52[1] = $stack56 AT LINE 302 with ID [51ab26d8-c667]
2021-03-25 15:46:10 [INFO] - 	 -> $stack58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(31) AT LINE 302 with ID [51ab26d8-c667]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52[2] = $stack58 AT LINE 302 with ID [51ab26d8-c667]
2021-03-25 15:46:10 [INFO] - 	 -> $stack59 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("permissions for \'%s\' are not correct: have 0x%x, want 0x%x", $stack52) AT LINE 301 with ID [51ab26d8-c667]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack53.<org.slf4j.Logger: void debug(java.lang.String)>($stack59) AT LINE 301 with ID [51ab26d8-c667]
2021-03-25 15:46:10 [INFO] - 	 -> $stack44 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> AT LINE 308 with ID [f90cd90e-2d4e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected shortname in SASL ACL: ") AT LINE 308 with ID [f90cd90e-2d4e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(id) AT LINE 308 with ID [f90cd90e-2d4e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 308 with ID [f90cd90e-2d4e]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String)>($stack47) AT LINE 308 with ID [f90cd90e-2d4e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> AT LINE 314 with ID [1012867f-6871]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected ACL id \'") AT LINE 314 with ID [1012867f-6871]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(id) AT LINE 314 with ID [1012867f-6871]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 314 with ID [1012867f-6871]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 314 with ID [1012867f-6871]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void debug(java.lang.String)>($stack34) AT LINE 314 with ID [1012867f-6871]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MBeanInfoBuilder: javax.management.MBeanInfo get()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MBeanInfoBuilder: javax.management.MBeanInfo get()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack24 == 0 goto $stack25 = this.<org.apache.hadoop.metrics2.impl.MBeanInfoBuilder: int curRecNo> at line 104 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack21 == 0 goto $stack22 = virtualinvoke rec.<org.apache.hadoop.metrics2.impl.MetricsRecordImpl: java.lang.Iterable metrics()>() at line 100 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack9 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.commons.logging.Log LOG> at line 99 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MBeanInfoBuilder: javax.management.MBeanInfo get()>:97 has 3 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.commons.logging.Log LOG> AT LINE 109 with ID [871e84ee-bf20]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = this.<org.apache.hadoop.metrics2.impl.MBeanInfoBuilder: java.util.List attrs> AT LINE 109 with ID [871e84ee-bf20]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack8) AT LINE 109 with ID [871e84ee-bf20]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: java.lang.Object register(java.lang.String,java.lang.String,java.lang.Object)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: java.lang.Object register(java.lang.String,java.lang.String,java.lang.Object)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: java.lang.Object register(java.lang.String,java.lang.String,java.lang.Object)>:223 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.commons.logging.Log LOG> AT LINE 232 with ID [d662a098-5306]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(finalName) AT LINE 232 with ID [d662a098-5306]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 232 with ID [d662a098-5306]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(finalDesc) AT LINE 232 with ID [d662a098-5306]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 232 with ID [d662a098-5306]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 232 with ID [d662a098-5306]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HBaseAdmin: void execProcedure(java.lang.String,java.lang.String,java.util.Map)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HBaseAdmin: void execProcedure(java.lang.String,java.lang.String,java.util.Map)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if done != 0 goto return at line 2829 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if done != 0 goto (branch) at line 2830 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.HBaseAdmin: void execProcedure(java.lang.String,java.lang.String,java.util.Map)>:2794 has 22 units and 3 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = <org.apache.hadoop.hbase.client.HBaseAdmin: org.slf4j.Logger LOG> AT LINE 2811 with ID [3ba04450-3731]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting a max of ") AT LINE 2811 with ID [3ba04450-3731]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(max) AT LINE 2811 with ID [3ba04450-3731]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms for procedure \'") AT LINE 2811 with ID [3ba04450-3731]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(signature) AT LINE 2811 with ID [3ba04450-3731]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") AT LINE 2811 with ID [3ba04450-3731]
2021-03-25 15:46:10 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(instance) AT LINE 2811 with ID [3ba04450-3731]
2021-03-25 15:46:10 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'\' to complete. (max ") AT LINE 2811 with ID [3ba04450-3731]
2021-03-25 15:46:10 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(maxPauseTime) AT LINE 2811 with ID [3ba04450-3731]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms per retry)") AT LINE 2811 with ID [3ba04450-3731]
2021-03-25 15:46:10 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2811 with ID [3ba04450-3731]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String)>($stack41) AT LINE 2811 with ID [3ba04450-3731]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hbase.client.HBaseAdmin: org.slf4j.Logger LOG> AT LINE 2820 with ID [9d345dd8-03cb]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(#") AT LINE 2820 with ID [9d345dd8-03cb]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(tries) AT LINE 2820 with ID [9d345dd8-03cb]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") Sleeping: ") AT LINE 2820 with ID [9d345dd8-03cb]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(sleep) AT LINE 2820 with ID [9d345dd8-03cb]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms while waiting for procedure completion.") AT LINE 2820 with ID [9d345dd8-03cb]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2820 with ID [9d345dd8-03cb]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String)>($stack52) AT LINE 2820 with ID [9d345dd8-03cb]
2021-03-25 15:46:10 [INFO] - 	 -> $stack53 = <org.apache.hadoop.hbase.client.HBaseAdmin: org.slf4j.Logger LOG> AT LINE 2826 with ID [6f33ca69-be84]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack53.<org.slf4j.Logger: void debug(java.lang.String)>("Getting current status of procedure from master...") AT LINE 2826 with ID [6f33ca69-be84]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.RegionCoprocessorRpcChannel: org.apache.hadoop.hbase.shaded.com.google.protobuf.Message callExecService(org.apache.hadoop.hbase.shaded.com.google.protobuf.RpcController,org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.RegionCoprocessorRpcChannel: org.apache.hadoop.hbase.shaded.com.google.protobuf.Message callExecService(org.apache.hadoop.hbase.shaded.com.google.protobuf.RpcController,org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack9 != null goto $stack10 = new org.apache.hadoop.hbase.client.RegionCoprocessorRpcChannel$1 at line 76 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.RegionCoprocessorRpcChannel: org.apache.hadoop.hbase.shaded.com.google.protobuf.Message callExecService(org.apache.hadoop.hbase.shaded.com.google.protobuf.RpcController,org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message)>:72 has 9 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hbase.client.RegionCoprocessorRpcChannel: org.slf4j.Logger LOG> AT LINE 74 with ID [0fe05131-98bc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call: ") AT LINE 74 with ID [0fe05131-98bc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke method.<org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor: java.lang.String getName()>() AT LINE 74 with ID [0fe05131-98bc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 74 with ID [0fe05131-98bc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 74 with ID [0fe05131-98bc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = interfaceinvoke request.<org.apache.hadoop.hbase.shaded.com.google.protobuf.Message: java.lang.String toString()>() AT LINE 74 with ID [0fe05131-98bc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32) AT LINE 74 with ID [0fe05131-98bc]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 74 with ID [0fe05131-98bc]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void trace(java.lang.String)>($stack34) AT LINE 74 with ID [0fe05131-98bc]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: byte[] getDataInternal(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,org.apache.zookeeper.data.Stat,boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: byte[] getDataInternal(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,org.apache.zookeeper.data.Stat,boolean)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.ZKUtil: byte[] getDataInternal(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,org.apache.zookeeper.data.Stat,boolean)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.client.RegionInfo)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.client.RegionInfo)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if oldLocation != null goto updatedLocations = virtualinvoke regionLocations.<org.apache.hadoop.hbase.RegionLocations: org.apache.hadoop.hbase.RegionLocations remove(org.apache.hadoop.hbase.HRegionLocation)>(oldLocation) at line 387 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.client.RegionInfo)>:382 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hbase.client.MetaCache: org.slf4j.Logger LOG> AT LINE 401 with ID [904f9e28-739b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed ") AT LINE 401 with ID [904f9e28-739b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(oldLocation) AT LINE 401 with ID [904f9e28-739b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from cache") AT LINE 401 with ID [904f9e28-739b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 401 with ID [904f9e28-739b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void trace(java.lang.String)>($stack25) AT LINE 401 with ID [904f9e28-739b]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void writeRequest(org.apache.hadoop.hbase.ipc.Call)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void writeRequest(org.apache.hadoop.hbase.ipc.Call)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack14 == 0 goto $stack16 = this.<org.apache.hadoop.hbase.ipc.BlockingRpcConnection: java.util.concurrent.ConcurrentMap calls> at line 617 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void writeRequest(org.apache.hadoop.hbase.ipc.Call)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKWatcher: void process(org.apache.zookeeper.WatchedEvent)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKWatcher: void process(org.apache.zookeeper.WatchedEvent)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack35 == 0 goto (branch) at line 501 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack41 == 0 goto (branch) at line 494 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack29 == 0 goto (branch) at line 508 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack23 == 0 goto (branch) at line 515 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKWatcher: void process(org.apache.zookeeper.WatchedEvent)>:477 has 13 units and 4 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hbase.zookeeper.ZKWatcher: org.slf4j.Logger LOG> AT LINE 478 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received ZooKeeper Event, type=") AT LINE 478 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = virtualinvoke event.<org.apache.zookeeper.WatchedEvent: org.apache.zookeeper.Watcher$Event$EventType getType()>() AT LINE 479 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack7) AT LINE 479 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state=") AT LINE 479 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke event.<org.apache.zookeeper.WatchedEvent: org.apache.zookeeper.Watcher$Event$KeeperState getState()>() AT LINE 480 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10) AT LINE 480 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", path=") AT LINE 480 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke event.<org.apache.zookeeper.WatchedEvent: java.lang.String getPath()>() AT LINE 481 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13) AT LINE 481 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 481 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke this.<org.apache.hadoop.hbase.zookeeper.ZKWatcher: java.lang.String prefix(java.lang.String)>($stack15) AT LINE 478 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 478 with ID [dd6af1fa-ab25]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.RpcRetryingCallerWithReadReplicas: org.apache.hadoop.hbase.client.Result call(int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.RpcRetryingCallerWithReadReplicas: org.apache.hadoop.hbase.client.Result call(int)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if f != null goto $stack31 = this.<org.apache.hadoop.hbase.client.RpcRetryingCallerWithReadReplicas: org.apache.hadoop.hbase.client.ClusterConnection cConnection> at line 248 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if f == null goto $stack56 = this.<org.apache.hadoop.hbase.client.RpcRetryingCallerWithReadReplicas: org.apache.hadoop.hbase.client.ClusterConnection cConnection> at line 218 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.RpcRetryingCallerWithReadReplicas: org.apache.hadoop.hbase.client.Result call(int)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HTable: void lambda$batchCoprocessorService$0(org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message,org.apache.hadoop.hbase.client.coprocessor.Batch$Callback,java.util.List,java.util.List,java.util.Map,java.util.List,byte[],byte[],org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$CoprocessorServiceResult)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HTable: void lambda$batchCoprocessorService$0(org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message,org.apache.hadoop.hbase.client.coprocessor.Batch$Callback,java.util.List,java.util.List,java.util.Map,java.util.List,byte[],byte[],org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$CoprocessorServiceResult)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.HTable: void lambda$batchCoprocessorService$0(org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message,org.apache.hadoop.hbase.client.coprocessor.Batch$Callback,java.util.List,java.util.List,java.util.Map,java.util.List,byte[],byte[],org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$CoprocessorServiceResult)>:1172 has 16 units and 4 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hbase.client.HTable: org.slf4j.Logger LOG> AT LINE 1174 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received result for endpoint ") AT LINE 1174 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke methodDescriptor.<org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor: java.lang.String getFullName()>() AT LINE 1174 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21) AT LINE 1174 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": region=") AT LINE 1174 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>(region) AT LINE 1175 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24) AT LINE 1175 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", row=") AT LINE 1175 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>(row) AT LINE 1176 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27) AT LINE 1176 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value=") AT LINE 1176 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke serviceResult.<org.apache.hadoop.hbase.shaded.protobuf.generated.ClientProtos$CoprocessorServiceResult: org.apache.hadoop.hbase.shaded.protobuf.generated.HBaseProtos$NameBytesPair getValue()>() AT LINE 1177 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<org.apache.hadoop.hbase.shaded.protobuf.generated.HBaseProtos$NameBytesPair: org.apache.hbase.thirdparty.com.google.protobuf.ByteString getValue()>() AT LINE 1177 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31) AT LINE 1177 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1177 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void trace(java.lang.String)>($stack33) AT LINE 1174 with ID [bd2ca599-a68a]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient: void run()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient: void run()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack10 != 0 goto e#43 = specialinvoke this.<org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient: org.apache.hadoop.hbase.shaded.org.apache.zookeeper.ZooKeeper getZk()>() at line 328 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient: void run()>:312 has 10 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient: org.slf4j.Logger LOG> AT LINE 323 with ID [678b0fec-da58]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = newarray (java.lang.Object)[3] AT LINE 322 with ID [678b0fec-da58]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = specialinvoke this.<org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient: java.lang.String getId()>() AT LINE 323 with ID [678b0fec-da58]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16[0] = $stack20 AT LINE 323 with ID [678b0fec-da58]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = this.<org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient: java.lang.String connectString> AT LINE 323 with ID [678b0fec-da58]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16[1] = $stack21 AT LINE 323 with ID [678b0fec-da58]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.hbase.zookeeper.ReadOnlyZKClient: int keepAliveTimeMs> AT LINE 323 with ID [678b0fec-da58]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack22) AT LINE 323 with ID [678b0fec-da58]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16[2] = $stack24 AT LINE 323 with ID [678b0fec-da58]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object[])>("{} to {} inactive for {}ms; closing (Will reconnect when new requests)", $stack16) AT LINE 322 with ID [678b0fec-da58]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: boolean saslConnect(java.io.InputStream,java.io.OutputStream)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: boolean saslConnect(java.io.InputStream,java.io.OutputStream)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack84 != 0 goto $stack85 = <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: org.slf4j.Logger LOG> at line 109 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if len != -88 goto saslToken = newarray (byte)[len] at line 108 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: boolean saslConnect(java.io.InputStream,java.io.OutputStream)>:91 has 37 units and 7 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack97 = <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: org.slf4j.Logger LOG> AT LINE 102 with ID [59cc21b7-16e0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack98 = virtualinvoke $stack96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Have sent token of size ") AT LINE 102 with ID [59cc21b7-16e0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack99 = lengthof saslToken AT LINE 102 with ID [59cc21b7-16e0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack100 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack99) AT LINE 102 with ID [59cc21b7-16e0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack101 = virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from initSASLContext.") AT LINE 102 with ID [59cc21b7-16e0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack102 = virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 102 with ID [59cc21b7-16e0]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack97.<org.slf4j.Logger: void debug(java.lang.String)>($stack102) AT LINE 102 with ID [59cc21b7-16e0]
2021-03-25 15:46:10 [INFO] - 	 -> $stack87 = <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: org.slf4j.Logger LOG> AT LINE 114 with ID [1dbe4847-c9ca]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack87.<org.slf4j.Logger: void debug(java.lang.String)>("Server asks us to fall back to simple auth.") AT LINE 114 with ID [1dbe4847-c9ca]
2021-03-25 15:46:10 [INFO] - 	 -> $stack76 = <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: org.slf4j.Logger LOG> AT LINE 121 with ID [e5f5ad1f-5ff1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack77 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Will read input token of size ") AT LINE 121 with ID [e5f5ad1f-5ff1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack78 = lengthof saslToken AT LINE 121 with ID [e5f5ad1f-5ff1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack79 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack78) AT LINE 121 with ID [e5f5ad1f-5ff1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for processing by initSASLContext") AT LINE 121 with ID [e5f5ad1f-5ff1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 121 with ID [e5f5ad1f-5ff1]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack76.<org.slf4j.Logger: void debug(java.lang.String)>($stack81) AT LINE 121 with ID [e5f5ad1f-5ff1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack59 = <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: org.slf4j.Logger LOG> AT LINE 131 with ID [2ac0148e-6793]
2021-03-25 15:46:10 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Will send token of size ") AT LINE 131 with ID [2ac0148e-6793]
2021-03-25 15:46:10 [INFO] - 	 -> $stack61 = lengthof saslToken AT LINE 131 with ID [2ac0148e-6793]
2021-03-25 15:46:10 [INFO] - 	 -> $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack61) AT LINE 131 with ID [2ac0148e-6793]
2021-03-25 15:46:10 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from initSASLContext.") AT LINE 131 with ID [2ac0148e-6793]
2021-03-25 15:46:10 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 131 with ID [2ac0148e-6793]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack59.<org.slf4j.Logger: void debug(java.lang.String)>($stack64) AT LINE 131 with ID [2ac0148e-6793]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: org.slf4j.Logger LOG> AT LINE 141 with ID [417c778c-f72b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Will read input token of size ") AT LINE 141 with ID [417c778c-f72b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = lengthof saslToken AT LINE 141 with ID [417c778c-f72b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack47) AT LINE 141 with ID [417c778c-f72b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for processing by initSASLContext") AT LINE 141 with ID [417c778c-f72b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 141 with ID [417c778c-f72b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack45.<org.slf4j.Logger: void debug(java.lang.String)>($stack50) AT LINE 141 with ID [417c778c-f72b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: org.slf4j.Logger LOG> AT LINE 148 with ID [76364279-54dd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SASL client context established. Negotiated QoP: ") AT LINE 148 with ID [76364279-54dd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = this.<org.apache.hadoop.hbase.security.HBaseSaslRpcClient: javax.security.sasl.SaslClient saslClient> AT LINE 149 with ID [76364279-54dd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = interfaceinvoke $stack27.<javax.security.sasl.SaslClient: java.lang.Object getNegotiatedProperty(java.lang.String)>("javax.security.sasl.qop") AT LINE 149 with ID [76364279-54dd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack28) AT LINE 149 with ID [76364279-54dd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 149 with ID [76364279-54dd]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void debug(java.lang.String)>($stack30) AT LINE 148 with ID [76364279-54dd]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: void logZKTree(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: void logZKTree(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack9 == 0 goto return at line 2094 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if children != null goto l4 = interfaceinvoke children.<java.util.List: java.util.Iterator iterator()>() at line 2090 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKUtil: void logZKTree(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,java.lang.String)>:2087 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = <org.apache.hadoop.hbase.zookeeper.ZKUtil: org.slf4j.Logger LOG> AT LINE 2095 with ID [6baaa166-d07b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix) AT LINE 2095 with ID [6baaa166-d07b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(child) AT LINE 2095 with ID [6baaa166-d07b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2095 with ID [6baaa166-d07b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void debug(java.lang.String)>($stack15) AT LINE 2095 with ID [6baaa166-d07b]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.MetaTableAccessor: void overwriteRegions(org.apache.hadoop.hbase.client.Connection,java.util.List,int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.MetaTableAccessor: void overwriteRegions(org.apache.hadoop.hbase.client.Connection,java.util.List,int)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.MetaTableAccessor: void overwriteRegions(org.apache.hadoop.hbase.client.Connection,java.util.List,int)>:1853 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = <org.apache.hadoop.hbase.MetaTableAccessor: org.slf4j.Logger LOG> AT LINE 1864 with ID [70910775-520b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Overwritten regions: {} ", regionInfos) AT LINE 1864 with ID [70910775-520b]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.io.encoding.RowIndexEncoderV1: void flush()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.io.encoding.RowIndexEncoderV1: void flush()> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.io.encoding.RowIndexEncoderV1: void flush()>:71 has 16 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hbase.io.encoding.RowIndexEncoderV1: org.slf4j.Logger LOG> AT LINE 82 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RowNumber: ") AT LINE 82 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = this.<org.apache.hadoop.hbase.io.encoding.RowIndexEncoderV1: org.apache.hadoop.hbase.io.ByteArrayOutputStream rowsOffsetBAOS> AT LINE 82 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<org.apache.hadoop.hbase.io.ByteArrayOutputStream: int size()>() AT LINE 82 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = $stack16 / 4 AT LINE 82 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack17) AT LINE 82 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", onDiskDataSize: ") AT LINE 82 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(onDiskDataSize) AT LINE 82 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", totalOnDiskSize: ") AT LINE 82 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.hbase.io.encoding.RowIndexEncoderV1: java.io.DataOutputStream out> AT LINE 84 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.io.DataOutputStream: int size()>() AT LINE 84 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = this.<org.apache.hadoop.hbase.io.encoding.RowIndexEncoderV1: int startOffset> AT LINE 84 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = $stack23 - $stack24 AT LINE 84 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack25) AT LINE 84 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 84 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void trace(java.lang.String)>($stack27) AT LINE 82 with ID [aa369a4b-ae8d]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: int updateAttrCache(java.lang.Iterable)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: int updateAttrCache(java.lang.Iterable)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack20 == 0 goto $stack21 = virtualinvoke record.<org.apache.hadoop.metrics2.impl.MetricsRecordImpl: java.lang.Iterable metrics()>() at line 256 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack11 == 0 goto $stack13 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.apache.commons.logging.Log LOG> at line 255 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack23 == 0 goto recNo = recNo + 1 at line 260 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: int updateAttrCache(java.lang.Iterable)>:250 has 7 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.apache.commons.logging.Log LOG> AT LINE 252 with ID [b878a0b7-5f82]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Updating attr cache...") AT LINE 252 with ID [b878a0b7-5f82]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.apache.commons.logging.Log LOG> AT LINE 266 with ID [84628333-2e0f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done. # tags & metrics=") AT LINE 266 with ID [84628333-2e0f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numMetrics) AT LINE 266 with ID [84628333-2e0f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 266 with ID [84628333-2e0f]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack16) AT LINE 266 with ID [84628333-2e0f]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: void logFileSystemState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.slf4j.Logger)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: void logFileSystemState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.slf4j.Logger)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.CommonFSUtils: void logFileSystemState(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.slf4j.Logger)>:780 has 4 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File system contents for path ") AT LINE 781 with ID [020fcbde-8ecb]
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(root) AT LINE 781 with ID [020fcbde-8ecb]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 781 with ID [020fcbde-8ecb]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke LOG.<org.slf4j.Logger: void debug(java.lang.String)>($stack6) AT LINE 781 with ID [020fcbde-8ecb]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HTableMultiplexer$FlushWorker: void run()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HTableMultiplexer$FlushWorker: void run()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack93 == 0 goto (branch) at line 622 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack84 == 0 goto $stack53 = staticinvoke <org.apache.hadoop.hbase.util.EnvironmentEdgeManager: long currentTime()>() at line 621 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if task#10 >= $stack52 goto (branch) at line 607 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if i >= $stack35 goto i#5 = null at line 578 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack24 == 0 goto $stack26 = this.<org.apache.hadoop.hbase.client.HTableMultiplexer$FlushWorker: java.util.concurrent.atomic.AtomicInteger currentProcessingCount> at line 567 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.HTableMultiplexer$FlushWorker: void run()>:559 has 22 units and 4 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack106 = staticinvoke <org.apache.hadoop.hbase.client.HTableMultiplexer: org.slf4j.Logger access$000()>() AT LINE 603 with ID [28a6ea6d-8b22]
2021-03-25 15:46:10 [INFO] - 	 -> $stack108 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught some exceptions when flushing puts to region server ") AT LINE 603 with ID [28a6ea6d-8b22]
2021-03-25 15:46:10 [INFO] - 	 -> $stack109 = this.<org.apache.hadoop.hbase.client.HTableMultiplexer$FlushWorker: org.apache.hadoop.hbase.HRegionLocation addr> AT LINE 604 with ID [28a6ea6d-8b22]
2021-03-25 15:46:10 [INFO] - 	 -> $stack110 = virtualinvoke $stack109.<org.apache.hadoop.hbase.HRegionLocation: java.lang.String getHostnamePort()>() AT LINE 604 with ID [28a6ea6d-8b22]
2021-03-25 15:46:10 [INFO] - 	 -> $stack111 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack110) AT LINE 604 with ID [28a6ea6d-8b22]
2021-03-25 15:46:10 [INFO] - 	 -> $stack112 = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 604 with ID [28a6ea6d-8b22]
2021-03-25 15:46:10 [INFO] - 	 -> $stack113 = interfaceinvoke arf.<org.apache.hadoop.hbase.client.AsyncRequestFuture: org.apache.hadoop.hbase.client.RetriesExhaustedWithDetailsException getErrors()>() AT LINE 604 with ID [28a6ea6d-8b22]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack106.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($stack112, $stack113) AT LINE 603 with ID [28a6ea6d-8b22]
2021-03-25 15:46:10 [INFO] - 	 -> $stack64 = staticinvoke <org.apache.hadoop.hbase.client.HTableMultiplexer: org.slf4j.Logger access$000()>() AT LINE 637 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processed ") AT LINE 637 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack67 = this.<org.apache.hadoop.hbase.client.HTableMultiplexer$FlushWorker: java.util.concurrent.atomic.AtomicInteger currentProcessingCount> AT LINE 637 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack68 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack67) AT LINE 637 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" put requests for ") AT LINE 637 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack70 = this.<org.apache.hadoop.hbase.client.HTableMultiplexer$FlushWorker: org.apache.hadoop.hbase.HRegionLocation addr> AT LINE 638 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<org.apache.hadoop.hbase.HRegionLocation: java.lang.String getHostnamePort()>() AT LINE 638 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack72 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack71) AT LINE 638 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") AT LINE 638 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(failedCount) AT LINE 638 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed, latency for this send: ") AT LINE 638 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(elapsed) AT LINE 638 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 638 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack64.<org.slf4j.Logger: void debug(java.lang.String)>($stack77) AT LINE 637 with ID [f1f1f147-6cef]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.DynamicClassLoader: java.lang.Class loadClass(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.DynamicClassLoader: java.lang.Class loadClass(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.util.DynamicClassLoader: java.lang.Class loadClass(java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.MetaCache: void cacheLocation(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.ServerName,org.apache.hadoop.hbase.HRegionLocation)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.MetaCache: void cacheLocation(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.ServerName,org.apache.hadoop.hbase.HRegionLocation)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if isNewCacheEntry == 0 goto $stack20 = virtualinvoke location.<org.apache.hadoop.hbase.HRegionLocation: org.apache.hadoop.hbase.client.RegionInfo getRegion()>() at line 124 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if source != null goto $stack14 = virtualinvoke location.<org.apache.hadoop.hbase.HRegionLocation: org.apache.hadoop.hbase.client.RegionInfo getRegion()>() at line 124 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.MetaCache: void cacheLocation(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.ServerName,org.apache.hadoop.hbase.HRegionLocation)>:117 has 10 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = <org.apache.hadoop.hbase.client.MetaCache: org.slf4j.Logger LOG> AT LINE 126 with ID [eff637f4-e1ce]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cached location: ") AT LINE 126 with ID [eff637f4-e1ce]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(location) AT LINE 126 with ID [eff637f4-e1ce]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 126 with ID [eff637f4-e1ce]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void trace(java.lang.String)>($stack50) AT LINE 126 with ID [eff637f4-e1ce]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = <org.apache.hadoop.hbase.client.MetaCache: org.slf4j.Logger LOG> AT LINE 147 with ID [a1dfa9de-46e4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Changed cached location to: ") AT LINE 147 with ID [a1dfa9de-46e4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(location) AT LINE 147 with ID [a1dfa9de-46e4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 147 with ID [a1dfa9de-46e4]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack30.<org.slf4j.Logger: void trace(java.lang.String)>($stack33) AT LINE 147 with ID [a1dfa9de-46e4]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: void logZKTree(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: void logZKTree(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack5 != 0 goto $stack6 = <org.apache.hadoop.hbase.zookeeper.ZKUtil: org.slf4j.Logger LOG> at line 2067 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKUtil: void logZKTree(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)>:2066 has 7 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hbase.zookeeper.ZKUtil: org.slf4j.Logger LOG> AT LINE 2071 with ID [665b8630-8f4f]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>("Current zk system:") AT LINE 2071 with ID [665b8630-8f4f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hbase.zookeeper.ZKUtil: org.slf4j.Logger LOG> AT LINE 2073 with ID [0c0b889b-f166]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix) AT LINE 2073 with ID [0c0b889b-f166]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(root) AT LINE 2073 with ID [0c0b889b-f166]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2073 with ID [0c0b889b-f166]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack11) AT LINE 2073 with ID [0c0b889b-f166]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: boolean addToCache(org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$TableCache,org.apache.hadoop.hbase.HRegionLocation)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: boolean addToCache(org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$TableCache,org.apache.hadoop.hbase.HRegionLocation)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack27 == 0 goto $stack28 = tableCache.<org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$TableCache: java.util.concurrent.ConcurrentNavigableMap cache> at line 214 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if oldLoc != null goto $stack11 = virtualinvoke oldLoc.<org.apache.hadoop.hbase.HRegionLocation: long getSeqNum()>() at line 210 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: boolean addToCache(org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$TableCache,org.apache.hadoop.hbase.HRegionLocation)>:204 has 14 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.slf4j.Logger LOG> AT LINE 206 with ID [7a70f0a8-e2a4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try adding ") AT LINE 206 with ID [7a70f0a8-e2a4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(loc) AT LINE 206 with ID [7a70f0a8-e2a4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to cache") AT LINE 206 with ID [7a70f0a8-e2a4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 206 with ID [7a70f0a8-e2a4]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void trace(java.lang.String)>($stack37) AT LINE 206 with ID [7a70f0a8-e2a4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.slf4j.Logger LOG> AT LINE 216 with ID [984cc5cc-2987]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Will not add ") AT LINE 216 with ID [984cc5cc-2987]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(loc) AT LINE 216 with ID [984cc5cc-2987]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to cache because the old value ") AT LINE 216 with ID [984cc5cc-2987]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(oldLoc) AT LINE 216 with ID [984cc5cc-2987]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is newer than us or has the same server name") AT LINE 216 with ID [984cc5cc-2987]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 216 with ID [984cc5cc-2987]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void trace(java.lang.String)>($stack23) AT LINE 216 with ID [984cc5cc-2987]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: void stop()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: void stop()> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: void stop()>:640 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack2 = <org.apache.hadoop.hbase.zookeeper.MetaTableLocator: org.slf4j.Logger LOG> AT LINE 642 with ID [1f771365-38ca]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack2.<org.slf4j.Logger: void debug(java.lang.String)>("Stopping MetaTableLocator") AT LINE 642 with ID [1f771365-38ca]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30: void emitMetric(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.metrics2.sink.ganglia.GangliaConf,org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30: void emitMetric(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.metrics2.sink.ganglia.GangliaConf,org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if type != null goto $stack7 = this.<org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30: org.apache.commons.logging.Log LOG> at line 232 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if value != null goto (branch) at line 229 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if name != null goto (branch) at line 226 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30: void emitMetric(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.metrics2.sink.ganglia.GangliaConf,org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope)>:225 has 15 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = this.<org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30: org.apache.commons.logging.Log LOG> AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Emitting metric ") AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type ") AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(type) AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value ") AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(value) AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", slope ") AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke gSlope.<org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink$GangliaSlope: java.lang.String name()>() AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from hostname ") AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke this.<org.apache.hadoop.metrics2.sink.ganglia.GangliaSink30: java.lang.String getHostName()>() AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack27) AT LINE 238 with ID [6f34c93b-2109]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void setupConnection()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void setupConnection()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.ipc.BlockingRpcConnection: void setupConnection()>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink: void init(org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.SubsetConfiguration)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink: void init(org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.SubsetConfiguration)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink: void init(org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.SubsetConfiguration)>:115 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack3 = this.<org.apache.hadoop.metrics2.sink.ganglia.AbstractGangliaSink: org.apache.commons.logging.Log LOG> AT LINE 116 with ID [6fb83afe-6b4d]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Initializing the GangliaSink for Ganglia metrics.") AT LINE 116 with ID [6fb83afe-6b4d]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void registerSource(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSource)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void registerSource(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSource)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void registerSource(java.lang.String,java.lang.String,org.apache.hadoop.metrics2.MetricsSource)>:262 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.commons.logging.Log LOG> AT LINE 270 with ID [b47bac3d-64be]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registered source ") AT LINE 270 with ID [b47bac3d-64be]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 270 with ID [b47bac3d-64be]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 270 with ID [b47bac3d-64be]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack24) AT LINE 270 with ID [b47bac3d-64be]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.HBaseConfiguration: boolean isShowConfInServlet()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.HBaseConfiguration: boolean isShowConfInServlet()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.HBaseConfiguration: boolean isShowConfInServlet()>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: java.util.List listLocatedStatus(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: java.util.List listLocatedStatus(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack5 == 0 goto (branch) at line 731 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.util.CommonFSUtils: java.util.List listLocatedStatus(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.MetricsSystem init(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.MetricsSystem init(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl$5: int[] $SwitchMap$org$apache$hadoop$metrics2$impl$MetricsSystemImpl$InitMode> at line 157 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack26 != 0 goto $stack4 = staticinvoke <org.apache.hadoop.hbase.shaded.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(prefix, "prefix") at line 160 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.MetricsSystem init(java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.DeletionListener: void nodeDeleted(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.DeletionListener: void nodeDeleted(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack3 != 0 goto $stack4 = <org.apache.hadoop.hbase.zookeeper.DeletionListener: org.slf4j.Logger LOG> at line 93 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.DeletionListener: void nodeDeleted(java.lang.String)>:92 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = <org.apache.hadoop.hbase.zookeeper.DeletionListener: org.slf4j.Logger LOG> AT LINE 97 with ID [a5e54972-2231]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing delete on ") AT LINE 97 with ID [a5e54972-2231]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = this.<org.apache.hadoop.hbase.zookeeper.DeletionListener: java.lang.String pathToWatch> AT LINE 97 with ID [a5e54972-2231]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10) AT LINE 97 with ID [a5e54972-2231]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 97 with ID [a5e54972-2231]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack8.<org.slf4j.Logger: void debug(java.lang.String)>($stack12) AT LINE 97 with ID [a5e54972-2231]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: void updateInfoCache(java.lang.Iterable)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: void updateInfoCache(java.lang.Iterable)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: void updateInfoCache(java.lang.Iterable)>:243 has 4 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack3 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.apache.commons.logging.Log LOG> AT LINE 245 with ID [47be429c-e650]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Updating info cache...") AT LINE 245 with ID [47be429c-e650]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.apache.commons.logging.Log LOG> AT LINE 247 with ID [4dcaf766-806d]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Done") AT LINE 247 with ID [4dcaf766-806d]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HBaseHbck: java.util.List assigns(java.util.List,boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HBaseHbck: java.util.List assigns(java.util.List,boolean)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.HBaseHbck: java.util.List assigns(java.util.List,boolean)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HBaseAdmin: void snapshot(org.apache.hadoop.hbase.client.SnapshotDescription)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HBaseAdmin: void snapshot(org.apache.hadoop.hbase.client.SnapshotDescription)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack63 != 0 goto return at line 2561 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack73 != 0 goto $stack63 = virtualinvoke done.<org.apache.hadoop.hbase.shaded.protobuf.generated.MasterProtos$IsSnapshotDoneResponse: boolean getDone()>() at line 2562 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.HBaseAdmin: void snapshot(org.apache.hadoop.hbase.client.SnapshotDescription)>:2527 has 21 units and 4 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hbase.client.HBaseAdmin: org.slf4j.Logger LOG> AT LINE 2537 with ID [819c35ed-e85e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting a max of ") AT LINE 2537 with ID [819c35ed-e85e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(max) AT LINE 2537 with ID [819c35ed-e85e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms for snapshot \'") AT LINE 2537 with ID [819c35ed-e85e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = staticinvoke <org.apache.hadoop.hbase.snapshot.ClientSnapshotDescriptionUtils: java.lang.String toString(org.apache.hadoop.hbase.shaded.protobuf.generated.SnapshotProtos$SnapshotDescription)>(snapshot) AT LINE 2538 with ID [819c35ed-e85e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30) AT LINE 2538 with ID [819c35ed-e85e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'\' to complete. (max ") AT LINE 2538 with ID [819c35ed-e85e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(maxPauseTime) AT LINE 2538 with ID [819c35ed-e85e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms per retry)") AT LINE 2538 with ID [819c35ed-e85e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2538 with ID [819c35ed-e85e]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String)>($stack35) AT LINE 2537 with ID [819c35ed-e85e]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = <org.apache.hadoop.hbase.client.HBaseAdmin: org.slf4j.Logger LOG> AT LINE 2546 with ID [ce32806f-7c60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(#") AT LINE 2546 with ID [ce32806f-7c60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(tries) AT LINE 2546 with ID [ce32806f-7c60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") Sleeping: ") AT LINE 2546 with ID [ce32806f-7c60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(sleep) AT LINE 2546 with ID [ce32806f-7c60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms while waiting for snapshot completion.") AT LINE 2546 with ID [ce32806f-7c60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 2546 with ID [ce32806f-7c60]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack40.<org.slf4j.Logger: void debug(java.lang.String)>($stack46) AT LINE 2546 with ID [ce32806f-7c60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = <org.apache.hadoop.hbase.client.HBaseAdmin: org.slf4j.Logger LOG> AT LINE 2552 with ID [38fd6be1-74f0]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack47.<org.slf4j.Logger: void debug(java.lang.String)>("Getting current status of snapshot from master...") AT LINE 2552 with ID [38fd6be1-74f0]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ChoreService: void printChoreServiceDetails(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ChoreService: void printChoreServiceDetails(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack21 == 0 goto return at line 389 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack24 == 0 goto (branch) at line 390 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ChoreService: void printChoreServiceDetails(java.lang.String)>:381 has 11 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>() AT LINE 392 with ID [6ba358e6-2083]
2021-03-25 15:46:10 [INFO] - 	 -> entry = (java.util.Map$Entry) $stack22 AT LINE 392 with ID [6ba358e6-2083]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hbase.ChoreService: org.slf4j.Logger LOG> AT LINE 391 with ID [6ba358e6-2083]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 391 with ID [6ba358e6-2083]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = (java.lang.String) $stack28 AT LINE 391 with ID [6ba358e6-2083]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 391 with ID [6ba358e6-2083]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>() AT LINE 391 with ID [6ba358e6-2083]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = (java.lang.String) $stack31 AT LINE 391 with ID [6ba358e6-2083]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32) AT LINE 391 with ID [6ba358e6-2083]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 391 with ID [6ba358e6-2083]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void trace(java.lang.String)>($stack34) AT LINE 391 with ID [6ba358e6-2083]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: void locateInMeta(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$LocateRequest)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: void locateInMeta(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$LocateRequest)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: void locateInMeta(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$LocateRequest)>:356 has 13 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.slf4j.Logger LOG> AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try locate \'") AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', row=\'") AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [INFO] - 	 -> $stack53 = req.<org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$LocateRequest: byte[] row> AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>($stack53) AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [INFO] - 	 -> $stack55 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack54) AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', locateType=") AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [INFO] - 	 -> $stack57 = req.<org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$LocateRequest: org.apache.hadoop.hbase.client.RegionLocateType locateType> AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [INFO] - 	 -> $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack57) AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [INFO] - 	 -> $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in meta") AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [INFO] - 	 -> $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack49.<org.slf4j.Logger: void trace(java.lang.String)>($stack60) AT LINE 358 with ID [862c72a7-0777]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: boolean watchAndCheckExists(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: boolean watchAndCheckExists(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKUtil: boolean watchAndCheckExists(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)>:351 has 12 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hbase.zookeeper.ZKUtil: org.slf4j.Logger LOG> AT LINE 355 with ID [273f27dc-7d5a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set watcher on existing znode=") AT LINE 355 with ID [273f27dc-7d5a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(znode) AT LINE 355 with ID [273f27dc-7d5a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 355 with ID [273f27dc-7d5a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke zkw.<org.apache.hadoop.hbase.zookeeper.ZKWatcher: java.lang.String prefix(java.lang.String)>($stack16) AT LINE 355 with ID [273f27dc-7d5a]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void debug(java.lang.String)>($stack17) AT LINE 355 with ID [273f27dc-7d5a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hbase.zookeeper.ZKUtil: org.slf4j.Logger LOG> AT LINE 357 with ID [68f0b99e-573f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set watcher on znode that does not yet exist, ") AT LINE 357 with ID [68f0b99e-573f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(znode) AT LINE 357 with ID [68f0b99e-573f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 357 with ID [68f0b99e-573f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = virtualinvoke zkw.<org.apache.hadoop.hbase.zookeeper.ZKWatcher: java.lang.String prefix(java.lang.String)>($stack10) AT LINE 357 with ID [68f0b99e-573f]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void debug(java.lang.String)>($stack11) AT LINE 357 with ID [68f0b99e-573f]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.lib.DefaultMetricsSystemHelper: void removeSourceName(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.lib.DefaultMetricsSystemHelper: void removeSourceName(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack7 != null goto $stack9 = this.<org.apache.hadoop.metrics2.lib.DefaultMetricsSystemHelper: java.lang.reflect.Field sourceNamesField> at line 85 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.metrics2.lib.DefaultMetricsSystemHelper: void removeSourceName(java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: byte[] getDataNoWatch(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,org.apache.zookeeper.data.Stat)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: byte[] getDataNoWatch(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,org.apache.zookeeper.data.Stat)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.ZKUtil: byte[] getDataNoWatch(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String,org.apache.zookeeper.data.Stat)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.MetaCache: void cacheLocation(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.RegionLocations)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.MetaCache: void cacheLocation(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.RegionLocations)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if isNewCacheEntry == 0 goto mergedLocation = virtualinvoke oldLocation.<org.apache.hadoop.hbase.RegionLocations: org.apache.hadoop.hbase.RegionLocations mergeLocations(org.apache.hadoop.hbase.RegionLocations)>(locations) at line 163 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.MetaCache: void cacheLocation(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.RegionLocations)>:158 has 10 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = <org.apache.hadoop.hbase.client.MetaCache: org.slf4j.Logger LOG> AT LINE 165 with ID [b010b9ed-a2cd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cached location: ") AT LINE 165 with ID [b010b9ed-a2cd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(locations) AT LINE 165 with ID [b010b9ed-a2cd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 165 with ID [b010b9ed-a2cd]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack28.<org.slf4j.Logger: void trace(java.lang.String)>($stack31) AT LINE 165 with ID [b010b9ed-a2cd]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hbase.client.MetaCache: org.slf4j.Logger LOG> AT LINE 177 with ID [0f8f087a-d96a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Merged cached locations: ") AT LINE 177 with ID [0f8f087a-d96a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(mergedLocation) AT LINE 177 with ID [0f8f087a-d96a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 177 with ID [0f8f087a-d96a]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void trace(java.lang.String)>($stack24) AT LINE 177 with ID [0f8f087a-d96a]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.lib.DefaultMetricsSystemHelper: boolean removeObjectName(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.lib.DefaultMetricsSystemHelper: boolean removeObjectName(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack3 == null goto return 0 at line 62 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.metrics2.lib.DefaultMetricsSystemHelper: boolean removeObjectName(java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void stopSources()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void stopSources()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack8 = this.<org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.hadoop.metrics2.impl.MetricsSourceAdapter sysSource> at line 458 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: void stopSources()>:457 has 11 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = <org.apache.hadoop.metrics2.impl.MetricsSystemImpl: org.apache.commons.logging.Log LOG> AT LINE 460 with ID [b6270a02-2cdf]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping metrics source ") AT LINE 460 with ID [b6270a02-2cdf]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 460 with ID [b6270a02-2cdf]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = (java.lang.String) $stack15 AT LINE 460 with ID [b6270a02-2cdf]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16) AT LINE 460 with ID [b6270a02-2cdf]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": class=") AT LINE 460 with ID [b6270a02-2cdf]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke sa.<org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.apache.hadoop.metrics2.MetricsSource source()>() AT LINE 460 with ID [b6270a02-2cdf]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.Object: java.lang.Class getClass()>() AT LINE 460 with ID [b6270a02-2cdf]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack20) AT LINE 460 with ID [b6270a02-2cdf]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 460 with ID [b6270a02-2cdf]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack22) AT LINE 460 with ID [b6270a02-2cdf]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: java.lang.Object getAttribute(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: java.lang.Object getAttribute(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if a != null goto $stack8 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.apache.commons.logging.Log LOG> at line 109 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: java.lang.Object getAttribute(java.lang.String)>:105 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = <org.apache.hadoop.metrics2.impl.MetricsSourceAdapter: org.apache.commons.logging.Log LOG> AT LINE 113 with ID [79b9afaf-361a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute) AT LINE 113 with ID [79b9afaf-361a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 113 with ID [79b9afaf-361a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(a) AT LINE 113 with ID [79b9afaf-361a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 113 with ID [79b9afaf-361a]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack17) AT LINE 113 with ID [79b9afaf-361a]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection$CallSender: void run()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.BlockingRpcConnection$CallSender: void run()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.ipc.BlockingRpcConnection$CallSender: void run()>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKLeaderManager: void waitToBecomeLeader()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKLeaderManager: void waitToBecomeLeader()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack11 = this.<org.apache.hadoop.hbase.zookeeper.ZKLeaderManager: org.apache.hadoop.hbase.zookeeper.ZKWatcher watcher> at line 111 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack5 != 0 goto return at line 109 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack27 != 0 goto exitmonitor currentId#3 at line 109 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.zookeeper.ZKLeaderManager: void waitToBecomeLeader()>:108 has 8 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = <org.apache.hadoop.hbase.zookeeper.ZKLeaderManager: org.slf4j.Logger LOG> AT LINE 115 with ID [892a67ff-e626]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Claimed the leader znode as \'") AT LINE 115 with ID [892a67ff-e626]
2021-03-25 15:46:10 [INFO] - 	 -> $stack53 = this.<org.apache.hadoop.hbase.zookeeper.ZKLeaderManager: byte[] nodeId> AT LINE 116 with ID [892a67ff-e626]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>($stack53) AT LINE 116 with ID [892a67ff-e626]
2021-03-25 15:46:10 [INFO] - 	 -> $stack55 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack54) AT LINE 116 with ID [892a67ff-e626]
2021-03-25 15:46:10 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") AT LINE 116 with ID [892a67ff-e626]
2021-03-25 15:46:10 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 116 with ID [892a67ff-e626]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack51.<org.slf4j.Logger: void debug(java.lang.String)>($stack57) AT LINE 115 with ID [892a67ff-e626]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ClientScanner: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hbase.client.Scan,org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.ClusterConnection,org.apache.hadoop.hbase.client.RpcRetryingCallerFactory,org.apache.hadoop.hbase.ipc.RpcControllerFactory,java.util.concurrent.ExecutorService,int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ClientScanner: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hbase.client.Scan,org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.ClusterConnection,org.apache.hadoop.hbase.client.RpcRetryingCallerFactory,org.apache.hadoop.hbase.ipc.RpcControllerFactory,java.util.concurrent.ExecutorService,int)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.ClientScanner: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hbase.client.Scan,org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.ClusterConnection,org.apache.hadoop.hbase.client.RpcRetryingCallerFactory,org.apache.hadoop.hbase.ipc.RpcControllerFactory,java.util.concurrent.ExecutorService,int)>:102 has 9 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack43 = <org.apache.hadoop.hbase.client.ClientScanner: org.slf4j.Logger LOG> AT LINE 105 with ID [7b6af115-643b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scan table=") AT LINE 105 with ID [7b6af115-643b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 105 with ID [7b6af115-643b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", startRow=") AT LINE 105 with ID [7b6af115-643b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = virtualinvoke scan.<org.apache.hadoop.hbase.client.Scan: byte[] getStartRow()>() AT LINE 106 with ID [7b6af115-643b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>($stack47) AT LINE 106 with ID [7b6af115-643b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48) AT LINE 106 with ID [7b6af115-643b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 106 with ID [7b6af115-643b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void trace(java.lang.String)>($stack50) AT LINE 105 with ID [7b6af115-643b]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.RpcConnection: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hbase.thirdparty.io.netty.util.HashedWheelTimer,org.apache.hadoop.hbase.ipc.ConnectionId,java.lang.String,boolean,org.apache.hadoop.hbase.codec.Codec,org.apache.hadoop.io.compress.CompressionCodec)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.RpcConnection: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hbase.thirdparty.io.netty.util.HashedWheelTimer,org.apache.hadoop.hbase.ipc.ConnectionId,java.lang.String,boolean,org.apache.hadoop.hbase.codec.Codec,org.apache.hadoop.io.compress.CompressionCodec)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if tokenSelector#10 != null goto $stack64 = virtualinvoke conf.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>(tokenSelector#10) at line 112 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack15 == 0 goto this.<org.apache.hadoop.hbase.ipc.RpcConnection: org.apache.hbase.thirdparty.io.netty.util.HashedWheelTimer timeoutTimer> = timeoutTimer at line 87 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.RpcConnection: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hbase.thirdparty.io.netty.util.HashedWheelTimer,org.apache.hadoop.hbase.ipc.ConnectionId,java.lang.String,boolean,org.apache.hadoop.hbase.codec.Codec,org.apache.hadoop.io.compress.CompressionCodec)>:85 has 25 units and 3 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack88 = <org.apache.hadoop.hbase.ipc.RpcConnection: org.slf4j.Logger LOG> AT LINE 108 with ID [6c6cea31-db7d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack89 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No token selector found for type ") AT LINE 108 with ID [6c6cea31-db7d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tokenKind) AT LINE 108 with ID [6c6cea31-db7d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack91 = virtualinvoke $stack90.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 108 with ID [6c6cea31-db7d]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack88.<org.slf4j.Logger: void debug(java.lang.String)>($stack91) AT LINE 108 with ID [6c6cea31-db7d]
2021-03-25 15:46:10 [INFO] - 	 -> $stack73 = <org.apache.hadoop.hbase.ipc.RpcConnection: org.slf4j.Logger LOG> AT LINE 118 with ID [34f092ee-23b7]
2021-03-25 15:46:10 [INFO] - 	 -> $stack74 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RPC Server Kerberos principal name for service=") AT LINE 118 with ID [34f092ee-23b7]
2021-03-25 15:46:10 [INFO] - 	 -> $stack75 = virtualinvoke remoteId.<org.apache.hadoop.hbase.ipc.ConnectionId: java.lang.String getServiceName()>() AT LINE 118 with ID [34f092ee-23b7]
2021-03-25 15:46:10 [INFO] - 	 -> $stack76 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack75) AT LINE 118 with ID [34f092ee-23b7]
2021-03-25 15:46:10 [INFO] - 	 -> $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ") AT LINE 118 with ID [34f092ee-23b7]
2021-03-25 15:46:10 [INFO] - 	 -> $stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(serverPrincipal) AT LINE 118 with ID [34f092ee-23b7]
2021-03-25 15:46:10 [INFO] - 	 -> $stack79 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 118 with ID [34f092ee-23b7]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack73.<org.slf4j.Logger: void debug(java.lang.String)>($stack79) AT LINE 118 with ID [34f092ee-23b7]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hbase.ipc.RpcConnection: org.slf4j.Logger LOG> AT LINE 137 with ID [0a3514a7-975c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Use ") AT LINE 137 with ID [0a3514a7-975c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = this.<org.apache.hadoop.hbase.ipc.RpcConnection: org.apache.hadoop.hbase.security.AuthMethod authMethod> AT LINE 137 with ID [0a3514a7-975c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31) AT LINE 137 with ID [0a3514a7-975c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication for service ") AT LINE 137 with ID [0a3514a7-975c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = remoteId.<org.apache.hadoop.hbase.ipc.ConnectionId: java.lang.String serviceName> AT LINE 137 with ID [0a3514a7-975c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34) AT LINE 137 with ID [0a3514a7-975c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sasl=") AT LINE 137 with ID [0a3514a7-975c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack37 = this.<org.apache.hadoop.hbase.ipc.RpcConnection: boolean useSasl> AT LINE 137 with ID [0a3514a7-975c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack37) AT LINE 137 with ID [0a3514a7-975c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 137 with ID [0a3514a7-975c]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String)>($stack39) AT LINE 137 with ID [0a3514a7-975c]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HBaseAdmin: org.apache.hadoop.hbase.client.CompactionState getCompactionState(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.CompactType)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HBaseAdmin: org.apache.hadoop.hbase.client.CompactionState getCompactionState(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.CompactType)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if state == null goto return null at line 3343 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if state != $stack40 goto state = <org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$GetRegionInfoResponse$CompactionState: org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$GetRegionInfoResponse$CompactionState MAJOR> at line 3309 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if state != $stack37 goto state = <org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$GetRegionInfoResponse$CompactionState: org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$GetRegionInfoResponse$CompactionState MINOR> at line 3315 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.HBaseAdmin: org.apache.hadoop.hbase.client.CompactionState getCompactionState(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.CompactType)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.CoprocessorClassLoader: java.lang.Class loadClass(java.lang.String,java.lang.String[])> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.CoprocessorClassLoader: java.lang.Class loadClass(java.lang.String,java.lang.String[])> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack8 == 0 goto $stack9 = virtualinvoke this.<org.apache.hadoop.hbase.util.CoprocessorClassLoader: java.lang.Object getClassLoadingLock(java.lang.String)>(name) at line 295 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.CoprocessorClassLoader: java.lang.Class loadClass(java.lang.String,java.lang.String[])>:294 has 17 units and 3 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = <org.apache.hadoop.hbase.util.CoprocessorClassLoader: org.slf4j.Logger LOG> AT LINE 297 with ID [c8da99f3-2118]
2021-03-25 15:46:10 [INFO] - 	 -> $stack37 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping exempt class ") AT LINE 297 with ID [c8da99f3-2118]
2021-03-25 15:46:10 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 297 with ID [c8da99f3-2118]
2021-03-25 15:46:10 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - delegating directly to parent") AT LINE 297 with ID [c8da99f3-2118]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 297 with ID [c8da99f3-2118]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack36.<org.slf4j.Logger: void debug(java.lang.String)>($stack40) AT LINE 297 with ID [c8da99f3-2118]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = <org.apache.hadoop.hbase.util.CoprocessorClassLoader: org.slf4j.Logger LOG> AT LINE 308 with ID [d5524300-9fef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class ") AT LINE 308 with ID [d5524300-9fef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 308 with ID [d5524300-9fef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already loaded") AT LINE 308 with ID [d5524300-9fef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 308 with ID [d5524300-9fef]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack26.<org.slf4j.Logger: void debug(java.lang.String)>($stack30) AT LINE 308 with ID [d5524300-9fef]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hbase.util.CoprocessorClassLoader: org.slf4j.Logger LOG> AT LINE 315 with ID [cdbb1186-944f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finding class: ") AT LINE 315 with ID [cdbb1186-944f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name) AT LINE 315 with ID [cdbb1186-944f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 315 with ID [cdbb1186-944f]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 315 with ID [cdbb1186-944f]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.io.compress.Compression$Algorithm: org.apache.hadoop.io.compress.Compressor getCompressor()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.io.compress.Compression$Algorithm: org.apache.hadoop.io.compress.Compressor getCompressor()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if codec == null goto return null at line 354 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.io.compress.Compression$Algorithm: org.apache.hadoop.io.compress.Compressor getCompressor()>:352 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = staticinvoke <org.apache.hadoop.hbase.io.compress.Compression: org.slf4j.Logger access$200()>() AT LINE 364 with ID [22f8dbaa-7dec]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retrieved compressor ") AT LINE 364 with ID [22f8dbaa-7dec]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(compressor) AT LINE 364 with ID [22f8dbaa-7dec]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pool.") AT LINE 364 with ID [22f8dbaa-7dec]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 364 with ID [22f8dbaa-7dec]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack12.<org.slf4j.Logger: void trace(java.lang.String)>($stack17) AT LINE 364 with ID [22f8dbaa-7dec]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.io.compress.Compression$Algorithm: void returnCompressor(org.apache.hadoop.io.compress.Compressor)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.io.compress.Compression$Algorithm: void returnCompressor(org.apache.hadoop.io.compress.Compressor)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.io.compress.Compression$Algorithm: void returnCompressor(org.apache.hadoop.io.compress.Compressor)>:369 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack4 = staticinvoke <org.apache.hadoop.hbase.io.compress.Compression: org.slf4j.Logger access$200()>() AT LINE 374 with ID [f4146c9f-3ed5]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning compressor ") AT LINE 374 with ID [f4146c9f-3ed5]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(compressor) AT LINE 374 with ID [f4146c9f-3ed5]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to pool.") AT LINE 374 with ID [f4146c9f-3ed5]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 374 with ID [f4146c9f-3ed5]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack4.<org.slf4j.Logger: void trace(java.lang.String)>($stack9) AT LINE 374 with ID [f4146c9f-3ed5]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.codec.BaseDecoder: void rethrowEofException(java.io.IOException)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.codec.BaseDecoder: void rethrowEofException(java.io.IOException)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if isEof != 0 goto $stack6 = <org.apache.hadoop.hbase.codec.BaseDecoder: org.slf4j.Logger LOG> at line 83 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.codec.BaseDecoder: void rethrowEofException(java.io.IOException)>:76 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = <org.apache.hadoop.hbase.codec.BaseDecoder: org.slf4j.Logger LOG> AT LINE 85 with ID [d8472200-2350]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack10.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Throwable)>("Partial cell read caused by EOF", ioEx) AT LINE 85 with ID [d8472200-2350]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.CommonFSUtils: org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean)>:249 has 9 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = <org.apache.hadoop.hbase.util.CommonFSUtils: org.slf4j.Logger LOG> AT LINE 251 with ID [2c496f07-0ec1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating file=") AT LINE 251 with ID [2c496f07-0ec1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(path) AT LINE 251 with ID [2c496f07-0ec1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with permission=") AT LINE 251 with ID [2c496f07-0ec1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(perm) AT LINE 251 with ID [2c496f07-0ec1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", overwrite=") AT LINE 251 with ID [2c496f07-0ec1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(overwrite) AT LINE 251 with ID [2c496f07-0ec1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 251 with ID [2c496f07-0ec1]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack11.<org.slf4j.Logger: void trace(java.lang.String)>($stack18) AT LINE 251 with ID [2c496f07-0ec1]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.security.EncryptionUtil: java.security.Key unwrapKey(org.apache.hadoop.conf.Configuration,byte[])> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.security.EncryptionUtil: java.security.Key unwrapKey(org.apache.hadoop.conf.Configuration,byte[])> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.security.EncryptionUtil: java.security.Key unwrapKey(org.apache.hadoop.conf.Configuration,byte[])>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.PrettyPrinter: long humanReadableIntervalToSec(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.PrettyPrinter: long humanReadableIntervalToSec(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack9 == 0 goto $stack10 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(humanReadableInterval) at line 154 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.util.PrettyPrinter: long humanReadableIntervalToSec(java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.io.crypto.Encryption: org.apache.hadoop.hbase.io.crypto.KeyProvider getKeyProvider(org.apache.hadoop.conf.Configuration)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.io.crypto.Encryption: org.apache.hadoop.hbase.io.crypto.KeyProvider getKeyProvider(org.apache.hadoop.conf.Configuration)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if provider == null goto $stack13 = staticinvoke <org.apache.hadoop.hbase.io.crypto.Encryption: java.lang.ClassLoader getClassLoaderForClass(java.lang.Class)>(class "Lorg/apache/hadoop/hbase/io/crypto/KeyProvider;") at line 543 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.io.crypto.Encryption: org.apache.hadoop.hbase.io.crypto.KeyProvider getKeyProvider(org.apache.hadoop.conf.Configuration)>:536 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = <org.apache.hadoop.hbase.io.crypto.Encryption: org.slf4j.Logger LOG> AT LINE 551 with ID [b53d5086-620b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installed ") AT LINE 551 with ID [b53d5086-620b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(providerClassName) AT LINE 551 with ID [b53d5086-620b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into key provider cache") AT LINE 551 with ID [b53d5086-620b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 551 with ID [b53d5086-620b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack21.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 551 with ID [b53d5086-620b]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.AsyncMetaTableAccessor: java.util.concurrent.CompletableFuture scanMeta(org.apache.hadoop.hbase.client.AsyncTable,java.util.Optional,java.util.Optional,org.apache.hadoop.hbase.MetaTableAccessor$QueryType,int,org.apache.hadoop.hbase.MetaTableAccessor$Visitor)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.AsyncMetaTableAccessor: java.util.concurrent.CompletableFuture scanMeta(org.apache.hadoop.hbase.client.AsyncTable,java.util.Optional,java.util.Optional,org.apache.hadoop.hbase.MetaTableAccessor$QueryType,int,org.apache.hadoop.hbase.MetaTableAccessor$Visitor)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if l10 >= l9 goto virtualinvoke scan.<java.lang.Object: java.lang.Class getClass()>() at line 300 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.AsyncMetaTableAccessor: java.util.concurrent.CompletableFuture scanMeta(org.apache.hadoop.hbase.client.AsyncTable,java.util.Optional,java.util.Optional,org.apache.hadoop.hbase.MetaTableAccessor$QueryType,int,org.apache.hadoop.hbase.MetaTableAccessor$Visitor)>:297 has 16 units and 3 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hbase.AsyncMetaTableAccessor: org.slf4j.Logger LOG> AT LINE 307 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scanning META starting at row=") AT LINE 307 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke scan.<org.apache.hadoop.hbase.client.Scan: byte[] getStartRow()>() AT LINE 307 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>($stack25) AT LINE 307 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26) AT LINE 307 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stopping at row=") AT LINE 307 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke scan.<org.apache.hadoop.hbase.client.Scan: byte[] getStopRow()>() AT LINE 308 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>($stack29) AT LINE 308 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30) AT LINE 308 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for max=") AT LINE 308 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(rowUpperLimit) AT LINE 308 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with caching=") AT LINE 308 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke scan.<org.apache.hadoop.hbase.client.Scan: int getCaching()>() AT LINE 309 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack35) AT LINE 309 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 309 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack37) AT LINE 307 with ID [b0a1d1db-e285]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncTableResultScanner: void resumePrefetch()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncTableResultScanner: void resumePrefetch()> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncTableResultScanner: void resumePrefetch()>:128 has 10 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hbase.client.AsyncTableResultScanner: org.slf4j.Logger LOG> AT LINE 130 with ID [07666f6d-559f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = newarray (java.lang.Object)[1] AT LINE 130 with ID [07666f6d-559f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(this) AT LINE 130 with ID [07666f6d-559f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack9) AT LINE 130 with ID [07666f6d-559f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack6[0] = $stack10 AT LINE 130 with ID [07666f6d-559f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("0x%x", $stack6) AT LINE 130 with ID [07666f6d-559f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 130 with ID [07666f6d-559f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resume prefetching") AT LINE 130 with ID [07666f6d-559f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 130 with ID [07666f6d-559f]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>($stack14) AT LINE 130 with ID [07666f6d-559f]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: void channelRead0(org.apache.hbase.thirdparty.io.netty.channel.ChannelHandlerContext,org.apache.hbase.thirdparty.io.netty.buffer.ByteBuf)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: void channelRead0(org.apache.hbase.thirdparty.io.netty.channel.ChannelHandlerContext,org.apache.hbase.thirdparty.io.netty.buffer.ByteBuf)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if len != -88 goto $stack7 = <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: org.slf4j.Logger LOG> at line 126 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: void channelRead0(org.apache.hbase.thirdparty.io.netty.channel.ChannelHandlerContext,org.apache.hbase.thirdparty.io.netty.buffer.ByteBuf)>:124 has 3 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hbase.security.NettyHBaseSaslRpcClientHandler: org.slf4j.Logger LOG> AT LINE 135 with ID [d596e59c-4fa4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(len) AT LINE 135 with ID [d596e59c-4fa4]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Reading input token size={} for processing by initSASLContext", $stack9) AT LINE 135 with ID [d596e59c-4fa4]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ConnectionImplementation: boolean isTableAvailable(org.apache.hadoop.hbase.TableName,byte[][])> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ConnectionImplementation: boolean isTableAvailable(org.apache.hadoop.hbase.TableName,byte[][])> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack62 == 0 goto l11 = l11 + 1 at line 634 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack60 != 0 goto regionCount = regionCount + 1 at line 631 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack56 != null goto (branch) at line 624 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if regionCount == $stack27 goto $stack17 = <org.apache.hadoop.hbase.client.ConnectionImplementation: org.slf4j.Logger LOG> at line 659 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if notDeployed <= 0 goto (branch) at line 644 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack16 == 0 goto (branch) at line 622 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack13 != 0 goto locations = staticinvoke <org.apache.hadoop.hbase.MetaTableAccessor: java.util.List getTableRegionsAndLocations(org.apache.hadoop.hbase.client.Connection,org.apache.hadoop.hbase.TableName,boolean)>(this, tableName, 1) at line 613 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.ConnectionImplementation: boolean isTableAvailable(org.apache.hadoop.hbase.TableName,byte[][])>:610 has 42 units and 6 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack78 = <org.apache.hadoop.hbase.client.ConnectionImplementation: org.slf4j.Logger LOG> AT LINE 614 with ID [db70589d-9881]
2021-03-25 15:46:10 [INFO] - 	 -> $stack79 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Table ") AT LINE 614 with ID [db70589d-9881]
2021-03-25 15:46:10 [INFO] - 	 -> $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 614 with ID [db70589d-9881]
2021-03-25 15:46:10 [INFO] - 	 -> $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not enabled") AT LINE 614 with ID [db70589d-9881]
2021-03-25 15:46:10 [INFO] - 	 -> $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 614 with ID [db70589d-9881]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack78.<org.slf4j.Logger: void debug(java.lang.String)>($stack82) AT LINE 614 with ID [db70589d-9881]
2021-03-25 15:46:10 [INFO] - 	 -> $stack68 = <org.apache.hadoop.hbase.client.ConnectionImplementation: org.slf4j.Logger LOG> AT LINE 626 with ID [9805cd81-224c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack69 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Table ") AT LINE 626 with ID [9805cd81-224c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 626 with ID [9805cd81-224c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has not deployed region ") AT LINE 626 with ID [9805cd81-224c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack72 = virtualinvoke pair.<org.apache.hadoop.hbase.util.Pair: java.lang.Object getFirst()>() AT LINE 626 with ID [9805cd81-224c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack73 = (org.apache.hadoop.hbase.client.RegionInfo) $stack72 AT LINE 627 with ID [9805cd81-224c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack74 = interfaceinvoke $stack73.<org.apache.hadoop.hbase.client.RegionInfo: java.lang.String getEncodedName()>() AT LINE 627 with ID [9805cd81-224c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack75 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack74) AT LINE 627 with ID [9805cd81-224c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 627 with ID [9805cd81-224c]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack68.<org.slf4j.Logger: void debug(java.lang.String)>($stack76) AT LINE 626 with ID [9805cd81-224c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = <org.apache.hadoop.hbase.client.ConnectionImplementation: org.slf4j.Logger LOG> AT LINE 646 with ID [06b14886-5977]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Table ") AT LINE 646 with ID [06b14886-5977]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 646 with ID [06b14886-5977]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has ") AT LINE 646 with ID [06b14886-5977]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(notDeployed) AT LINE 646 with ID [06b14886-5977]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" regions") AT LINE 646 with ID [06b14886-5977]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 646 with ID [06b14886-5977]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack46.<org.slf4j.Logger: void debug(java.lang.String)>($stack52) AT LINE 646 with ID [06b14886-5977]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = <org.apache.hadoop.hbase.client.ConnectionImplementation: org.slf4j.Logger LOG> AT LINE 651 with ID [8314daf2-6515]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Table ") AT LINE 651 with ID [8314daf2-6515]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 651 with ID [8314daf2-6515]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected to have ") AT LINE 651 with ID [8314daf2-6515]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = lengthof splitKeys AT LINE 651 with ID [8314daf2-6515]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = $stack35 + 1 AT LINE 651 with ID [8314daf2-6515]
2021-03-25 15:46:10 [INFO] - 	 -> $stack37 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack36) AT LINE 651 with ID [8314daf2-6515]
2021-03-25 15:46:10 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" regions, but only ") AT LINE 651 with ID [8314daf2-6515]
2021-03-25 15:46:10 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(regionCount) AT LINE 651 with ID [8314daf2-6515]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" available") AT LINE 651 with ID [8314daf2-6515]
2021-03-25 15:46:10 [INFO] - 	 -> $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 651 with ID [8314daf2-6515]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String)>($stack41) AT LINE 651 with ID [8314daf2-6515]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = <org.apache.hadoop.hbase.client.ConnectionImplementation: org.slf4j.Logger LOG> AT LINE 657 with ID [56481bbb-6056]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Table ") AT LINE 657 with ID [56481bbb-6056]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 657 with ID [56481bbb-6056]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be available") AT LINE 657 with ID [56481bbb-6056]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 657 with ID [56481bbb-6056]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack20.<org.slf4j.Logger: void debug(java.lang.String)>($stack24) AT LINE 657 with ID [56481bbb-6056]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.security.Superusers: void initialize(org.apache.hadoop.conf.Configuration)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.security.Superusers: void initialize(org.apache.hadoop.conf.Configuration)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if l5 >= l4 goto return at line 72 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack10 != null goto $stack11 = <org.apache.hadoop.hbase.security.Superusers: org.apache.hadoop.hbase.security.User systemUser> at line 62 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.security.Superusers: void initialize(org.apache.hadoop.conf.Configuration)>:57 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = <org.apache.hadoop.hbase.security.Superusers: org.slf4j.Logger LOG> AT LINE 68 with ID [0278c93f-e46a]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack13.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Current user name is {}", currentUser) AT LINE 68 with ID [0278c93f-e46a]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.ServerName)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.ServerName)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack41 == 0 goto $stack42 = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>() at line 259 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if updatedLocations == regionLocations goto (branch) at line 258 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if regionLocations == null goto (branch) at line 256 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack35 == 0 goto (branch) at line 254 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack19 == 0 goto $stack20 = this.<org.apache.hadoop.hbase.client.MetaCache: java.util.Set cachedServers> at line 253 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack15 != 0 goto $stack16 = this.<org.apache.hadoop.hbase.client.MetaCache: java.util.concurrent.ConcurrentMap cachedRegionLocations> at line 250 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack12 != 0 goto deletedSomething = 0 at line 240 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.ServerName)>:239 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hbase.client.MetaCache: org.slf4j.Logger LOG> AT LINE 276 with ID [da5332e4-7fc3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed all cached region locations that map to ") AT LINE 276 with ID [da5332e4-7fc3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(serverName) AT LINE 276 with ID [da5332e4-7fc3]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 276 with ID [da5332e4-7fc3]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void trace(java.lang.String)>($stack30) AT LINE 276 with ID [da5332e4-7fc3]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HBaseHbck: org.apache.hadoop.hbase.client.TableState setTableStateInMeta(org.apache.hadoop.hbase.client.TableState)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HBaseHbck: org.apache.hadoop.hbase.client.TableState setTableStateInMeta(org.apache.hadoop.hbase.client.TableState)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.HBaseHbck: org.apache.hadoop.hbase.client.TableState setTableStateInMeta(org.apache.hadoop.hbase.client.TableState)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HBaseAdmin: org.apache.hadoop.hbase.CacheEvictionStats clearBlockCache(org.apache.hadoop.hbase.TableName)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HBaseAdmin: org.apache.hadoop.hbase.CacheEvictionStats clearBlockCache(org.apache.hadoop.hbase.TableName)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack27 == 0 goto $stack28 = virtualinvoke cacheEvictionStats.<org.apache.hadoop.hbase.CacheEvictionStatsBuilder: org.apache.hadoop.hbase.CacheEvictionStats build()>() at line 1505 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack41 == 0 goto (branch) at line 1509 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack36 <= 0 goto (branch) at line 1508 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.HBaseAdmin: org.apache.hadoop.hbase.CacheEvictionStats clearBlockCache(org.apache.hadoop.hbase.TableName)>:1493 has 16 units and 4 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack42 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>() AT LINE 1515 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> exception = (java.util.Map$Entry) $stack42 AT LINE 1515 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack44 = <org.apache.hadoop.hbase.client.HBaseAdmin: org.slf4j.Logger LOG> AT LINE 1510 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to clear block cache for ") AT LINE 1510 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = interfaceinvoke exception.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 1511 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = (byte[]) $stack46 AT LINE 1511 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>($stack47) AT LINE 1511 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48) AT LINE 1511 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ") AT LINE 1511 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 1512 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack51) AT LINE 1512 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") AT LINE 1512 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1512 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack55 = interfaceinvoke exception.<java.util.Map$Entry: java.lang.Object getValue()>() AT LINE 1512 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> $stack56 = (java.lang.Throwable) $stack55 AT LINE 1510 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack44.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($stack54, $stack56) AT LINE 1510 with ID [f8369eaa-e994]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.regionserver.MetricsTableSourceImpl: void <init>(java.lang.String,org.apache.hadoop.hbase.regionserver.MetricsTableAggregateSourceImpl,org.apache.hadoop.hbase.regionserver.MetricsTableWrapperAggregate)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.regionserver.MetricsTableSourceImpl: void <init>(java.lang.String,org.apache.hadoop.hbase.regionserver.MetricsTableAggregateSourceImpl,org.apache.hadoop.hbase.regionserver.MetricsTableWrapperAggregate)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.regionserver.MetricsTableSourceImpl: void <init>(java.lang.String,org.apache.hadoop.hbase.regionserver.MetricsTableAggregateSourceImpl,org.apache.hadoop.hbase.regionserver.MetricsTableWrapperAggregate)>:49 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hbase.regionserver.MetricsTableSourceImpl: org.slf4j.Logger LOG> AT LINE 51 with ID [f9db3538-742b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>("Creating new MetricsTableSourceImpl for table ") AT LINE 51 with ID [f9db3538-742b]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncTableResultScanner: void stopPrefetch(org.apache.hadoop.hbase.client.AdvancedScanResultConsumer$ScanController)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncTableResultScanner: void stopPrefetch(org.apache.hadoop.hbase.client.AdvancedScanResultConsumer$ScanController)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncTableResultScanner: void stopPrefetch(org.apache.hadoop.hbase.client.AdvancedScanResultConsumer$ScanController)>:75 has 19 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack6 = <org.apache.hadoop.hbase.client.AsyncTableResultScanner: org.slf4j.Logger LOG> AT LINE 77 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = newarray (java.lang.Object)[1] AT LINE 77 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(this) AT LINE 77 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack10) AT LINE 77 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack7[0] = $stack11 AT LINE 77 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("0x%x", $stack7) AT LINE 77 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12) AT LINE 77 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stop prefetching when scanning ") AT LINE 77 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = this.<org.apache.hadoop.hbase.client.AsyncTableResultScanner: org.apache.hadoop.hbase.client.AsyncTable rawTable> AT LINE 78 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = interfaceinvoke $stack15.<org.apache.hadoop.hbase.client.AsyncTable: org.apache.hadoop.hbase.TableName getName()>() AT LINE 78 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack16) AT LINE 78 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as the cache size ") AT LINE 78 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = this.<org.apache.hadoop.hbase.client.AsyncTableResultScanner: long cacheSize> AT LINE 78 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack19) AT LINE 78 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is greater than the maxCacheSize ") AT LINE 78 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = this.<org.apache.hadoop.hbase.client.AsyncTableResultScanner: long maxCacheSize> AT LINE 78 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack22) AT LINE 78 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 78 with ID [a183b687-0246]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack6.<org.slf4j.Logger: void debug(java.lang.String)>($stack24) AT LINE 77 with ID [a183b687-0246]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HBaseAdmin$72: org.apache.hadoop.hbase.shaded.com.google.protobuf.Message callExecService(org.apache.hadoop.hbase.shaded.com.google.protobuf.RpcController,org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HBaseAdmin$72: org.apache.hadoop.hbase.shaded.com.google.protobuf.Message callExecService(org.apache.hadoop.hbase.shaded.com.google.protobuf.RpcController,org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.HBaseAdmin$72: org.apache.hadoop.hbase.shaded.com.google.protobuf.Message callExecService(org.apache.hadoop.hbase.shaded.com.google.protobuf.RpcController,org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message,org.apache.hadoop.hbase.shaded.com.google.protobuf.Message)>:3144 has 9 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = staticinvoke <org.apache.hadoop.hbase.client.HBaseAdmin: org.slf4j.Logger access$200()>() AT LINE 3146 with ID [70eb31dc-ec43]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call: ") AT LINE 3146 with ID [70eb31dc-ec43]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke method.<org.apache.hadoop.hbase.shaded.com.google.protobuf.Descriptors$MethodDescriptor: java.lang.String getName()>() AT LINE 3146 with ID [70eb31dc-ec43]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25) AT LINE 3146 with ID [70eb31dc-ec43]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") AT LINE 3146 with ID [70eb31dc-ec43]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = interfaceinvoke request.<org.apache.hadoop.hbase.shaded.com.google.protobuf.Message: java.lang.String toString()>() AT LINE 3146 with ID [70eb31dc-ec43]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28) AT LINE 3146 with ID [70eb31dc-ec43]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 3146 with ID [70eb31dc-ec43]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack22.<org.slf4j.Logger: void trace(java.lang.String)>($stack30) AT LINE 3146 with ID [70eb31dc-ec43]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.security.AbstractHBaseSaslRpcClient: void <init>(org.apache.hadoop.hbase.security.AuthMethod,org.apache.hadoop.security.token.Token,java.lang.String,boolean,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.security.AbstractHBaseSaslRpcClient: void <init>(org.apache.hadoop.hbase.security.AuthMethod,org.apache.hadoop.security.token.Token,java.lang.String,boolean,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack24 != null goto return at line 112 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack16 == 3 goto $stack17 = newarray (java.lang.String)[1] at line 102 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack14 != 0 goto names = staticinvoke <org.apache.hadoop.hbase.security.SaslUtil: java.lang.String[] splitKerberosName(java.lang.String)>(serverPrincipal) at line 99 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.security.AbstractHBaseSaslRpcClient: void <init>(org.apache.hadoop.hbase.security.AuthMethod,org.apache.hadoop.security.token.Token,java.lang.String,boolean,java.lang.String)>:82 has 19 units and 4 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack53 = <org.apache.hadoop.hbase.security.AbstractHBaseSaslRpcClient: org.slf4j.Logger LOG> AT LINE 112 with ID [e4084625-7bb6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating SASL ") AT LINE 112 with ID [e4084625-7bb6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack55 = <org.apache.hadoop.hbase.security.AuthMethod: org.apache.hadoop.hbase.security.AuthMethod DIGEST> AT LINE 112 with ID [e4084625-7bb6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<org.apache.hadoop.hbase.security.AuthMethod: java.lang.String getMechanismName()>() AT LINE 112 with ID [e4084625-7bb6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack57 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack56) AT LINE 112 with ID [e4084625-7bb6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client to authenticate to service at ") AT LINE 112 with ID [e4084625-7bb6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack59 = virtualinvoke token.<org.apache.hadoop.security.token.Token: org.apache.hadoop.io.Text getService()>() AT LINE 89 with ID [e4084625-7bb6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack60 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack59) AT LINE 89 with ID [e4084625-7bb6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 89 with ID [e4084625-7bb6]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack53.<org.slf4j.Logger: void debug(java.lang.String)>($stack61) AT LINE 88 with ID [e4084625-7bb6]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = <org.apache.hadoop.hbase.security.AbstractHBaseSaslRpcClient: org.slf4j.Logger LOG> AT LINE 95 with ID [f9a66166-7900]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating SASL ") AT LINE 95 with ID [f9a66166-7900]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = <org.apache.hadoop.hbase.security.AuthMethod: org.apache.hadoop.hbase.security.AuthMethod KERBEROS> AT LINE 95 with ID [f9a66166-7900]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = virtualinvoke $stack35.<org.apache.hadoop.hbase.security.AuthMethod: java.lang.String getMechanismName()>() AT LINE 95 with ID [f9a66166-7900]
2021-03-25 15:46:10 [INFO] - 	 -> $stack37 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack36) AT LINE 95 with ID [f9a66166-7900]
2021-03-25 15:46:10 [INFO] - 	 -> $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" client. Server\'s Kerberos principal name is ") AT LINE 95 with ID [f9a66166-7900]
2021-03-25 15:46:10 [INFO] - 	 -> $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(serverPrincipal) AT LINE 95 with ID [f9a66166-7900]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 95 with ID [f9a66166-7900]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack33.<org.slf4j.Logger: void debug(java.lang.String)>($stack40) AT LINE 95 with ID [f9a66166-7900]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ResultBoundedCompletionService: org.apache.hadoop.hbase.client.ResultBoundedCompletionService$QueueingFuture pollForFirstSuccessfullyCompletedTask(long,java.util.concurrent.TimeUnit,int,int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ResultBoundedCompletionService: org.apache.hadoop.hbase.client.ResultBoundedCompletionService$QueueingFuture pollForFirstSuccessfullyCompletedTask(long,java.util.concurrent.TimeUnit,int,int)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack15 == null goto return f at line 223 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if f != null goto $stack15 = virtualinvoke f.<org.apache.hadoop.hbase.client.ResultBoundedCompletionService$QueueingFuture: java.util.concurrent.ExecutionException getExeEx()>() at line 221 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if i >= endIndex goto return null at line 211 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if i != $stack18 goto i = i + 1 at line 230 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.ResultBoundedCompletionService: org.apache.hadoop.hbase.client.ResultBoundedCompletionService$QueueingFuture pollForFirstSuccessfullyCompletedTask(long,java.util.concurrent.TimeUnit,int,int)>:210 has 11 units and 3 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hbase.client.ResultBoundedCompletionService: org.slf4j.Logger LOG> AT LINE 226 with ID [a043059e-7be2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Replica ") AT LINE 226 with ID [a043059e-7be2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = 0 AT LINE 230 with ID [a043059e-7be2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke f.<org.apache.hadoop.hbase.client.ResultBoundedCompletionService$QueueingFuture: int getReplicaId()>() AT LINE 226 with ID [a043059e-7be2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack25) AT LINE 226 with ID [a043059e-7be2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returns ") AT LINE 226 with ID [a043059e-7be2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke f.<org.apache.hadoop.hbase.client.ResultBoundedCompletionService$QueueingFuture: java.util.concurrent.ExecutionException getExeEx()>() AT LINE 227 with ID [a043059e-7be2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack28.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>() AT LINE 227 with ID [a043059e-7be2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack29) AT LINE 227 with ID [a043059e-7be2]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 227 with ID [a043059e-7be2]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>($stack31) AT LINE 226 with ID [a043059e-7be2]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.JmxCacheBuster$JmxCacheBusterRunnable: void run()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.JmxCacheBuster$JmxCacheBusterRunnable: void run()> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.JmxCacheBuster$JmxCacheBusterRunnable: void run()>:96 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = staticinvoke <org.apache.hadoop.metrics2.impl.JmxCacheBuster: org.slf4j.Logger access$000()>() AT LINE 98 with ID [cdfb63f1-4a0c]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void trace(java.lang.String)>("Clearing JMX mbean cache.") AT LINE 98 with ID [cdfb63f1-4a0c]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.lib.DefaultMetricsSystemHelper: void <init>()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.lib.DefaultMetricsSystemHelper: void <init>()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.metrics2.lib.DefaultMetricsSystemHelper: void <init>()>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.ClassSize: org.apache.hadoop.hbase.util.ClassSize$MemoryLayout getMemoryLayout()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.ClassSize: org.apache.hadoop.hbase.util.ClassSize$MemoryLayout getMemoryLayout()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack7 == 0 goto $stack3 = <org.apache.hadoop.hbase.util.ClassSize: org.slf4j.Logger LOG> at line 230 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.ClassSize: org.apache.hadoop.hbase.util.ClassSize$MemoryLayout getMemoryLayout()>:226 has 4 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack5 = <org.apache.hadoop.hbase.util.ClassSize: org.slf4j.Logger LOG> AT LINE 229 with ID [ae5f07e5-827b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack5.<org.slf4j.Logger: void debug(java.lang.String)>("Using Unsafe to estimate memory layout") AT LINE 229 with ID [ae5f07e5-827b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack3 = <org.apache.hadoop.hbase.util.ClassSize: org.slf4j.Logger LOG> AT LINE 232 with ID [706be566-7b57]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void debug(java.lang.String)>("Not using Unsafe to estimate memory layout") AT LINE 232 with ID [706be566-7b57]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: void logFSTree(org.slf4j.Logger,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: void logFSTree(org.slf4j.Logger,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if l7 >= l6 goto return at line 797 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if files != null goto l5 = files at line 793 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.CommonFSUtils: void logFSTree(org.slf4j.Logger,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String)>:791 has 13 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix) AT LINE 799 with ID [3e4582f9-0d2c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke file.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() AT LINE 799 with ID [3e4582f9-0d2c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<org.apache.hadoop.fs.Path: java.lang.String getName()>() AT LINE 799 with ID [3e4582f9-0d2c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) AT LINE 799 with ID [3e4582f9-0d2c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") AT LINE 799 with ID [3e4582f9-0d2c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 799 with ID [3e4582f9-0d2c]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke LOG.<org.slf4j.Logger: void debug(java.lang.String)>($stack25) AT LINE 799 with ID [3e4582f9-0d2c]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix) AT LINE 802 with ID [ca7cf77b-613f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke file.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>() AT LINE 802 with ID [ca7cf77b-613f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack14 = virtualinvoke $stack13.<org.apache.hadoop.fs.Path: java.lang.String getName()>() AT LINE 802 with ID [ca7cf77b-613f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14) AT LINE 802 with ID [ca7cf77b-613f]
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 802 with ID [ca7cf77b-613f]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke LOG.<org.slf4j.Logger: void debug(java.lang.String)>($stack16) AT LINE 802 with ID [ca7cf77b-613f]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ConnectionImplementation: void retrieveClusterId()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ConnectionImplementation: void retrieveClusterId()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack2 == null goto $stack3 = this.<org.apache.hadoop.hbase.client.ConnectionImplementation: org.apache.hadoop.hbase.client.AsyncRegistry registry> at line 545 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.ConnectionImplementation: void retrieveClusterId()>:544 has 6 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = <org.apache.hadoop.hbase.client.ConnectionImplementation: org.slf4j.Logger LOG> AT LINE 555 with ID [3c1b9be3-57aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clusterid came back null, using default ") AT LINE 555 with ID [3c1b9be3-57aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack11 = this.<org.apache.hadoop.hbase.client.ConnectionImplementation: java.lang.String clusterId> AT LINE 555 with ID [3c1b9be3-57aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11) AT LINE 555 with ID [3c1b9be3-57aa]
2021-03-25 15:46:10 [INFO] - 	 -> $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 555 with ID [3c1b9be3-57aa]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack9.<org.slf4j.Logger: void debug(java.lang.String)>($stack13) AT LINE 555 with ID [3c1b9be3-57aa]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.hadoop.metrics2.impl.MetricsConfig loadFirst(java.lang.String,java.lang.String[])> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.hadoop.metrics2.impl.MetricsConfig loadFirst(java.lang.String,java.lang.String[])> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if i$ >= len$ goto $stack9 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.commons.logging.Log LOG> at line 108 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.hadoop.metrics2.impl.MetricsConfig loadFirst(java.lang.String,java.lang.String[])>:107 has 5 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.commons.logging.Log LOG> AT LINE 113 with ID [2fb8ab96-bfc9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = staticinvoke <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.String toString(org.apache.hadoop.hbase.shaded.org.apache.commons.configuration.Configuration)>(cf) AT LINE 113 with ID [2fb8ab96-bfc9]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($stack25) AT LINE 113 with ID [2fb8ab96-bfc9]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.commons.logging.Log LOG> AT LINE 115 with ID [d255b711-4aec]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(mc) AT LINE 115 with ID [d255b711-4aec]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncRegionLocator: void updateCachedLocation(org.apache.hadoop.hbase.HRegionLocation,java.lang.Throwable,java.util.function.Function,java.util.function.Consumer,java.util.function.Consumer)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncRegionLocator: void updateCachedLocation(org.apache.hadoop.hbase.HRegionLocation,java.lang.Throwable,java.util.function.Function,java.util.function.Consumer,java.util.function.Consumer)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack24 != 0 goto $stack25 = cause instanceof org.apache.hadoop.hbase.exceptions.RegionMovedException at line 125 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack12 != 0 goto cause = staticinvoke <org.apache.hadoop.hbase.exceptions.ClientExceptionsUtil: java.lang.Throwable findException(java.lang.Object)>(exception) at line 113 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncRegionLocator: void updateCachedLocation(org.apache.hadoop.hbase.HRegionLocation,java.lang.Throwable,java.util.function.Function,java.util.function.Consumer,java.util.function.Consumer)>:108 has 33 units and 5 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack60 = <org.apache.hadoop.hbase.client.AsyncRegionLocator: org.slf4j.Logger LOG> AT LINE 111 with ID [a5296011-e4b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack61 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try updating ") AT LINE 111 with ID [a5296011-e4b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(loc) AT LINE 111 with ID [a5296011-e4b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", the old value is ") AT LINE 111 with ID [a5296011-e4b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(oldLoc) AT LINE 111 with ID [a5296011-e4b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 111 with ID [a5296011-e4b4]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack60.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($stack65, exception) AT LINE 111 with ID [a5296011-e4b4]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54 = <org.apache.hadoop.hbase.client.AsyncRegionLocator: org.slf4j.Logger LOG> AT LINE 118 with ID [1cb02740-2a8a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack55 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The actual exception when updating ") AT LINE 118 with ID [1cb02740-2a8a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(loc) AT LINE 118 with ID [1cb02740-2a8a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 118 with ID [1cb02740-2a8a]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack54.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($stack57, cause) AT LINE 118 with ID [1cb02740-2a8a]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = <org.apache.hadoop.hbase.client.AsyncRegionLocator: org.slf4j.Logger LOG> AT LINE 122 with ID [a650e6b2-76de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Will not update ") AT LINE 122 with ID [a650e6b2-76de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(loc) AT LINE 122 with ID [a650e6b2-76de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because the exception is null or not the one we care about") AT LINE 122 with ID [a650e6b2-76de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 122 with ID [a650e6b2-76de]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack19.<org.slf4j.Logger: void debug(java.lang.String)>($stack23) AT LINE 122 with ID [a650e6b2-76de]
2021-03-25 15:46:10 [INFO] - 	 -> $stack43 = <org.apache.hadoop.hbase.client.AsyncRegionLocator: org.slf4j.Logger LOG> AT LINE 132 with ID [7013fbcc-9602]
2021-03-25 15:46:10 [INFO] - 	 -> $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try updating ") AT LINE 132 with ID [7013fbcc-9602]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(loc) AT LINE 132 with ID [7013fbcc-9602]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with the new location ") AT LINE 132 with ID [7013fbcc-9602]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(newLoc) AT LINE 132 with ID [7013fbcc-9602]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" constructed by ") AT LINE 132 with ID [7013fbcc-9602]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(rme) AT LINE 132 with ID [7013fbcc-9602]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 132 with ID [7013fbcc-9602]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack43.<org.slf4j.Logger: void debug(java.lang.String)>($stack50) AT LINE 132 with ID [7013fbcc-9602]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = <org.apache.hadoop.hbase.client.AsyncRegionLocator: org.slf4j.Logger LOG> AT LINE 138 with ID [884939de-997b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try removing ") AT LINE 138 with ID [884939de-997b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(loc) AT LINE 138 with ID [884939de-997b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from cache") AT LINE 138 with ID [884939de-997b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 138 with ID [884939de-997b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack29.<org.slf4j.Logger: void debug(java.lang.String)>($stack33) AT LINE 138 with ID [884939de-997b]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.String getClassName(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.String getClassName(java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack11 == 0 goto return clsName at line 212 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.metrics2.impl.MetricsConfig: java.lang.String getClassName(java.lang.String)>:207 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = <org.apache.hadoop.metrics2.impl.MetricsConfig: org.apache.commons.logging.Log LOG> AT LINE 210 with ID [f8d34d8c-e1d2]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(clsName) AT LINE 210 with ID [f8d34d8c-e1d2]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.ConnectionImplementation: void updateCachedLocations(org.apache.hadoop.hbase.TableName,byte[],byte[],java.lang.Object,org.apache.hadoop.hbase.ServerName)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.ConnectionImplementation: void updateCachedLocations(org.apache.hadoop.hbase.TableName,byte[],byte[],java.lang.Object,org.apache.hadoop.hbase.ServerName)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack33 == 0 goto $stack27 = this.<org.apache.hadoop.hbase.client.ConnectionImplementation: org.apache.hadoop.hbase.client.MetricsConnection metrics> at line 1856 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack32 != 0 goto $stack33 = cause instanceof org.apache.hadoop.hbase.exceptions.RegionMovedException at line 1851 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack24 != 0 goto regionInfo = virtualinvoke oldLocation.<org.apache.hadoop.hbase.HRegionLocation: org.apache.hadoop.hbase.client.RegionInfo getRegion()>() at line 1845 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if regionName != null goto oldLocations = virtualinvoke this.<org.apache.hadoop.hbase.client.ConnectionImplementation: org.apache.hadoop.hbase.RegionLocations getCachedLocation(org.apache.hadoop.hbase.TableName,byte[])>(tableName, rowkey) at line 1827 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if source != null goto (branch) at line 1822 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if tableName != null goto (branch) at line 1819 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.ConnectionImplementation: void updateCachedLocations(org.apache.hadoop.hbase.TableName,byte[],byte[],java.lang.Object,org.apache.hadoop.hbase.ServerName)>:1815 has 15 units and 3 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = <org.apache.hadoop.hbase.client.ConnectionImplementation: org.slf4j.Logger LOG> AT LINE 1859 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Region ") AT LINE 1859 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack42 = interfaceinvoke regionInfo.<org.apache.hadoop.hbase.client.RegionInfo: java.lang.String getRegionNameAsString()>() AT LINE 1859 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack42) AT LINE 1859 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" moved to ") AT LINE 1859 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack45 = virtualinvoke rme.<org.apache.hadoop.hbase.exceptions.RegionMovedException: java.lang.String getHostname()>() AT LINE 1860 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack45) AT LINE 1860 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") AT LINE 1860 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack48 = virtualinvoke rme.<org.apache.hadoop.hbase.exceptions.RegionMovedException: int getPort()>() AT LINE 1860 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack48) AT LINE 1860 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" according to ") AT LINE 1860 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack51 = virtualinvoke source.<org.apache.hadoop.hbase.ServerName: org.apache.hadoop.hbase.net.Address getAddress()>() AT LINE 1861 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack51) AT LINE 1861 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 1861 with ID [275669fe-8985]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack40.<org.slf4j.Logger: void trace(java.lang.String)>($stack53) AT LINE 1859 with ID [275669fe-8985]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: boolean onScanNext(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$LocateRequest,org.apache.hadoop.hbase.client.Result)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: boolean onScanNext(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$LocateRequest,org.apache.hadoop.hbase.client.Result)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack23 != null goto specialinvoke this.<org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: void complete(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$LocateRequest,org.apache.hadoop.hbase.HRegionLocation,java.lang.Throwable)>(tableName, req, loc, null) at line 306 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack22 == 0 goto $stack23 = virtualinvoke loc.<org.apache.hadoop.hbase.HRegionLocation: org.apache.hadoop.hbase.ServerName getServerName()>() at line 303 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if info != null goto $stack22 = interfaceinvoke info.<org.apache.hadoop.hbase.client.RegionInfo: boolean isSplitParent()>() at line 297 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack19 != null goto loc = virtualinvoke locs.<org.apache.hadoop.hbase.RegionLocations: org.apache.hadoop.hbase.HRegionLocation getDefaultRegionLocation()>() at line 293 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: boolean onScanNext(org.apache.hadoop.hbase.TableName,org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$LocateRequest,org.apache.hadoop.hbase.client.Result)>:282 has 10 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack56 = <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.slf4j.Logger LOG> AT LINE 286 with ID [a6e17188-93b1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54 = newarray (java.lang.Object)[4] AT LINE 285 with ID [a6e17188-93b1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54[0] = tableName AT LINE 285 with ID [a6e17188-93b1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack55 = req.<org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$LocateRequest: byte[] row> AT LINE 286 with ID [a6e17188-93b1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack59 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>($stack55) AT LINE 286 with ID [a6e17188-93b1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54[1] = $stack59 AT LINE 286 with ID [a6e17188-93b1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack60 = req.<org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$LocateRequest: org.apache.hadoop.hbase.client.RegionLocateType locateType> AT LINE 286 with ID [a6e17188-93b1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54[2] = $stack60 AT LINE 286 with ID [a6e17188-93b1]
2021-03-25 15:46:10 [INFO] - 	 -> $stack54[3] = locs AT LINE 286 with ID [a6e17188-93b1]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack56.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("The fetched location of \'{}\', row=\'{}\', locateType={} is {}", $stack54) AT LINE 285 with ID [a6e17188-93b1]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: boolean nodeHasChildren(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: boolean nodeHasChildren(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.ZKUtil: boolean nodeHasChildren(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.apache.hadoop.hbase.HRegionLocation locateRowInCache(org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$TableCache,org.apache.hadoop.hbase.TableName,byte[])> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.apache.hadoop.hbase.HRegionLocation locateRowInCache(org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$TableCache,org.apache.hadoop.hbase.TableName,byte[])> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack29 >= 0 goto return null at line 329 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if entry != null goto $stack9 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>() at line 319 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.apache.hadoop.hbase.HRegionLocation locateRowInCache(org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator$TableCache,org.apache.hadoop.hbase.TableName,byte[])>:317 has 13 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack16 = <org.apache.hadoop.hbase.client.AsyncNonMetaRegionLocator: org.slf4j.Logger LOG> AT LINE 326 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found ") AT LINE 326 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(loc) AT LINE 326 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in cache for \'") AT LINE 326 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 326 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', row=\'") AT LINE 326 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = staticinvoke <org.apache.hadoop.hbase.util.Bytes: java.lang.String toStringBinary(byte[])>(row) AT LINE 327 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22) AT LINE 327 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [INFO] - 	 -> $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', locateType=") AT LINE 327 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hbase.client.RegionLocateType: org.apache.hadoop.hbase.client.RegionLocateType CURRENT> AT LINE 327 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack25) AT LINE 327 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 327 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack16.<org.slf4j.Logger: void trace(java.lang.String)>($stack27) AT LINE 326 with ID [cd5cd174-0808]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.TableName)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.TableName)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.client.MetaCache: void clearCache(org.apache.hadoop.hbase.TableName)>:284 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack7 = <org.apache.hadoop.hbase.client.MetaCache: org.slf4j.Logger LOG> AT LINE 286 with ID [308540a0-4657]
2021-03-25 15:46:10 [INFO] - 	 -> $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed all cached region locations for table ") AT LINE 286 with ID [308540a0-4657]
2021-03-25 15:46:10 [INFO] - 	 -> $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(tableName) AT LINE 286 with ID [308540a0-4657]
2021-03-25 15:46:10 [INFO] - 	 -> $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 286 with ID [308540a0-4657]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack7.<org.slf4j.Logger: void trace(java.lang.String)>($stack10) AT LINE 286 with ID [308540a0-4657]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.CommonFSUtils$DfsBuilderUtility: void <clinit>()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.CommonFSUtils$DfsBuilderUtility: void <clinit>()> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.CommonFSUtils$DfsBuilderUtility: void <clinit>()>:852 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = staticinvoke <org.apache.hadoop.hbase.util.CommonFSUtils: org.slf4j.Logger access$000()>() AT LINE 892 with ID [2412d7d5-7bc6]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack32.<org.slf4j.Logger: void debug(java.lang.String)>("Using builder API via reflection for DFS file creation.") AT LINE 892 with ID [2412d7d5-7bc6]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.RpcRetryingCallerImpl: java.lang.Object callWithRetries(org.apache.hadoop.hbase.client.RetryingCallable,int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.RpcRetryingCallerImpl: java.lang.Object callWithRetries(org.apache.hadoop.hbase.client.RetryingCallable,int)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.RpcRetryingCallerImpl: java.lang.Object callWithRetries(org.apache.hadoop.hbase.client.RetryingCallable,int)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.client.HBaseAdmin$TableFuture$1: boolean checkState(int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.client.HBaseAdmin$TableFuture$1: boolean checkState(int)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack7 == 0 goto (branch) at line 3683 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.client.HBaseAdmin$TableFuture$1: boolean checkState(int)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: java.util.List listChildrenAndWatchForNewChildren(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: java.util.List listChildrenAndWatchForNewChildren(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.ZKUtil: java.util.List listChildrenAndWatchForNewChildren(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.AbstractRpcClient: void onCallFinished(org.apache.hadoop.hbase.ipc.Call,org.apache.hadoop.hbase.ipc.HBaseRpcController,java.net.InetSocketAddress,org.apache.hbase.thirdparty.com.google.protobuf.RpcCallback)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.AbstractRpcClient: void onCallFinished(org.apache.hadoop.hbase.ipc.Call,org.apache.hadoop.hbase.ipc.HBaseRpcController,java.net.InetSocketAddress,org.apache.hbase.thirdparty.com.google.protobuf.RpcCallback)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.AbstractRpcClient: void onCallFinished(org.apache.hadoop.hbase.ipc.Call,org.apache.hadoop.hbase.ipc.HBaseRpcController,java.net.InetSocketAddress,org.apache.hbase.thirdparty.com.google.protobuf.RpcCallback)>:376 has 12 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack25 = <org.apache.hadoop.hbase.ipc.AbstractRpcClient: org.slf4j.Logger LOG> AT LINE 382 with ID [96048277-be7b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call: ") AT LINE 382 with ID [96048277-be7b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = call.<org.apache.hadoop.hbase.ipc.Call: org.apache.hbase.thirdparty.com.google.protobuf.Descriptors$MethodDescriptor md> AT LINE 383 with ID [96048277-be7b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = virtualinvoke $stack27.<org.apache.hbase.thirdparty.com.google.protobuf.Descriptors$MethodDescriptor: java.lang.String getName()>() AT LINE 383 with ID [96048277-be7b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28) AT LINE 383 with ID [96048277-be7b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callTime: ") AT LINE 383 with ID [96048277-be7b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = call.<org.apache.hadoop.hbase.ipc.Call: org.apache.hadoop.hbase.client.MetricsConnection$CallStats callStats> AT LINE 383 with ID [96048277-be7b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack31.<org.apache.hadoop.hbase.client.MetricsConnection$CallStats: long getCallTimeMs()>() AT LINE 383 with ID [96048277-be7b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack32) AT LINE 383 with ID [96048277-be7b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms") AT LINE 383 with ID [96048277-be7b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 383 with ID [96048277-be7b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack25.<org.slf4j.Logger: void trace(java.lang.String)>($stack35) AT LINE 382 with ID [96048277-be7b]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ChoreService: void printChoreDetails(java.lang.String,org.apache.hadoop.hbase.ScheduledChore)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ChoreService: void printChoreDetails(java.lang.String,org.apache.hadoop.hbase.ScheduledChore)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack24 == 0 goto (branch) at line 374 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack21 == 0 goto return at line 373 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ChoreService: void printChoreDetails(java.lang.String,org.apache.hadoop.hbase.ScheduledChore)>:366 has 11 units and 2 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>() AT LINE 376 with ID [d386c38c-9a60]
2021-03-25 15:46:10 [INFO] - 	 -> entry = (java.util.Map$Entry) $stack22 AT LINE 376 with ID [d386c38c-9a60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack27 = <org.apache.hadoop.hbase.ChoreService: org.slf4j.Logger LOG> AT LINE 375 with ID [d386c38c-9a60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack28 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>() AT LINE 375 with ID [d386c38c-9a60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack29 = (java.lang.String) $stack28 AT LINE 375 with ID [d386c38c-9a60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack30 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29) AT LINE 375 with ID [d386c38c-9a60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>() AT LINE 375 with ID [d386c38c-9a60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = (java.lang.String) $stack31 AT LINE 375 with ID [d386c38c-9a60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32) AT LINE 375 with ID [d386c38c-9a60]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 375 with ID [d386c38c-9a60]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack27.<org.slf4j.Logger: void trace(java.lang.String)>($stack34) AT LINE 375 with ID [d386c38c-9a60]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.ClassSize: int[] getSizeCoefficients(java.lang.Class,boolean)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.ClassSize: int[] getSizeCoefficients(java.lang.Class,boolean)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if null == cl goto $stack13 = newarray (int)[3] at line 362 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if l9 >= l8 goto cl = virtualinvoke cl.<java.lang.Class: java.lang.Class getSuperclass()>() at line 365 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.ClassSize: int[] getSizeCoefficients(java.lang.Class,boolean)>:356 has 13 units and 3 lines
2021-03-25 15:46:10 [INFO] - 	 -> index = 0 AT LINE 360 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [INFO] - 	 -> $stack31 = <org.apache.hadoop.hbase.util.ClassSize: org.slf4j.Logger LOG> AT LINE 395 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [INFO] - 	 -> $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("") AT LINE 395 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [INFO] - 	 -> $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(index) AT LINE 395 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [INFO] - 	 -> $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 395 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [INFO] - 	 -> $stack35 = virtualinvoke aField.<java.lang.reflect.Field: java.lang.String getName()>() AT LINE 395 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [INFO] - 	 -> $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35) AT LINE 395 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [INFO] - 	 -> $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") AT LINE 395 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [INFO] - 	 -> $stack38 = virtualinvoke aField.<java.lang.reflect.Field: java.lang.Class getType()>() AT LINE 395 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [INFO] - 	 -> $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack38) AT LINE 395 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [INFO] - 	 -> $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 395 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack31.<org.slf4j.Logger: void debug(java.lang.String)>($stack40) AT LINE 395 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [INFO] - 	 -> index = index + 1 AT LINE 398 with ID [9954f4ed-d250]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.JSONBean: void writeAttribute(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,javax.management.MBeanServer,javax.management.ObjectName,boolean,javax.management.MBeanAttributeInfo)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.JSONBean: void writeAttribute(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,javax.management.MBeanServer,javax.management.ObjectName,boolean,javax.management.MBeanAttributeInfo)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack15 < 0 goto (branch) at line 226 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack12 == 0 goto $stack13 = virtualinvoke attName.<java.lang.String: int indexOf(java.lang.String)>("=") at line 222 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack9 != 0 goto attName = virtualinvoke attr.<javax.management.MBeanAttributeInfo: java.lang.String getName()>() at line 218 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.util.JSONBean: void writeAttribute(org.apache.hadoop.hbase.shaded.com.fasterxml.jackson.core.JsonGenerator,javax.management.MBeanServer,javax.management.ObjectName,boolean,javax.management.MBeanAttributeInfo)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.AbstractRpcClient: void close()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.AbstractRpcClient: void close()> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack17 == 0 goto return at line 499 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack15 == 0 goto virtualinvoke this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: void closeInternal()>() at line 495 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack7 != 0 goto this.<org.apache.hadoop.hbase.ipc.AbstractRpcClient: boolean running> = 0 at line 487 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.AbstractRpcClient: void close()>:481 has 2 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack23 = <org.apache.hadoop.hbase.ipc.AbstractRpcClient: org.slf4j.Logger LOG> AT LINE 483 with ID [fbc044a9-775d]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack23.<org.slf4j.Logger: void debug(java.lang.String)>("Stopping rpc client") AT LINE 483 with ID [fbc044a9-775d]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.ipc.NettyRpcConnection: void connect()> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.ipc.NettyRpcConnection: void connect()> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.ipc.NettyRpcConnection: void connect()>:253 has 4 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack3 = <org.apache.hadoop.hbase.ipc.NettyRpcConnection: org.slf4j.Logger LOG> AT LINE 254 with ID [ca08b646-e3bf]
2021-03-25 15:46:10 [INFO] - 	 -> $stack1 = this.<org.apache.hadoop.hbase.ipc.NettyRpcConnection: org.apache.hadoop.hbase.ipc.ConnectionId remoteId> AT LINE 254 with ID [ca08b646-e3bf]
2021-03-25 15:46:10 [INFO] - 	 -> $stack2 = $stack1.<org.apache.hadoop.hbase.ipc.ConnectionId: java.net.InetSocketAddress address> AT LINE 254 with ID [ca08b646-e3bf]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack3.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Connecting to {}", $stack2) AT LINE 254 with ID [ca08b646-e3bf]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: byte[] getData(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.ZKUtil: byte[] getData(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.ZKUtil: byte[] getData(org.apache.hadoop.hbase.zookeeper.ZKWatcher,java.lang.String)>
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.security.HBaseSaslRpcClient$WrappedOutputStream: void write(byte[],int,int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.security.HBaseSaslRpcClient$WrappedOutputStream: void write(byte[],int,int)> -- in 0.0s
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.security.HBaseSaslRpcClient$WrappedOutputStream: void write(byte[],int,int)>:269 has 5 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack15 = staticinvoke <org.apache.hadoop.hbase.security.HBaseSaslRpcClient: org.slf4j.Logger access$000()>() AT LINE 271 with ID [8ae76a0b-1434]
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wrapping token of length:") AT LINE 271 with ID [8ae76a0b-1434]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(len) AT LINE 271 with ID [8ae76a0b-1434]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 271 with ID [8ae76a0b-1434]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack15.<org.slf4j.Logger: void debug(java.lang.String)>($stack19) AT LINE 271 with ID [8ae76a0b-1434]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: void invokeSetStoragePolicy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.util.CommonFSUtils: void invokeSetStoragePolicy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if toThrow == null goto return at line 640 don't merge! Need manual examination!
2021-03-25 15:46:10 [INFO] - Find overhead at method <org.apache.hadoop.hbase.util.CommonFSUtils: void invokeSetStoragePolicy(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,java.lang.String)>:562 has 7 units and 1 lines
2021-03-25 15:46:10 [INFO] - 	 -> $stack17 = <org.apache.hadoop.hbase.util.CommonFSUtils: org.slf4j.Logger LOG> AT LINE 598 with ID [3db90649-ab8b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set storagePolicy=") AT LINE 598 with ID [3db90649-ab8b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(storagePolicy) AT LINE 598 with ID [3db90649-ab8b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for path=") AT LINE 598 with ID [3db90649-ab8b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(path) AT LINE 598 with ID [3db90649-ab8b]
2021-03-25 15:46:10 [INFO] - 	 -> $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>() AT LINE 598 with ID [3db90649-ab8b]
2021-03-25 15:46:10 [INFO] - 	 -> interfaceinvoke $stack17.<org.slf4j.Logger: void debug(java.lang.String)>($stack22) AT LINE 598 with ID [3db90649-ab8b]
2021-03-25 15:46:10 [DEBUG] - RD Analyze <org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster: int startup(java.io.File,int)> -- in 0.0s
2021-03-25 15:46:10 [DEBUG] - RU Analyze <org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster: int startup(java.io.File,int)> -- in 0.0s
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if $stack41 != 0 goto $stack42 = this.<org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster: java.util.List clientPortList> at line 262 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if i >= numZooKeeperServers goto this.<org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster: int activeZKServerIndex> = 0 at line 212 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - Both branch of IfStmt if numZooKeeperServers > 0 goto staticinvoke <org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster: void setupTestEnv()>() at line 201 don't merge! Need manual examination!
2021-03-25 15:46:10 [WARN] - No overhead is found at method <org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster: int startup(java.io.File,int)>
2021-03-25 15:46:10 [INFO] - [PERF] Finish Intra-procedural analysis at 1616658370719